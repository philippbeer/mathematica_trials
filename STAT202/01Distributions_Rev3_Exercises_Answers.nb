(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    176943,       3344]
NotebookOptionsPosition[    174337,       3298]
NotebookOutlinePosition[    174737,       3314]
CellTagsIndexPosition[    174694,       3311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ST202 In-Chapter Exercises Part 1", "Chapter",
 CellChangeTimes->{{3.7274659965925317`*^9, 3.727466003920027*^9}, {
  3.727466056648489*^9, 3.7274660585926266`*^9}, {3.7274663652911887`*^9, 
  3.727466365715305*^9}, {3.727707203871344*^9, 3.727707215037463*^9}, {
  3.8123657296185856`*^9, 
  3.812365741435884*^9}},ExpressionUUID->"a2dca719-f5ef-48ab-8944-\
fd52fb157926"],

Cell[CellGroupData[{

Cell["1. Derived Distributions ", "Subsection",
 CellChangeTimes->{
  3.812365730951071*^9, {3.8123657634027777`*^9, 3.812365763497694*^9}, 
   3.81236582789739*^9},ExpressionUUID->"0d900d9e-f540-46c5-8b73-\
f5c1041ee279"],

Cell[TextData[{
 "An insurance company\[CloseCurlyQuote]s monthly claims are modeled by a \
continuous, positive random variable ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath",ExpressionUUID->
  "372e4080-7382-476d-89f4-9d6f70cb39c2"],
 ", whose probability density function is equal to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], "3"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2ceba920-2cc8-4c4c-b05e-ff1357a91af6"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "x", "<", "\[Infinity]"}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"af54ffc5-e90a-4322-93e3-df386148104a"],
 ". Determine the company\[CloseCurlyQuote]s expected monthly claims:\na) 1/3\
\nb) 2/3\nc) 1/2\nd) 1/4"
}], "Text",
 CellChangeTimes->{
  3.727466029876646*^9, {3.72770722306955*^9, 3.7277072527338467`*^9}, 
   3.727710912012519*^9},ExpressionUUID->"f66974bd-248f-4238-b357-\
5ea5c85b0f4c"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell[
     TextData[{
      "For creating a distribution of known probability distribution, use the \
", 
       Cell[
        BoxData[
         ButtonBox[
          StyleBox["ProbabilityDistribution", "Text", FontWeight -> Bold], 
          BaseStyle -> "Link", ButtonData -> 
          "paclet://ref/ProbabilityDistribution"]]], " function."}], "Text", 
     CellChangeTimes -> {3.728072117767869*^9}], WindowTitle -> "Hint", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"b6f64789-935a-4e59-ba91-88b70a3b4180"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{
        RowBox[{"claimDistribution", "=", 
          RowBox[{"ProbabilityDistribution", "[", 
            RowBox[{
              RowBox[{"1", "/", 
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{"1", "+", "x"}], ")"}], "^", "3"}]}], ",", 
              RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
        ";", 
        RowBox[{"Expectation", "[", 
          RowBox[{"x", ",", 
            RowBox[{"x", "\[Distributed]", "claimDistribution"}]}], "]"}]}]], 
     "Input"], WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"74461b2d-8866-4a89-a878-9a01cab6a2b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Fitting Data to Known Distributions", "Subsection",
 CellChangeTimes->{{3.7274660808154325`*^9, 3.7274660821680117`*^9}, {
   3.727466350443914*^9, 3.727466355172434*^9}, {3.727708065641962*^9, 
   3.727708070000411*^9}, {3.812365760652973*^9, 3.8123657609862733`*^9}, 
   3.812365819418559*^9},ExpressionUUID->"40419d95-624f-48ef-91ad-\
ae1532a1b251"],

Cell["\<\
Four six-sided dice are rolled. Find the difference in expectation of the \
maximum value and minimum value.
a) 0
b) 1.5
c) 2.5
d) 3.5\
\>", "Text",
 CellChangeTimes->{3.727466097614854*^9, 
  3.727711369794999*^9},ExpressionUUID->"b0d721e6-5e65-437a-9827-\
8170c369da93"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell["Use DiscreteUniformDistribution to simulate the six-sided dice \
roll. ", "Text", 
     CellChangeTimes -> {{3.727466118959341*^9, 3.7274661766229544`*^9}}], 
    WindowTitle -> "Hint", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"83ffa38b-20db-425b-8861-c4492d392cc8"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{
        RowBox[{"N", "@", 
          RowBox[{"Expectation", "[", 
            RowBox[{"x", ",", 
              RowBox[{"x", "\[Distributed]", 
                RowBox[{"OrderDistribution", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DiscreteUniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], "]"}], ",", "4"}], "}"}], 
                    ",", "4"}], "]"}]}]}], "]"}]}], "-", 
        RowBox[{"Expectation", "[", 
          RowBox[{"x", ",", 
            RowBox[{"x", "\[Distributed]", 
              RowBox[{"OrderDistribution", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DiscreteUniformDistribution", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], "]"}], ",", "4"}], "}"}], 
                  ",", "1"}], "]"}]}]}], "]"}]}]], "Input"], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"02544fb2-2dec-4a1a-8c48-6e489faf4f17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Method of Moments Estimation", "Subsection",
 CellChangeTimes->{{3.7274662158617573`*^9, 3.727466218733356*^9}, {
  3.727466335323903*^9, 3.727466338899455*^9}, {3.7277093909490547`*^9, 
  3.7277093946916933`*^9}, {3.72771064940936*^9, 3.727710649849259*^9}, {
  3.8123657977687793`*^9, 
  3.8123658090881424`*^9}},ExpressionUUID->"33a09cfd-d4a1-4af5-b831-\
201f544c1658"],

Cell[TextData[{
 "The length of words in the English language can be modeled using ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["BinomialDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/BinomialDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "180283b9-10fe-4f9d-9557-40c0c398be29"],
 ". The parameters obtained after fitting the English words in ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["DictionaryLookup",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/DictionaryLookup"],
   FontWeight->"Bold"]],ExpressionUUID->
  "f40742b3-c51d-441f-8cbc-77ad9c29a3bd"],
 " using ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["EstimatedDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/EstimatedDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "b2c96734-202e-48fd-b441-8dccba6dd02b"],
 " are:"
}], "Text",
 CellChangeTimes->{
  3.7274662260467405`*^9, 3.7277068294910517`*^9, {3.7277093973797493`*^9, 
   3.727709429730352*^9}, {3.728221914207594*^9, 
   3.7282219224694624`*^9}},ExpressionUUID->"b904cdb1-9906-4200-b9c1-\
f7cc95562f64"],

Cell["\<\
a) {38, 0.32}
b) {38, 0.22}
c) {28, 0.32}
d) {28, 0.22}\
\>", "Text",
 CellChangeTimes->{
  3.7274662260467405`*^9, 3.7277068294910517`*^9, {3.7277093973797493`*^9, 
   3.72770942100418*^9}},ExpressionUUID->"b9e18837-3b6d-499c-aa89-\
5ad1017bc958"],

Cell[BoxData[
 ButtonBox["Hint",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell["DictionaryLookup should provide the data of all words. ", "Text", 
     CellChangeTimes -> {{3.727466234228467*^9, 3.7274662508293247`*^9}}], 
    WindowTitle -> "Hint", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"5bfdecea-dcd3-4c0c-8d49-c00c8dcac487"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell[
     CellGroupData[{
       Cell[
        BoxData[
         RowBox[{
           RowBox[{"worddata", "=", 
             RowBox[{"StringLength", "/@", 
               RowBox[{"DictionaryLookup", "[", 
                 RowBox[{"{", 
                   RowBox[{"\"English\"", ",", "All"}], "}"}], "]"}]}]}], ";", 
           RowBox[{"binom", "=", 
             RowBox[{"EstimatedDistribution", "[", 
               RowBox[{"worddata", ",", 
                 RowBox[{"BinomialDistribution", "[", 
                   RowBox[{"n", ",", "p"}], "]"}]}], "]"}]}]}]], "Input", 
        CellChangeTimes -> {3.727466278749166*^9}], 
       Cell[
        BoxData[
         RowBox[{"BinomialDistribution", "[", 
           RowBox[{"38", ",", "0.22088731524221172`"}], "]"}]], "Output", 
        CellChangeTimes -> {3.727466298125447*^9}]}, Open]], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"47f9cf60-0a89-4e1c-8de4-ed97de87352a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Review Exercises", "Section",ExpressionUUID->"c0b1a835-9404-46bc-acb0-64e062edb999"],

Cell["\<\
1. Fitting to a known distribution: This is a historically important dataset, \
as it introduces the use of distributions into analysis. From 1875 through \
1894, the Russian mathematician Ladislaus J. Bortkiewicz collected data from \
10 Prussian army corps, recording how many occurrences of getting kicked by a \
horse led to the injured person\[CloseCurlyQuote]s death. The data is given \
as frequency data. The first element of each ordered pair gives the number of \
deaths, and the second gives the frequency of observing that value.\
\>", "Text",
 CellChangeTimes->{{3.702212094119255*^9, 3.702212104175661*^9}, {
   3.7022145431443596`*^9, 3.7022147144126825`*^9}, 3.702214789075701*^9, {
   3.702215064941131*^9, 3.7022150838676424`*^9}, {3.7022151642407684`*^9, 
   3.7022151999511404`*^9}, {3.7022152803553905`*^9, 
   3.7022153178014956`*^9}, {3.702215433430646*^9, 3.702215433870805*^9}, {
   3.7033526114600067`*^9, 3.7033526621691437`*^9}, {3.710250164020438*^9, 
   3.710250169278494*^9}, {3.7102502198505497`*^9, 3.710250250512093*^9}, {
   3.710250308727511*^9, 3.710250356880096*^9}, {3.7111021330845385`*^9, 
   3.7111021738259134`*^9}, {3.711102290589954*^9, 3.7111023007449155`*^9}, {
   3.714923878151335*^9, 3.71492388485111*^9}, {3.7149239156936283`*^9, 
   3.714923969300078*^9}, 3.714924077425742*^9, {3.71499594411593*^9, 
   3.7149959568973227`*^9}, {3.716902886050598*^9, 3.7169029184192123`*^9}, {
   3.717096238651052*^9, 3.717096241354025*^9}, {3.717096293343891*^9, 
   3.7170962937969913`*^9}, 3.72746632403603*^9, {3.727709493040861*^9, 
   3.727709529519574*^9}},ExpressionUUID->"142f2509-e2eb-4e2c-831d-\
5d3321b6e41d"],

Cell["\<\
a) The data to be used for this exercise is as follows:
0   109
1   65
2   22
3   3
4   1\
\>", "Text",
 CellChangeTimes->{{3.717096308145891*^9, 
  3.7170963149111357`*^9}},ExpressionUUID->"7da1413c-e4a5-4651-968b-\
25dd48ba0bb0"],

Cell["Store this in a variable in proper Wolfram Language format.", "Text",
 CellChangeTimes->{
  3.717096325616636*^9, {3.717177416538145*^9, 3.7171774302688947`*^9}, 
   3.727709662551199*^9, 
   3.7277117336464443`*^9},ExpressionUUID->"04603d6a-e3be-47d5-a072-\
9f1d621e7f8d"],

Cell[TextData[{
 "b) Convert the tallied data into frequency data by using ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["ConstantArray",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ConstantArray"],
   FontWeight->"Bold"]],ExpressionUUID->
  "bbf89dd3-df75-4900-9a31-81fee367525e"],
 ".\nc) Fit the data to ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["PoissonDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/PoissonDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "ca7c21db-e195-4bae-bff2-a230eb039622"],
 ".\nd) Generate the test table.\ne) Finally, for visualization of the \
problem, plot the ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["PDF",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/format/PDF"],
   FontWeight->"Bold"]],ExpressionUUID->
  "1e318452-ff53-4878-bf18-b5146be60204"],
 " of the fitted distribution to the ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["PDF",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/format/PDF"],
   FontWeight->"Bold"]],ExpressionUUID->
  "1f5e71e5-94d8-4e40-8f9f-629e7cdc70da"],
 " of the actual data."
}], "Text",
 CellChangeTimes->{
  3.717096325616636*^9, {3.717177416538145*^9, 3.7171774302688947`*^9}, {
   3.727709664698941*^9, 3.727709696233729*^9}, {3.728069010027096*^9, 
   3.7280690265787573`*^9}},ExpressionUUID->"d8926ea1-6e84-4283-b558-\
ba14efc7352c"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[
    Cell[
     CellGroupData[{
       Cell[
        BoxData[{
          RowBox[{
            RowBox[{"poissonDat", "=", 
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"0", ",", "109"}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                    RowBox[{"1", ",", "65"}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                    RowBox[{"2", ",", "22"}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], ",", "\n", 
                  RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
          RowBox[{
            RowBox[{"freqdata", "=", 
              RowBox[{"Flatten", "[", 
                RowBox[{"(", 
                  RowBox[{"Apply", "[", 
                    RowBox[{"ConstantArray", ",", "poissonDat", ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ")"}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", 
          RowBox[{
            RowBox[{"pDat", "=", 
              RowBox[{"DistributionFitTest", "[", 
                RowBox[{"freqdata", ",", 
                  RowBox[{"PoissonDistribution", "[", "\[Nu]", "]"}], ",", 
                  "\"HypothesisTestData\""}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", 
          RowBox[{"pDat", "[", "\"TestDataTable\"", "]"}], 
          "\[IndentingNewLine]", 
          RowBox[{
            RowBox[{
              RowBox[{"poissonDat", "[", 
                RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
              RowBox[{
                RowBox[{"poissonDat", "[", 
                  RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", "200"}]}], 
            ";"}], "\[IndentingNewLine]", 
          RowBox[{"dPlt", "=", 
            RowBox[{"DiscretePlot", "[", 
              RowBox[{
                RowBox[{"PDF", "[", 
                  RowBox[{
                    RowBox[{"pDat", "[", "\"FittedDistribution\"", "]"}], ",",
                     "t"}], "]"}], ",", 
                RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
                RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}], ",", 
                "\n", 
                RowBox[{"Prolog", "\[Rule]", " ", 
                  RowBox[{"{", 
                    RowBox[{"Red", ",", 
                    RowBox[{"PointSize", "[", "Large", "]"}], ",", 
                    RowBox[{"Point", "[", "poissonDat", "]"}]}], "}"}]}]}], 
              "]"}]}]}], "Input"], 
       Cell[
        BoxData[
         StyleBox[
          TagBox[
           
           GridBox[{{"\"\"", "\"Statistic\"", "\"P\[Hyphen]Value\""}, {
             "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
              "0.3235235766083155`", "0.8506438137127599`"}}, AutoDelete -> 
            False, GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
            GridBoxDividers -> {
             "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
              "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          "DialogStyle", StripOnInput -> False]], "Output", 
        CellChangeTimes -> {3.711102269995221*^9}], 
       Cell[
        BoxData[
         GraphicsBox[{{{{{
               RGBColor[0.368417, 0.506779, 0.709798], 
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[1.6], {{{
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.2], 
                  LineBox[{}, VertexColors -> None]}}, {{
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[1.6], 
                  Opacity[0.2], 
                  
                  LineBox[{{{0., 0.5433508690744998}, {0., 0}}, {{1., 
                    0.3314440301354449}, {1., 0}}, {{2., 
                    0.10109042919131069`}, {2., 0}}, {{3., 
                    0.020555053935566503`}, {3., 0}}, {{4., 
                    0.0031346457251738916`}, {4., 0}}, {{5., 
                    0.0003824267784712148}, {5., 0}}}, VertexColors -> 
                   None]}}}}}}, {{{{
                RGBColor[0.368417, 0.506779, 0.709798], 
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[1.6], {}, 
                GeometricTransformationBox[
                 InsetBox[
                  StyleBox[
                  "\"\[FilledCircle]\"", StripOnInput -> False, LineColor -> 
                   RGBColor[0.368417, 0.506779, 0.709798], FrontFaceColor -> 
                   RGBColor[
                    0.368417, 0.506779, 0.709798], $CellContext`BackFaceColor -> 
                   RGBColor[0.368417, 0.506779, 0.709798], GraphicsColor -> 
                   RGBColor[0.368417, 0.506779, 0.709798], PointSize -> 
                   0.012833333333333334`, Thickness -> Absolute[1.6], 
                   FontSize -> 8.96, FontColor -> 
                   RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}], {{{0., 
                 0.5433508690744998}}, {{1., 0.3314440301354449}}, {{2., 
                 0.10109042919131069`}}, {{3., 0.020555053935566503`}}, {{4., 
                 0.0031346457251738916`}}, {{5., 
                 0.0003824267784712148}}}], {}}}}}}}, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
          AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
            "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
            AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05]}, PlotRange -> {{0, 5}, {0, 0.5433508690744998}}, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Prolog -> {
            RGBColor[1, 0, 0], 
            PointSize[Large], 
            PointBox[
             NCache[{{0, 
                Rational[109, 200]}, {1, 
                Rational[13, 40]}, {2, 
                Rational[11, 100]}, {3, 
                Rational[3, 200]}, {4, 
                Rational[1, 200]}}, {{0, 0.545}, {1, 0.325}, {2, 0.11}, {
               3, 0.015}, {4, 0.005}}]]}, Ticks -> {Automatic, Automatic}]], 
        "Output", CellChangeTimes -> {3.7111022701515026`*^9}]}, Open]], 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"e2c616ae-d595-48ee-8b82-a4bb82e30ee5"],

Cell[TextData[{
 "2. ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["LogisticDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/LogisticDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "6a514ea8-8ee6-410a-8c62-5cf30d9db4c8"],
 " provides a very good fit for fractional price changes from the previous \
closing price of stocks. In this example, first the daily fractional price \
changes of the S&P 500 Index from January 1, 2007 to January 1, 2017 are \
obtained, then the data is fitted using ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["EstimatedDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/EstimatedDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "f57763a2-179b-43e0-a6e0-af87b613197b"],
 ", as well as to a nonparametric distribution. Finally, these distributions \
are used to run a simulation."
}], "Text",
 CellChangeTimes->{{3.710249157747406*^9, 3.710249169229251*^9}, {
   3.7102500514331503`*^9, 3.710250077321724*^9}, {3.710250376085885*^9, 
   3.710250438266651*^9}, {3.710256984481703*^9, 3.710257101280756*^9}, {
   3.71492398493128*^9, 3.714924054064941*^9}, {3.714924128358528*^9, 
   3.714924132945325*^9}, {3.714924177975251*^9, 3.714924181293729*^9}, {
   3.7149244559727917`*^9, 3.714924533536858*^9}, {3.7149256350214767`*^9, 
   3.714925661714579*^9}, {3.7170963378158927`*^9, 3.7170963434562006`*^9}, {
   3.7171774484193773`*^9, 3.717177451114084*^9}, {3.719058384626401*^9, 
   3.7190583880321608`*^9}, {3.7280690301602373`*^9, 3.7280690365540867`*^9}, 
   3.72814124602564*^9},ExpressionUUID->"98fe056e-72cc-49f8-8730-\
6be937811f6a"],

Cell[TextData[{
 "a) Obtain the daily fractional changes in the S&P 500 using ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["FinancialData",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FinancialData"],
   FontWeight->"Bold"]],ExpressionUUID->
  "754a2742-f8a3-46da-b790-863ba73c119e"],
 ".\nb) Fit the data to ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["LogisticDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/LogisticDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "bd27394c-14dc-473a-af25-376e4af0cbac"],
 ". Obtain goodness of fit and the test table.\nc) Fit the data to a \
nonparametric distribution, e.g. ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["SmoothKernelDistribution",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/SmoothKernelDistribution"],
   FontWeight->"Bold"]],ExpressionUUID->
  "ca07a92b-f120-4e46-bea8-a8d43761a71b"],
 ". Obtain goodness of fit.\ne) Simulate the changes for the next 30 days, \
using either of the distributions."
}], "Text",
 CellChangeTimes->{{3.7170963507057915`*^9, 3.7170963536743765`*^9}, {
  3.7171774365490475`*^9, 3.717177442553872*^9}, {3.7280690408223786`*^9, 
  3.7280690552895374`*^9}},ExpressionUUID->"d19b1c42-889e-4bbf-9bbc-\
352a9cf47412"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 12, 
    ButtonBoxOptions -> {
     Background -> RGBColor[0.35, 0.63, 0.98], ButtonMargins -> 4}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"sp500", "=", 
           RowBox[{"FinancialData", "[", 
             RowBox[{"\"SP500\"", ",", "\"FractionalChange\"", ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2007", ",", "1", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2017", ",", "1", ",", "1"}], "}"}], ",", 
                   "\"Day\""}], "}"}]}], "]"}]}], ";"}]], "Input", 
      CellChangeTimes -> {{3.708255668009137*^9, 3.708255668009137*^9}, {
       3.710250089931117*^9, 3.7102500951489897`*^9}}], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"edist", "=", 
           RowBox[{"EstimatedDistribution", "[", 
             RowBox[{
               RowBox[{"sp500", "[", 
                 RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"LogisticDistribution", "[", 
                 RowBox[{"\[Mu]", ",", "\[Beta]"}], "]"}]}], "]"}]}], ";"}]], 
      "Input", CellChangeTimes -> {{3.7082556747860394`*^9, 
       3.708255674788044*^9}}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[{
           RowBox[{"Show", "[", 
             RowBox[{
               RowBox[{"Histogram", "[", 
                 RowBox[{
                   RowBox[{"sp500", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", "0.13", ",", "0.005"}], "}"}],
                    ",", "\"PDF\"", ",", 
                   RowBox[{"ChartStyle", "\[Rule]", "\"Pastel\""}]}], "]"}], 
               ",", 
               RowBox[{"Plot", "[", 
                 RowBox[{
                   RowBox[{"PDF", "[", 
                    RowBox[{"edist", ",", "x"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "0.1"}], ",", "0.12"}], "}"}], ",", 
                   RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
                   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}], 
           "\n"}], "Input", 
         CellChangeTimes -> {{3.708255705217413*^9, 3.7082557052184153`*^9}, {
          3.710251113940037*^9, 3.7102511819789753`*^9}}], 
        Cell[
         BoxData[
          GraphicsBox[{{{{{
                RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
                EdgeForm[{
                  Opacity[0.434], 
                  Thickness[Small]}], {}, {{{
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   EdgeForm[{
                    Opacity[0.434], 
                    Thickness[Small]}], {{{{
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    
                    RectangleBox[{-0.05, 0}, {-0.045000000000000005`, 
                    0.47923322683706093`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.7778710000000001, 0.5090939999999999, 0.944821], 
                    
                    RectangleBox[{-0.045000000000000005`, 0}, {-0.04, 
                    0.4792332268370603}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.793783, 0.547356, 0.949045], 
                    
                    RectangleBox[{-0.04, 0}, {-0.035, 0.47923322683706093`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.809695, 0.585618, 0.953269], 
                    RectangleBox[{-0.035, 0}, {-0.030000000000000002`, 
                    1.5175718849840254`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8286346666666667, 0.6062983333333333, 
                    0.8927776666666667], 
                    
                    RectangleBox[{-0.030000000000000002`, 0}, {-0.025, 
                    2.2364217252396164`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8475743333333333, 0.6269786666666667, 
                    0.8322863333333334], 
                    
                    RectangleBox[{-0.025, 0}, {-0.020000000000000004`, 
                    4.2332268370607045`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.866514, 0.647659, 0.771795], 
                    
                    RectangleBox[{-0.020000000000000004`, 0}, {-0.015, 
                    6.38977635782747}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8808166666666667, 0.6649003333333333, 
                    0.7303516666666666], 
                    
                    RectangleBox[{-0.015, 0}, {-0.010000000000000002`, 
                    11.821086261980838`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8951193333333333, 0.6821416666666666, 
                    0.6889083333333333], 
                    
                    RectangleBox[{-0.010000000000000002`, 
                    0}, {-0.0050000000000000044`, 19.329073482428125`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.909422, 0.699383, 0.647465], 
                    
                    RectangleBox[{-0.0050000000000000044`, 0}, {0., 
                    44.488817891373756`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.918635, 0.721084, 0.6313016666666666], 
                    
                    RectangleBox[{0., 0}, {0.0049999999999999975`, 
                    51.277955271565524`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.927848, 0.742785, 0.6151383333333333], 
                    
                    RectangleBox[{0.0049999999999999975`, 0}, {
                    0.009999999999999995, 27.316293929712476`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.937061, 0.764486, 0.598975], 
                    
                    RectangleBox[{0.009999999999999995, 0}, {0.015, 
                    14.85623003194887}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9429253333333334, 0.7904053333333333, 0.595053], 
                    
                    RectangleBox[{0.015, 0}, {0.020000000000000004`, 
                    6.709265175718844}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9487896666666666, 0.8163246666666667, 0.591131], 
                    
                    RectangleBox[{0.020000000000000004`, 0}, {
                    0.024999999999999994`, 3.434504792332275}, RoundingRadius -> 
                    0]}}}}, {{{{
                    RGBColor[0.954654, 0.842244, 0.587209], 
                    
                    RectangleBox[{0.024999999999999994`, 0}, {0.03, 
                    1.7571884984025543`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9571683333333333, 0.866004, 0.5895116666666667], 
                    
                    RectangleBox[{0.03, 0}, {0.035, 0.7987220447284338}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9596826666666667, 0.889764, 0.5918143333333333], 
                    
                    RectangleBox[{0.035, 0}, {0.039999999999999994`, 
                    0.6389776357827488}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.962197, 0.913524, 0.594117], 
                    
                    RectangleBox[{0.039999999999999994`, 0}, {0.045, 
                    0.7987220447284338}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9575243333333333, 0.9267823333333334, 
                    0.6074406666666666], 
                    
                    RectangleBox[{0.045, 0}, {0.05, 0.23961661341853016`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9528516666666667, 0.9400406666666666, 
                    0.6207643333333334], 
                    
                    RectangleBox[{0.05, 0}, {0.05499999999999999, 
                    0.1597444089456872}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.929162, 0.95034, 0.6648153333333333], 
                    
                    RectangleBox[{0.06, 0}, {0.065, 0.23961661341853016`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.910145, 0.947381, 0.6955426666666666], 
                    RectangleBox[{0.065, 0}, {0.06999999999999999, 
                    0.0798722044728436}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.891128, 0.944422, 0.72627], 
                    
                    RectangleBox[{0.06999999999999999, 0}, {0.075, 
                    0.07987220447284338}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.5401093333333333, 0.7708383333333334, 0.946025], 
                    
                    RectangleBox[{0.105, 0}, {0.11, 0.07987220447284338}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    
                    RectangleBox[{0.115, 0}, {0.12000000000000001`, 
                    0.07987220447284338}, RoundingRadius -> 
                    0]}}}}}}}, {}, {}}}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{{}, {}, 
               TagBox[{{{
                   GrayLevel[0], 
                   Thickness[Large], 
                   Opacity[1.], 
                   LineBox[CompressedData["
1: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
q1UNUOf1XKC9qBD7H6h/rv4=
                    "]]}}}, 
                Annotation[#, "Charting`Private`Tag$5170#1"]& ]}}, {}, {}}}, 
           AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-0.0536, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{-0.05, 0.13}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], "Output", 
         CellChangeTimes -> {{3.7102511304693813`*^9, 3.710251145368013*^9}, {
          3.710251176733515*^9, 3.710251182737504*^9}}]}, Open]], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"tstData", "=", 
           RowBox[{"DistributionFitTest", "[", 
             RowBox[{
               RowBox[{"sp500", "[", 
                 RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "edist", ",",
                "\"HypothesisTestData\""}], "]"}]}], ";"}]], "Input", 
      CellChangeTimes -> {{3.710256552265861*^9, 3.7102565692413893`*^9}, 
        3.710256636780085*^9, {3.710256711498954*^9, 3.710256714332003*^9}, {
        3.710256762768271*^9, 3.710256765779441*^9}}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"tstData", "[", 
            RowBox[{"\"TestDataTable\"", ",", " ", "All"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          StyleBox[
           TagBox[
            
            GridBox[{{"\"\"", "\"Statistic\"", "\"P\[Hyphen]Value\""}, {
              "\"Anderson\[Hyphen]Darling\"", "17.092592004272774`", 
               "2.472126517938378`*^-7"}, {
              "\"Cram\[EAcute]r\[Hyphen]von Mises\"", "2.957969608936069`", 
               "9.37563746639114`*^-8"}, {
              "\"Kolmogorov\[Hyphen]Smirnov\"", "0.06084487786693604`", 
               "1.4980299322615512`*^-8"}, {
              "\"Kuiper\"", "0.11577783154181948`", 
               "5.477787433573201`*^-28"}, {
              "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
               "240.24036551450138`", "1.7858179117618336`*^-28"}, {
              "\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"", 
               "2.9579696089360685`", "0.`"}}, AutoDelete -> False, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
               "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "DialogStyle", StripOnInput -> False]], "Output", 
         CellChangeTimes -> {3.710256772428095*^9}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Column", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"tstData", "[", "\"ShortTestConclusion\"", "]"}], 
                    ",", "\"Text\""}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"tstData", "[", "\"TestConclusion\"", "]"}], ",", 
                    "\"Text\""}], "]"}]}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input", 
         CellChangeTimes -> {{3.70974962330441*^9, 3.709749633999836*^9}}], 
        Cell[
         BoxData[
          TagBox[
           GridBox[{{
              StyleBox["\"Reject\"", "Text", StripOnInput -> False]}, {
              StyleBox[
               TemplateBox[{"\"The null hypothesis that \"", 
                 TemplateBox[{"\"the data is distributed according to the \"", 
                   RowBox[{"LogisticDistribution", "[", 
                    
                    RowBox[{
                    "0.0005396294189173129`", ",", "0.006272846915447331`"}], 
                    "]"}], "\" \""}, "RowDefault"], "\"is rejected at the \"", 
                 TemplateBox[{"5", "\" percent level \""}, "RowDefault"], 
                 
                 TemplateBox[{
                  "\"based on the \"", "\"Cram\[EAcute]r\[Hyphen]von Mises\"",
                    "\" test.\""}, "RowDefault"]}, "RowDefault"], "Text", 
               StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], "Output", CellChangeTimes -> {3.710256798426446*^9}]}, 
       Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{
            SubscriptBox["\[ScriptCapitalD]", "e"], "=", 
            RowBox[{"SmoothKernelDistribution", "[", 
              RowBox[{"sp500", "[", 
                RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input", 
         CellChangeTimes -> {{3.5728619128254642`*^9, 3.572861913662856*^9}, {
          3.710256472561907*^9, 3.710256496685534*^9}}], 
        Cell[
         BoxData[
          InterpretationBox[
           RowBox[{
             TagBox["DataDistribution", "SummaryHead"], "[", 
             DynamicModuleBox[{Typeset`open$$ = False}, 
              PanelBox[
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"], 
                    ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                    ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
                    "], {{{{{
                    GrayLevel[0.85], 
                    EdgeForm[None], 
                    GraphicsGroupBox[{
                    PolygonBox[{{50, 54, 52, 48, 49}}], 
                    PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}}}, {{{
                    GrayLevel[0.85], 
                    EdgeForm[None], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
                    38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                    24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10, 9, 8, 7}}]}]}}}, {}, {}}, {{}, {}, {{{
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 
                    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
                    42, 43, 44, 45, 46, 47, 52, 48, 49, 50}]}}}}}], 
                    AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0.02}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {
                    "ScalingFunctions" -> None, "AxesInFront" -> True}, 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SmoothKernel\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2517", "SummaryItem"]}]}}, AutoDelete -> False, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                   AutoDelete -> False, BaselinePosition -> {1, 1}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> 
                    None, ButtonFunction :> (Typeset`open$$ = False), 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
                    "], {{{{{
                    GrayLevel[0.85], 
                    EdgeForm[None], 
                    GraphicsGroupBox[{
                    PolygonBox[{{50, 54, 52, 48, 49}}], 
                    PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}}}, {{{
                    GrayLevel[0.85], 
                    EdgeForm[None], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
                    38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                    24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10, 9, 8, 7}}]}]}}}, {}, {}}, {{}, {}, {{{
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 
                    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
                    42, 43, 44, 45, 46, 47, 52, 48, 49, 50}]}}}}}], 
                    AspectRatio -> 1, Axes -> {False, False}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0.02}, 
                    Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {
                    "ScalingFunctions" -> None, "AxesInFront" -> True}, 
                    PlotRange -> {All, All}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                    Ticks -> {Automatic, Automatic}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SmoothKernel\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2517", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.09768743340495703`"}], ",", 
                    "0.12313802483386826`"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bandwidth: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.001467531063746243`", "SummaryItem"]}]}}, 
                    AutoDelete -> False, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
                   AutoDelete -> False, BaselinePosition -> {1, 1}, 
                   GridBoxAlignment -> {"Rows" -> {{Top}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic], 
               BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
             "]"}], 
           DataDistribution["SmoothKernel", {CompressedData["
1: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

             "], CompressedData["
1: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
uy40
             "], 0.001467531063746243}, 1, 2517], Editable -> False, 
           SelectWithContents -> True, Selectable -> False]], "Output", 
         CellChangeTimes -> {{3.710256477857739*^9, 3.710256497836007*^9}}]}, 
       Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Show", "[", 
            RowBox[{
              RowBox[{"Histogram", "[", 
                RowBox[{
                  RowBox[{"sp500", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.05"}], ",", "0.13", ",", "0.005"}], "}"}],
                   ",", "\"PDF\"", ",", 
                  RowBox[{"ChartStyle", "\[Rule]", "\"Pastel\""}]}], "]"}], 
              ",", 
              RowBox[{"Plot", "[", 
                RowBox[{
                  RowBox[{"PDF", "[", 
                    RowBox[{
                    SubscriptBox["\[ScriptCapitalD]", "e"], ",", "x"}], "]"}],
                   ",", 
                  RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "0.1"}], ",", "0.12"}], "}"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "]"}]], 
         "Input", 
         CellChangeTimes -> {{3.710256513480733*^9, 3.710256518659319*^9}}], 
        Cell[
         BoxData[
          GraphicsBox[{{{{{
                RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
                EdgeForm[{
                  Opacity[0.434], 
                  Thickness[Small]}], {}, {{{
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   EdgeForm[{
                    Opacity[0.434], 
                    Thickness[Small]}], {{{{
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    
                    RectangleBox[{-0.05, 0}, {-0.045000000000000005`, 
                    0.47923322683706093`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.7778710000000001, 0.5090939999999999, 0.944821], 
                    
                    RectangleBox[{-0.045000000000000005`, 0}, {-0.04, 
                    0.4792332268370603}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.793783, 0.547356, 0.949045], 
                    
                    RectangleBox[{-0.04, 0}, {-0.035, 0.47923322683706093`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.809695, 0.585618, 0.953269], 
                    
                    RectangleBox[{-0.035, 0}, {-0.030000000000000002`, 
                    1.5175718849840254`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8286346666666667, 0.6062983333333333, 
                    0.8927776666666667], 
                    
                    RectangleBox[{-0.030000000000000002`, 0}, {-0.025, 
                    2.2364217252396164`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8475743333333333, 0.6269786666666667, 
                    0.8322863333333334], 
                    
                    RectangleBox[{-0.025, 0}, {-0.020000000000000004`, 
                    4.2332268370607045`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.866514, 0.647659, 0.771795], 
                    
                    RectangleBox[{-0.020000000000000004`, 0}, {-0.015, 
                    6.38977635782747}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8808166666666667, 0.6649003333333333, 
                    0.7303516666666666], 
                    
                    RectangleBox[{-0.015, 0}, {-0.010000000000000002`, 
                    11.821086261980838`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.8951193333333333, 0.6821416666666666, 
                    0.6889083333333333], 
                    RectangleBox[{-0.010000000000000002`, 
                    0}, {-0.0050000000000000044`, 19.329073482428125`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.909422, 0.699383, 0.647465], 
                    
                    RectangleBox[{-0.0050000000000000044`, 0}, {0., 
                    44.488817891373756`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.918635, 0.721084, 0.6313016666666666], 
                    
                    RectangleBox[{0., 0}, {0.0049999999999999975`, 
                    51.277955271565524`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.927848, 0.742785, 0.6151383333333333], 
                    
                    RectangleBox[{0.0049999999999999975`, 0}, {
                    0.009999999999999995, 27.316293929712476`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.937061, 0.764486, 0.598975], 
                    
                    RectangleBox[{0.009999999999999995, 0}, {0.015, 
                    14.85623003194887}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9429253333333334, 0.7904053333333333, 0.595053], 
                    
                    RectangleBox[{0.015, 0}, {0.020000000000000004`, 
                    6.709265175718844}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9487896666666666, 0.8163246666666667, 0.591131], 
                    
                    RectangleBox[{0.020000000000000004`, 0}, {
                    0.024999999999999994`, 3.434504792332275}, RoundingRadius -> 
                    0]}}}}, {{{{
                    RGBColor[0.954654, 0.842244, 0.587209], 
                    
                    RectangleBox[{0.024999999999999994`, 0}, {0.03, 
                    1.7571884984025543`}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9571683333333333, 0.866004, 0.5895116666666667], 
                    
                    RectangleBox[{0.03, 0}, {0.035, 0.7987220447284338}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9596826666666667, 0.889764, 0.5918143333333333], 
                    
                    RectangleBox[{0.035, 0}, {0.039999999999999994`, 
                    0.6389776357827488}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.962197, 0.913524, 0.594117], 
                    
                    RectangleBox[{0.039999999999999994`, 0}, {0.045, 
                    0.7987220447284338}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9575243333333333, 0.9267823333333334, 
                    0.6074406666666666], 
                    
                    RectangleBox[{0.045, 0}, {0.05, 0.23961661341853016`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.9528516666666667, 0.9400406666666666, 
                    0.6207643333333334], 
                    
                    RectangleBox[{0.05, 0}, {0.05499999999999999, 
                    0.1597444089456872}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.929162, 0.95034, 0.6648153333333333], 
                    
                    RectangleBox[{0.06, 0}, {0.065, 0.23961661341853016`}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.910145, 0.947381, 0.6955426666666666], 
                    
                    RectangleBox[{0.065, 0}, {0.06999999999999999, 
                    0.0798722044728436}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.891128, 0.944422, 0.72627], 
                    
                    RectangleBox[{0.06999999999999999, 0}, {0.075, 
                    0.07987220447284338}, RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[
                    0.5401093333333333, 0.7708383333333334, 0.946025], 
                    
                    RectangleBox[{0.105, 0}, {0.11, 0.07987220447284338}, 
                    RoundingRadius -> 0]}}}}, {{{{
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    
                    RectangleBox[{0.115, 0}, {0.12000000000000001`, 
                    0.07987220447284338}, RoundingRadius -> 
                    0]}}}}}}}, {}, {}}}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{{}, {}, 
               TagBox[{{{
                   GrayLevel[0], 
                   Thickness[Large], 
                   Opacity[1.], 
                   
                   LineBox[{{-0.09999999551020408, 0.}, {-0.09993252205747688,
                     0.}, {-0.09986504860474968, 0.}, {-0.09973010169929528, 
                    0.}, {-0.09946020788838648, 0.}, {-0.09892042026656889, 
                    0.}, {-0.09784084502293369, 0.}, {-0.09777337157020649, 
                    0.}, {-0.0977575864661815, 0.}}], 
                   LineBox[CompressedData["
1:eJwUV3k4lV8XJREpyVCaFAmpZAqV7DchU8pUImX6lSIhSTJkSELILGPm2b3X
vVzjRmYSMkWZQ6JSSEp99/vrffZz1jln7bXOu8/ZQpZ39P9bx8TExMbBxPT/
L/l1nIzTGh258f68JSlSWeO74syfJTpmj1RNSOnlKOvu+jERtkBHpm8vOscF
yMqGqgUjIvN0PPzt4tEjT2nKprdvDNFn6HjpK0/I/V9lypbRQv06k3Rku2zh
8eNpjbINDnWPjtBx7txPlktTjcr2M1EdzkN0fKvyLLBc5bWy89YLrez9dHwf
/5w99E2XstuJjY0J3XS8EP2+rWatR/mRVX2tVAcd68PEQr8fGlD2D/asqm+h
o0KQk76IyZByME2xzLiBjmPh8Zy8GyaUw4e/U+dq6Oh2QbJekj6jHLuhgPSo
ko68XLXuWje/KCdJ3cjno9Ox72POTtnN35UzLgtlZxfT8e+ZH8s1HxeV832G
0pSK6HggVemtbvVPZUpeVHJnLh3FZfL+7SpYU6b3nI+3zqSjBQxcWlZjgeo1
jpiVl3Qs/DhYdJW2AepF68ODE+m4GvRhQ5PIJmg97xmyL46OIju+FW3X4oZO
V8VAaiQdtewWhtq8eaDv5ffHGmF0FLjzcLREgh/et+Z7vw+iY3mVU+RBj10w
/uO6h8MTOkqyHRPpmN4HX9WGnGM96bjT8PAAcUIM5IU8FF8/oKO17V/3oCwJ
cP8j+If5Hh2v+3YK9fFJQl1/Dco70FHu0ZapWDlZYC+29LW1pSMIFLzVLFYA
3ZD1Z1OuM/iQtGpXpZUg8mbmxl4LOh4Sce43MiZgUFWjg8OMjlLfVHQLY1Rg
377Z58rGdJSv3NrA1q8K138HGd01oGP/UNP4R2EtyO87siNbl44tQsmUBd/z
8J385v17TToOy56s9XTSB8Vnjilb1Rj4PtGc9fuNwNOG11qdoGPnA57ngW8v
Qf0ZmtjDk3T8U9TBtlZmAhv3XvpcJE9H2vO4unhdc7iwulI4KU1Hu7Y25uOE
FUT3vnDacYSO+1n/En3S1+E9SUleV5yOg8pSj+7uvwnCwcO/fPbT8bmrJXLz
24HNjUdVpYJ0tH9UJvLT4w4Uqgh7z+2g49O+N1NfSU6wuKdeVYifjkNzKicn
U++Bd8+G9kBOOo4LHJxs938IzUU5ochGx1jJBMVaV0/gCtI2WGSm43HqZ2VP
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
/VURAwjrclnYfI2G228zR7oLXYC5YknfXBMaTk3cNr81oAUa0VN8Zy/SMPl9
qInlSQ1Id03KnNCjoXEv2dAkSQ2YTC8qPjpHQ56Ot7r6zGfgyimu1t2aNGxv
XNLQsiaAvrfRtEyVhpxeR/39Qk4C3zrPeSOChp4Od92cDeXBYfKY1/eTNHQ5
xtZhbS8L7Y3z3KEKNBz6q8WzfFMaxHMyUg/J0tA7bG8BV5sk+AWZyTVL0lBn
f84x6ToJGL3N32gtweBfIlNtUCYKShdeX2IWZeSrUanuQhKGWJnHnxKFaMgi
F/lX87MgLPKdenhiD2P9sV9JDQ274cLPxU39Agx9Q6/B6ZSdkP8uP+kuHw2D
TjWMVLoJgIa9zgppCw1PsT4RyhDdBpPr5vS+bKTht3YNq2fdvPAoJijvEBsN
3zJN7Jtq2Aq7Dx9ivclMw6v7JwUkknmBXtN6NfMPFWfVPnLbu/KDodEt+sRP
Kt6zmWKn6G2Hb584eIR+UJEpaJppWWIHBHvm2F79QsWggpmV4+t3gTivZkP8
Jyo2GgQfiQ7ZA/VZM4LvJqmoIKjF0pghDOZKAa7bRhl4no6vhJ8o/OkU6zYY
ouIIm/77CksJiP2v6dDzPirK/u5tlj8tCXKr1x93dFGx/mf+4MAWaegMYRvh
fE3FP3eOxZ30lQXb/ZmKms1U7JQLavL1UwQ2ulq4/ysqpv0aXWp7fApSdT5+
flVNRdrVXTyBZ06D8pifGnM5FWMJ9YOS9Wdg8J5IsjKNig+FHYluVXVw2Vi/
8pBExVW+UO/UB5rAk2ylX5ZHxe0bWvIHpM9DoSxL/nImFV+4M9ttuKcPWs2p
rHKpVMy+l+QtrGcEU1dUrjkmUrHE/mTMqSPG4LMwRi+MpWLDjYF8Yw5TEPT3
5pmLoKJ6DidfJ/0qlO8UsjsYSsVbj//tp+pbwsWimobrgVSUlv91iknzP/h+
xnxv+mMqrkx9v6QDNhAy8M917BEVMWbOMfaYLUjcTu4WdKeiv8ZU0OQhe2hk
hsNX7lNRNWtrFNsfB7CMHn4c50RFa7roKjTchb8SniN9t6n4uOXktQchLvAC
9xznu0nFzMEL9ZRLD0DesCpcz5rh3+f/Ds7tc4fumStzIdeoOP3HLeTArCfY
e/xRazehYkzx6Z1l8t6wkSchmeMiI5+DXee0on0hM/PkL3U9Ki4nmXsPLT0G
lZND+n46jPX5vlHtjAJg+I1bfu1ZKl4M9JpZowaCm/VOtn8qVGRj2rI7lO8Z
bPtVdk1JmYqjNP9LDmuhQHl2uezBcSqyu5n62Hc9h9mSWLvFo1Q8Tg86OuQS
Bf7aio3Sh6io17/f/7lmDAiP9u+9I0rFm8sV78/ujoNq5/sP8oWomIs374yf
jgcTju1vP+1m+DecWCtTnwjLiSWHxQQY/vydeXp6fwqEy1z0t+al4ikuluKb
1i+h1TTq+AgHFY8cUWAtn0qD69/kInazUnEoVsOhVicD1j3umbvMRMXSZecL
zj2ZcKKQN6VnuRjvUF5zD07kQA5TOFvrRDEqffBTGeQlQb7Kh2LjkWKcOmB+
N7mXBIV+4hbTg8VYZX8y3TqGDFR2rFjfXYw8TN9Zv+4shhKtjTcjXhfjtIFr
Q21vMZQFG20TbilGqJKXkfGmQjX3nAPUFOO2sGJO3gEa1OorCHZUFKP9L0dX
X98SqI/0abtSWoxNllIff0iWQmPfa9fPlGJUb/+iZz1YCi0CO0TdCotx9+bH
nVLn6dBuYv2WPbcYZftXt6rX0KEjoehRTEYxWr90MDCVLoOu4dUjoi+L8aHt
VKRDahn07FMfoiYUY/ixK32Pecuh3/J5wJnYYsz517U93q8cBtPfH+uOKEaJ
TH3OdY3l8H5KbMI8tBiNjgy9kxwvhxHxu2FfAxnrUa2yTf+Ww/it6lOe/sWY
cnLOJWBnBUzmc3ze5FOM7XXOajT5Cpj+Yhgb71GMC5prvOP6FTArlaIm8aAY
x0doZz+aVcC80+fvdOdiPD0Y0C4lWAHfqPIpZx0Y6/WY6rkPl8P3Ze9zfbaM
+R2SfU1J5bCk+HrV+kYxXmhhNuW9Vg4rbgLZPyyLsehVz8jVveWwWmll5HO1
GJmqs6xzR8pg7W/huq0mDP0rpeXeW5QB0+nVomQjhn5/3k8W9NKBxVfNTFKv
GH+dDIjy0qQDW0PYxiqdYux7KKuuV8V4b214X6qtUYwRFcPLwtKlwKkp9t/g
mWJ0+P00azG9hNFPOvHchGJszN/gJ89aAtyvq/DnCYa+b+YctXVosE3PcCe/
TDF68peeuzdYDDsikpvSjhSjs2LCyUChYtjdO+ssc7AYb5l6H0y2oYDQZe83
5/cx9pfwf784T4LDFoV+gVwM/xv7rm3vzoOjab+kd2wsRl/Lpy2p53NB5qPq
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
H9w9tDsPFo9cxI7bWSPqVOSDFpk8+LHLazXG2kBKnepufTgP98InHE9/tMOb
w5+9GTTyEL095VUHgwP05X77RermwdU611+i1BGDe/lfyFzIQxmbqnpryh04
bZcPeWeWh8Wc5iWPQCdsFNKPNLPJg8/pKwXSDx8ghvtW7OKdPHDPTV/7ev0h
pFkDkwLd8qAX+kjE/5wHqv7lpe95koe9+sNKQZc9cX6hKacyMA/X+u5KLx31
wfDPSdLFqDxctFknaS7+BA+G2akzyXkI+xMk0sD0DBx9+2h+uXlo8xIXkB3y
R9ynk1Xi1Dy85crneFX/ErJN1nUllXlY85oeYosJQk3Nk/dnGvNw+6qNN6No
KAxpaS2j7XlIUh8SX4wPxxi59tOjr3nYvNOs4uf2V3iYPdgtOJKHp+t7Lg8l
R4Mred33ghl6/YMGSz274pAQJTGktZyHkObEQPmwBMgHHxv/vi4f56sbPC8F
JOGip8c895Z8JGUKWaa6pWHiftxShng+LGOPGby/lwF3x/I14r587Aq6oTl7
Mwvc1r3ruuTzMfNIV/doXQ6Sr/xlvXU0H+EqY4GDwflQurCVa+OJfIg+UBuv
PUjCOz0VvsQz+dAx4PYXCi/EZc2LgipG+YiT7Ttwc4WMn0edRVqv5mOWM+dj
pUURHimGS9y4mY8UASctLQYq+A4U7WZ0zodNwV4/tfclOCT8S1b2WT7qhgJZ
lM1pWC0peykZkg+mS4z17zkrUG3gNbUtJh9HP9zyNSt7A52XPJnMefnoZZeW
PkKtgjmTjHhvaz6qG4byXJ7XQjJ+wa21Ox/sK9d70h/VYfLIm566ATpv9cq+
e071cLqnF0H6Ta/33+l3mywacPyu0pO3HAUIOfup5LNQEzLUtiqp8hQgV/Ox
Yu9YE9h41gZLBAoQeUSxsL+0GTe/9YfIby0ASWZIeuTpR7Tk1qrliRZgKLjR
4I9UC+QeZs7u2VGAywES/EuhLQjTDkhI3l2ATu2zGqNjLVgUvHVaVKoALVIR
5nelWmE0cn4tUqYApVxf3RkcWkErOpTLp1iAxBmJGH9SK8R8hI1fqBTgVZt1
qeB8K7z0Gdg3qhYgkJL3OUWpDYPig6XeagW4wL30ZtChDZrT9dZrmvT42Rtn
Qh+1IbM8e8uDUwX41tb9XT2oDfZGd+7Zny/AtTAaY3JhG1r2XNg5drEA6U4H
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
Ynnmho0P3MOcxzWX6H6pntX/qO+F2QsbL7CtFaLbVPW84pFHsNwa/baJiQyN
f4Y5SiceorNXSiaIhYxoQsnZ3I770ImviDnPQcZkOqf/6ydOeGN+ZqMgDxkl
fFfrGg7fhdzOH/d6BMh47FHC0Dl1C2nDd37EbaX39dM2pw/HHLA1c8NpCzEy
9HLqxkfTbRBgG/F6104ytMD5vZnvOhik9+4Z20NGdcF2XqNa+vw/UxaaQ78u
KrcraQw5WcBzQ2KuqBwZsNF/2nraDC+2PqkLVCLjodXXGNezxog6ePMb0xEy
bi8I7D6/7iLSNc4t3gUZDuo6obna50G5pMIzok7G85+eTeH6+qi0F9t3SYsM
wSgq8yOjM+iOnLh89CwZCd+Pz6V0aGE4t/VuvgEZZcokS+dBDfyqpgZsNyJj
LkD4y8l5Ihg6Y9NCTMm4+KTFXpFHFRxT3m82XCXT9+u1HXr1hyHEZNPpfJ2M
4CGprmtuypDccmZ2zJaMM/yXX3jIK0BOSonN2JGM9+pP1SPHZIBjwjua75LB
O2Q/a4790DFkIhAfkJE11qkoUC6Ji7aj5wvd6PEec636Kjth9aj55k4vMowF
OOwDi7bjdhjFN9yXjC6DU/wxV0XhnhUVz/qcvsd7uetsMRbC8zePSlxekqGa
S/IJPs+PyI5rrZMhZCTvH7wa4L0JKWM646aRZAhQOV5WsnCAtCa3rjWGjIpj
imW/nrOigk9IWD2RDOsPJkOS3BvQuOefQlEqGd0XfLmNQhnx5eiQ7u4sMphr
TZy3yq6oDuq/v/Yqj+5Pd17TI5XfqjPXSR7sZDLueF2/MjU2q7r6MCLSjUpG
XYyk+LUb06pswW6k6ddkpCq4e86ujatuTr/aaF5Jps91n348DB1W3UE7OdBe
Q4aF1QEN1n0/VGVaD64cbyDDe3njqd0ePaqEYQGBkiYyemeOHQ3Z/kn15N+/
B/a1kbGY1bcr1qNN1ZD7h2bMZzL2NP4R1nv9UdXhcN79R9/IeEe+8eaefK3q
w9OhQXMDZDCe0dzO9+2Nqp+lS5blKBkBDnvDNZ8WqYY9MHv7eZKMYuLp2c07
C1WTXmj2as3S/dkxHtnslqualyz1u+w3GRH1iqcdyGmqr0t4uQ4sk9HezsQu
3hav+q5pUTJ+jQxnwShn86PBqh0/+sCzjoLkR7WBz5Nuq/Yv1Fz0ZqHAT4Ii
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
Ne3touUxnbfFMPNY41x/y4nmcl63pqi+GCtnC8LuPK8iyBYonhD7UAzx/kdm
inVlhFF20Ua/lmIE1reHGbtEE+KvM+vOdRSjYPnAfi7eLJrh258fL3cVQ9vp
bIb+/Uoah9gX/dqvxUiz/VK73a6R9tblzSfpH8VIIuXdWjzYRnP5nH4xcrgY
r17nGUQf/kyTkQvsYZyg53+IW+QltZM2EnDf1Ha6GJ3Ftwa9FHpocWNm/R2/
6P1QaM92In2lcSTKjqSvFOOE4CmRfIN+2oOLTFMuG6j4wXD9TIBYH02GMu4w
uJEKqSdqy6SMz7ThTe1zulxU6IoStHKvNtNibV/fo/JSUW0wrDw1UUE7X5+8
KL6Fikc/NX+vstyise/wd322jYo556MPphpphGr3u2u/xKiwPNZy4qHXW8L9
bmNPk51URE0vHlWWrSQcVDq+vn4PFdsPq1sPviklDAcdeCJzgArOsNDzRiJk
QsyUAFuULBXzP957JvzOIJw7uea/TomKSNmvFEHzCAJb6vCmm4epqBSYaH6o
dYlWxfAx+LMqFawLEaPK5ADafWOqAFGdiqzjmdsKRGNoQ3x+2/h0qHg4Iato
dz6bVum1d3epCRUX02Qjpt2CaM59PFkSFlSIHxru0zkbTpA+vCzlf40KPXaP
LA3ufMJQ2I/83zZUaLjV3p51LSXEzDbKXXGg4lbZLq3v1CrCOV1y0bs7VNh5
RgaYGdcQ2DKjD8ndp/srXeW9jb2K4Gxmp7rBkwpRgV3fJVopBGna+Sr7x1Tw
f5+MlDXJIQxuOarR+ZS+58qKDRyWiSPof+TUzg6mwmzRoExgMJy2cf+fD/wR
VGie8FsvRs2gVfr2nXaPpuJgw1yY0FohzflHXdtIPBWv7RMzkxNKadKq+QZn
U6jYwZbRF769kjb0KqKzLIOKMWOP0Z7bb2kxvz0u78ylQmhNQLj6UjVN/6x1
XwCJCq6iZm5HeyptY+4Z84UiKj58+tFG1U+hVbKqDJqVUcG9bDpd9dWP4GS5
/XpjBRXXJU9afTArIAxum7OLrafC6Cujkcu9WsLl2rnd1z5QkWBWWquQ/oHQ
Zv/rh3QrvZ+3SiKdJ1sJJwXnYxc+UREuH9p8/vEnQmXV/MXKbioO/3ZYLyfa
Rcjj/9N8dpCKmsHowC3B3wjR1xc0BqaogMXgThOzTgIvz+K/7DkqYhJYpz3q
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
                    "]]}}}, 
                Annotation[#, 
                 "Charting`Private`Tag$5572#1"]& ], {}}, {{}, {}, {}}}, {}, \
{}}}, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-0.0536, 0}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{-0.05, 0.13}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], "Output", 
         CellChangeTimes -> {{3.710256504191799*^9, 3.710256520268202*^9}}]}, 
       Open]], 
     Cell[
      BoxData[
       RowBox[{
         RowBox[{"tstData", "=", 
           RowBox[{"DistributionFitTest", "[", 
             RowBox[{
               RowBox[{"sp500", "[", 
                 RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
               SubscriptBox["\[ScriptCapitalD]", "e"], ",", 
               "\"HypothesisTestData\""}], "]"}]}], ";"}]], "Input", 
      CellChangeTimes -> {{3.710256552265861*^9, 3.7102565692413893`*^9}, 
        3.710256636780085*^9, {3.710256711498954*^9, 3.710256714332003*^9}, {
        3.710256762768271*^9, 3.710256765779441*^9}, 3.710256823592935*^9}], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"tstData", "[", 
            RowBox[{"\"TestDataTable\"", ",", " ", "All"}], "]"}]], "Input"], 
        Cell[
         BoxData[
          StyleBox[
           TagBox[
            
            GridBox[{{"\"\"", "\"Statistic\"", "\"P\[Hyphen]Value\""}, {
              "\"Anderson\[Hyphen]Darling\"", "0.29934868344707866`", 
               "0.9386399790067629`"}, {
              "\"Cram\[EAcute]r\[Hyphen]von Mises\"", "0.0588576168322434`", 
               "0.8211766537643012`"}, {
              "\"Kolmogorov\[Hyphen]Smirnov\"", "0.012855140112330465`", 
               "0.7947592680467429`"}, {
              "\"Kuiper\"", "0.02285057937151852`", "0.5799065925599652`"}, {
              "\"Pearson \\!\\(\\*SuperscriptBox[\\(\[Chi]\\),\\(2\\)]\\)\"", 
               "23.23440603893524`", "0.9970320395876812`"}, {
              "\"Watson \\!\\(\\*SuperscriptBox[\\(U\\),\\(2\\)]\\)\"", 
               "0.05885761682840999`", "0.6063538631648991`"}}, AutoDelete -> 
             False, GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
               "RowsIndexed" -> {2 -> GrayLevel[0.7]}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "DialogStyle", StripOnInput -> False]], "Output", 
         CellChangeTimes -> {{3.710256832819254*^9, 3.710256854864146*^9}}]}, 
       Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"Column", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{
                  RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"tstData", "[", "\"ShortTestConclusion\"", "]"}], 
                    ",", "\"Text\""}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"tstData", "[", "\"TestConclusion\"", "]"}], ",", 
                    "\"Text\""}], "]"}]}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input", 
         CellChangeTimes -> {{3.70974962330441*^9, 3.709749633999836*^9}}], 
        Cell[
         BoxData[
          TagBox[
           GridBox[{{
              StyleBox["\"Do not reject\"", "Text", StripOnInput -> False]}, {
              StyleBox[
               TemplateBox[{"\"The null hypothesis that \"", 
                 TemplateBox[{"\"the data is distributed according to the \"", 
                   InterpretationBox[
                    RowBox[{
                    TagBox["DataDistribution", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
                    "], {{{
                    EdgeForm[], 
                    Directive[
                    GrayLevel[0.85]], 
                    GraphicsGroupBox[{
                    PolygonBox[{{50, 54, 52, 48, 49}}], 
                    PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}, {
                    EdgeForm[], 
                    Directive[
                    GrayLevel[0.85]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
                    38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                    24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10, 9, 8, 7}}]}]}, {}, {}}, {{}, {}, {
                    Directive[
                    Opacity[1.], 
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 
                    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
                    42, 43, 44, 45, 46, 47, 52, 48, 49, 50}]}}}], {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.02}, Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None, "AxesInFront" -> 
                    True}, PlotRange -> {All, All}, PlotRangeClipping -> True,
                     PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                    Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SmoothKernel\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2517", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    GraphicsComplexBox[CompressedData["
1:eJw1029Q03UABvCx0QloC2GIZM2IZZpyWngwzXp+40x0ynHzijjhTAUOQ2Ge
NDTpDhaIyATGAbdQTnGEMFRErAHN+EJ0cyo7jiHCwQZj/vhbLWCDBey26gUv
nnvu8+J5+QSfEh9NZjIYjPD/8n8H17RMud0rJO87/pGDDgoHgqLGoxuWCWvm
FsegOoq4veU+IxFLRKjgvajnJ+EQJStYNjlIjiU0dParDHDTTEujhYuE90y+
89l2Kcz7/ypbs2mBdF6vqOmmiyD1qMvXdNnIsTMxYXN3FPD9mqt8GDNP7HUL
ebEJSnzvmG06Z5klbXi4Z9dwA+r6h3Zd3PQ3mXCveb71ZDN4fjGiMv6fJLvQ
WmUYaMWJjYEhT/KniXdNKfsSTZB0tmL4mmWC1KWYFTOmLkRuKBl/6UkTXsiX
JZN1OoxeNVbviRsj81nnZydVety9I4wX0EYydEzBWj/Si/f7D0aGhQ0QSs4Z
zA3txzsKqyyW7iVD5mz967mDqPLeMOf5mY6kStr9Tu83gg7ctzl7rYZchX/H
gnoUvvHhghavYrLt7cssQckYLH77gn576xHW+finPZiyoFLE0M3wf0euzt91
X/MKcZGSTxKf9oDVmXw9kkGDna/PfCzsx/wj17uOolc42ZMhrakYgvCs0xmQ
bkGOutTesc2MTJ4tl5tnhlwTcEExYAEMlm+9rhihTeXWT7ePY0wm1vYJBrC7
+9y86ocpuIYnuAXJBtCJYplI8AcEVeWZ29P0aKudN3wTYgX3NamNw9Nhil36
E1JnEXWNzW/fqIXvj9HrnJo5eKgaEp43ayEsPvJx5gc2yEW1XrfVT1Fbdnt9
Uo4dv7S9vGgb0cPfyidv2BZwP0ejMwt7oUzcwtkZ7YDxhk+41WlAdHOr5HL1
P2j8+UErs6UPa2OLGit9l7HFk5l1ZUcfZjitxcGnV+AoEkQFSHoxvPW9AylG
J44rlV3MvXpMB0T40IdcEPPYbxY0aRHIvSV5cdONSu/O5YqmDtz7lZcgKGBQ
J2TnIwY2q2Fa4okMuz2oD099+rnefRdVygvdLpMHtTj4xaJUVY1xyZmwwgom
FX/vifKGrBTtsT7pPRSL4sgngw7TUsh74+1uN4s6/pG6XrySjvDspsd9lJ1k
cRqjxi6Vo0qzIyIlg0mtevU/q17dr/pfEHq+aA==
                    "], {{{
                    EdgeForm[], 
                    Directive[
                    GrayLevel[0.85]], 
                    GraphicsGroupBox[{
                    PolygonBox[{{50, 54, 52, 48, 49}}], 
                    PolygonBox[{{51, 53, 1, 2, 3, 4, 5, 6}}]}]}, {
                    EdgeForm[], 
                    Directive[
                    GrayLevel[0.85]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{51, 52, 47, 46, 45, 44, 43, 42, 41, 40, 39, 
                    38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
                    24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 
                    10, 9, 8, 7}}]}]}, {}, {}}, {{}, {}, {
                    Directive[
                    Opacity[1.], 
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5]], 
                    
                    LineBox[{1, 2, 3, 4, 5, 6, 51, 7, 8, 9, 10, 11, 12, 13, 
                    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
                    28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
                    42, 43, 44, 45, 46, 47, 52, 48, 49, 50}]}}}], {
                    DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.02}, Background -> GrayLevel[0.93], 
                    BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                    Method -> {"ScalingFunctions" -> None, "AxesInFront" -> 
                    True}, PlotRange -> {All, All}, PlotRangeClipping -> True,
                     PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
                    Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"SmoothKernel\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2517", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.09768743340495703`"}], ",", 
                    "0.12313802483386826`"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Bandwidth: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.001467531063746243`", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    DataDistribution["SmoothKernel", {CompressedData["
1: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

                    "], CompressedData["
1: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
uy40
                    "], 0.001467531063746243}, 1, 2517], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "\" \""}, 
                  "RowDefault"], "\"is not rejected at the \"", 
                 TemplateBox[{"5", "\" percent level \""}, "RowDefault"], 
                 
                 TemplateBox[{
                  "\"based on the \"", "\"Cram\[EAcute]r\[Hyphen]von Mises\"",
                    "\" test.\""}, "RowDefault"]}, "RowDefault"], "Text", 
               StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            GridBoxFrame -> {
             "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], "Output", 
         CellChangeTimes -> {3.7102568568461637`*^9}]}, Open]], 
     Cell[
      CellGroupData[{
        Cell[
         BoxData[
          RowBox[{"\[IndentingNewLine]", 
            RowBox[{"ListPlot", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{
                    SubscriptBox["\[ScriptCapitalD]", "e"], ",", "30"}], 
                    "]"}], ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"edist", ",", "30"}], "]"}]}], "}"}], ",", 
                RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
                RowBox[{"BaseStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"FontFamily", "\[Rule]", "\"Verdana\""}], "}"}]}],
                 ",", 
                
                RowBox[{
                 "PlotLabel", "\[Rule]", 
                  "\"Simulate fractional price changes for 30 days:\""}]}], 
              "]"}]}]], "Input", 
         CellChangeTimes -> {{3.710256876333681*^9, 3.71025691230247*^9}}], 
        Cell[
         BoxData[
          GraphicsBox[{{}, {{{}, {}, {{{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 PointSize[0.011000000000000001`], 
                 Thickness[Large], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7Le/XL3LoiTZHirg4HXHuezVDQson8Mh8qjz
tmWHg/ZD+AIObXwSU9+/LYbKizgkuR/I0jvZAJWXcLi3lC8nafN8qLyMw72m
jii7r15QeQWHRjm37fOX50HllRyMnWZLPV+yAspXcdhcut+/vcEfql7N4brZ
87qtrt1QeQ0Hp0Uyp07+DYHytRxU7h4P2OoSB+XrOMgUv92qm6sA5es5JC+d
uTTyXgHUPAOHFM4MfQv5GVC+oQM/945MxZIqKN/I4ZqV++ILhkpQ/cYOfX23
exI806F8E4df15bzvuRtg6o3dXjoMWn+HSWYvJnDWgmmT8b/cqB8c4dZlySZ
25QDoOotHLZNK7pb8ywYyrd0sNz3d/WD/7lQvpVDQvpGb+PPqVD91g5ebHHW
U/0ioHwbB+bfTc3W/jVQvq2D8SbW48c31UD12zksWrxq9p+sFHsAoV6FBQ==

                   "]], FontFamily -> "Verdana"]}}}, {{{
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 PointSize[0.011000000000000001`], 
                 Thickness[Large], 
                 StyleBox[
                  LineBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7M8J7al39S/eDxVweNFWcfZx3QR7CJfD4f4G
4w87iidD+QIOfz/2X/znkAnlizh8XPJzugxvEVS/hMO0vdrtxfkzofIyDvfO
+qc+mBoClVdwWHnrYF3Dg2ooX8nhj/mGjccZA6DqVRyuLPM6ZLg6Eiqv5rBe
lV+c27kCKq/hoJLr4PQwfBqUr+XQt/PDxKB3E6DqdRx2//ioNW9dIlRez+GH
82qe1K3lUHkDh6zZRtFCi0uhfEOH1f81Pjfs74GqN3J4FbxnsvmmfKi8sUN2
zQ/bn0dmQ+VNHJbdEwt0VO+Ayps6XOJoYD7M0wKVN3MoDDhs/Cc4Eypv7iBW
6+rcdLsSyrdwEDE2XHJtRTuUb+kwY8vrl8un5kH5Vg5SH3PPSOjAwsva4e+v
tWH2V9qh5ts4zIh5/bxuRT6Ub+tQo6SlnS2YCuXbOUzRs8ws+l+2HwAJ84yg

                   "]], FontFamily -> 
                  "Verdana"]}}}}}, {}, {}, {{}, {}}, {{}, {}}}, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
           BaseStyle -> {FontFamily -> "Verdana"}, DisplayFunction -> 
           Identity, Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 400, 
           Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& )}}, PlotLabel -> 
           FormBox["\"Simulate fractional price changes for 30 days:\"", 
             TraditionalForm], 
           PlotRange -> {{0., 30.}, {-0.023556592839676496`, 
            0.04813310813699836}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}]], "Output", 
         CellChangeTimes -> {3.710251305722451*^9, 3.710256877338187*^9, 
          3.710256913113906*^9}]}, Open]]}, WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  FrameMargins->4,
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"aa9fcf62-abad-492a-8956-d7045b90a355"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fd4dabd5-1f61-46e8-894d-31cb3c650f73"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 379, 6, 69, "Chapter",ExpressionUUID->"a2dca719-f5ef-48ab-8944-fd52fb157926"],
Cell[CellGroupData[{
Cell[984, 32, 222, 4, 54, "Subsection",ExpressionUUID->"0d900d9e-f540-46c5-8b73-f5c1041ee279"],
Cell[1209, 38, 1002, 25, 197, "Text",ExpressionUUID->"f66974bd-248f-4238-b357-5ea5c85b0f4c"],
Cell[2214, 65, 842, 22, 39, "Text",ExpressionUUID->"b6f64789-935a-4e59-ba91-88b70a3b4180"],
Cell[3059, 89, 1031, 27, 39, "Text",ExpressionUUID->"74461b2d-8866-4a89-a878-9a01cab6a2b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4127, 121, 361, 5, 54, "Subsection",ExpressionUUID->"40419d95-624f-48ef-91ad-ae1532a1b251"],
Cell[4491, 128, 282, 10, 150, "Text",ExpressionUUID->"b0d721e6-5e65-437a-9827-8170c369da93"],
Cell[4776, 140, 601, 14, 39, "Text",ExpressionUUID->"83ffa38b-20db-425b-8861-c4492d392cc8"],
Cell[5380, 156, 1484, 37, 39, "Text",ExpressionUUID->"02544fb2-2dec-4a1a-8c48-6e489faf4f17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6901, 198, 381, 6, 54, "Subsection",ExpressionUUID->"33a09cfd-d4a1-4af5-b831-201f544c1658"],
Cell[7285, 206, 1079, 31, 104, "Text",ExpressionUUID->"b904cdb1-9906-4200-b9c1-f7cc95562f64"],
Cell[8367, 239, 258, 9, 104, "Text",ExpressionUUID->"b9e18837-3b6d-499c-aa89-5ad1017bc958"],
Cell[8628, 250, 585, 13, 39, "Text",ExpressionUUID->"5bfdecea-dcd3-4c0c-8d49-c00c8dcac487"],
Cell[9216, 265, 1284, 32, 39, "Text",ExpressionUUID->"47f9cf60-0a89-4e1c-8de4-ed97de87352a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10537, 302, 90, 0, 67, "Section",ExpressionUUID->"c0b1a835-9404-46bc-acb0-64e062edb999"],
Cell[10630, 304, 1669, 24, 196, "Text",ExpressionUUID->"142f2509-e2eb-4e2c-831d-5d3321b6e41d"],
Cell[12302, 330, 241, 10, 150, "Text",ExpressionUUID->"7da1413c-e4a5-4651-968b-25dd48ba0bb0"],
Cell[12546, 342, 279, 5, 35, "Text",ExpressionUUID->"04603d6a-e3be-47d5-a072-9f1d621e7f8d"],
Cell[12828, 349, 1348, 40, 150, "Text",ExpressionUUID->"d8926ea1-6e84-4283-b558-ba14efc7352c"],
Cell[14179, 391, 9373, 207, 39, "Text",ExpressionUUID->"e2c616ae-d595-48ee-8b82-a4bb82e30ee5"],
Cell[23555, 600, 1614, 33, 150, "Text",ExpressionUUID->"98fe056e-72cc-49f8-8730-6be937811f6a"],
Cell[25172, 635, 1233, 32, 196, "Text",ExpressionUUID->"d19b1c42-889e-4bbf-9bbc-352a9cf47412"],
Cell[26408, 669, 147901, 2625, 39, "Text",ExpressionUUID->"aa9fcf62-abad-492a-8956-d7045b90a355"]
}, Open  ]]
}, Open  ]]
}
]
*)

