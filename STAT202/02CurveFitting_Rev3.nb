(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    285079,       6086]
NotebookOptionsPosition[    228235,       5104]
NotebookOutlinePosition[    264520,       5772]
CellTagsIndexPosition[    262542,       5703]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1dcf0211-387f-4388-9e8e-4cc735cc87da"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{268.015625, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "Text",
 CellChangeTimes->{
  3.728069154380084*^9},ExpressionUUID->"5519368d-fb72-425d-89d1-\
8cac8344ddc8"],

Cell[CellGroupData[{

Cell["Statistical Distributions and Model Analysis", "Title",
 CellChangeTimes->{{3.70808085581631*^9, 3.7080808600350704`*^9}, {
   3.709775524816675*^9, 3.709775558152948*^9}, 3.710599510815689*^9, 
   3.7275370508250003`*^9, {3.728069394325427*^9, 
   3.728069397571188*^9}},ExpressionUUID->"4a5057bd-197f-429b-be9f-\
ac6e23346095"],

Cell["Curve fitting", "Subtitle",
 CellChangeTimes->{{3.7191488839742107`*^9, 3.7191488893026686`*^9}, {
  3.7275368806896706`*^9, 3.727536893233982*^9}, {3.7275370778398104`*^9, 
  3.727537079984332*^9}},ExpressionUUID->"7f4643f5-9390-4858-8497-\
7be59b165c0c"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAA0B0N+16UBUA6qO5mCB3vP2DScy/E
eRZA8L7+J4sF1j+Q+T1jxeonQLPvyAAEjOg/EJBUyOQWHECk2h3YLHzdPwCb
lcRShRBA+sdh7ahQ7j84JKpIUu4dQPxRGxXpYPM/XPIOoBuqJkCE8Hnkoyfc
P1hvUJQ00CVAcQlQZEua5T9+oGxwQCUoQDk19ZsA2fI/SHurTgbXA0BC2CnM
dcHuPwTVwkH+TRlAlsjGHZQR5z84sI+VII8XQJxiXxJ1/PI/6OFPZLNGIUBU
yWnf0mPjPyKVYQn4dSZArg7Zqdj06T+Q4DOy/gAmQG+mHeGzkOs/MC6pAWBO
IUC+Hc+C73XlP4Qi3WjKEhFAgMOGKDmo6D/yffST0okiQGSTH1DhYNc/UE0O
C0FYCEDoOUhUD8nkP+wNMV8WuSNAYBIilhSj4T/GEZRt
       "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}}, {
    GraphicsComplexBox[CompressedData["
1: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
EP8DzrTL3qmC8a3JvHsFti+vX19Y1CMGlt7IrvZeJKPzSSqnAkl4qhedT66f
yhovqx7BrgppeUmsz2Kr8zOzuu+GMcX+/RwmJUvY+eEbMqdJQ9iVNlJlvyLM
15cPa7RthjB714eHB8zoAVFYQk5+ioyRCMdOFT5iBNZBAYOmOWSsfLt9AHsP
M3CM+9L8LoSMAQ3P/zwAGxi+vHKf4EjG1rWb5GeSOIA/m86cDowX76NL51gb
uICzxCC9IMzXOJPi/lAFHnDUUalmI97zdATK5le8oNLuQ3g4fP8Ca7PjBK8A
eFpV6dkG8+envK9Tw54tQDrL+wTHXRif7+9/Am9BEDrzPlD4ARkbzso2Xb4m
BMKGq2NFYfx23+2oG3xDAGG+hb3tML6VH14d5G0RBknFTMdPwfgntnCvAkZR
4LQe7PgK4g2Tj5Akq5oYUPvC82kV5keWwdc9m/eLA48nVurHgmD8FUoCzUMk
gEFtSWC4HRmd93Q4kz692dqH7TZV77lUNY2xp/6pObJ9BJNuNOUFzgvYY/Hv
8x2Gw5g7kxjdEm0Fe+M3I+98fwgTazM983YrHWj3b9ZtlxjCvoxEfm06zwDs
eXdZS9RAfDxCuHS6nAnoBkS7ScaSseusstPePKwgQW/IQsKDjH11lBrX8mEH
ZrWTOUzWZMyW4DZwI58TdA6lZknA+M6JSdw3XeUGv+P8djLA+D8pT7P+ROQF
UQ+yXvLA/uftoTMufi4AdnV7dFbEQLzlusdd998W4M951vJmCowfZ2O79IIg
KL8XnBwH17e82qf11+IEcJd3RPoRjCc5jPQrHAiDs2XX82thvFWmqjijvERA
/wMdo8NwPnrfClwZSRUF3wp2PbqdQMY+5HEv3ykVA2mPPQqCw8nofCynP0Q/
t9IL41T1Wj+YBcw/WLdt9CNjDDVf+hvb2UBY/oFrWbC/ygoiV3cROcFexs18
ZDg+hr4f1xRcuYH+UdejLfA5ary6TeO1IAhRKR2dgvjFcnq7THuLEPg88ICf
FfZ3M9vx5sIlAiDSlsbOw+fZtvcq38VFwOc1bpZYiL9naDc1H+SyArW75sHx
J8nYzemLM2mMHGC0N9xLF57vItkLd//U4wLnhhzruiAejNr75pxO2gS0flJP
PoDnw+Wtvzv4dwmBwe/CEX9gfhnPWXTGehLAyXXpl8PweyU0jy7zG8KgdRBz
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
4+vOjfPr5AnZR9YOBJDQT9bqh+XeRfcv3FnhAjvUz+pu3K8+miaqMH6H5YzJ
RZ9g+dsrMRInfnOC+dDW7asbeB7m9NZdG+4Ht69t+QjLe8/+d/G5GxcQ6Fjl
3Lg/hBtR4gwvw/1gaihjA49x/WqWlyAy0t2LFcW6+l/K4AKlkyJ+c7B+ea+E
Z3UGARQwHD5FhvVlMm/Sr3BzgVcMB0xJsJzj2Ru531YE8PvcZ83OjftN6oC3
0kcCqBXoEaqHz3FypJ+/ajiBpQYhmA32P+wzRZeylQCUfiW8LdrgEwTV1KWs
uUDdruOzG/tjWnQof815AiCnj/Ju9I9mEDl+roAAvqzVqG2072vflcKtAevb
vrPdqP+TcF+s2ZUAiqZvd230r2NA22t0nBNoZ5dM0mA5Y2tkjeZ5LqBcqrxI
hs+nVh05KqMJoMNvsWZj/8X1OoOw2v7Z371Ir6t/0X2S/zIN6XXpW7/bBF6j
Ib3Obnu2yNkAGtLrxu+cPH/Jgob0umAe3YZcIg3pdSSLpl38Y1NIr2t4vUfh
0qsppNete6tFEn2nkF53b5fDeKHKFNLrCFmxv+z7/iC9bmfx03vcTn+QXhe5
a/vlsuFJpNc5ssQM/gmeRHpdzGhqth3jJNLrWkIKbJ48mEB6nX+unw5JZwLp
dYnYJu19nVSk1/leeZf86zYV6XVbTkr4t2NUpNepN336r5KeivQ6gaAsBpNa
CtLr5CdC0ytTKUiv42LdOzgXTEF63TWS+1ZtewrS60pTDzFqm1KQXsdzos10
vwEF6XW1/Kx7t2hTkF5Xb0ZkateiIL3O5ZiF7Dc9CtLrRFqXdhKMKEivawjw
9pQ5REF63Rn+v04GJyhIr3tjmXwszZ+C9DoVMY8PPlcoSK8zMxVqvQjHg+t1
l9nLdpq9oiC9ro49hnG2hoL0OvV88+WKPgrS6zbf8sxLXqAgva70Y6AriY+K
9LpopTeyb5WpSK/7XLHLonovFel1pU7NcW7OVKTXSWy/U20QSkV6XWFlkvKW
JCrS6z4SuPYw51ORXse76cUji69UpNflWo6F+vdRkV5H71Fvl7xARXpdwY51
LcPNE0ivy7twrPnydRrS6xjtjPYRw2lIr/v71Ek8+SQN6XWZL7b9lNOjIX3r
ak/cljISBelbMeIL2+th/HB9a2ifvYTNDQrStyTmlOzOnqYgfetxZD3HDzh/
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
9Yr4EhJLwvwfwnbcyGNn9hllKsXz7a43UL+IP1HWuFsiFuoX8SdeLuVzOg/z
lfgT+5s6C0qgP4g/UWjkM5cJ3w/El7g1UqQ/At+vxJco3in3ZmJ8JzWs270s
boxWMTvN7Qisx8eVFz+J11Gl5DOoXerw/UR8ilbjRI+j19joU5gs/O9CAdQf
kq+3aI1ldMP3JPElntL6RXvg+9HUeTh9RsUwrUjt+1QvmJ+vs9SXX0hSpZ6W
7H11GH5PfAqv5U3LJ75niT9xS2Zq70v4/iL+xFsTmXVDMB6IP3Es7+POfDie
+BMF4uHmL6E9iB9hUW2qUQLXu+V+RXxNmyo1ltu5rgj6j/gSdCrBwBi2iR9R
IeWVfykcvvM3BXIP3BmiSX2KPV0C13sUaNjcpK9Gae85nLoerkfydMNvWrOU
oX693UAzbg0cpj1XEZxpAPNVeKWRbe8ONUoixOeUJRwvwPvvh4TmH9pJkXtT
MuF884Tq6jdMVaOK47UWdcF+4kv8XbGRXgPrNeJLaJxtNvoL+81rX71Q3jtE
a/Caki0C/ZXgHElpaKtRW6WjzXfCfvqMv5vpB6F+NaU8uALbD1iGFgmv/tBS
+1La1eF42xV64k8U1Ki/d9UVQmE/8SdO3Duz6zLc7/DLDfMyuEO0rtqvDdZw
f9XXfnjErVWjHA0ObJioXyQ//+F98tl/sP6SmWLBWrYV5sd/v2eYwv7k57tq
uvn+0MytDmecgt9/j7dLH10yRLvblb5ZCa4vYmvg/k4T7tc49cn+ifZrkaxR
toP3R9Ro6kQ9NcpsXOGe/If2emrEbhk4/qNW49q9s9SoZd2K/KmwPzqwQyyo
Yog2ZUa5QDycnxYde2/5Kmif+EYTGuwfOalHv7cL3i+B08/bw/YJPTkB3W1/
aHP73Pzr4PgX4nMaaH5DNNbqayLdsK3h2THtgp4adVt7lenmifqlkurytPMP
TUH/+dhCuL7NPZpxrxG8X1hvEybOT/J0yTGNbwFQv0me7mi/LMToExPzdD9b
wfxzYm2YpytrBr0NP96MeXo96/Mzl7ZGzNNdioSVLEbomKe/6RycbhdOxzz9
7o+HG3770zFPH3TOarz+lo55+ler9QfWGDZinl741tKGVdmIefqe8biSrwFN
mKfviF9x7PTKZszTv5hypEo4zZin7/mmudb8SQvm6UMjxyqLDrVint6XOS86
eEYb5un+VgbyCQ/bME9fGG66R2I+A/N0WgQVNj2agXn6BVb/yNl6Bubpy6ff
K2riY2KefnpcvOGHEBPz9Lj0YvmMPwzM0ysu7zlZ8JaBefqPUStLMU8G5ul/
5klr5s9gYJ7eqaHxVS6uDfN02QHeqXThNszT31XyRq/btWKevvlumWrZgxbM
0z1GppgqjDZjni4j9EPQcFkz5unxW7uHPrs1YZ5e5yqaY5HfiHn69WhDm+g2
Oubp9jbmIyfl6JinH9a9v3tg3VfM0w/dki4X92jAPP21w9NDnNx6zNMVIk8q
pDfXYZ4eQuv22SlXh3l685mS9f0bvmCe3nvo7nNVr8+Yp4uam25PffkJ8/Tk
07ecLHi1mKefLUrfZba2FvP0qqy9C/zlPmKeniqnGfc2tRrz9PL1+WGhRlWY
p4fWhOUKlFVgnp5A87F+/ZCBefr1/YdPnk9swTy95r6m0trLTZinN1xSNVa2
bsQ8/c7liFcLHtPRn1j1ZDunxYeO/sTVAc3Yo8l09CcKz0x9XDZER39C7/r3
+BcXGtGPWNUeJCHX04Z+xJHxJFdDOwbm9d138uoK/2NgXp+dU+PXwGFgXr/t
l/sndxifJK+Xadilns7PxLx+fH20kWI7A/N6C0bZrEs3GZjXs++Z/rqyiYF5
fWOBXviD+jbM3zOWbY21CqzE/L1onvaHFduZmL+vuTnv8e2NrZi/90fVUCKD
TZi/983pyJyf1Ij5+1nRVvGMz3T0JdoLBEt9oJ4QX+KmS153J9Qb4kvouzWm
zmuhoy+hIba/QtqmEX2ITRX6WVOq29CHOCRWs0LUmIH5fpHw3p3UbQbm+/92
2E3/r4OB+b5nRmLvAwEm5vsKt9mlBYJMzPc38hvtd2AzMN8vbbj78tcjBub7
J/6MvQywZ2C+X9wj4neU14Z5vfZ/sg8et1diXr9UVDz6x6c2zOuzn9x6GjPU
jHn9G688z+16TZjXRyzydMif34h+hNuyPSHUNTr6Efq1AiLq5+noR0ikKhXL
PaSjH5GwdJbvSvlG9CPmRW5X+zCVgX5E2K3FuYlnGehHrNdqVfIuZyAfCPxU
X/R1mIF84HLTaMRSYSbygXjX6amW/xjIB5KiXp9mfGYgH6jY3PAnIoKB+T6/
WBrttEYl5vufo7sctkQxMd/vyjLR4stoxXzfWvmClYZuM+b7WocqK+UKGzHf
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
VKmfanKfJs5H8vtYJ/2TEl19tP8H4zwyuQ==
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1mWUlVUUBuAZuru7u7u7m6G7u7u7lFK6wwK7wQKb7u5uBDFAEER8jvPj
WXu/56zFvet+e39M9u5DogbHiIiIiCSepom6UajLc/2PrGAqXzjrTCrOyB/S
lNfkevyr/4mVTONLZ11IzVn5I5rxulyfF/qfWcV0vnLWlTSckz+mOW/IDSKj
v+QOZTUz+FruRlrOy58QxZtyQyLZKa9hJt/I3UnHBflTWvCW3IgY7JLXMott
cg/Sc1H+jJZskhsTk93yOvbph5OP+/Jstut7koFL8ucc04+nGI/kVmzWNyEW
e+T17NePID+/ynP4Vt+LjFyWL6mzqcQW+bg6geL8JbfmbX1TYrNXPqdOpxwb
5APqSAqEz2EZD5xfU+dSjZfk79TeZOIeS7ji/LI6Jzx7KvOQNeHzzNJW9yf0
E3lGCX5jRfjt3D92f0u/MDxbuVb43qwjjtzG8Tv6ZvwdzrjLIva5O6/OoDx/
sIqNzg+qoygYPk++rs6jOi/L36t9yMzVMNec1E+iJE/ktryrb05c9oc5Zy4/
yH3JwrUw57TjPTmKeBwIc8482tOBjrzvrgXxORhmm/lhz+R+ZOV62AU68YHc
kgQcCrPNgrBncn+ycSPsAp3DTsqtSMjhMNsc0o+mEL/LC8Pe6QeQnZthNzil
n0yp8HvLXcLO6luTiCPyBXUmFdgkH1bHUDg8A/mGOp8avCLvUAeSg/ss5Zbz
K2GueEEVHrGWbe5Oq1P4h9LhO7OSWGbiqfvb4d8mUq6tPmZ9eE5y1/De0Lfh
KYn5hcXEcH/U/UX9LJ5TkT9ZzWZ3R9SxFOEBy8O985vqAmryqrxTHURObstX
w2xRle3yGXUqZXgmdwvvJ31bknAs7CZH9eMoykN5Ebv0g8nFnbD3dA/vK7kd
STkedoPF7JaHkJu7YVfpEd5XcnuScSLMM0vYIw8lT/htwj7QM7yf5A4k52SY
Z5bSiy3OOpKCU2GOWUZv+tCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwIT
mcRktvrMTqTkdNgJlrNXHkZe7oW95Kx+GmXD/Mh3wvOiDk/YEBn9/9wUdyVo
TB0aUY3aNKQiValFA8pSgSrUpD6lKEN5KlODehSnGEUpQmEKUZAC5CcfeclD
bnKRkxxkJxtZyUJmMpGRDKQnHWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNs
YhEz4v/XcERJSlOOSlSnbkT03wj/AXGOAgU=
          "]]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1HV4VXUcwOGNjo1u1glsxEZsYxuwhI0eKRKKHYidINjdBbZgoJhggoHd
3YEKdncC6vt98I/3+fx+33t3du45597MhYubDmqWkJCQyJrEnR1LFRWUMpyh
xPua04KWtKI1bWhLO9qTRDId6EgnOtOFrnSjOz3oSS9604e+pJBKGulkkEkW
2eSQSx759KM/AyigkIEMYjBDKGIc1VRSxgiG0UANoxhJCY3UMppyxlPHGCZQ
z0SK429cmD1cmGSm8bT9DmqsL9AN/MgI+331FG7nUwaYjde5HMMq3iHNvExL
KYm/ZTjDGEoxRQxhMIMYSCEFcVz6049GduVoruNtUh0/XxuYw1Fcy1ukeC1P
9+FkbuOTOJ75ON2FI7mGN+lrnqvn8wA/xLma7a0ncStb41zMxupZ3M3Xcf5m
s/VhfmWk/RF6NW/Qxz5Hn2I71fbnaSudwP3W38d1sd5Ld9O2TObROFf9Qyv1
RJ2nzeJzsNZ+hm7RfK3XhdqeqTwe103/0tF6ps7XFjSy3n6mfhX3QGdpa53I
Q9a/UGZ9+P9fnHqusn6d3tbZ+iTbqLI/V+/ju7jH9nvqJn6nwv4EvYWPybOv
0zNYx5fxDJjN1MO4ktfoZZYVzyfLuZmPyDWv1dO5iy/i+TGboYdyBa/S0ywz
rgvLWMOH5JjX6HQO4XJeoYd5hu7O8dzEZrLNq3UaB7OSl+lunh73jaXcyAdk
mVdpE4tZwUt0M0/TMUwlfrwu40W6ei017hVTWMSlvEAXr6XEsxrPVFz/uDbx
+eKc4zzi2HGMeC+d6URHOpDMKCZzIJfwfLzPcZN0AUu4gffJNK/USRzAxTwX
x4znS8/hXr6l2Gy+Hsf1vEeGWYWexp18TmE8W/ogP1Nqv7/+S531RfpsnLN1
O03SJp6w/juumfXZ2jJ+c7jHepZ+o0U6Lz6HtmESj9jP1t+0XI/VuZoY32NW
x/3XdzVdy+O+x/9mCo/Zz9E/49rpqdpcG7jD+jMK4nusG/mJEvv99B9qrS/U
Z+IexPda/wPKeKPm
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1+WbVVUUB+A7oiAgdmFjd2MrdidggdIdM3R3d3eX0h0CUtIgJd3djRIi
5bse/wc/3Q/vs9bv7Jm55+y9z5l7shVKy5l6WSKRCIXTJRJFGHx5IvEVmVgp
D6cL0+Ri3M0+eRZFGSLnJDOr5BF0ZbpcnHvYL/9GMYbKubiK1fJIujFDLkE2
DsizKc4wOTdZWCOPojsz5ZLcy0F5DiXifOWvuZq18miW6avxDGflHnH++lLc
xyF5LiXj/OVvuIZ18hiW66vzLP/IPeN69KW5n8PyPNbp6/MKl8Xfj+tTv+Va
1stjWaGvwXOck3vF9erL8ABH5F1qa95nvrxebcCrpItrphOfxXnEvKjfcR1H
6cYGx7epzXmbcfIfak2e5096cd7xfWr7+NtXJBIfxzwxkIxy75hffVku8iDH
6UF640eN79a3ieuWP1DP0J8r5QXGN+gbconXOEkfLo/5pzOfx/wyKOYi1k79
nuvZKG9XW/AO4+WVai2yc0HuE+uoT+UhjskL2ahvxOtcEdcR66rm4QY2yRPo
G+sop/FwXKO8iNRYNzkvN7JZnkg/0ihHeSpQkXF+5gduYos8if7Ml8vxCCfk
xVRivPwjN7NV/oUBLJDL82islfw7leNc5XzcwjZ5Mqv0tXkh1kgeGNeur8Bj
/CUvYZO+MW/E2lElrkXNz61sl3eoLXmXKfJqtQ4vxvrJ+9UOfBJrFXOkVuTx
uC56xvo6vkdty4f8zQCWOr5ZbULC3sihnqIvGeQM6mG6xN6Qv1DP8ROZ5Kox
n/oCseZkjXWme6yt8R3Gd+pbkSK/p56mH1ONrVHr8lLMCb3jPDhARz6Nz4q1
USvxRJyfvFdtx0csk7eoTXkz9jjVYt3UgtzGTvlX1urr8XKcDz/HOqqVeTLO
LZ4vVI91lAtxO7vimRvP41i3WCee4kw8P6jBFLkwd7A7nrnxPKYmUx0rwp3s
iedrPHupRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pFNftM4ty
F3vlmQxjqVyVp2M/xLOIrfpmvEVGjtCVLzkf80Vm69g5ztdSXemfVd8Uv8/7
tOMA5429qNZnI7/Jh3lIX57FdJFHsp4b5B+ZRB25NrWoSQ2qU42qVKEylahI
BcpTjjRSKUsZSlOKkpSgOMXozAjWcb3P/IGJFJU7MZy1XOdYXiZQRJ7FIR6U
y7GIjvIw1nCtnIfxFJZncpAH5DQW0kEeymqukb9nHIXkGRzgfjmVBbSXT/KU
vjorGSKv4mr9d4yloHyOF/T12MB0OYfanJ3sl+9TyzI/1kt+R23NXv6Su6jH
eJJq/MFgx3vEOK9ygcZsjfOJ7yz2QQf9IbLwD98yhgLGMxjvoz/De6TIbeN8
4mfjlpe76U+QPfYPdVnPNOO91FO8wSWasYN9sV7qEe6lDPNo6/jbaiv28Kf8
hFqVFfwsv6I2Yktco3yV+g2jyS+f5fnYj6zjV3kv2fSlmUsb+QSP66uwnJ/k
FWTWf80o8slT2cM9cinmxLzLg1hOJjk3I+NekKewm7vlksyO65EHsoyMci5G
xP6V85KHlgxgadyfxnIyPPaZPJld3CWXiPuSFnJ/lsQ6yV8xLPaV/DfP6Wuz
ll/kndypL86s2FvyW2pLdnNcfkytzDL6yd1jDXiZhmzmd8fbqwdJz1m+ZGjs
HWPp7Yne+tO8m/LfF+M2seaxj8R0ctf4PJ7lHLVYw6T4d2a8p/4kr3ORpmyP
vWO8o3qYOyjGzNhXjr8Zc8IujsWzQj3Ko1RiKX0df0ltwCYWx+epXzAk9pF8
mmf0NVnNRPk1tQnb4jzk29WizIhzk4/yiL4iS+gjL4r7Q/85g2NPyad4Wl+D
VUyQt3GbvgjT43PkIzysrxDzTW95Ycyd/rO4D2LPyePZSla5MNNoHPcdC2Lq
5U9jb8eek8exhVvlQnFv0EjuyXxS5E8YFPtPHstmbpELMjX2QTxTmJeIX/A9
l4Gx/8QxbOJmuQBTYq5jHzGXS3zk2IDYM/rRbOQmOT+TqS93Yw4X+dCx/rFG
+lFs4EY5X+xr6sldmc0FPoi9G/OeSL6LJd/Fku9iyXex5LtY8l0s+S6WfBdL
vosl38WS72LJd7Hku9jcxP//LvYvG93POA==
          "]]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1ve/jmUcwPFjlq1CkXBsWRnZK1uI7GQeZO8S2sMsmpSZERktKqLMsmfZ
sovQVjS03t9Xf0bPD2+f6/o+x+N+7us+Xk9yyuBWg1InJSWFT/2RgaxpkpK2
6ovUt/5b+1LZ+if9iGaUtD+r79DEOg1jrWvpb9pRN2pLzUh3qtvn1yPaRudr
I01FJ0bbV9fL2kHX6V16LV3pbF9Ov9H2+oE21XQ8a11H/0j932dpZZ05/m3r
bLpNX6KB9T/ajyrWl/RjmlPK/py+yzhqUMDsqL7OQ3ShvNm3uoJJZCK72XZ9
mf5x3dQk2fwLXcDDdCUz15nv0CkMoEXcO7LEGcQ1x3vGz3E9N5CDnOTiRm4i
N3m4mbzxs953p05lYNx/anNLvIfXdukrxMHfHfeMfPHeXtutrzI47h93UND8
mC7kEbrFGcZ1mO/RaQyhNXUpZH5c3+BRusc9jGs236vTGRrnTz0Km5/QRTxG
Styz+Hzmn+kMhtGW0mZf6zLGx/NJEbOTupjH6RHXHPfG/HOdyXDaUcbsvC5n
QjwLFDU7pUt4Is7c/oqupycV7L/TlUyOe2J/VTfFZ437b79PZ9HQOon7ravq
z7omni3ra2hvXVYvxPXoe3qnpqULE+Os9He9Vz+JM9JMpNDQvpiejvuhS7Wx
po7fDZ6MZ05/1Xt0QzxXmoFu9LKvqN/rhzSzTs9zcXb6p26OM4lnyn6/zuYB
qtn/omvpwG32F/V9nqERxc3O6Js8xX3cbvaDruL5OK94Vs0O6GuMiGuNz0EJ
8y/1LZ6md5xPPNfmB3UOD9KRJnEv4rn22iGdy8i4b3FP41ri/biVkpSK5yee
gTiDuH7KUT7OOO5LXCuVqEyVOEPyef/DOo9RdKJpvK/5V/o2Y+gTf9fsR13N
C9Sz/0u30No6Cz2oFueUznOS3r2gF5/ZZ9Z2TLXewJ80tO+v43mP76lidpd2
5WHe4AylzGtodapRNX6WylTidipSgfKU4zbKUobS8R6U5Faa04WHWMjpeM2/
UUKb0ZnRLOBU/B2vFdd+jGM538W/b95Un+cjrlDHrJOO4nVOUsKsmE5hPVdp
YNZXt5POugVjrZfxbXwu+zt1NxmsW/Oc9WouU9v+Xt1EUvwsI62zagfmW5+g
uHVRHa556Mle+4Gaiba8bD9Yc9CFdfZ99Q+tr310qOaiG9vs+2vaOC/G2GfX
jrxr3Vu/iXPRJnqTprDL+lptxWTr6+Nescr6F2rFe+in/EMT+wd1HscpZl9E
X2Itv1PPrLduJY11c562foeL8VzYN9ZJfMjP1DS7R0cwl2MUNSus9/EUb3Mh
ninzRvosK7lEjbjH+gBz+IIiZoW0F0/yFufjeTRvqO25n9c4SmHzgtqTJ3iT
r+PZNW+g7eLMmM0RCpknaw8eZynn4jk3r69tGcYsDlPQvEDcH9rE+TGTQyR7
Lb/m4xbycjN5yB3nxY3kIic5uCHOi+uoS2uGMIODFPCe2fUOWsXzxHQOkN9r
2TSFx1jCWcqa19FnWMFPVDe7Wwcxjf1xnWZZ9UXW8Ftcg1l33UJq62Y8ar2Y
ryhjXzs+R/wcO62vifdmYnyO+P3hA+s++qNW05bxuTQnXfnEvp/+rY11YFyb
ZqE9r8Yzo/viXsY8zkFz04M99gM0I214Ie6lduZj61/jnsXvlW4mVfyfwiPW
2eI5ZZH1l5S2rqU7SB/XygTr9/mBqvH/iG7kLxrZD9BX+DzO2T5zusT34cT3
4cT34cT34cT34cT34cT34cT34cT34cT34f/39+F/AYalcLc=
          "]]]}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
yWej5LNR8tko+WwUz0b/AzkuxmI=
          "]]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1ve/zmUYB/CH7GQ7dkbIyKpUyJ4HWUX2MbI5x0oq2aFhZldaaEcoq4xC
qShCpVJEe2oa0fv6J/rp+eF9Ptd1Ped8n+fc9/19Xt+y/TI6pWdOJBLhmB+5
syYSJbMlEgflEobTUv+vfIP21NH/IjdwHx302XhX3YBq6q/kM3RT5+UedRuZ
iT3qPjRW/y1fo5e6IPPVt8hcDOd9fX9ZjNFcpi8lP5QD5VJ5a8xJZ4S+lbwg
h8o3ZZoszEg66OvKX+Vg+YrsIfNzv7qjzM576r6yCA3V1eVJ+SwTaavPzFvx
ezRR/yNfZwF5uNzskFxGelybema/yVd5gEbUMDsln2MS/chLafPDcjkZdIo1
Ix9lvHZEPsxIbo7PQH4KUJBCFCaFIhSlGMUpEfscaxmfM96Lsq75kXyEUbEP
NI33opzXPpaPMprONKOm+dfyeSbHXsV1uML8E7mCMXShObXMv5EvMIXb4tqU
Nz8qH2Ns7CktuNr8W/kiUxkQ16aC+afycW6nKzeanZYbeTDOLdeYfSdfYlqc
mXgvKpp/Jp9gXJxT6pv9LjcxO84R15p9L9cwnZv0l/C2elCsj/qM3MZD8bm4
0uxz+SR3kKq/KHfRnQb6P+RmeqoLMCf2V+ZgX5wBWZRUdW35Q7yfXBvXkPm4
V91OZmEYe/V9ZAqjGBx7JM/KIXK77C0LkcHC2Ed5adw3fBD7IYszhor6SvKY
fCrWWJ2H8erWMsFudQ8aqv+UW5gb51Gfk/3xu1yn/lG+zAza67PyTny2OBvq
c3IHi2INqWz2hVzJnbFWNDL7S25lHm243uwnuY6ZDI3PTRXzL+Uq7qIXbeO6
VPXacbmau2NdYm/jb+I1rqIa1akR5zzObpzHOFNxLmJf4v+K9+cG6lCXenEW
4xre44R8mgmkxX7F75r/LNczi2Fx1s3Oy50spos+NwfizMsSjKV+rFUOf5fT
9RnPl/pScghPqQ+QR92d29ULeYOLtDHrIgcxgw38Rn3zZrIpTWhMIxrSIF7n
RupRlzrcwPVcR22u5RquphadGci9rOfXuIb3qSnH8hA7uUBr81vkAKazjl/i
/cxryDEsYAf/kmp+s3yEd8gePbepp/EyP8dnNasun+QDLtN3Y7T6E1LU/Ziv
3s55Wuk7yc8oph7Aw+orZAZ71dnid+ivrhjX47D6HlmA3kzVT5WlGcZa/Z3y
p1g/WU3OlFW5gy/0U2RJBvNErJ2swCje10+QuekaM30lOZaP1ZNkYfoyT19W
jmCb+hwt1R3lpxSNtWK5+m2yxmuxFupD5Ff3Yop6DT/GfseZk4+zn0v1tzJS
PZfXOUsLsw5yGW+RJfr4XOrJvMQPcXbif5cZzOE1ztDcvL1cyh4uiZ4+8T/y
It/HuTOrItOZzVb+oZl5O5nGRF7guzij5pXlCB5kC3/HmTe/SfaO/eN5vo3z
bF5JDucBNvMXTczbyl6xHzzHN3H2za+UbejJ3TzL13FPeK2irED5OEuUiz2i
DKW5nFKUpATF4/zFvUEP7uIZTlHL9YrKYdzPJv6ksXmq7B5njac5SU3zIvIx
9pErvgcYqr6PjfxBI7NWcgm7yRxrGfeM+kPyqXvG90583vh7Vqu/ooY6RVaR
4zgW+y1LMIgV+umyfJwZ3os1kjnpHN9f+hmxhozho9g/WSj2nln6abIMw3k1
1kT+LhvKlrJyfOdxVF0k7k8Wx1rLdHapM8V+xz2kPkhedY+4B9WrOEH1uJfk
57EP6oE8qn6XHPFdFfeo+ggF1WnMVL/CaRroW8hFvEkizkzcL+pxrOQ41eL/
y5F87k4+dyefu5PP3cnn7uRzd/K5O/ncnXzuTj53J5+7/4/n7v8AXxej5w==

          "]]]}, {}, {}, {}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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

          "]]]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJzt1vW3VFUYBuARREEwEJDu7lRCaUG6O1RCOkRaWrpbUhoJBcEWsFukUwVR
CRUURTGxnu/PcK354eF9vz2XuTP77HPXydt1YIsBKRKJRLjin4ypE4mSaRKJ
L+UGhtGWRtYSvK0vpi7VzD/JF5jKA+YMHNd70UpPzV79CXro2TitZ6KU/pXc
yHA6mm/lsN6Oxvp1vKMPkPl4XO8mM/OpPlQW5T69uvxZPipflP1kHiYyzfyg
zMhYTpgHy8JMobe5tUzDKD42PywLMIlV5p4yO+P5PPZGFuMOvbQ8K5+kj56L
EXoneRtH9PY00VPwrr6EetQwX5UvMT3+P22s3cQ+fTWZKWM+Jzcxkg7Up6b1
X+TLzKAvWShr/bzcHHsS+0sDspKN7OQgJ7nITR7yko/8FKAghSjn/S7ILYyK
70ZDClPea1/LrYymc5wZaln/Vb7CzLgmFKGC9W/kU4zh/rje1Lb+m9zFLPpT
lDutfyufZmyctdhL7rX+u9zN7DgnFOMu6xflNsbFtaeptZS8py+NmTrmP+Qe
5jCQ4lS0fkluZzxdaGbtet7Xl8Uc94H5T/kqc+PM0NZaWvbrayhBJfN38hkm
xP6Y03NU70pzPRUf6Mvprmfhs3iN+/Rr8rXYEz0v8+JzyUyM46R5iCzCIL2d
TMdoDpgHyYJMZq25l8zBBM6Yh8viTKWkubL8Ps6a3BHnSubmsRDXTN7OGI6Z
H5GF6Ka3kDfwYeypzM8K/SGZlVPxM3H+9b/k68yPvYj7iU/i/Wiv38xBfR2l
qGK+LHcyMfaKltZu5CN9ZczUN/8t32ABgynN3dZ/kM8yKT4TrWhg/R/5Jgtj
LynDPdZ/lM8xmR60pmzcE3H24zzHGY1zF2cnrnfsX3zW+H3xHlSlGtWpQU1q
xZmPcxyv+z1X5PNMoSdtaGj9X/kWixhKB2u3cEhfT289J1/oI2SJ+JtHHXOn
tP4upXOGWMwf5opyMrv1bymsD2W2/jSfksXcgwH6eFazj7TW2tNR70B72tGW
NrSmFS1pQXOa0ZQmNKYRDWlAferRn3Gs4mNu8jvaxefW+zGWJ9hLGuttqavP
4ik+IbO1h+irj2ElH5HaWhvq6DPZyknusNadPvrzfEWe+M6M1i9TQn+UFfqH
3Ki35l79d+7SJ7FL/4ZC+hBm6D9RRh/LFv2eWOeEnkl2o7e+Md6PBfwS31OW
ZwLPmdfJasziS/MymZv+jDJvkLWYx/fmFbI4I1luXiMrM5UPzEvkDbSitrmu
XMRv+p1yIq/oNeQcvtYLysFM169QWh/DZv04GfWu9NKf5QtymfvF/unfUUwf
wTL9fVLpLeOz6y9zgQLmR5imb+IYGcxd6Knv5Aw54zrHd9SX8h7Xm1tQU58a
556j3G7twTjP+oj4/rxLSmvNqaFPievAEdJbeyDOkj6cx3mHFNaaUV2fHPvO
YW6zdn+cJX0Yi3mb66w1jWund2Moi3iLhPUmVI1zwd1UoTKVqBhnK64HFShP
OcrSlSEs5E3+jfvKe5WRXRjMAt7gHxp5rbScxHoOcau1zrEv+g4+J0fcC7H/
+nxe528aWislX+I8+c2D4pzoP1Iq7hfWxfeIM8JB/RbZKfZSry3nc1VfKcsx
nmfMa2MfmMnpuJ4ye9wb8XviM8c1ZS6XzMtlUYbHmTevlpWYwmtxveRfsoEs
KevIhfyqr5IVeIwXzdXlbM7p+eTD8Zr+AyXj/mJtXJs4kxzQb5Yd45rrP8c1
0cexXT9FtrgP4r30ixTRh8Xn11/lGvXNJeQLnCWveWDc8/oa9pPO3CGuk76N
z8ga90H8rD6HPfxJvbjn0yaf4ZPP8Mln+OQzfPIZPvkMn3yGTz7DJ5/hk8/w
yWf4/9sz/H8Fqueo
          "]]]}, {}, {}}, {{}, {}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], 
         LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
          63, 59, 75, 69, 64, 76, 70, 77, 50}]},
        Annotation[#, "Charting`Private`Tag$222475#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwt1HWUlWUQB+C7KyAW2GIhWFgYKCAGCtgFLN2wdO3S3S2ldIeioIIKKg02
3d1LN4gBgiDCM+f4x8PM733P2Xu538yXOzU9JS0pkUjM98976kT1dS7qf2YE
XZjtrCo3s03+iuJ8JL/Bf/pfGElX5jirxi1sl7+mBB/Lb3JJ/yuj6MZcZ9W5
lR3ydEoySX4rviCLlNF0Z55cg9vYKc8ghU/kt0lisTyGHv///1LJwS75G0rx
qfwOySyRx9KTBXJNbidD/pbSTJbf5QqWyuNYoW/GQ5yUe7FQX4s72C1/xwZ9
O57kjFyGKfG7k4ll8nhW6pvzML/JvfleX5s72SPvVnvxAjPljWp7nuJvuSyf
6YuTmeXyDrUbzzJBXqW24JH4HIZxyvl+tS8v00f+Qa3DXZxgCHud71F7x7Pn
RU4zJj4vOZGY5X6TvgMXyMfvjIjfzv1Z94f1A+PZyq/E92YcWeRyjj/Xl+Cf
OOMYg1jhbqfanUL8ySgmOl+ttuTR+Dz5gNqPIrwv/6jW5W72xVyzWd+Rpzkn
l+cLfUmuZGXMOX35Sa5HTvbHnFOBqXIKWVkVc04/KlKJykxzV4qrWB2zTf/Y
M7k+93AgdoEqfCmX5mrWxGwzIPZMbkAuDsYuUDV2Ui7DNayN2WaNvhWP8Yc8
MPZO35DcHIrdYIu+E8/E7y1Xi53Vl+Va1sm71B48x2R5rdqavPEM5INqf4ry
gbxIbcS9nGQoh53vjbniEoU5w1gWuNuqduZf8sd3ZiSZzMR590fib5Mkv6qe
ZXw8J7l6vDf05TjPdRxnMMnu17vP0PfkIs/zF6OZ4m6d2obHOcXwuHd+SB1A
MT6UF6uNuY8j8r6YLV5iobxN7UIBLsg14v2kL082NsRusl7flic4LQ9iiT5e
yPdzNPae1HhfyRXIzsbYDQazVE7nAY7FrlIz3ldyRa5nU8wzQ1gmN+HB+G1i
H6gV7ye5EjewOeaZodRmprPK3MiWmGOGUYe61KM+DWhIIxqTRjpNaEozmtOC
lrSiNW1oSzva04GOdGKWz6zCTWyNnWA4y+Wm5OFE7CXb9V0pGPMjH43nxWuc
YwJZzUFnd5cBEzf26w==
          "]], LineBox[CompressedData["
1:eJwV03lgz2UcwPHfNh2zSSpKtFrSYeuwhEilZbNI2crWNhvTIWqu6CIqpUsX
5agUpaioqBBCjk5HytGFcpfugxzp9fnjtffzPL/57vt7nkdmVZ/C6qREIlHm
R2pyInFESiLxkT7Jpcb/6Y20MP5d59KRLPOt+gYFxincb3yh7tFS/UCv1Jp0
p7X5ifqVXqUvar4mUc4d5q31by3RBdpJD6eSruZN9Sct1ne0gx7CI8YX615d
QqFxevxt49r6sY6infFB7UVL4z90HpeTbb5N32QEF3CSta/1Je6kghxru/Rd
RpLGkdY+0dH0jvemDZnWv9HJDKaSdOpY/1Sf4iauiL2jVpxBvHM8M36Pozia
Y6hLPY7lOOpzPA1oGL/ruZ/p09wc+89FnBDP8NlyHUM1nWPPyIhn+2yFjqVP
7B9tOdn6t/oyQ+gWZxjvYX2ljqMvRVxCI+vf6SvcRffYw3hn66t0PP3i/Mnl
FOsbdApDqYo9i+9n/XN9hv5czZnWtutbPBD3k8bWNupUhtEj3jn2xvpqfZYB
dOEsazt0Bg/GXeBUa5v0Ve6OMzf/RxdyLeea/6yzeDT2xHyfLo3vGvtv/oU+
R55xgluMz9c/dX7cLePDKDY+W3fG++hMvUxrUMFDcVb6r5bp4jgjTaOKPPPT
9PvYD31N22ty/N/gnrhzuluv0UVxrzSVblxn3kx/0dl0ND6Ux+LsdL8uizOJ
O2X+pU5gIK3M/9L3KeEc8x/1bR4mn9Ot/aCvcy/Xc561X3UOj8d5xV21tkaf
Z1C8a3wPzrC+WacxnBvifOJeW1+rL3ArpRTEXsS99tk6nchtsW+xp/Eu8Tya
kEV23J+4A3EG8f40JSfOOPYl3pXmtKBlnCEZnr9eJ3E75XSI51rfotO5j57x
b639pu/xBLnmB/RDioxr0YNW5v8DFz6X3A==
          "]]},
        Annotation[#, "Charting`Private`Tag$222475#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1He8lmMYB/AnlRYhhUgLSTKiUGYhOyqiSKTOKXROe++9995DqVCpSJGm
Qkp7772VIhT6Xn98z3X9nuf9vOe+7+v93IVqpldKy5AkyVR/amVMkk8zJUlF
srNe/oyhfCenUIAj8mJqM1WuRA42yJ8zjIVyKgU5Ki8hhWlyZa5io/wFw/le
rkMhjslLSWW6/DpXs0mewQgWyXUpzHF5GXVivfIb5GSzPJM1+uaU4G95ZKxf
/yG3cUJeTt1Yv1yFa9giz+JXfQse4B95VOxH/xG3c1L+gS36DpThivj+2J/6
JteyVf6StfqWPMhFeXTsV/8xd3BKPqD2oTwr5K1qRx4lY+yZwbwS64hzUd/i
Ok4znG2e71F7UI7Z8jq1FSX5ndFc8vyIOiC+O3OSvBjnxCSyyWPifPX1+I8i
nGEkV3p/2vuD+r6xb/k59QITyCqv9H6bvhP/8xjnGUumOH+GUCHOl0/iLGJ2
alVysV3eq/bkaebI69XWlOJfeWzMUZ/Gnfwm/8h2fWceJ3PsI+aqVuN6dshz
GRdzlNMpGnuUfyIt5ia/TW52yl8xnnTq04CGNGK2z7xDHnbJXzOBFXJ97uKs
/DONmSNX5wZ2y/OYyEq5AcViVvIqmsRa5Xe5kT3yN2zQt+GhmJE8Kfaub8jd
nJN/YYe+C0/E7Ggae1FrcBN75X1qL55hvrxRbcvDMT/5qDqQl2JWcUZqI4rH
vhgV8/X8kNqP5/mLiaz2fKfalcRv40n1D8aRRc6inmRo/DbkV9WLTCa73CzO
U/9ezJy8MWdGxGy93+f9fn1vMsjPqn8yngXebVLb8UicCWNiHRxjEC/H/4rZ
qI25J9YnH1b78wJr5F1qN56K3zjNY27q+9zMfvlbNuvbUzrWw5SYo9qEe2Nt
cb/QIuYo1+QWDsSdG/dxzC3mxH1ciPuDlsyXPyAfB+POjfuYVizwrBa3ciju
17h7aU0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGBz79j9rk5/D
8iKms1puxv3xe4i7iN367pQlG6cYxmtcivMihzkO8dnLGZD0WQ==
          "]], LineBox[CompressedData["
1:eJwV03fATmUYwOGXjET2lhkiq2RvMjOzhazK7PvMbGW0lNkwinY0RCGlrFJZ
hcqWMsuqzLJd9x+X3/087+uc1zmPwj2TWyelSCQSff2RIXUicUeaROJnncUA
Gllf029oSVXrf3QZz9PKOg2bzbUoYz6sC+lkzsRYc1NNwffm7tQ1/6df09Wc
jRnmtnobA9hq3UvzMJjbrfPrL/qYztYOsU8Sj1s31uvaT7/VbpqDgbSyrqb/
ah9drp01C5PND2patph7aC5qm8vqEf2AcTSzTskP8T3qmf/XVcwkIwXs/apz
SIprU93eGf2cF6hDOXtH9UOepCeZKGh/h84lmdbxzMhMIZ/t1NcYSJv4DWQh
K9nITg5ykovc5CEv+eI9x7OM3xn3orBr7tLXGRTvgfvjXhTx2W6dx2DaUZ97
7B/Tj3gq3lVchzvt79H5DKE9DbjX/p/6MeN5JK5NUft79Q2GxjulIeXt/6WL
mMCjcW2K2d+nbzKMjtSwd1ZX8GKcW+6zd1w/YWKcmbgXxe3v17d4Is4pNe2d
0y+YEueICvZO6GIm0dz6FjaYe8fzMV/S1bwUv4u77P2mbzOcJtY3dD0PUcv6
vH5JF3NWpsb71Vv5Mc6A5qaJuaKejPvpkriGZuZpcwtNRX82WnfXnAyiT7wj
vax9dY0+rNlJ5uV4j5o+/t+wLd6H5mUIxa1L6AF9J56xOSMjzA9ogu/Mnalt
vqArmRbn0TodP8V3qWQ+pZ/yDC2tU7MpflucDfMVXcsr8Qwpae93fZeR8ayo
Y++ifsV0mlLZ3mn9jGfpF7+bu+3/oe8xiq40i+tSymcH9X1Gx3OJdxt/Jz6j
NGUoS7k453F24zzGmYpzEe8l/l1xf6pQlWpUj7MY13CPQ7qAMXSL9xXftf+3
LuU5+sdZt3dV1/Eq7a0zsD3OvOZjKDWtbwJ/X6Ng
          "]]},
        Annotation[#, "Charting`Private`Tag$222475#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1GWAFlUYBeDBgMVA7A7E7u5ObMUODGxRsCiVLunuWLoFgzAwABPsAJTu
MgAFEYvn/Hj23HNndvf7Zt6ZStVrVa1ZpiiKUj9qly2KV8sVxd3sxWJ9CiP4
SH+aY9mkf0MdXtPvYW+W6O8yko/1ZziOP/VvqcvrejX2Yan+HqP4RH+W49ms
f0c93tDvZV+W6e/zg3VjzqUso+19Kp/jBP7Sv6c+E/T72I/l+gfMsm7CeZRj
jL3P5POcyJb8DxZYt+YyduEFexPl/ezPCn257MQ1TNVny6acTwlj7c2QtTmJ
v/U1sjs3MktfKNtweY4znIqspx+386LzJskHOICNDGSl/RWyM+VLiuJa+R+j
8pn1aY7PsW6W76pfkOvDUCro5eWv9GZH/RZZRo6Vu8pX/P5M6zq51vrJuZ8M
5h/H1soe3ETh+Bg52/4i2ZYrch4j8vfYQH/u4CXnTZbVOZBV+krZheuYrv8o
m3MhOzDO3ueyLqfwb74fDXhTf5CDWK1/yHga8pa9hziYNZnnzDqNaEwTmtKM
5rztvIc5hLWZ58w6LXjH3iNU4ufMbuaaL/R6nJp7kM9OyzxD+qMcyi+Z1cw1
X+r1OY3/9Z9olWdIf4zKuTeZzRyzbsFFuU9MsPdVZpLTc+2Za2+xbMeV7MbL
ecbk4xzGb/oq2ZXrmaHPlS25mJ1yDn24lYmOf5354ww2MyQzku9OT6oyz3lL
ZHuq5L4wkt35nQH52+bjTrmtHJfPJ1vnmbZ+gu31w+UmBrGzvs7x1dbdcv/1
G3KtGE1Ffabj86xbUaJfIrcwLL/POvpyG9tknuWkvL8yf5yZ/dwXenEz8x1f
KjtwFXvQJu8OWYMjWJ85ZH6uMZdSgcl518kGnJXvygJ7bZlq/SRHsiHzkpnN
u05vyNlsx0J77Zhm/RRH5RpmXjLHtGe6vZoczR+ZhcwsHehIJzrTha50ozs9
6EkvetOHvvSjPwMoZSCDGMwQhjIsz5T/V4tj2JjZyPOQ963eiHNyH1lkb5ns
yNXsmc9JKXfle7oX4zMfcrhztwIvrPJy
          "]], LineBox[CompressedData["
1:eJwV1HeAznUcB/DnkJkys8fZjrtDNMjOHhl3Z5QGsipCF2XvZJWGslOUVUaL
NIlCRjRFW4uWKFS8Pn+8vN+fz3Oee3x/30dy32HdhiYlEolsfxTLm0ik5ksk
vpbPcC896GiXYLv+GK1pYv5TvsQMbjEX5WN9EBl6XvboSxigl+aoXpw0/Ru5
klHcaL6cD/WedNKT2KEPlZV4XO8nS/C5ni1r0kZvKk/J++XL8k5ZkSk8YL5V
FmM8n5hHyupMZ7A5U+ZjDHvNd8sqTGWpeaAsw0SOxdnIFK7Q0+W3chVD9PKM
1m+ShTik96KznoN39QW0pZn5L/kKM+Pvk2WXnw/0ZZSgjvk7+Sz30Zt2NLc/
LV/lQe6gJHXtv5fPxZnE+dKeUpSmDGUpR3kqUJFkKlGZKlSlGvW833G5mjHx
b6MD1bnSaz/INYylT9wZWtifkVuYFc+EGtS3/1GuZRw3x/Ompf3fciuzuYua
NLD/Sa5jfNy1OEuut/9HvsacuCekcJX9z3I9E+LZc4NdTnbqT8RMK/NZuY25
DKMWV9v/Ip9nIrfRxS4Xu/QnY47vgfmcfJ15cWfoYVeAffpyanON+YR8gUlx
PubCHNb70lW/hPf0hfTXS3IkXqONfl6+EWeiJ/NQfC5ZnAl8ar5H1mC43lNe
ylj2m4fLqkzjKfMgWZZJfGkeJWsxg1TztfJk3DW5Ie6VrMDkEM9MFmEcH5lH
yGr007vJ3LwfZyors0i/XZbii/iZuP/6v/JNHo6ziO8Tn8X70UsvyAF9BWk0
NP8qNzIlzorudnnYrS+OmXbm/+RbzGck6TSy/01uYmp8JjJob/+/fJtH4iyp
w3X2v8vNTGMAmdSN70Tc/bjPcUfj3sXdiecd5xefNX5fvAeNaUJTmtGcFnHn
4x7H637PH/JFpjOQLDrYX5Dv8CjZ9La7jIP60wzWy/GVPlrWjv/zaGW+CDG9
sYE=
          "]]},
        Annotation[#, "Charting`Private`Tag$222475#4"]& ], 
       TagBox[
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV1HegVnMYB/BTad0royGVlTQkIlFJkT3aIZtCRlSUESVUaJDW7da9rdve
e2lpadgU0t5776nP88fnfp/nOee89z3n9ztv8cbN6zfLliRJlj+d8ibJjylJ
0oKyHNX/xmz+03egOnnYYtaZpep3uYlj+t+Zwxp9R+4hL1vNurBM/R7lOK7/
gz3q3tShCHPN1sovuZcUtpl1Zbm6JTdzQv8ne9Vp1KUo88zWya+oQSrbzY7K
ATzN9XxjtkK24hZO6v9in7oP9SjGfLP18mvu42KS1CQZLV9lh+PH5ECeoUQ8
I8cny7f51vGf5PuUj+sdmy5PmZ+Vw3mZgubz5Erz/TKd+lxm/r28ipzqCfH9
5ZuysFwgy8gfXLdB3SnO1d8vL5Ez5Q0yn8wmx8jr5GuykJwvS8mdrj+uHsQ1
+mdlfjknro91VE+R78Q6qRfJbq75WX7ArZzWn5MjaMQq/QHZlwZczQKzjbIz
D8R3ZJfZCTmY5yjJd2a/yA+5jTP6v1nIJn0XHuRSdpt151f1R1TgrP4fFtGD
nvSiN2n0IZ2+sc+d35rbOaf/l8Vs1nfloVgH9pj1i32u/piKnNevZglbYl/x
MJez1ywj9rn6E+7g/3if4l1ja+wPHolnzT6zzNjX6jbcGXuNNWYHZT+eiPVh
qdm2WAMepQDZrctY2YT9jp+UWTwfa0z/2OOyLZViP8T3ZySNWev4IZnBk3EP
Pm+2vJZc6onyLa5UL5TLnL891irW1uyxWA85K/YzOdTjZHH5urwi9qksLQ+4
9pR6SHy+/oW4Bzk31l+Wlilyqiwhm8micrG8UQ5w/Ur1p1Qmn9mMeAbxjBnF
K6xz3mGZyVOx98nt3EmyKcsd3yG783i8E1zk+Hj5BgcdPy2H8iJlGGi2Sraj
Stwn682OxDOmYdwzK8x2yh7UjPvnkNmg2Mvqz7gr/h8b4neCXeqe1KIwh80G
x15Wf05VcrIx3j2yYr/qv+DuWCc2xbvDEIYyjOGMYCSjGM0YxjKO8UxgIpOY
zBSmMo3pzGAms2LP+z/tqRbPk83x/rFb3YvasU84YnZGDuOlWDtSPd9psjnF
1Etk2fidc+4FATfwgg==
          "]], LineBox[CompressedData["
1:eJwV02WAlUUYBeCLoFKKomJgEAYI0t3diiCIAopiYlCKBQqodIgYdChhImEn
dhfYHZSBAUrYPufHs+e8s7s3vpmpOHBIz8FFCoXCKD+qlSoUOpUuFP6UTzGd
IVxg7VA+01dwBn3NpXlbX8zY/K25Ihv0h6lOZ/Nf8mlu4gpzFX7Qh3Khfhif
6w8wWq/Nb/qZ9NP34R19omzCHfpIeQK/6NfntfRKbNSnyZY8kt/Jeixkp/kW
2T7/q3eRf8vb5TNyvGzEImaYr5RVmcuP+fyyNUsYZh4kyzObL8xTZPN8Plaa
x8g6zOd3882yLQP0/nJf3tUnyabcqY+SNfhVv4FhemU26Y9Sg67mf+TavCbD
ucja4Xypr+Ks7JO5DOv0JdxITbpZ+1c+y0wu42xqcaLf/Sefy7PicgZSmzrU
pR71aUBDGtGYJjSlGc05yWsVeF6/lRGcQwu6Wy/CC/ptORecmz23th/r9aWM
oyUnW9uDF7Nf2RvOY4C1/XlPX5Y9pBU9rBXlJX0WV3F+nou1sryvL2cCrelp
rRgv67O5movNR/CVvjr3IM/JfAAf6HflTOb5m49ms/4YbTjFvCev6HPy/vrx
bNWv4RL9SL7W1+Qe5DmbD+RD/W6u1WuyLWck+6QfwxZ9umzF4zknsj678pxl
h5wzvZfci1m8mu8qG7M4ZzrfUVZjHj+ZZ8g2LGWk+VJ5FHP4xjxVtsg55UHz
WFmXBezIWZLtWMag7LU8iI/0ybIZ9+jXyVpsz3rOmH4s3+lP5JzqDditt6O3
vjev6fPy/PTq/Jz7wmC9At/qD+Uu5CyZy/Gxfm/uJu051VpxXtfn5xlnn3OW
rB3MJ/p9+a50oI+1EryhL8hnz97RkdOsl+RNfSGj88zoRGe60DX3Lfcq9yHn
Pmc55zNnLuck+5TvmM+W98vrcjp96ZfuPUrxlr6IMfnOOc/WDuFT/X6m5Y6Z
j+N7/cncH70hf+SeyY4sp7/5fxi/xUo=
          "]]},
        Annotation[#, "Charting`Private`Tag$222475#5"]& ]}}], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.3301055496375715`, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[Large]],
  FrameTicks->None,
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->{{0., 0.}, {6., 4.}},
  ImagePadding->All,
  ImageSize->{613., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2.479992498977854, 12.072757256755946`}, {
    0, 1.211159784744381}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Text",
 CellChangeTimes->{{3.709775733797984*^9, 3.709775734573472*^9}, 
   3.711797358196457*^9, 
   3.7132823156588173`*^9},ExpressionUUID->"91ab197e-4ff0-4f08-9974-\
465e93453ae0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d10376ee-01f4-491f-842b-4a9bd2aa536c"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"Outline\"\>", "Section",
         StripOnInput->False],
        BaselinePosition->Center,
        FrameMargins->0,
        FrameStyle->None,
        StripOnInput->False],
       StripOnInput->False], 
      ItemBox[
       DynamicModuleBox[{$CellContext`parentBox$$ = BoxObject[
        32625], $CellContext`attachedCell$$ = CellObject[
        31889], $CellContext`attachTo3$$}, 
        TagBox[
         PaneSelectorBox[{False->
          FrameBox[
           StyleBox["\<\"Prerequisites\"\>",
            StripOnInput->False,
            FontFamily->"Cambria",
            FontSize->Dynamic[
              If[CurrentValue[
                 EvaluationNotebook[], ScreenStyleEnvironment] === 
               "SlideShow", 20, 12]],
            FontWeight->Bold,
            FontColor->GrayLevel[0.5]],
           Alignment->Center,
           Background->RGBColor[0.87, 0.94, 1],
           FrameMargins->5,
           FrameStyle->RGBColor[0.5800000000000001, 0.6266666666666667, 
             Rational[2, 3]],
           ImageSize->Dynamic[
             If[CurrentValue[
                EvaluationNotebook[], ScreenStyleEnvironment] === 
              "SlideShow", {160, 42}, {110, 35}]],
           RoundingRadius->5,
           StripOnInput->False], True->
          FrameBox[
           StyleBox["\<\"Prerequisites\"\>",
            StripOnInput->False,
            FontFamily->"Cambria",
            FontSize->Dynamic[
              If[CurrentValue[
                 EvaluationNotebook[], ScreenStyleEnvironment] === 
               "SlideShow", 20, 12]],
            FontWeight->Bold,
            FontColor->GrayLevel[0.5]],
           Alignment->Center,
           Background->RGBColor[0.88, 1, 0.88],
           FrameMargins->5,
           FrameStyle->RGBColor[0.5866666666666667, 
             Rational[2, 3], 0.5866666666666667],
           ImageSize->Dynamic[
             If[CurrentValue[
                EvaluationNotebook[], ScreenStyleEnvironment] === 
              "SlideShow", {160, 42}, {110, 35}]],
           RoundingRadius->5,
           StripOnInput->False]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->Automatic],
         EventHandlerTag[{
          "MouseEntered" :> ($CellContext`attachedCell$$ = \
$CellContext`attachTo3$$[$CellContext`parentBox$$]; Null), "MouseExited" :> 
           NotebookDelete[$CellContext`attachedCell$$], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
        DynamicModuleValues:>{{
          DownValues[$CellContext`attachTo3$$] = {HoldPattern[
               $CellContext`attachTo3$$[
                Pattern[$CellContext`parentbox$, 
                 Blank[]]]] :> MathLink`CallFrontEnd[
               FrontEnd`AttachCell[$CellContext`parentbox$, 
                ToBoxes[
                 ExpressionCell[
                  Style[
                   Grid[
                    Map[{
                    StringJoin["\[FilledSmallCircle] ", #]}& , {
                    "Familiarity with the Wolfram Language", 
                    "Basic concepts of statistics"}], Alignment -> Left, 
                    Spacings -> {1, 1}], FontSize -> 16, FontFamily -> 
                   "Arial"], StripOnInput -> True, Background -> White, 
                  CellFrameColor -> LightBlue, CellFrameMargins -> 20, 
                  CellFrame -> 2]], {Automatic, {Right, Bottom}}, {
                Right, Top}, "ClosingActions" -> {}]]}}},
        Initialization:>($CellContext`parentBox$$ = 
          EvaluationBox[]; $CellContext`attachTo3$$[
            Pattern[$CellContext`parentbox$, 
             Blank[]]] := MathLink`CallFrontEnd[
            FrontEnd`AttachCell[$CellContext`parentbox$, 
             ToBoxes[
              ExpressionCell[
               Style[
                Grid[
                 Map[{
                   StringJoin["\[FilledSmallCircle] ", #]}& , {
                  "Familiarity with the Wolfram Language", 
                   "Basic concepts of statistics"}], Alignment -> Left, 
                 Spacings -> {1, 1}], FontSize -> 16, FontFamily -> "Arial"], 
               StripOnInput -> True, Background -> White, CellFrameColor -> 
               LightBlue, CellFrameMargins -> 20, CellFrame -> 2]], {
             Automatic, {Right, Bottom}}, {Right, Top}, 
             "ClosingActions" -> {}]])],
       Alignment->Right,
       StripOnInput->False]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {Left, Right}},
    GridBoxItemSize->{"Columns" -> {{"Fit"}}, "Rows" -> {{"Fit"}}}],
   "Grid"],
  ImageSize->Full]],
 CellFrame->{{0, 0}, {0.2, 0}},
 CellMargins->{{60, 50}, {7, 25}},
 GeneratedCell->False,
 CellAutoOverwrite->True,
 CellFrameMargins->0,
 CellFrameColor->GrayLevel[0.7],
 CellChangeTimes->{
  3.7189837339978123`*^9},ExpressionUUID->"07fbde5f-4b62-40a9-bf1a-\
dcd40974d2a4"],

Cell[CellGroupData[{

Cell["Webinar Part 1", "Subsection",
 CellChangeTimes->{{3.692632836328558*^9, 3.6926328485446014`*^9}, {
  3.69377504459628*^9, 3.693775081196045*^9}, {3.6984102710444937`*^9, 
  3.698410278770835*^9}, {3.701112723902215*^9, 3.7011127377568007`*^9}, {
  3.812457153333511*^9, 
  3.81245715717031*^9}},ExpressionUUID->"214af022-0a99-4593-89a5-\
ad7129e21c77"],

Cell[CellGroupData[{

Cell["Distribution Properties", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.8124572636045933`*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"440dc52a-bda6-45f6-8ecf-6e758e89096a"],

Cell["Simulation of Distributions", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.812457272095791*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"13e9c3c4-731b-4171-8ef5-eed3539c1b11"],

Cell["Derived Distributions ", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.812457269722396*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"110c7d55-c7a8-4172-91ac-fe8a553fdca4"],

Cell["Hypothesis Tests", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.8124572687396317`*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"6322c123-026e-4de7-8f95-b4bfa05b4cac"],

Cell["Fitting Data to Distributions", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.8124572681057253`*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"bc2985f7-e241-493d-bb7f-b5f4746757d2"],

Cell["Method of Moments Estimation", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.812457267306801*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"0db01272-ea23-40bb-b5d9-0fcc6b9b014c"],

Cell["Bootstrapping & Confidence Estimation", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373931087231827`*^9, 3.7373931099079103`*^9}, {
  3.7373933553875637`*^9, 3.737393360156201*^9}, {3.740833912639539*^9, 
  3.740833913303686*^9}, {3.7875729744238863`*^9, 3.7875729774158926`*^9}, {
  3.8124572598160877`*^9, 3.812457264460207*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"8d8978f7-175a-482f-8d11-b3ea47228e3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Webinar Part 2", "Subsection",
 CellChangeTimes->{{3.692632836328558*^9, 3.6926328485446014`*^9}, {
  3.69377504459628*^9, 3.693775081196045*^9}, {3.6984102710444937`*^9, 
  3.698410278770835*^9}, {3.701112723902215*^9, 3.7011127377568007`*^9}, {
  3.812457153333511*^9, 
  3.8124571660413494`*^9}},ExpressionUUID->"a888267e-6754-42ae-a3a6-\
b4b74ac09fb5"],

Cell[CellGroupData[{

Cell["Linear Model Fit ", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373933921119223`*^9, 3.737393392712678*^9}, {
   3.737393664905548*^9, 3.7373936661198063`*^9}, {3.740833925094901*^9, 
   3.7408339256871977`*^9}, 3.8124573781638217`*^9},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"4ce4f3c2-4288-47d1-8b4b-744721e1a30e"],

Cell["Nonlinear Model Fit ", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.737393396472041*^9, 3.737393397424333*^9}, {
  3.737393689704707*^9, 3.737393692646912*^9}, {3.740833927206933*^9, 
  3.740833927767302*^9}, {3.812457380253027*^9, 3.8124573905276513`*^9}},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"fbf2c25d-e561-4647-87ee-192848e04286"],

Cell["Fitting Theoretical Models", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.737393708047961*^9, 3.737393734013747*^9}, {
   3.7408339294551163`*^9, 3.740833930023077*^9}, 3.8124573885706882`*^9},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"adbd642e-f701-47d9-9d56-befe3508b9e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Webinar Part 3", "Subsection",
 CellChangeTimes->{{3.692632836328558*^9, 3.6926328485446014`*^9}, {
  3.69377504459628*^9, 3.693775081196045*^9}, {3.6984102710444937`*^9, 
  3.698410278770835*^9}, {3.701112723902215*^9, 3.7011127377568007`*^9}, {
  3.812457153333511*^9, 
  3.8124571708211*^9}},ExpressionUUID->"7bdd6e2e-70d8-45eb-830a-87d2cd29c5f9"],

Cell[CellGroupData[{

Cell["Generalized Linear Models ", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.7373933921119223`*^9, 3.737393392712678*^9}, {
   3.737393664905548*^9, 3.7373936661198063`*^9}, {3.740833925094901*^9, 
   3.7408339256871977`*^9}, 3.812457540270015*^9},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"053fbfea-23f7-4813-8b05-120e8e432976"],

Cell["Piecewise Models", "ItemNumbered",
 CellMargins->{{66, 10}, {2, 2}},
 CellChangeTimes->{{3.737393396472041*^9, 3.737393397424333*^9}, {
   3.737393689704707*^9, 3.737393692646912*^9}, {3.740833927206933*^9, 
   3.740833927767302*^9}, 3.8124575559381065`*^9},
 FontSize->18,
 FontWeight->"Bold",ExpressionUUID->"5910d748-8555-4169-a332-8c6fce1608a0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"97c3ad49-28bc-489b-9514-2d8091368897"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",
 CellChangeTimes->{{3.7009110587352543`*^9, 3.7009110628059874`*^9}, {
  3.7009125686198883`*^9, 3.700912570898864*^9}, {3.7097762241212*^9, 
  3.709776226713389*^9}, {3.7097763183341713`*^9, 3.7097763207469482`*^9}, {
  3.713285445560768*^9, 3.7132854591239324`*^9}, {3.8124575966813583`*^9, 
  3.8124576000471773`*^9}},ExpressionUUID->"41343adb-f3d2-4420-b4a3-\
12bd6c9e8639"],

Cell["\<\
The symbolic architecture of the Wolfram Language\[Trademark] enables a \
uniquely convenient approach to working with statistical models. Starting \
from arbitrary data, the Wolfram Language is able to generate symbolic \
representations of fitted models, from which a full spectrum of results and \
diagnostics can immediately be extracted, visualized or used in other \
computations.\
\>", "Text",
 CellChangeTimes->{
  3.709776312799354*^9, {3.713285017399148*^9, 3.713285052994644*^9}, {
   3.714929868385682*^9, 
   3.714929895626011*^9}},ExpressionUUID->"b6da0379-da25-429c-a943-\
b889064be476"],

Cell[CellGroupData[{

Cell["Linear Model Fit ", "Subsection",
 CellChangeTimes->{{3.7105044494685555`*^9, 
  3.7105044530670433`*^9}},ExpressionUUID->"bc8f99f2-3114-4428-835a-\
39ec97998678"],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["LinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/LinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "269e43fd-443a-42d3-a79b-03ee49ba0bb2"],
 " uses linear regression to fit data to a linear function/model:"
}], "Text",
 CellChangeTimes->{{3.7105044700829396`*^9, 3.710504509330501*^9}, {
   3.713285342790103*^9, 3.7132853463840294`*^9}, 3.7132853771667633`*^9, 
   3.716903314950763*^9, {3.716915635409514*^9, 3.716915654793036*^9}, {
   3.727718940631063*^9, 3.7277189411573*^9}, 
   3.7280691758578005`*^9},ExpressionUUID->"0858e1ec-41e4-40d8-9f5e-\
08213fd55251"],

Cell[CellGroupData[{

Cell["Data imputation: dealing with missing data", "Item",
 CellChangeTimes->{{3.710504515761467*^9, 3.7105045289853587`*^9}, {
  3.7131064035509405`*^9, 
  3.7131064038011513`*^9}},ExpressionUUID->"0471f917-b4d8-4904-b036-\
8ab6d1c6bc97"],

Cell["Data cleaning and fitting", "Item",
 CellChangeTimes->{{3.710504535152788*^9, 3.7105045402731795`*^9}, {
  3.7131064065080137`*^9, 
  3.7131064092115545`*^9}},ExpressionUUID->"a0dba548-11ae-4449-9dfa-\
92eeaea521a1"],

Cell["Visualization and checking goodness of fit", "Item",
 CellChangeTimes->{{3.7105045435297737`*^9, 3.7105045876240826`*^9}, {
  3.7131064116492662`*^9, 
  3.7131064186030035`*^9}},ExpressionUUID->"15d33b6f-5158-4584-ad69-\
2a60a0c9a451"],

Cell["Alternative models", "Item",
 CellChangeTimes->{{3.7105045435297737`*^9, 3.7105045575367007`*^9}, {
   3.7105045958951216`*^9, 3.710504597935466*^9}, {3.7129190977524495`*^9, 
   3.712919098320627*^9}, {3.7131064206500597`*^9, 3.713106420837576*^9}, 
   3.7131065091209855`*^9},ExpressionUUID->"39755786-ba3f-40a5-9483-\
1192b93b3d08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit", "Subsection",
 CellChangeTimes->{{3.710504560576716*^9, 3.710504565400449*^9}, {
  3.71492990428972*^9, 
  3.7149299049681664`*^9}},ExpressionUUID->"7b36510b-3d1a-487a-8d83-\
97b0fabef30e"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "e97740b2-4c9a-4074-901c-f39c0d48a5e0"],
 " function can fit data with any given family of nonlinear functions:"
}], "Text",
 CellChangeTimes->{{3.710504645199028*^9, 3.7105046708618917`*^9}, {
   3.713285409855866*^9, 3.7132854184188113`*^9}, {3.714929912537581*^9, 
   3.7149299177120113`*^9}, 3.716903350506234*^9, {3.7277189435014153`*^9, 
   3.727718944037242*^9}, 
   3.728069179682901*^9},ExpressionUUID->"1438e573-5c90-4acd-83fe-\
39f51d209c1e"],

Cell[CellGroupData[{

Cell["Data cleaning and fitting", "Item",
 CellChangeTimes->{{3.710504535152788*^9, 3.7105045402731795`*^9}, {
  3.713106423369049*^9, 
  3.713106425884897*^9}},ExpressionUUID->"3a87efd3-eae5-48f0-b27f-\
e15bea9ffa5b"],

Cell["Visualization and checking goodness of fit", "Item",
 CellChangeTimes->{{3.7105045435297737`*^9, 3.7105045876240826`*^9}, {
  3.7131064284963584`*^9, 
  3.7131064353521347`*^9}},ExpressionUUID->"04df8d0c-9d60-434c-a93f-\
118250135f98"],

Cell["Robust regression for outliers", "Item",
 CellChangeTimes->{{3.7105046277840757`*^9, 3.7105046377192993`*^9}, 
   3.7131064525886965`*^9},ExpressionUUID->"78e88f0a-47cf-4eb6-92b1-\
ed1ba2ce51e8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting Theoretical Models", "Subsection",
 CellChangeTimes->{{3.7105044494685555`*^9, 3.7105044530670433`*^9}, {
  3.710504691199401*^9, 
  3.71050469689444*^9}},ExpressionUUID->"5844b6f6-6098-4fbe-912f-\
8e91b1fbba5a"],

Cell["\<\
Owing to the symbolic nature of the Wolfram Language, it is possible to fit \
theoretical models using parametric equations. \
\>", "Text",
 CellChangeTimes->{{3.7105047007255106`*^9, 3.7105047149420233`*^9}, {
   3.710504874778803*^9, 3.7105049059941607`*^9}, 3.713106457995416*^9, {
   3.7149299251451*^9, 
   3.714929928151743*^9}},ExpressionUUID->"351365a7-27da-4792-86a5-\
f444650ee4c6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c81bdd2a-e592-40e6-9d4a-f5b5e17498f6"],

Cell[CellGroupData[{

Cell["Model Fitting: Terminology", "Section",
 CellChangeTimes->{{3.7009110587352543`*^9, 3.7009110628059874`*^9}, {
  3.7009125686198883`*^9, 3.700912570898864*^9}, {3.7097762241212*^9, 
  3.709776226713389*^9}, {3.7097763183341713`*^9, 3.7097763207469482`*^9}, {
  3.713285445560768*^9, 
  3.7132854591239324`*^9}},ExpressionUUID->"410ee483-6f75-47df-b34b-\
33f81e7417a2"],

Cell["\<\
Researchers from varied fields use statistics in their work. It is not \
uncommon for statistical concepts to have different names in different \
fields. Before proceeding, common terminology is introduced that will be used \
throughout this course:\
\>", "Text",
 CellChangeTimes->{{3.700912717615545*^9, 3.7009128250135517`*^9}, {
   3.7009129080844746`*^9, 3.7009130238575907`*^9}, {3.700913337245345*^9, 
   3.700913357772579*^9}, {3.700913405623987*^9, 3.7009134056249895`*^9}, {
   3.700913528562766*^9, 3.700913528563769*^9}, 3.709776218709483*^9, 
   3.709776304412751*^9, {3.709776471279751*^9, 3.70977647833527*^9}, {
   3.7132824741353383`*^9, 3.7132824765187626`*^9}, {3.7132825826714582`*^9, 
   3.713282623017189*^9}, {3.7132854697963066`*^9, 3.7132854773279495`*^9}, {
   3.713285522923908*^9, 3.7132855523941307`*^9}, {3.713881408365654*^9, 
   3.7138814088872747`*^9}, {3.7138817493104677`*^9, 3.713881754114751*^9}, 
   3.7149299520655947`*^9, 
   3.72771638757826*^9},ExpressionUUID->"ca46e268-24bc-497d-be64-\
b5c841463d48"],

Cell[TextData[Cell[BoxData[
 FrameBox[
  TemplateBox[{
    GraphicsBox[{{}, {}, {
       RGBColor[1, 0, 0], 
       Thickness[Large], 
       LineBox[CompressedData["
1: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
23yJMQ2H6QpHbf1BRkaWW4pUDGg4YKlN+wNhfdUBqbWqNGwUXN/6ro+MStK2
fo1RIPzAvUK7n9g//MnRC+tp2EvguFQuYXXmrkk6mYYL7h2Qj/1JRpuePKt/
O0PFO+xEoqUHychHffBr1i8qrrt9KvMy4ZelYn2xQ1ScX5dxfZCwUcPl347d
VDzg82ophUJGEfveLJl+o+JWuaJIJuHazlF+lY9UfNyihG5AJfYL85Asu5yK
S47/sWkmnOx/ffPgayoWvWvtKEQjo665av2mQip2qfpubkVY+vIcFD2l4mPz
kutjCLvxq1unZVEx42Ru9wfCT2+5O15Oo+J6Nf7LE4RH16W5n0winu/RuFaG
TkZa2a1n7OKp+Jt2QPIewudVecK2RlHx/Tc3/vkRfl+89arcf1TMJ1JwLInw
spFfIv95Kv7h7fDiJeFdNTkZk2eoeLRDeKqZcJxlz5NuLyrmjwhUGST8uY1c
jF2pmDdy6eBvwiLOuz7kOVHxy2W4+I+wEy2s8ZY9FXdJNaavYhD56vuyLdSS
iu2npUrWEKZO0/uPm1ExK7+xaS1h5f+kWHuMqfi8q1Pf/74/vcJuRkufiqv0
nCb+1774evTyOg0qzrLcz8NF+I9o+SouZSqmVH+TnCaet/3+pBhLlooPlrvp
UQhHKirJf1tHJfLtxoEWwg2FzlvKhKlY5t3AxWLCggZJhtmrqFh4iVaQQti+
smFnHA8V/7dbcSiQ8B2LRZvARQrWfKexxZrwj8/ahw/PUvCcf8IlBcJyjt6e
aJyCcxMbKDPE/J8YyPRXZVKwyFbfA7WEJyb4YjjdFHzw6YbAA4T1Qk2SKN8o
+GshkpEgHPYvKLP5IwXvql6gdBD7gUf456v0DxTskXisZDfhPekilZGlFFyU
sKFunthPN+T3Nvu8oODtEllT+YQldF4PGD2kYBtX8fxFYj8efc8akU+n4PMu
CgYPCWfvlP0jkEzBcn4bhkwJqznEC/VGUbCRJan07AAZBfyokqj5j4KtHNd1
8REu9ZhVeHaegmXmdyikEflgeu640QXiXnngquC2QiJfri6m7nI/TsGOhY0C
OoSbr7bYWh6mYNeJFv4SIt8cUg28pKwouBH1ZOQT+XjyjVDKew0KrnyzY5sP
kc8L1yTba5UpOJ88ENNG5H+is5JIqxwFU74J6mwl/OafacrAWgr+tkjJZ3eS
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
f1pxsHk=
        "]]}}, AspectRatio -> NCache[
       Rational[3, 4], 0.75], Axes -> None, AxesOrigin -> {0, 0}, Epilog -> {
       LineBox[CompressedData["
1:eJxTTMoPSmVmYGDgBmImKIaAH/tTFi3vF1vPcwDGP396JtuezWwHjMHg8/6O
/2FLDsg9tYfxG7h8L82p7d9/9gwIvNkf0vsvLaqK3QHGl3CabVKY/M3eBKz+
8X6f+eXPvPfwOsD49+7MbZtTJQzlX96vff5p8osH3HB++CcflUVW/A4wF/p+
Wzt78m5WOD/v3mIlwWUcDgYQ9fbydzKnJNn/s4fxvb2+9VoKM8Pss58lvz/c
6+B3mHvsD7w5sDp/1QH7MxD32p/IVP21dPF/ON9y29GEaWdZHIwg/rVfY2Zc
Ne8YH5z/ZdkhphORnFD3/LD3+n5pvamnHJy/5Tm3fSC7ggMAAViSjg==
        "]], 
       PointSize[Medium], 
       PointBox[{{-1.5, -3.5854922507317486`}, {-1.2, 
        0.6600039682161745}, {-0.9, 2.934742741244614}, {-0.6000000000000001, 
        3.716941643262464}, {-0.30000000000000004`, 3.484818249178621}, {0., 
        2.71659013390198}, {0.2999999999999998, 1.8904748723414355`}, {
        0.6000000000000001, 1.4846900394058822`}, {0.8999999999999999, 
        1.9774532100042155`}, {1.1999999999999997`, 3.846981959045328}, {1.5, 
        7.571493861438123}}], 
       RGBColor[0, 0, 1], 
       PointBox[{{-1.5, -2.8377609744725087`}, {-1.2, \
-0.015376305740237628`}, {-0.9, 1.3992778830471533`}, {-0.6000000000000001, 
        4.86973772371786}, {-0.30000000000000004`, 3.903629573438859}, {0., 
        3.08108737051571}, {0.2999999999999998, 2.384387120321923}, {
        0.6000000000000001, 0.13020130049139844`}, {0.8999999999999999, 
        2.60038447955483}, {1.1999999999999997`, 3.168838521542847}, {1.5, 
        8.014291734889277}}], {
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "1"], TraditionalForm], {-1.2, 
         0.3223138312379684}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "2"], TraditionalForm], {-0.9, 
         2.1670103121458837`}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "3"], 
          TraditionalForm], {-0.6000000000000001, 
         4.293339683490162}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "4"], 
          TraditionalForm], {-0.30000000000000004`, 
         3.69422391130874}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "5"], TraditionalForm], {0., 
         2.898838752208845}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "6"], TraditionalForm], {
         0.2999999999999998, 2.137430996331679}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "7"], TraditionalForm], {
         0.6000000000000001, 0.8074456699486403}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "8"], TraditionalForm], {
         0.8999999999999999, 2.2889188447795226`}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "9"], TraditionalForm], {
         1.1999999999999997`, 3.5079102402940876`}, {-1.5, 0}], 
        InsetBox[
         FormBox[
          SubscriptBox["\[Epsilon]", "10"], TraditionalForm], {1.5, 
         7.7928927981637}, {-1.5, 0}]}}, Frame -> True, 
     FrameLabel -> {None, None}, FrameTicks -> None, Method -> {}, PlotLabel -> 
     FormBox[
       StyleBox["\"Regression\"", "Text", StripOnInput -> False], 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {Automatic, 0.8}], 
    TemplateBox[{
      StyleBox[
       InterpretationBox[
       "\"fitted \
function\\n\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
OverscriptBox[\\\\\\\\(y\\\\\\\\), \\\\\\\\(^\\\\\\\\)]\\\\\\\\)=f(x)\\\\\\\"\
\\\", Italic, Rule[StripOnInput, False]]\\)\"", 
        StringForm["fitted function\n`1`", 
         Style["\!\(\*OverscriptBox[\(y\), \(^\)]\)=f(x)", Italic]], Editable -> 
        False], "Text", StripOnInput -> False], 
      StyleBox[
       InterpretationBox[
       "\"fitted \
values\\n\\!\\(\\*StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
SubscriptBox[OverscriptBox[\\\\\\\\(y\\\\\\\\), \\\\\\\\(^\\\\\\\\)], \
\\\\\\\\(i\\\\\\\\)]\\\\\\\\)=f(\\\\\\\\!\\\\\\\\(\\\\\\\\*SubscriptBox[\\\\\\\
\\(x\\\\\\\\), \\\\\\\\(i\\\\\\\\)]\\\\\\\\))\\\\\\\"\\\", Italic, \
Rule[StripOnInput, False]]\\)\"", 
        StringForm["fitted values\n`1`", 
         Style[
         "\!\(\*SubscriptBox[OverscriptBox[\(y\), \(^\)], \
\(i\)]\)=f(\!\(\*SubscriptBox[\(x\), \(i\)]\))", Italic]], Editable -> False],
        "Text", StripOnInput -> False], 
      StyleBox[
      "\"observed or\\ndata values\"", "Text", StripOnInput -> False], 
      StyleBox[
      "\"residuals\\nor errors \\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(i\\)]\\)\"", "Text", StripOnInput -> False]}, "SwatchLegend", 
     DisplayFunction -> (FrameBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[
                   InsetBox[
                    GraphicsBox[{
                    Thickness[Large], 
                    LineBox[{{-1, 0}, {1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[1, 0, 0]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    1, PlotRangePadding -> None, AspectRatio -> Full}], 
                    Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                   ImageSize -> {10, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                  GraphicsBox[
                   InsetBox[
                    GraphicsBox[{
                    GrayLevel[0], 
                    PointSize[Medium], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    GrayLevel[0]]}, ImageSize -> {10, 10}, ImagePadding -> 1, 
                    PlotRangePadding -> None, AspectRatio -> Full}], Center, 
                    Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                   ImageSize -> {10, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                  GraphicsBox[
                   InsetBox[
                    GraphicsBox[{
                    RGBColor[0, 0, 1], 
                    PointSize[Medium], 
                    PointBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0, 0, 1]]}, ImageSize -> {10, 10}, ImagePadding -> 
                    1, PlotRangePadding -> None, AspectRatio -> Full}], 
                    Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                   ImageSize -> {10, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                  GraphicsBox[
                   InsetBox[
                    GraphicsBox[{
                    Thickness[Medium], 
                    GrayLevel[0], 
                    LineBox[{{0, -1}, {0, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    GrayLevel[0]]}, ImageSize -> {10, 10}, ImagePadding -> 1, 
                    PlotRangePadding -> None, AspectRatio -> Full}], Center, 
                    Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                   ImageSize -> {10, 10}, PlotRangePadding -> None, 
                   ImagePadding -> 1, 
                   BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.5}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
         False], {FontFamily -> "Times", FontSize -> 8}, StripOnInput -> 
        False], Background -> Automatic, RoundingRadius -> 5, ContentPadding -> 
       True, FrameMargins -> {{5, 5}, {5, 5}}, FrameStyle -> Thickness[0.01], 
       StripOnInput -> False]& ), Editable -> True, 
     InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"RGBColor", "[", 
                RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
              RowBox[{"GrayLevel", "[", "0", "]"}], ",", 
              RowBox[{"RGBColor", "[", 
                RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
              RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"FontSize", "\[Rule]", "8"}], "}"}]}], ",", 
          RowBox[{"LegendFunction", "\[Rule]", "\"Frame\""}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                GraphicsBox[{
                  Thickness[Large], 
                  LineBox[{{-1, 0}, {1, 0}}]}], ",", 
                GraphicsBox[{
                  GrayLevel[0], 
                  PointSize[Medium], 
                  PointBox[{0, 0}]}], ",", 
                GraphicsBox[{
                  RGBColor[0, 0, 1], 
                  PointSize[Medium], 
                  PointBox[{0, 0}]}], ",", 
                GraphicsBox[{
                  Thickness[Medium], 
                  GrayLevel[0], 
                  LineBox[{{0, -1}, {0, 1}}]}]}], "}"}]}]}], "]"}]& )]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],
  RoundingRadius->8,
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.5740888925710907`*^9, 3.5740889255288877`*^9, 3.574088969986732*^9, {
   3.574089058644435*^9, 3.574089077602379*^9}, 3.574089172025147*^9, 
   3.574089234613028*^9, {3.574089270793601*^9, 3.574089294978808*^9}, {
   3.5740893901964207`*^9, 3.57408940385426*^9}, 3.5740894609157667`*^9, 
   3.5740895054568167`*^9, {3.5740895637821827`*^9, 3.574089575604438*^9}, 
   3.574089626183445*^9, {3.574089661230385*^9, 3.5740896805322933`*^9}, 
   3.574089765147064*^9, {3.574089807278755*^9, 3.574089832926322*^9}, 
   3.574089863826577*^9, {3.5740901755213957`*^9, 3.574090192981251*^9}, 
   3.574090286607349*^9, 3.574090480339834*^9, 3.574093608994234*^9, 
   3.574093660452824*^9, 3.574093696319234*^9, {3.5740938536600657`*^9, 
   3.574093870231761*^9}, 3.5740944682449713`*^9, {3.574094602953343*^9, 
   3.5740946151403427`*^9}},ExpressionUUID->"56513897-9600-4792-a9c4-\
a42fac882bcd"]], "Text",
 CellChangeTimes->{{3.700912717615545*^9, 3.7009128250135517`*^9}, {
   3.7009129080844746`*^9, 3.7009130238575907`*^9}, {3.700913337245345*^9, 
   3.700913357772579*^9}, {3.700913405623987*^9, 3.7009134056249895`*^9}, {
   3.700913528562766*^9, 3.700913528563769*^9}, 3.709776218709483*^9, 
   3.709776304412751*^9, {3.709776471279751*^9, 3.70977647833527*^9}, {
   3.7132824741353383`*^9, 3.7132824765187626`*^9}, {3.7132825826714582`*^9, 
   3.713282623017189*^9}, {3.7132854697963066`*^9, 3.7132854773279495`*^9}, {
   3.713285522923908*^9, 3.7132855523941307`*^9}, {3.713881408365654*^9, 
   3.7138814088872747`*^9}, {3.7138817493104677`*^9, 3.713881754114751*^9}, 
   3.7149299520655947`*^9, 3.7277163906039743`*^9, 
   3.727717473041442*^9},ExpressionUUID->"ffc4bee9-faa3-4721-8cad-\
117f9a210ddd"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["The independent variables ", "Item"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "\[RightVector]"], "=", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "1"], ",", "\[Ellipsis]", ",", 
      SubscriptBox["x", "n"]}], "}"}]}], TraditionalForm]],ExpressionUUID->
  "2f0f144c-e5dc-4701-9d09-77487f9d0377"],
 ", the ",
 StyleBox["predictor variables",
  FontSlant->"Italic"],
 ". In the preceding diagram, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "fad4927d-8d46-43e4-a2e0-953edd8e4899"],
 " is a single variable."
}], "Item",
 CellChangeTimes->{{3.713282633127087*^9, 3.713282667097503*^9}, 
   3.716903293862423*^9, {3.7169034304932456`*^9, 3.716903450045169*^9}, 
   3.7169034913072195`*^9, {3.7169035301641026`*^9, 3.7169035442654037`*^9}, {
   3.716903598476633*^9, 3.716903639296012*^9}, {3.71690378982259*^9, 
   3.7169038354177337`*^9}, 3.717096392440809*^9, {3.717155784190874*^9, 
   3.717155877154953*^9}, {3.7171559161414986`*^9, 3.71715592465496*^9}, {
   3.717156125159301*^9, 3.7171561420070353`*^9}, {3.7171562392005897`*^9, 
   3.717156245574023*^9}, {3.717165130768053*^9, 3.71716513379536*^9}, {
   3.718995778980607*^9, 3.718995778980994*^9}, 3.718995809565589*^9, {
   3.718995872427308*^9, 3.718995959366816*^9}, 3.718996164928041*^9, {
   3.727716418745924*^9, 
   3.727716423105742*^9}},ExpressionUUID->"ea6cf37b-4ba8-4312-981b-\
88561f5e6759"],

Cell[TextData[{
 StyleBox["The dependent variable:", "Item"],
 StyleBox[" ", "Item",
  FontFamily->"Times New Roman"],
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath",ExpressionUUID->
  "28b230d8-ba85-4592-b368-3b9b30798b07"],
 StyleBox[", the ", "Item"],
 StyleBox["response variable.", "Item",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.7132826534874315`*^9, 3.713282672113344*^9}, 
   3.714929984517737*^9, {3.716903569547454*^9, 3.7169036045486526`*^9}, {
   3.7169036491417704`*^9, 3.7169036494386873`*^9}, 3.716915129547584*^9, {
   3.717165006820149*^9, 3.717165026314536*^9}, {3.7189961198513117`*^9, 
   3.7189961301660337`*^9}},ExpressionUUID->"0a786e57-3d0c-4ca2-95e9-\
86f12fb4eeee"],

Cell[TextData[{
 StyleBox["Model",
  FontSlant->"Italic"],
 ": the function and optimization criteria (e.g. distributional assumptions) \
used to approximate the behavior suggested by the data. A model will contain \
one or more parameters, to be determined by the fitting process."
}], "Item",
 CellChangeTimes->{{3.7132826841295595`*^9, 3.713282727042342*^9}, {
  3.71492998944606*^9, 3.714930008261015*^9}, {3.727716439553475*^9, 
  3.727716440977509*^9}},ExpressionUUID->"b8eaedc3-04e4-43d1-ab41-\
ab1aa48fa736"],

Cell[TextData[{
 StyleBox["Parameters",
  FontSlant->"Italic"],
 ": the values in the model that are not assumed by the predictor or response \
variables."
}], "Item",
 CellChangeTimes->{
  3.713282765669236*^9, {3.714929991509315*^9, 
   3.714930010932988*^9}},ExpressionUUID->"a2399209-c348-4b7c-be06-\
3164076c6b68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7e5c5a29-7ae9-441d-bd9c-f876c1881429"],

Cell[CellGroupData[{

Cell["Data Imputation", "Section",
 CellChangeTimes->{{3.709819376979863*^9, 
  3.709819380187337*^9}},ExpressionUUID->"63d98070-dc66-4e88-99f8-\
eac8884664be"],

Cell["\<\
In statistics, imputation refers to the process of replacing missing data \
with substituted values. This allows for rectifying the disadvantages of \
deleting the entire row of data if a single value/data point is missing. This \
is especially useful when data is not easily available or collecting it is \
expensive.\
\>", "Text",
 CellChangeTimes->{
  3.709819391699041*^9, {3.7098197295173893`*^9, 3.70981973134807*^9}, {
   3.711379888638729*^9, 3.7113798995601597`*^9}, {3.711380177292741*^9, 
   3.711380381566493*^9}, {3.711380432365452*^9, 3.7113804888971224`*^9}, 
   3.712919908946561*^9, {3.713282859283171*^9, 3.713282861517687*^9}, {
   3.713283197956058*^9, 3.713283302179917*^9}, {3.713284804419957*^9, 
   3.7132848250615916`*^9}, 3.71328495277098*^9, {3.7149300255243273`*^9, 
   3.714930044411974*^9}},ExpressionUUID->"1e0ce35f-e4f5-4e1f-ba68-\
ca27f01b903b"],

Cell["\<\
There are various methods of single imputation. It will be demonstrated here \
with mean substitution. The file breamData.csv contains a subset of data \
about 159 fish taken from Lake Laengelmavesi in the early twentieth century. \
Begin by bringing the data into the Wolfram Language:\
\>", "Text",
 CellChangeTimes->{
  3.709819391699041*^9, {3.7098197295173893`*^9, 3.70981973134807*^9}, {
   3.711379888638729*^9, 3.7113798995601597`*^9}, {3.711380177292741*^9, 
   3.711380381566493*^9}, {3.711380432365452*^9, 3.7113804888971224`*^9}, 
   3.712919908946561*^9, {3.713282859283171*^9, 3.713282861517687*^9}, {
   3.713283197956058*^9, 3.713283302179917*^9}, {3.713284804419957*^9, 
   3.7132848250615916`*^9}, 3.71328495277098*^9, {3.7149300255243273`*^9, 
   3.714930031892411*^9}, {3.7149300758827047`*^9, 3.714930076666531*^9}, {
   3.7149310064067907`*^9, 3.714931014906995*^9}, {3.716903727358485*^9, 
   3.716903728014806*^9}},ExpressionUUID->"3e8b5a97-7685-47e6-8d0b-\
e21eca57176b"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7105997193669796`*^9, 3.7105997293152313`*^9}},
 CellTags->{
  "SetDirectory", 
   "NotebookDirectory"},ExpressionUUID->"41b937b1-073f-4f09-91fe-\
9e7208c7cf43"],

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<*.csv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.573315856922288*^9, 3.57331586142234*^9}, {
  3.573315897519186*^9, 3.573315904260964*^9}},
 CellTags->"FileNames",ExpressionUUID->"aa10cd4b-175f-4741-96ed-dbebe01c6910"],

Cell[BoxData[
 RowBox[{
  RowBox[{"breamDat", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<breamData.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<CSV\>\"", ",", "\"\<Data\>\""}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.710599798929882*^9, 3.7129199238157597`*^9, 
  3.712920697324297*^9},
 CellTags->"Import",ExpressionUUID->"a8abbfee-e2de-4452-bb5e-fd0c6061d262"],

Cell[BoxData[
 RowBox[{"Dataset", "[", "breamDat", "]"}]], "Input",
 CellChangeTimes->{{3.5733161801674337`*^9, 3.573316221638349*^9}, 
   3.573316546739156*^9, {3.573316581134945*^9, 3.573316617840407*^9}, {
   3.573316701810638*^9, 3.573316721307282*^9}, 3.5733167889812717`*^9, {
   3.71059977002763*^9, 3.710599777073247*^9}},
 CellTags->"Dataset",ExpressionUUID->"c0256857-36f9-4c18-b1f5-4f6e90e621b0"],

Cell["\<\
The first thing you notice is that the first column consists entirely of \
ones. You can also see there is an NA in the second column. Also, the last \
row does not seem to be consistent with the others:\
\>", "Text",
 CellChangeTimes->{{3.5733168510846987`*^9, 3.573316918549624*^9}, {
  3.573317748588705*^9, 3.573317766786007*^9}, {3.580032360733803*^9, 
  3.580032384931041*^9}, {3.631644464108568*^9, 3.631644469173711*^9}, {
  3.714930084442691*^9, 
  3.714930086394168*^9}},ExpressionUUID->"679bdfaf-065c-4525-9f5e-\
45b0e3aab5cd"],

Cell[BoxData[
 RowBox[{"breamDat", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.573317772518018*^9, 
  3.573317779221143*^9}},ExpressionUUID->"0cc7f776-9c53-4d5c-9ce6-\
ae1dccc40b9a"],

Cell["\<\
Eliminate the first column and last row and check the dimensions of the \
resulting set:\
\>", "Text",
 CellChangeTimes->{{3.5733169399668694`*^9, 3.573316946654764*^9}, {
   3.5733177972586823`*^9, 3.573317801826724*^9}, {3.573318364986586*^9, 
   3.57331838041687*^9}, 3.5734814398837852`*^9, 3.7098200660939407`*^9, {
   3.712919968725048*^9, 3.712919987748375*^9}, {3.714930091634259*^9, 
   3.7149300921218977`*^9}},ExpressionUUID->"2ab7ab3f-478e-4474-81cc-\
c04363272efd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"breamDat2", "=", " ", 
   RowBox[{"breamDat", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", 
       RowBox[{"-", "2"}]}], ",", 
      RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.57331694985284*^9, 3.573316971440776*^9}, {
  3.573317807365217*^9, 
  3.573317809309355*^9}},ExpressionUUID->"d1586bf0-f630-449d-b2a9-\
da71b06e1fd8"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "breamDat2", "]"}]], "Input",
 CellChangeTimes->{{3.7129205974077797`*^9, 
  3.7129206066111746`*^9}},ExpressionUUID->"bc9f8810-87b7-42db-b584-\
1d1e6ce31d0f"],

Cell[TextData[{
 "Get information about the NA seen in the file. It will either be a symbol \
or a string. Note how the Wolfram Language",
 StyleBox[" ",
  FontSlant->"Italic"],
 "allows you to get several pieces of information at once:"
}], "Text",
 CellChangeTimes->{
  3.7098201030571413`*^9, {3.714930099212818*^9, 
   3.7149300997377357`*^9}},ExpressionUUID->"93060a8f-ff71-47e7-a215-\
d66fc6f77ae0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pos", ",", "#", ",", 
     RowBox[{"Head", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
  RowBox[{"Extract", "[", 
   RowBox[{"breamDat2", ",", 
    RowBox[{"pos", "=", 
     RowBox[{"Position", "[", 
      RowBox[{"breamDat2", ",", 
       RowBox[{"NA", "|", "\"\<NA\>\""}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.573317011005155*^9, 3.5733170464287663`*^9}, {
  3.5733171103008204`*^9, 3.573317234960649*^9}},
 CellTags->{
  "Head", "Extract", 
   "Position"},ExpressionUUID->"d9cac01c-2937-4827-9230-08e82b074571"],

Cell["\<\
Get the information from the first and fourth columns and delete the row with \
the missing value:\
\>", "Text",
 CellChangeTimes->{
  3.709820433263401*^9, {3.714930102945532*^9, 
   3.714930107409439*^9}},ExpressionUUID->"c4b488dd-3175-4e68-ac2d-\
8be611518158"],

Cell[BoxData[
 RowBox[{"fullRows", "=", 
  RowBox[{"Delete", "[", 
   RowBox[{
    RowBox[{"breamDat2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", "14"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.573485339696868*^9, 3.573485376223234*^9}},
 CellTags->{
  "Delete", "All"},ExpressionUUID->"9ceab829-b7d0-4d87-9f0f-0e93380cb0ac"],

Cell["\<\
Next, transpose the data to have it in column form and then divide the first \
column by the second:\
\>", "Text",
 CellChangeTimes->{
  3.7098204443248672`*^9, {3.714930113865156*^9, 
   3.714930118656983*^9}},ExpressionUUID->"f37809f5-4f3a-4866-8fd7-\
45bdd96c0abd"],

Cell[BoxData[
 RowBox[{"cols", "=", 
  RowBox[{"Transpose", "[", "fullRows", "]"}]}]], "Input",
 CellChangeTimes->{{3.573487161591313*^9, 3.573487183936461*^9}},
 CellTags->"Transpose",ExpressionUUID->"ca63c6d5-c6ad-4376-b892-de8f9a22f418"],

Cell[BoxData[
 RowBox[{"rats", "=", 
  RowBox[{"Apply", "[", 
   RowBox[{"Divide", ",", "cols"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5734871925289593`*^9, 3.5734872330638514`*^9}},
 CellTags->{
  "Apply", "Divide"},ExpressionUUID->"ee91cfa5-b032-4e44-bfb8-254f6dca8078"],

Cell[TextData[{
 "This gives an average scaling factor relating the ",
 Cell[BoxData[
  FormBox["L3", $CellContext`MR]],ExpressionUUID->
  "a0fdfb7b-677d-419c-8456-e000fee89225"],
 " dimension to the weight:"
}], "Text",
 CellChangeTimes->{
  3.709820465210327*^9, {3.714930121609132*^9, 
   3.714930122089072*^9}},ExpressionUUID->"0423aa3f-88d9-400b-9da0-\
ae724ed96592"],

Cell[BoxData[
 RowBox[{"mn", "=", 
  RowBox[{"Mean", "[", "rats", "]"}]}]], "Input",
 CellChangeTimes->{{3.573318428813695*^9, 3.573318442754581*^9}, {
  3.5733184910051126`*^9, 3.573318550262409*^9}, {3.5733185964248953`*^9, 
  3.573318605152508*^9}, {3.5733186656265383`*^9, 3.573318681259001*^9}, {
  3.57331875364441*^9, 3.573318761452573*^9}, {3.573319082189335*^9, 
  3.57331908333808*^9}, {3.573487240137426*^9, 3.573487241217864*^9}},
 CellTags->"Mean",ExpressionUUID->"f4483276-9be1-429e-be33-db5165551c7c"],

Cell[TextData[{
 "Replace the N/A in the fourteenth row with the scaled value of ",
 Cell[BoxData[
  FormBox["L3", $CellContext`MR]],ExpressionUUID->
  "e7139952-6959-4f02-bb24-b6a566fee994"],
 " in that row:"
}], "Text",
 CellChangeTimes->{
  3.7098204742932367`*^9, {3.7149301247128687`*^9, 
   3.714930125216887*^9}},ExpressionUUID->"25e2adc2-40e0-4d7a-8a1c-\
c47b0cf9fba0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"breamDat", "[", 
   RowBox[{"[", 
    RowBox[{"14", ",", "2"}], "]"}], "]"}], "=", 
  RowBox[{"N", "@", 
   RowBox[{"Round", "[", 
    RowBox[{"mn", " ", 
     RowBox[{"breamDat2", "[", 
      RowBox[{"[", 
       RowBox[{"14", ",", "4"}], "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5733190471173897`*^9, 3.5733191168756123`*^9}, {
  3.5733191807169523`*^9, 3.5733192012607403`*^9}, {3.7098941097524757`*^9, 
  3.709894112311722*^9}},
 CellTags->{
  "Round", "N"},ExpressionUUID->"7ff9695e-8779-467c-b35f-b4517f35e501"],

Cell[BoxData["breamDat"], "Input",
 CellChangeTimes->{{3.7106067644866643`*^9, 
  3.7106067693294435`*^9}},ExpressionUUID->"7062082e-be69-4836-b128-\
fedde17c8428"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"310e86dc-6262-4899-a2ee-9f2e58b6a196"],

Cell[CellGroupData[{

Cell["Linear Models: Data Cleaning and Fitting ", "Section",
 CellChangeTimes->{{3.7097764941924067`*^9, 3.709776499215884*^9}, {
  3.709894319883507*^9, 
  3.709894336547475*^9}},ExpressionUUID->"a8f0a87f-08cf-4d73-b9a6-\
030a1514f7e7"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["LinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/LinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "8997ac78-7183-4093-aaa0-d5d90a470752"],
 " produces a linear model of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["y", "^"], "=", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "1"], " ", 
      SubscriptBox["f", "1"]}], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "2"], " ", 
      SubscriptBox["f", "2"]}], "+", "\[Ellipsis]"}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"4bc0589a-c539-4841-9f79-ed062d8bb41d"],
 " with given function ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["y", "^"], TraditionalForm]],ExpressionUUID->
  "c0da98eb-ed82-43f6-9976-e981c33a8bdf"],
 " and fitting parameters {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "0"], TraditionalForm]],ExpressionUUID->
  "26263535-2581-44e9-a2dd-fed14bd8ec3e"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],ExpressionUUID->
  "ca9612bd-c607-4431-ba43-3ae77d5dd082"],
 ",\[Ellipsis]}, under the assumption that the original ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "ab064438-42e0-4527-beb3-d082365b063b"],
 " are independent normally distributed with mean ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["y", "i"], "^"], TraditionalForm]],ExpressionUUID->
  "818a0b2c-e272-46ab-8ce4-05676babd819"],
 " and common standard deviation. "
}], "Text",
 CellChangeTimes->{{3.7011929644240627`*^9, 3.701192976555326*^9}, {
   3.712920834013153*^9, 3.7129208340141554`*^9}, {3.7132805183519535`*^9, 
   3.7132805962151628`*^9}, {3.714930132480988*^9, 3.71493015104788*^9}, {
   3.7169037655910187`*^9, 3.716903781156209*^9}, {3.716915826005081*^9, 
   3.71691582941934*^9}, {3.717155896629363*^9, 3.7171559074169765`*^9}, {
   3.7189861437064934`*^9, 3.718986165906083*^9}, {3.71899542941628*^9, 
   3.71899543405728*^9}, {3.718996278742866*^9, 3.718996405914241*^9}, {
   3.7189964458411503`*^9, 3.718996588688862*^9}, {3.718996886586409*^9, 
   3.718996914692663*^9}, 
   3.7280692214832263`*^9},ExpressionUUID->"01566098-efe8-4d49-8453-\
142456bd30ee"],

Cell[CellGroupData[{

Cell["Data Formatting", "Subsection",
 CellChangeTimes->{{3.709894216681848*^9, 
  3.709894227169067*^9}},ExpressionUUID->"55392010-e359-414c-bb39-\
6412b411fc35"],

Cell["\<\
The file fishdata consists of information about a particular species of fish \
found in a lake in Finland. In this exercise, the relationship between the \
weight, the length and the thickness of the fish is investigated:\
\>", "Text",
 CellChangeTimes->{
  3.7002266091714573`*^9, {3.7002275936222267`*^9, 3.7002276426287594`*^9}, {
   3.700227863259342*^9, 3.700227866908949*^9}, 3.7003908314011416`*^9, {
   3.7011068663474436`*^9, 3.7011069996097*^9}, {3.7022134534612274`*^9, 
   3.7022134977642*^9}, 3.712920789003021*^9, 3.7129208676432085`*^9, {
   3.714930187118878*^9, 3.714930208254005*^9}, {3.714931027987809*^9, 
   3.7149310346104927`*^9}},ExpressionUUID->"31199fff-83e0-40d8-992b-\
dbf79d0443f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fishdata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "5.9`", ",", "7.5`", ",", "8.4`", ",", "8.8`", ",", "24.`", ",", 
       "16.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "32.`", ",", "12.5`", ",", "13.7`", ",", "14.7`", ",", "24.`", ",", 
       "13.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "40.`", ",", "13.8`", ",", "15.`", ",", "16.`", ",", "23.9`", ",", 
       "15.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "51.5`", ",", "15.`", ",", "16.2`", ",", "17.2`", ",", "26.7`", ",", 
       "15.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "70.`", ",", "15.7`", ",", "17.4`", ",", "18.5`", ",", "24.8`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "100.`", ",", "16.2`", ",", "18.`", ",", "19.2`", ",", "27.2`", ",", 
       "17.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "78.`", ",", "16.8`", ",", "18.7`", ",", "19.4`", ",", "26.8`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "80.`", ",", "17.2`", ",", "19.`", ",", "20.2`", ",", "27.9`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "17.8`", ",", "19.6`", ",", "20.8`", ",", "24.7`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "85.`", ",", "18.2`", ",", "20.`", ",", "21.`", ",", "24.2`", ",", 
       "13.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "115.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "26.3`", ",", 
       "14.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "125.`", ",", "19.`", ",", "21.`", ",", "22.5`", ",", "25.3`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "19.3`", ",", "21.3`", ",", "22.8`", ",", "28.`", ",", 
       "15.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "120.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "24.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "26.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "135.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "110.`", ",", "20.`", ",", "22.`", ",", "23.5`", ",", "23.5`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "130.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "24.4`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "20.5`", ",", "22.5`", ",", "24.`", ",", "28.3`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "20.7`", ",", "22.7`", ",", "24.2`", ",", "24.6`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "150.`", ",", "21.`", ",", "23.`", ",", "24.5`", ",", "21.3`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "170.`", ",", "21.5`", ",", "23.5`", ",", "25.`", ",", "25.1`", ",", 
       "14.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "225.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "28.6`", ",", 
       "14.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "145.`", ",", "22.`", ",", "24.`", ",", "25.5`", ",", "25.`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "188.`", ",", "22.6`", ",", "24.6`", ",", "26.2`", ",", "25.7`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "180.`", ",", "23.`", ",", "25.`", ",", "26.5`", ",", "24.3`", ",", 
       "13.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "197.`", ",", "23.5`", ",", "25.6`", ",", "27.`", ",", "24.3`", ",", 
       "15.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "218.`", ",", "25.`", ",", "26.5`", ",", "28.`", ",", "25.6`", ",", 
       "14.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "25.2`", ",", "27.3`", ",", "28.7`", ",", "29.`", ",", 
       "17.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "260.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.8`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "265.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "24.4`", ",", 
       "15.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.4`", ",", "27.5`", ",", "28.9`", ",", "25.2`", ",", 
       "15.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "250.`", ",", "25.9`", ",", "28.`", ",", "29.4`", ",", "26.6`", ",", 
       "14.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "300.`", ",", "26.9`", ",", "28.7`", ",", "30.1`", ",", "25.2`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "320.`", ",", "27.8`", ",", "30.`", ",", "31.6`", ",", "24.1`", ",", 
       "15.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "514.`", ",", "30.5`", ",", "32.8`", ",", "34.`", ",", "29.5`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "556.`", ",", "32.`", ",", "34.5`", ",", "36.5`", ",", "28.1`", ",", 
       "17.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "840.`", ",", "32.5`", ",", "35.`", ",", "37.3`", ",", "30.8`", ",", 
       "20.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "685.`", ",", "34.`", ",", "36.5`", ",", "39.`", ",", "27.9`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.`", ",", "36.`", ",", "38.3`", ",", "27.7`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "700.`", ",", "34.5`", ",", "37.`", ",", "39.4`", ",", "27.5`", ",", 
       "15.9`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "690.`", ",", "34.6`", ",", "37.`", ",", "39.3`", ",", "26.9`", ",", 
       "16.2`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "18.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "650.`", ",", "36.5`", ",", "39.`", ",", "41.4`", ",", "26.9`", ",", 
       "14.5`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "36.6`", ",", "39.`", ",", "41.3`", ",", "30.1`", ",", 
       "17.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "850.`", ",", "36.9`", ",", "40.`", ",", "42.3`", ",", "28.2`", ",", 
       "16.8`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "900.`", ",", "37.`", ",", "40.`", ",", "42.5`", ",", "27.6`", ",", 
       "17.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1015.`", ",", "37.`", ",", "40.`", ",", "42.4`", ",", "29.2`", ",", 
       "17.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "820.`", ",", "37.1`", ",", "40.`", ",", "42.5`", ",", "26.2`", ",", 
       "15.6`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "39.`", ",", "42.`", ",", "44.6`", ",", "28.7`", ",", 
       "15.4`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "39.8`", ",", "43.`", ",", "45.2`", ",", "26.4`", ",", 
       "16.1`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1100.`", ",", "40.1`", ",", "43.`", ",", "45.5`", ",", "27.5`", ",", 
       "16.3`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "40.2`", ",", "43.5`", ",", "46.`", ",", "27.4`", ",", 
       "17.7`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1000.`", ",", "41.1`", ",", "44.`", ",", "46.6`", ",", "26.8`", ",", 
       "16.3`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7022134225857115`*^9, 
  3.7022134420160365`*^9}},ExpressionUUID->"1a8fab8b-dd80-46f8-9d5e-\
898b534277ed"],

Cell["\<\
The columns in fishdata are weight, length 1, length 2, length 3, height and \
thickness. The objective is to estimate the weight of a fish from its \
physical dimensions, so it is best to put the weight in the last column. The \
height and the thickness are given as a percent of the third length, L3, so \
you need to compute its absolute value:\
\>", "Text",
 CellChangeTimes->{{3.700227959089693*^9, 3.7002279756721535`*^9}, {
   3.7002280121357813`*^9, 3.7002280949477425`*^9}, 3.701106930371808*^9, {
   3.7022135243796797`*^9, 3.7022135543716683`*^9}, {3.712920894611614*^9, 
   3.7129209172395105`*^9}, {3.7149302173257732`*^9, 
   3.7149302355253353`*^9}, {3.714931051611703*^9, 
   3.7149310519377117`*^9}},ExpressionUUID->"12f93f48-7af2-41bd-8b3d-\
15a9a5b98017"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wrkDat", "=", 
   RowBox[{"fishdata", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "wt_", ",", "L1_", ",", "L2_", ",", "L3_", ",", "ht_", ",", "thk_"}], 
       "}"}], "\[RuleDelayed]", " ", 
      RowBox[{"{", 
       RowBox[{"L1", ",", "L2", ",", "L3", ",", 
        RowBox[{"ht", " ", 
         RowBox[{"L3", "/", "100"}]}], ",", 
        RowBox[{"thk", " ", 
         RowBox[{"L3", "/", "100"}]}], ",", "wt"}], "}"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.574115250356256*^9, 3.5741153905115232`*^9}, {
  3.5741154243389673`*^9, 3.574115459684136*^9}, {3.7106071275536494`*^9, 
  3.710607141915544*^9}},ExpressionUUID->"e243d3a3-eb84-495b-a570-\
680b6a0616bf"],

Cell[TextData[{
 "Begin by looking at the weight as a function of the ",
 Cell[BoxData[
  FormBox["L3", $CellContext`MR]],ExpressionUUID->
  "12b50211-33c9-4d32-a2ba-9e22aad9c4ec"],
 " value:"
}], "Text",
 CellChangeTimes->{{3.574497144486403*^9, 3.57449719009284*^9}, 
   3.577205869282778*^9, 3.632234445729154*^9, {3.714930237597151*^9, 
   3.7149302379970407`*^9}},ExpressionUUID->"ff88e55e-3fd5-4b9a-963c-\
4cb82f83ffa8"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"wrkDat", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5741155183675013`*^9, 3.574115529130734*^9}, {
  3.574115575615367*^9, 3.574115586806817*^9}},
 CellTags->"ListPlot",ExpressionUUID->"6d449d33-9054-499b-90ed-d85e9b9464c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting the Data", "Subsection",
 CellChangeTimes->{{3.709894280554749*^9, 
  3.7098942836150093`*^9}},ExpressionUUID->"7c461a00-b7e5-4aab-b216-\
6ddede68065b"],

Cell[BoxData[
 RowBox[{"?", "LinearModelFit"}]], "Input",
 CellChangeTimes->{{3.5744972923631973`*^9, 3.57449729913105*^9}},
 CellTags->
  "LinearModelFit",ExpressionUUID->"119876ca-eab6-4be9-9a7c-40114ccc8e7a"],

Cell["\<\
This fits the data to a cubic polynomial. Give the fitted model a name for \
use in subsequent investigations:\
\>", "Text",
 CellChangeTimes->{{3.574497263139873*^9, 3.574497285331064*^9}, {
  3.574497340499401*^9, 3.574497340649673*^9}, {3.574497383248187*^9, 
  3.574497415023428*^9}, {3.632234475847549*^9, 3.632234486316608*^9}, {
  3.7149302412288723`*^9, 
  3.714930241692912*^9}},ExpressionUUID->"46b9df65-c616-41a3-9fca-\
f604c7c37422"],

Cell[BoxData[
 RowBox[{"wtEst1", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{"wrkDat", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
    SuperscriptBox["x", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "3"}], "]"}]], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5741154810393*^9, 3.574115498698224*^9}, {
   3.57411559594335*^9, 3.574115624326818*^9}, 3.574497358501102*^9, {
   3.713280675187786*^9, 
   3.7132806756565294`*^9}},ExpressionUUID->"9b82d719-10f4-4389-b1fa-\
092dcd297fe3"],

Cell["Visualize the fit:", "Text",
 CellChangeTimes->{{3.5744974254640217`*^9, 3.574497430735421*^9}, {
  3.714930244356633*^9, 
  3.7149302447967653`*^9}},ExpressionUUID->"4b9d446c-4887-48ea-91ea-\
d79a948c6f7a"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"wtEst1", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "8", ",", "48"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Point", "[", 
      RowBox[{"wrkDat", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.574115634076379*^9, 3.574115705483819*^9}},
 CellTags->{
  "Epilog", "Point"},ExpressionUUID->"bc7bd543-5f35-4d3d-9d0a-263bbbaf9f1b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e549ec9a-a215-4514-ae6d-83b95a5f7e31"],

Cell[CellGroupData[{

Cell["Linear Models: Getting Information about the Fit", "Section",
 CellChangeTimes->{{3.709894419508184*^9, 
  3.709894430111903*^9}},ExpressionUUID->"7469f8ed-2b20-498e-9861-\
b68e2a82388c"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["FittedModel",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FittedModel"],
   FontWeight->"Bold"]],ExpressionUUID->
  "0b9e69c4-b127-4c30-a739-d853d7302b35"],
 " object contains a lot of additional information on the details of the fit. \
Use ",
 Cell[BoxData[
  StyleBox["\"\<Properties\>\"", "MR"]],ExpressionUUID->
  "7f4c8838-ec7a-49f0-a78c-5a288fb11d42"],
 " as an argument to get the properties as a list:"
}], "Text",
 CellChangeTimes->{{3.5744974752478333`*^9, 3.5744975302288513`*^9}, {
   3.577205886765415*^9, 3.577205896773682*^9}, {3.632234510405738*^9, 
   3.63223455088139*^9}, {3.7129209639862356`*^9, 3.7129209660707574`*^9}, {
   3.7132810149075403`*^9, 3.7132810193140097`*^9}, {3.714930266107826*^9, 
   3.714930276363986*^9}, {3.71493153343561*^9, 3.7149315336733627`*^9}, {
   3.716915907915677*^9, 3.71691592193582*^9}, {3.717096511978241*^9, 
   3.717096511978241*^9}, {3.717155961876376*^9, 3.7171559782068253`*^9}, {
   3.718985591203496*^9, 3.718985597194125*^9}, 3.7189859018045244`*^9, 
   3.7280692291524734`*^9},ExpressionUUID->"8028f9f3-f6ce-4a4f-b5ef-\
a4e7d629f438"],

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"NiceTable", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"#", ",", "14", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
     RowBox[{"wtEst1", "[", "\"\<Properties\>\"", "]"}]}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", " ", "12"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", " ", "15"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5741157285843487`*^9, 3.5741157449353333`*^9}, {
   3.574497543181094*^9, 3.5744975485807734`*^9}, {3.574674134839808*^9, 
   3.57467414089755*^9}, 3.5746741720725822`*^9, 3.5746744055535707`*^9, {
   3.5746749966449137`*^9, 3.574675036745542*^9}, {3.574675080496773*^9, 
   3.57467511091928*^9}},
 CellTags->{
  "Framed", "Style", "RoundingRadius", 
   "FrameMargins"},ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5"],

Cell["\<\
Obtain a single property or a list of properties from the fit. Look at the \
ANOVA table and adjusted R-squared values for your fit:\
\>", "Text",
 CellChangeTimes->{{3.574497798663603*^9, 3.5744978248213654`*^9}, {
  3.5746751546314507`*^9, 3.574675162620782*^9}, {3.5802237419926157`*^9, 
  3.580223742247006*^9}, {3.632234547233645*^9, 3.632234559736865*^9}, {
  3.7132811329446054`*^9, 3.713281226324184*^9}, {3.714930279755554*^9, 
  3.714930280227724*^9}},ExpressionUUID->"7901dea6-bd38-4ffc-93ac-\
324c3788ef37"],

Cell[BoxData[
 RowBox[{"wtEst1", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<ANOVATable\>\"", ",", "\"\<AdjustedRSquared\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.574115759751979*^9, 3.574115801631776*^9}},
 CellTags->{
  "ANOVATable", 
   "AdjustedRSquared"},ExpressionUUID->"b30cb504-5602-48a9-a5df-b8d863693308"],

Cell["Visualize the fit with mean prediction bands:", "Text",
 CellChangeTimes->{{3.574497835100936*^9, 3.57449792725882*^9}, {
   3.5772059140672913`*^9, 3.577205917515894*^9}, 3.580223755319927*^9, {
   3.632234569952384*^9, 3.6322345942437983`*^9}, 3.7129224540449524`*^9, {
   3.714930283043562*^9, 
   3.7149302834993963`*^9}},ExpressionUUID->"d8e7ba58-e277-464c-9ec6-\
2956a5481816"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"expr", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"wtEst1", "[", "x", "]"}], "}"}], ",", 
       RowBox[{"wtEst1", "[", "\"\<MeanPredictionBands\>\"", "]"}]}], "]"}]}],
     "}"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"expr", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "8", ",", "48"}], "}"}], ",", 
     RowBox[{"Epilog", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Point", "[", 
        RowBox[{"wrkDat", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"2", "\[Rule]", " ", 
        RowBox[{"{", "3", "}"}]}], "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57411583335773*^9, 3.574116032256115*^9}},
 CellTags->{
  "With", "Join", "MeanPredictionBands", 
   "Filling"},ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2dcf0678-1d37-4d69-80f9-0352ff8d1318"],

Cell[CellGroupData[{

Cell["Linear Models: Alternate Models ", "Section",
 CellChangeTimes->{{3.709895252520546*^9, 
  3.709895259200398*^9}},ExpressionUUID->"05cd86f5-ee47-4fc9-badd-\
9cc8d8efb6fa"],

Cell["\<\
So far, a single predictor variable, length 3, has been selected to model the \
weight of the fish. Adding further predictor variables could, however, \
improve the fit. Now the full dataset will be used to give a select set of \
basis vectors for the model.\
\>", "Text",
 CellChangeTimes->{{3.5745003800232153`*^9, 3.57450050338663*^9}, {
   3.580040883898766*^9, 3.5800408946171227`*^9}, {3.6322346185364447`*^9, 
   3.6322346262855597`*^9}, {3.712922460587431*^9, 3.712922460675685*^9}, 
   3.7132816002174873`*^9, {3.714930288859537*^9, 3.714930298723052*^9}, {
   3.7149310648026247`*^9, 
   3.7149311306788883`*^9}},ExpressionUUID->"9eac0dac-0c8e-43e4-ae14-\
df003c779642"],

Cell["\<\
Start with the same model as before, using only length 3, but the full \
dataset:\
\>", "Text",
 CellChangeTimes->{{3.5745005144742603`*^9, 3.57450053052983*^9}, 
   3.5800409025529327`*^9, 3.6325095345872307`*^9, 3.713281666111343*^9, {
   3.7149303038764*^9, 3.7149303042350483`*^9}, 
   3.714931134462624*^9},ExpressionUUID->"877c84c5-6a85-4448-a41e-\
f89950259a3a"],

Cell[BoxData[
 RowBox[{"wtEst2", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{"wrkDat", ",", 
    SuperscriptBox["L3", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "3"}], "]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"L1", ",", "L2", ",", "L3", ",", "Ht", ",", "Thck"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5744980194273367`*^9, 3.574498098975614*^9}, {
  3.574500788052578*^9, 
  3.5745007892046947`*^9}},ExpressionUUID->"d951bafb-2327-4171-9edd-\
2a97b01f0eef"],

Cell["\<\
Note the only difference is the way in which you ask for the result:\
\>", "Text",
 CellChangeTimes->{{3.574500541873575*^9, 3.574500599767983*^9}, {
  3.622305028759059*^9, 3.622305029063016*^9}, {3.7149303064027853`*^9, 
  3.71493030693858*^9}},ExpressionUUID->"b14f9a89-b116-4bf4-acad-\
bd940d51ad33"],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"wtEst1", "[", "L3", "]"}], ",", 
    RowBox[{"wtEst2", "[", 
     RowBox[{"L1", ",", "L2", ",", "L3", ",", "Ht", ",", "Thck"}], "]"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.574498105938689*^9, 3.574498192677371*^9}, {
  3.574498229204459*^9, 3.5744982446365223`*^9}, {3.574500793964696*^9, 
  3.574500794788652*^9}},
 CellTags->"Column",ExpressionUUID->"bf47ac02-1412-4fbb-86d8-dd2553ff745d"],

Cell[TextData[{
 "Using the information from the previous slide, you can fit several models \
at the same time using the ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/format/Table"],
   FontWeight->"Bold"]],ExpressionUUID->
  "e2f01614-2699-4f97-b387-052970e2a57d"],
 " function:"
}], "Text",
 CellChangeTimes->{{3.574500665893959*^9, 3.574500672301814*^9}, {
   3.574502052175449*^9, 3.574502212991612*^9}, 3.577205929272284*^9, 
   3.580040922011023*^9, {3.632234646358753*^9, 3.632234654487761*^9}, {
   3.6322347079239388`*^9, 3.63223471920094*^9}, 3.713281740833787*^9, {
   3.714930309475028*^9, 3.714930309978846*^9}, 
   3.728069236809653*^9},ExpressionUUID->"91f3b7ce-4f70-4437-adff-\
2d4e5c6c279c"],

Cell[BoxData[
 RowBox[{"multiFit", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"wrkDat", ",", "basis", ",", 
      RowBox[{"{", 
       RowBox[{"L1", ",", "L2", ",", "L3", ",", "Ht", ",", "Thck"}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"basis", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"L3", "^", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "3"}], "]"}]}], ",", 
        RowBox[{"(*", 
         RowBox[{"powers", " ", "of", " ", "length", " ", "3"}], "*)"}], 
        RowBox[{"{", 
         RowBox[{"L3", ",", "Ht"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"length", " ", "3", " ", "and", " ", "height"}], "*)"}], 
        RowBox[{"{", 
         RowBox[{"L3", ",", "Thck"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{"length", " ", "3", " ", "and", " ", "thickness"}], "*)"}], 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"L3", ",", 
           RowBox[{"L3", "^", "2"}], ",", "Ht"}], "}"}], "]"}]}], "}"}]}], 
     "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "some", " ", "powers", " ", "of", " ", "length", " ", "3", " ", "and", " ",
     "height"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.574500679913053*^9, 3.5745008363720713`*^9}, {
  3.574500896923174*^9, 3.57450091364222*^9}, {3.7132817749291787`*^9, 
  3.7132817773824253`*^9}},
 CellTags->{
  "Table", "Flatten"},ExpressionUUID->"1c0e400f-4574-4796-b60b-952ba5c9611c"],

Cell["\<\
The last model in the list accounts for up to 98% of the variation in the \
weights of the fish. The AIC of all the fits can also be compared:\
\>", "Text",
 CellChangeTimes->{{3.574502229887508*^9, 3.57450227688559*^9}, {
  3.713281826353593*^9, 3.71328184582331*^9}, {3.7149311489996557`*^9, 
  3.714931154214159*^9}},ExpressionUUID->"6cc9da2b-ecbf-4543-a664-\
354825e1b41a"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AdjustedRSquared\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.574500943597693*^9, 3.574500993295334*^9}},
 CellTags->"Through",ExpressionUUID->"633d3123-8894-4004-9b59-4dc1399c0a14"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{"multiFit", "[", "\"\<AIC\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.574500943597693*^9, 3.574500993295334*^9}, {
  3.575040403961718*^9, 3.5750404112808867`*^9}},
 CellTags->"AIC",ExpressionUUID->"7947112d-763e-459e-a22f-6d265368532c"],

Cell["\<\
Here are ANOVA tables for the first and last models in your set:\
\>", "Text",
 CellChangeTimes->{{3.5745022868694344`*^9, 3.574502308389065*^9}, {
   3.58004094780235*^9, 3.58004094795181*^9}, 3.632234751801362*^9, {
   3.714930313706571*^9, 
   3.7149303140903482`*^9}},ExpressionUUID->"d75c0ed4-c810-496a-b800-\
8d08697bb636"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"multiFit", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "[", "\"\<ANOVATable\>\"", 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.574500943597693*^9, 3.574500993295334*^9}, {
  3.574501098853878*^9, 3.574501108620476*^9}, {3.574501188755664*^9, 
  3.574501194082047*^9}},ExpressionUUID->"6bc2fc90-7310-46fa-b8f9-\
14bb4c6f978d"],

Cell["Here is a visualization of the last model in the list:", "Text",
 CellChangeTimes->{{3.574502335628119*^9, 3.574502357467629*^9}, {
  3.580223794054636*^9, 3.580223801060253*^9}, {3.714930316170521*^9, 
  3.714930316506383*^9}},ExpressionUUID->"6848c953-c4bd-4f3a-a08c-\
d215113fa128"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"Through", "[", 
       RowBox[{
        RowBox[{"multiFit", "[", 
         RowBox[{"[", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "]"}], "]"}], "[", 
        RowBox[{"0", ",", "0", ",", "L3", ",", "Ht", ",", "0"}], "]"}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"L3", ",", "8", ",", "48"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Ht", ",", "2", ",", "13"}], "}"}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", " ", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"wrkDat", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}]}],
       "}"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.574500943597693*^9, 3.574500993295334*^9}, {
   3.574501098853878*^9, 3.574501108620476*^9}, {3.574501188755664*^9, 
   3.574501194082047*^9}, {3.574501235595072*^9, 3.574501351503277*^9}, 
   3.574501390477683*^9, {3.57450145095607*^9, 3.574501475779708*^9}, {
   3.574501546273782*^9, 3.574501614633355*^9}, {3.574501650216568*^9, 
   3.5745017048624277`*^9}, {3.712922945078848*^9, 3.7129229471022243`*^9}},
 CellTags->{
  "Show", "Plot3D", "Graphics3D", "PointSize", "Medium", 
   "Point"},ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a"],

Cell["\<\
Having decided on a model, simplify things by constructing a model using only \
the necessary variables:\
\>", "Text",
 CellChangeTimes->{{3.574502566990966*^9, 3.574502579533845*^9}, {
   3.574502617734868*^9, 3.57450264642071*^9}, 3.580040959970099*^9, {
   3.632234779359974*^9, 3.632234779773649*^9}, {3.714930320466256*^9, 
   3.7149303210263357`*^9}},ExpressionUUID->"4f7bb0eb-6dd6-49d7-b7e2-\
43a91392bce9"],

Cell[BoxData[
 RowBox[{"wtEst3", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{"wrkDat", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["L3", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "2"}], "]"}]], ",", "Ht"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"L3", ",", "Ht"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.574502656057993*^9, 
  3.574502720644541*^9}},ExpressionUUID->"2be10696-f246-4a2e-b88b-\
6f95f71b3b58"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"wtEst3", "[", "\"\<FitResiduals\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.574502733885272*^9, 3.5745027558269663`*^9}},
 CellTags->
  "FitResiduals",ExpressionUUID->"072da5ca-26c5-4576-b93c-07633b9aea7a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1d33df8a-f70a-4443-8eb3-686178d1fb57"],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit: Data Cleaning", "Section",
 CellChangeTimes->{{3.709898341842739*^9, 3.7098983469876347`*^9}, {
  3.7275371535095844`*^9, 
  3.7275371602860827`*^9}},ExpressionUUID->"0b444378-c129-404d-ac6b-\
5f48c0ffc0d0"],

Cell["\<\
Linear models are fitted using linear algebra, a process that is, in most \
cases, robust and fast. Nonlinear models, on the other hand, require the \
construction of a merit function and then minimizing the merit function based \
on varying a set of parameters present in the model. This process can be slow \
and often requires more attention on the part of the statistician.\
\>", "Text",
 CellChangeTimes->{
  3.7003953941873665`*^9},ExpressionUUID->"cd3ea05a-0201-4cba-80be-\
a7389028619d"],

Cell["\<\
In this example, a file that contains data on yearly production from \
different sources of energy will be imported. Look at the renewable energy \
sources and try to find a relationship that defines the growth in the \
production of renewable sources over time:\
\>", "Text",
 CellChangeTimes->{{3.7011075815572667`*^9, 3.7011076536256943`*^9}, {
   3.7011077015723944`*^9, 3.7011077675298653`*^9}, {3.7011080306976757`*^9, 
   3.701108031265195*^9}, {3.7016232383647976`*^9, 3.701623265643396*^9}, 
   3.7098979325925922`*^9, {3.713281891544282*^9, 3.7132819030917425`*^9}, {
   3.714930351977252*^9, 3.714930352361218*^9}, {3.7149311663431063`*^9, 
   3.714931176453539*^9}, {3.714931606054718*^9, 
   3.7149316062309437`*^9}},ExpressionUUID->"f213d239-1aa5-430c-9505-\
8f7cdcce7b0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"electricData", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<epmxlfile1_1.xls\>\""}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "electricData", "]"}]}], "Input",
 CellChangeTimes->{{3.7008215673436494`*^9, 3.700821586316769*^9}, {
   3.701107442982889*^9, 3.7011074636455884`*^9}, {3.701107517862075*^9, 
   3.7011075696568327`*^9}, {3.701623089919279*^9, 3.701623112117771*^9}, {
   3.7016231707466154`*^9, 3.701623196321854*^9}, {3.709897958955718*^9, 
   3.709897964175449*^9}, 3.7129230262377048`*^9},
 CellTags->
  "Dimensions",ExpressionUUID->"3484267c-b81f-46d1-83b7-e0f16dff14a8"],

Cell["\<\
Here you can look at renewables up through the year 2010. First, determine \
the number of the columns containing the data you want to use. The \
information of interest is in the ninth column:\
\>", "Text",
 CellChangeTimes->{{3.709897971864809*^9, 3.709897980895585*^9}, {
   3.712923040872445*^9, 3.712923065804448*^9}, {3.714930356089006*^9, 
   3.714930356681102*^9}, {3.714931335529326*^9, 3.714931344431781*^9}, 
   3.727716808998617*^9},ExpressionUUID->"f95ab26f-8325-4e02-b373-\
70d03cf2c2b1"],

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"electricData", ",", "\"\<Other Renewables[4]\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709897995671524*^9, 3.7098979964452744`*^9}, 
   3.712949686050824*^9},ExpressionUUID->"20752cdc-a5ec-40b9-8ac5-\
7972a807b2d0"],

Cell["\<\
Referring to the preceding table, select rows 4 through 57 and columns 1 and \
9:\
\>", "Text",
 CellChangeTimes->{
  3.7098980060074177`*^9, {3.71292318988092*^9, 3.7129232012008877`*^9}, {
   3.714930361720986*^9, 3.714930362168787*^9}, {3.727716815996275*^9, 
   3.727716819972183*^9}},ExpressionUUID->"b12a67bc-1659-4c5e-abe6-\
2a7d82f3a5c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"renewables", "=", 
   RowBox[{"electricData", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"4", ";;", "57"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70989801286763*^9, 
  3.70989802464467*^9}},ExpressionUUID->"6f9cb064-45bf-425c-984d-\
565f4f92e598"],

Cell["\<\
Using pattern matching, convert the strings to numbers and extract only the \
yearly totals:\
\>", "Text",
 CellChangeTimes->{
  3.7098980273046923`*^9, {3.714930364272687*^9, 
   3.714930364672759*^9}},ExpressionUUID->"f77a7fe7-086e-468d-9e52-\
005610c16c8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yearTots", "=", 
   RowBox[{"Cases", "[", 
    RowBox[{"renewables", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"_", "?", "NumericQ"}], "|", "\"\<Total\>\""}], ",", 
       RowBox[{"_", "?", "NumericQ"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709898049157715*^9, 3.709898053048707*^9}},
 CellTags->{
  "NumericQ", "Cases"},ExpressionUUID->"6c1676c2-7bb1-4c37-998d-78058f326b6e"],

Cell["\<\
Using replacement rules, \[OpenCurlyDoubleQuote]clean up\
\[CloseCurlyDoubleQuote] the rows corresponding to the years 2006, 2007 and \
2008:\
\>", "Text",
 CellChangeTimes->{
  3.7098980450169697`*^9, 3.7149303714086103`*^9, {3.714931624535316*^9, 
   3.714931625029832*^9}},ExpressionUUID->"2b0fcc51-ac7f-4ceb-a08d-\
23650810b8df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"elecdata", "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"yearTots", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "1"}], "}"}], "\[Rule]", " ", "2006."}], 
       ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1"}], "}"}], "\[Rule]", "2007."}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[Rule]", "2008."}]}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellTags->
  "ReplacePart",ExpressionUUID->"f62ac03c-54ef-40dc-b94e-ecae37487da2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"d42989ad-7606-4b7a-b6db-77b9590b15d8"],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit: Data Fitting", "Section",
 CellChangeTimes->{{3.7003953636438746`*^9, 3.700395374963683*^9}, {
  3.709898353152584*^9, 3.7098983684606667`*^9}, {3.70989851198348*^9, 
  3.709898514515771*^9}},ExpressionUUID->"dcc56c25-67fe-46ff-9976-\
38643f1a7784"],

Cell["\<\
Now that you have cleaned up the data, you can look at the form of the data \
and determine a model. Apart from the year 2001, this looks a lot like \
exponential growth:\
\>", "Text",
 CellChangeTimes->{{3.701623352334812*^9, 3.7016233663986883`*^9}, 
   3.709898072161463*^9, {3.7149316354375267`*^9, 
   3.714931636405764*^9}},ExpressionUUID->"2a088bec-a3a4-4f8e-9a42-\
8005951f7e76"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"elecdata", ",", 
   RowBox[{"Mesh", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.70162332106483*^9, 3.701623336287741*^9}},
 CellTags->"Mesh",ExpressionUUID->"bb2a96bc-6cbb-45a5-aa2d-bef57f3c5e82"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "ac4ef630-f886-4947-bcc6-934415da4aa0"],
 " to see if this gives a reasonable fit to the data. Note the translation of \
the variable by ",
 Cell[BoxData[
  StyleBox["c", "MR"]],ExpressionUUID->"5277e8f4-7f75-4ce2-896f-3567fe598635"],
 ", to get the curve to fit. Raising ",
 Cell[BoxData[
  FormBox["\[ExponentialE]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "7f2fa197-5008-4497-bf4b-7c6632e918c2"],
 " to a large power is going to give misleading information:"
}], "Text",
 CellChangeTimes->{
  3.7098980849785967`*^9, {3.714930398913278*^9, 3.714930399335758*^9}, {
   3.7171559878101254`*^9, 3.717155993269716*^9}, {3.717165715346279*^9, 
   3.717165717893564*^9}, {3.717168252238949*^9, 3.71716826614918*^9}, 
   3.728069246956459*^9},ExpressionUUID->"1759b499-85a9-4a32-9b8a-\
48977a894262"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.7129242103434553`*^9, 
  3.712924217383062*^9}},ExpressionUUID->"73af1767-b145-4690-8271-\
a975ce605be4"],

Cell[BoxData[
 RowBox[{"model", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"elecdata", ",", 
    RowBox[{"a", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"t", "-", "c"}], ")"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1990"}], "}"}]}], "}"}], ",", "t"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.701623290717334*^9},
 CellTags->
  "NonlinearModelFit",ExpressionUUID->"b2639c48-e1fd-4a1d-b680-4b7f3d192b41"],

Cell[BoxData[
 RowBox[{"model", "[", "\"\<BestFit\>\"", "]"}]], "Input",
 CellTags->"BestFit",ExpressionUUID->"dd2032f1-369a-4b82-8a08-38d874fc1df1"],

Cell["The fit appears to be a good one:", "Text",
 CellChangeTimes->{{3.574506892772797*^9, 3.5745069074086447`*^9}, {
  3.7149304014793453`*^9, 
  3.714930401879352*^9}},ExpressionUUID->"ddd3393f-bca0-425a-81fe-\
90de5e7bf846"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"model", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"elecdata", ",", 
     RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.574506628554311*^9, 3.574506635368815*^9}, {
   3.5745067094473867`*^9, 3.574506710071299*^9}, {3.574506762790502*^9, 
   3.574506764324902*^9}, 3.7011078410149817`*^9, 3.701623307922374*^9},
 CellTags->{
  "ListLinePlot", "PlotMarkers", "PlotRange", 
   "PlotStyle"},ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07"],

Cell[TextData[{
 "The property list for ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "de391ad1-4626-4051-b644-53aced9f51b4"],
 ":"
}], "Text",
 CellChangeTimes->{{3.5745069308320312`*^9, 3.5745069429116583`*^9}, {
   3.574507008272293*^9, 3.574507065669055*^9}, 3.577206094637684*^9, 
   3.580041463534367*^9, {3.6322351231184397`*^9, 3.632235140367235*^9}, 
   3.7129232781646366`*^9, 3.7170965439398837`*^9, 
   3.7280692519065332`*^9},ExpressionUUID->"59ee851a-b46f-4734-b91a-\
a0664605654b"],

Cell[BoxData[
 RowBox[{"NiceTable", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"#", ",", "12", ",", "\"\<Text\>\""}], "]"}], "&"}], "/@", 
   RowBox[{"model", "[", "\"\<Properties\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5745069451286697`*^9, 3.574506957072156*^9}, {
  3.574674040529702*^9, 
  3.574674072376213*^9}},ExpressionUUID->"060d38e5-838a-4819-ad3a-\
4b0b4d346924"],

Cell[BoxData[
 RowBox[{"model", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<ANOVATable\>\"", ",", "\"\<FitCurvatureTable\>\"", ",", 
    "\"\<ParameterBias\>\"", ",", "\"\<AICc\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.574507077914085*^9, 3.574507114860363*^9}, {
  3.574507186523142*^9, 3.574507193114949*^9}, {3.5746739505549803`*^9, 
  3.5746739610026197`*^9}, {3.575040871954615*^9, 3.5750408758828278`*^9}},
 CellTags->{
  "FitCurvatureTable", "ParameterBias", 
   "AICc"},ExpressionUUID->"fa1d7830-5c82-4e82-a0c0-f271074b7947"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9057827b-1983-4ece-aad0-cfefc6ac35e8"],

Cell[CellGroupData[{

Cell["Nonlinear Model Fit: Weights", "Section",
 CellChangeTimes->{{3.709901262247566*^9, 3.709901265332047*^9}, {
  3.711380580556613*^9, 
  3.711380593598121*^9}},ExpressionUUID->"1954165d-7aaf-40ca-a909-\
b23221a89cf0"],

Cell[TextData[{
 "In this form of regression, outliers will be dealt with.The value for the \
year 2001 in the data seems inconsistent with the rest of the values; it \
could have been recorded incorrectly, or it could be an outlier. In either \
case, you might want to use robust regression to reduce the influence of that \
observation on the fit. That is done in ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "e74491bd-355f-4e74-aa8f-314b3609c6ba"],
 " using the option ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["Weights",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Weights"],
   FontWeight->"Bold"]],ExpressionUUID->
  "ee0f00b0-e0a4-400d-8e48-68b75a2427e8"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7113805654001303`*^9, 3.7113806624181004`*^9}, 
   3.712924297641531*^9, {3.7149304114161587`*^9, 3.7149304117755337`*^9}, {
   3.714931188823127*^9, 3.714931203604416*^9}, {3.714931663717387*^9, 
   3.714931666524968*^9}, {3.728069256466569*^9, 
   3.728069260794961*^9}},ExpressionUUID->"6b8b335e-7db1-4233-a4c7-\
3a4a617de32a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"errors", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0.1", ",", 
     RowBox[{"Length", "[", "elecdata", "]"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"errors", "[", 
    RowBox[{"[", "8", "]"}], "]"}], "=", "0.5"}], ";"}]], "Input",
 CellChangeTimes->{{3.709903387067561*^9, 3.7099033952346907`*^9}, {
  3.709903440775587*^9, 3.7099034758512907`*^9}, {3.709903525560759*^9, 
  3.7099035310125113`*^9}, {3.7099040802093153`*^9, 3.7099040829862328`*^9}, {
  3.7099067299619627`*^9, 3.709906732007862*^9}, {3.7106073141189194`*^9, 
  3.71060732179417*^9}},
 CellTags->
  "ConstantArray",ExpressionUUID->"7fa4712e-5060-4df4-a90d-115e6c590c98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"model2", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"elecdata", ",", 
     RowBox[{"a", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{"t", "-", "c"}], ")"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1990"}], "}"}]}], "}"}], ",", "t", ",", 
     RowBox[{"Weights", "\[Rule]", " ", 
      RowBox[{"1", "/", 
       RowBox[{"errors", "^", "2"}]}]}], ",", 
     RowBox[{"VarianceEstimatorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "&"}], ")"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.574672941346868*^9, 3.574672994714348*^9}, 
   3.5746732906348343`*^9, {3.709903576452539*^9, 3.7099035854457407`*^9}, {
   3.709903648973621*^9, 3.709903680008596*^9}, {3.709903897786203*^9, 
   3.709903902137003*^9}, {3.709903940955275*^9, 3.709903943419672*^9}, {
   3.710607324030071*^9, 3.7106073279744787`*^9}},
 CellTags->{
  "Weights", 
   "VarianceEstimatorFunction"},ExpressionUUID->"ab35c3de-bbbd-45d0-a383-\
b07f38f16a68"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"model", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"elecdata", ",", 
           RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", 
           RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<model\>\"", ",", "14", ",", "Bold"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"model2", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"elecdata", ",", 
           RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", 
           RowBox[{"PlotMarkers", "\[Rule]", " ", "Automatic"}]}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<model2\>\"", ",", "14", ",", "Bold"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"model2", "[", "t", "]"}], "-", 
         RowBox[{"model", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1993.5", ",", "2008.5"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<model2-model\>\"", ",", "14", ",", "Bold"}], "]"}]}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", 
    RowBox[{"12", " ", "72"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.574506628554311*^9, 3.574506635368815*^9}, {
  3.5745067094473867`*^9, 3.574506710071299*^9}, {3.574506762790502*^9, 
  3.574506764324902*^9}, {3.574673373480187*^9, 3.57467343215285*^9}, {
  3.574673464440749*^9, 3.574673536006858*^9}, {3.574673611166552*^9, 
  3.57467363440466*^9}, {3.574673668461554*^9, 3.5746737584099693`*^9}, {
  3.709909961335363*^9, 3.709909987236804*^9}, {3.7106073518314266`*^9, 
  3.7106073569740267`*^9}, {3.712924341854578*^9, 3.7129243522019725`*^9}},
 CellTags->"ImageSize",ExpressionUUID->"6edff7c5-47a2-4156-bf3d-3cd5e37474ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4876aa59-8ef7-40f6-9576-dd393f68e44e"],

Cell[CellGroupData[{

Cell["Fitting Theoretical Models", "Section",
 CellChangeTimes->{
  3.7099100270333033`*^9},ExpressionUUID->"81528398-8394-472a-a426-\
41addd2d6337"],

Cell[TextData[{
 "In many disciplines\[LongDash]science and engineering, for example\
\[LongDash]you need to test theoretical models. The Wolfram Language provides \
a very nice framework for this task. For example, a first-order approximation \
to the velocity of a rocket at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "18f508c0-8155-410d-a528-be34744c7151"],
 " should satisfy the solution to the differential equation"
}], "Text",
 CellChangeTimes->{{3.574515691798398*^9, 3.574515764572612*^9}, {
   3.5745157958753443`*^9, 3.574515880825392*^9}, {3.580041501932238*^9, 
   3.580041556105547*^9}, {3.580041588010236*^9, 3.5800415925292673`*^9}, 
   3.580223849511405*^9, {3.622382863657496*^9, 3.622382871692624*^9}, {
   3.6224589490751057`*^9, 3.622458968361978*^9}, {3.712924378133649*^9, 
   3.712924385932266*^9}, {3.713281980236122*^9, 3.713281981204949*^9}, {
   3.7132820162379155`*^9, 3.713282017503603*^9}, {3.7132820845693913`*^9, 
   3.7132820871163917`*^9}, {3.714930419968672*^9, 3.7149304485980797`*^9}, 
   3.7149316881720867`*^9},ExpressionUUID->"9a3465a0-465e-4020-9a2a-\
82d2ed63f6a4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     StyleBox["dv",
      FontSlant->"Italic"], 
     StyleBox["dt",
      FontSlant->"Italic"]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]", " ", "s"}], 
      RowBox[{
       SubscriptBox["m", "0"], "\[Minus]", 
       RowBox[{"\[Beta]", " ", "t", " "}]}]], "\[Minus]", "g"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["v", "0"], "=", "0"}]}], TraditionalForm]], "Text",
 CellChangeTimes->{{3.5745159395121193`*^9, 3.574516049294113*^9}, {
   3.574516097660942*^9, 3.574516178155155*^9}, {3.622469101357067*^9, 
   3.622469116555518*^9}, {3.622469178997698*^9, 3.622469181259261*^9}, 
   3.622469480912709*^9, 3.622469893986992*^9, {3.622469978131933*^9, 
   3.622470008880024*^9}, {3.622470060342648*^9, 3.6224700721404257`*^9}, {
   3.622472535347628*^9, 3.622472683187334*^9}, {3.6224727321869335`*^9, 
   3.622472753044134*^9}, 3.622472794726491*^9, {3.62247286160069*^9, 
   3.6224730276552386`*^9}, {3.622562864984652*^9, 3.622562865493453*^9}, {
   3.622562925141635*^9, 3.622562934633963*^9}},
 TextAlignment->Center,ExpressionUUID->"d6857d29-d5ae-4748-b21c-31d00d514281"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["g", TraditionalForm]], "InlineMath",ExpressionUUID->
  "f7b028c4-7817-4bda-a173-bbad139cc646"],
 " is acceleration due to gravity, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "0"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f687397e-00e1-4271-bdc0-b3cfe99483c9"],
 " is initial mass, ",
 Cell[BoxData[
  FormBox["s", TraditionalForm]], "InlineMath",ExpressionUUID->
  "feedaa1e-8b5e-44d5-91b3-2c6127aba74c"],
 " is exhaust velocity and ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "fe230e75-a37a-4f24-bcb2-545f2b177198"],
 " is fuel consumption."
}], "Text",
 CellChangeTimes->{{3.622469234300742*^9, 3.622469286721045*^9}, {
   3.622469321288767*^9, 3.62246933194108*^9}, 3.6224698739919643`*^9, 
   3.727716902349719*^9},ExpressionUUID->"ccda55c0-81dd-4c67-8a0e-\
e83677c72278"],

Cell[TextData[{
 "This model has a symbolic solution, so you could take that approach, but \
more sophisticated models may not have a symbolic solution. You can \
illustrate that situation and assume there is no symbolic solution available. \
Confidence is assumed for estimates of all the parameters except for ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "ea6fbc6f-cb65-4e46-826c-c4e751aeb406"],
 ". You can attempt to estimate ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "fc066023-9d9d-4712-b4b0-b187a98d226c"],
 " from observed (in this case simulated) data."
}], "Text",
 CellChangeTimes->{{3.574516255960846*^9, 3.574516346565818*^9}, {
   3.574516403989689*^9, 3.57451653956909*^9}, {3.5800417051596203`*^9, 
   3.580041727189763*^9}, {3.5802238705197144`*^9, 3.58022387096595*^9}, 
   3.632235870860175*^9},ExpressionUUID->"2335d6ac-06c4-46d3-b535-\
8866ff96e516"],

Cell["Bring in your data:", "Text",
 CellChangeTimes->{{3.5745166085210533`*^9, 3.574516615591178*^9}, 
   3.6322358756258497`*^9, {3.714930476454258*^9, 
   3.714930476892849*^9}},ExpressionUUID->"2458ce90-2951-409f-afa9-\
a004c1dd0e18"],

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<*.dat\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.57451663900394*^9, 3.574516650703594*^9}, {
  3.574516746861292*^9, 
  3.5745167472289248`*^9}},ExpressionUUID->"2a564516-f540-4f61-968d-\
200ac75c9278"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rcktDat", "=", " ", 
   RowBox[{"Import", "[", "\"\<rcktDat.dat\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5745167612698812`*^9, 3.574516808043118*^9}, 
   3.574517233889352*^9},ExpressionUUID->"710eeddc-73f0-4994-a2e1-\
11fd7e23ba0e"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "rcktDat", "]"}]], "Input",
 CellChangeTimes->{{3.5745168140273323`*^9, 
  3.57451682156325*^9}},ExpressionUUID->"8eb16780-e2fb-4a6b-a346-\
abcc7752edea"],

Cell[BoxData[
 RowBox[{"InputForm", "/@", 
  RowBox[{"rcktDat", "[", 
   RowBox[{"[", 
    RowBox[{";;", "3"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.574516842664218*^9, 3.574516851810845*^9}, {
  3.574517194123784*^9, 
  3.5745172154581337`*^9}},ExpressionUUID->"4036b906-3913-4188-8056-\
4ecc4e8812ed"],

Cell[BoxData[
 RowBox[{"rcktDat", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"rcktDat", "/.", 
     RowBox[{"{", 
      RowBox[{"str_String", "\[RuleDelayed]", " ", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"str", ",", "\"\<,\>\""}], "]"}]}]}], "}"}]}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.574517280388726*^9, 3.574517354086685*^9}, {
  3.574517472075526*^9, 3.574517630191543*^9}, {3.5745177758550463`*^9, 
  3.5745177950274963`*^9}, {3.574517862659707*^9, 3.574517917384624*^9}},
 CellTags->{
  "ToExpression", 
   "StringSplit"},ExpressionUUID->"37402914-b043-4250-b4bd-7b4b5f9e69c5"],

Cell[TextData[{
 "Begin by creating a ",
 StyleBox[ButtonBox["ParametricFunction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ParametricFunction"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.574518572560833*^9, 3.574518588062974*^9}, 
   3.57720612038972*^9, {3.622305440300445*^9, 3.622305455931445*^9}, {
   3.714930479181242*^9, 3.714930487524824*^9}, {3.7149317079230337`*^9, 
   3.71493171038767*^9}},ExpressionUUID->"4e9349b9-3150-40ec-bc0d-\
45a659d9d59b"],

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"ParametricNDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["v", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"-", "9.8`"}], "+", 
        FractionBox[
         RowBox[{"700", " ", "\[Beta]"}], 
         RowBox[{"10000", "-", 
          RowBox[{"t", " ", "\[Beta]"}]}]]}]}], ",", 
      RowBox[{
       RowBox[{"v", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "v", 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "60"}], "}"}], ",", 
    RowBox[{"{", "\[Beta]", "}"}]}], "]"}]}]], "Input",
 CellTags->
  "ParametricNDSolve",ExpressionUUID->"37b55b3e-7499-4000-b347-653d6f056f02"],

Cell[TextData[{
 "Use the parametric function in ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["NonlinearModelFit",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NonlinearModelFit"],
   FontWeight->"Bold"]],ExpressionUUID->
  "bf398d57-cbee-44c1-80aa-d87c44e169fc"],
 ". Note the positions of the parameter ",
 Cell[BoxData[
  FormBox["\[Beta]", TraditionalForm]], "InlineMath",ExpressionUUID->
  "9a20e335-593a-4160-9b54-11bfa7d4e7dc"],
 " and the variable ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath",ExpressionUUID->
  "d0d57c72-ca2f-4ec2-8251-c31b5c822511"],
 ":"
}], "Text",
 CellChangeTimes->{{3.5745186193826103`*^9, 3.57451863251793*^9}, {
   3.574518739898943*^9, 3.574518768730098*^9}, 3.577206123869795*^9, {
   3.622305460115377*^9, 3.622305470233088*^9}, {3.622459005293766*^9, 
   3.6224590100904827`*^9}, {3.7149304922769413`*^9, 3.714930492716626*^9}, 
   3.728069270324148*^9},ExpressionUUID->"a6bf2dd3-babe-4646-98e0-\
0e15582ae8b1"],

Cell[BoxData[
 RowBox[{"rcktModl", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"Most", "[", "rcktDat", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "[", "\[Beta]", "]"}], "[", "t", "]"}], "/.", "sol"}], 
     ",", 
     RowBox[{"{", "\[Beta]", "}"}], ",", "t"}], "]"}], "]"}]}]], "Input",
 CellTags->{
  "Quiet", "Most"},ExpressionUUID->"67641744-11c1-4837-ab2c-94885bf93d25"],

Cell["Visualize the results:", "Text",
 CellChangeTimes->{{3.574518652373117*^9, 3.574518657565077*^9}, {
  3.714930497164106*^9, 
  3.71493049761207*^9}},ExpressionUUID->"893be19a-c3ee-4088-8670-\
f9c9bbd46015"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rcktModl", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "60"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", " ", 
    RowBox[{"Point", "[", "rcktDat", "]"}]}]}], "]"}]], "Input",
 CellTags->"Epilog",ExpressionUUID->"8f99edf3-b640-48f8-94be-f8ed620ec933"],

Cell["\<\
As with any fit, you should look at the diagnostics. Even though you have \
obtained your solution using interpolating functions, you still have \
diagnostics available from the fit:\
\>", "Text",
 CellChangeTimes->{{3.5745189548224993`*^9, 3.574519049483317*^9}, 
   3.574678363054573*^9, {3.580041862947578*^9, 3.580041877443399*^9}, {
   3.622305484770434*^9, 3.622305495287649*^9}, {3.7149305009721127`*^9, 
   3.714930501452223*^9}},ExpressionUUID->"f934a287-9239-40f5-bed7-\
cc866cb0b52d"],

Cell[BoxData[
 RowBox[{"rcktModl", "[", "\"\<ANOVATable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.5745131359372177`*^9, 3.574513146613958*^9}, {
   3.574513200270074*^9, 3.5745132194538937`*^9}, 3.5745132499890614`*^9, {
   3.5745134441765633`*^9, 
   3.574513447766715*^9}},ExpressionUUID->"dc42d992-4a3d-45ae-b07c-\
a42a535933b8"],

Cell[BoxData[
 RowBox[{"rcktModl", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<ParameterTable\>\"", ",", "\"\<ParameterBias\>\""}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.574518883930086*^9, 
  3.574518902007907*^9}},ExpressionUUID->"59937c86-cedf-4bc0-8421-\
dae0efe0ba34"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"rcktModl", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", " ", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.574519137586323*^9, 
  3.574519177641295*^9}},ExpressionUUID->"a54f3eca-d091-4612-889b-\
e5ad2f4cdd3e"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"rcktModl", ",", "rcktDat"}], "]"}]], "Input",
 CellChangeTimes->{{3.57468418458876*^9, 
  3.574684219978734*^9}},ExpressionUUID->"59041c19-b8e0-4e91-a0e0-\
f9d5b0d3984d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4b49a26d-26ca-4c6d-a401-2a8b9be62480"],

Cell[CellGroupData[{

Cell["Glossary", "Section",ExpressionUUID->"6df815f8-597e-4217-a474-47b23a9d8382"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ButtonBox[
      StyleBox["\<\"AdjustedRSquared\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AdjustedRSquared"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AIC\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AIC"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"AICc\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["AICc"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"All\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["All"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ANOVATable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ANOVATable"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Apply\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Apply"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"BestFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["BestFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Cases\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Cases"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Column\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Column"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ConstantArray\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ConstantArray"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Dataset\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Dataset"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Delete\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Delete"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Dimensions\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Dimensions"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Divide\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Divide"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Epilog\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Epilog"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Extract\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Extract"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FileNames\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FileNames"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Filling\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Filling"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"First\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["First"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FitCurvatureTable\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitCurvatureTable"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"FitResiduals\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FitResiduals"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Flatten\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Flatten"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Framed\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Framed"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"FrameMargins\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["FrameMargins"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GatherBy\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GatherBy"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Graphics3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Graphics3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"GraphicsRow\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["GraphicsRow"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Head\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Head"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ImageSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ImageSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Import\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Import"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Join\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Join"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Length\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Length"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"LinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["LinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListLinePlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListLinePlot"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ListPlot\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ListPlot"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Map\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Map"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Mean\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Mean"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"MeanPredictionBands\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["MeanPredictionBands"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Medium\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Medium"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Mesh\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Mesh"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Most\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Most"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"N\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["N"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NonlinearModelFit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NonlinearModelFit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NotebookDirectory\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NotebookDirectory"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"NumericQ\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["NumericQ"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"ParameterBias\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParameterBias"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ParametricNDSolve\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ParametricNDSolve"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Plot3D\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Plot3D"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotMarkers\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotMarkers"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PlotRange\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotRange"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"PlotStyle\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PlotStyle"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Point\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Point"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"PointSize\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["PointSize"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Position\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Position"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Quiet\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Quiet"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"ReplaceAll\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ReplaceAll"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ReplacePart\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ReplacePart"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Round\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Round"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"RoundingRadius\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["RoundingRadius"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"SetDirectory\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["SetDirectory"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Short\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Short"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Show\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Show"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"StringSplit\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["StringSplit"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Style\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Style"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Table\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Table"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"Through\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Through"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"ToExpression\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["ToExpression"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Transpose\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Transpose"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"VarianceEstimatorFunction\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["VarianceEstimatorFunction"],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox[
      StyleBox["\<\"Weights\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["Weights"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      StyleBox["\<\"With\"\>", "Hyperlink",
       StripOnInput->False],
      Appearance->None,
      ButtonFunction:>NotebookLocate["With"],
      Evaluator->Automatic,
      Method->"Preemptive"], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7106054959030724`*^9},ExpressionUUID->"f199cf4a-acc6-4b5b-b247-\
23489b06bdca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2c92a90c-ea40-49dc-a6c7-5b06f3570df8"],

Cell[CellGroupData[{

Cell["Review Exercises", "Section",ExpressionUUID->"7db081a2-0183-4932-8c7c-13ee92c60d90"],

Cell["Provided Separately", "Subsubsection",
 CellChangeTimes->{{3.8128910490018115`*^9, 
  3.81289105244899*^9}},ExpressionUUID->"d42162d7-9dff-4b95-8783-\
f2d24c4cdf7e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b6dce450-a684-4b08-b227-0ebb856e8df5"],

Cell[CellGroupData[{

Cell["Initialize Cells", "Section",
 CellChangeTimes->{{3.710607192192216*^9, 
  3.710607196304086*^9}},ExpressionUUID->"938ef96c-0222-42e8-a497-\
d66828945349"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NiceTable", "[", 
   RowBox[{"lis_List", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "Grid", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"lis", ",", "4", ",", "4", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", "\"\<\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"opts", ",", 
      RowBox[{"Alignment", "\[Rule]", " ", "Left"}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->
  True,ExpressionUUID->"01a2d017-f187-4a71-a271-83cfb061a531"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1140.6, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.75 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Note"], CellMargins -> {{60, 10}, {7, 7}}, CellOpen -> True,
        LineSpacing -> {1, 3}, CounterIncrements -> "Note", MenuSortingValue -> 
       8, MenuCommandKey :> "n", FontFamily -> "Helvetica", FontSize -> 12, 
       FontSlant -> "Italic", Background -> GrayLevel[0.85]], 
      Cell[
       StyleData[
       "Note", "SlideShow", StyleDefinitions -> 
        StyleData["Note", "Presentation"]], CellOpen -> False, Background -> 
       None]}, Open]], 
   Cell[
    StyleData["Title"], FontSize -> 81, FontColor -> 
    RGBColor[0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
   Cell[
    StyleData["Subtitle"], FontFamily -> "Source Sans", FontSize -> 40, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[1., 0.42745098039215684`, 0.]], 
   Cell[
    StyleData["Section"], FontFamily -> "Source Sans", FontSize -> 70, 
    FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
   Cell[
    StyleData["Subsection"], FontSize -> 40, FontColor -> 
    RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
      RGBColor[1., 0.42745098039215684`, 0.]]], 
   Cell[
    StyleData["Subitem"], CellDingbat -> 
    StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
      RGBColor[1., 0.592156862745098, 0.10196078431372549`]]]}, Visible -> 
  False, FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (June 19, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
presentertemplt`firstslideimage -> Image[CompressedData["
1:eJzt3UmudOtVreFDUqBIF5BL0AKqFKkaIcq2MBYVI9lIiF7QEMDkeZ7n0CNz
flmW5eO9IlYykzHmfAuTey+6hR0r9ol4/jHm9+2f+uqvfflXfvSzzz771k98
/j++/JXf+LlvfvMrv/kLP/n5/+MXv/GtX/36N772yz//jV//2te/9s2f/eqP
ff6//K0f+eyzX/r8//+Pf/5//853vvPZp/+DYRiGYRiGeTbfc9Vvf+lnmID5
nS/99OH87pv59pv5vRfz+yfmDz7/+d7NH76ZPzoxf3xy/uTC/OmF+bOL8+c3
5y+C5i+D56+Y1ol+P6N+z+78jl/9b+nTXPlv9ex//2c/U858Pn2ad59zZz4r
z3zmHn1ev/us//aJ74uj75nu70Dmu4OtYsfVVe8+a7pcdeVzuspVeIrpcJaT
sTJ8FW0sfMVkDraKG0VXVWVVZ13lmlWpearbDEfz1wLT/QwqrLXZWPgKXzkM
toqZqa46Y6vOrGqLqbpNoOKmSQZTcZaSsaIzrAhfnTHWE1+dMRa+8hts9Xxw
lb6rOro/V091m6d7HJ3lkGN1ZVgOvnqaX73a8+3+ftw62OrZ4KpZpurOqTCU
5mxyloqxqjtCdV/dza7wVc9gq/sz1VWqWZWyqdQ91W2TqaPsrGpjTciwInx1
xlh3+0F85TPY6t7gKlylbKpuc2wcVWdNMNYmX7F7NWOw1fW5e4fVBldhqh5P
dbvibwSn+5lMc1aWsVw7QnzFvBpsdW0cXeW6WzXFVBMs1e2kCf7aaKzpGRa+
Yo4GW12bjC5wi6u6syp3U2GoOd7CWBq+ijhDiK+YjwZbnR9cpeMqZVNFugpH
6YyDs6qN5ZBh4St81THY6tzgqtwOUC2rmuapbpdMHVVrTTAWvsJXzoOt3k/1
mUBchamwlN9MMRa+mucrbFU/2Or1THPVmc8P5w7QzVRYau64O8vNWFU7WBF3
NOCr+YOtjgdX5blKJavqMNVET/3t57+fatP9TLKsNc1YjhkWvmLeDbY6nsq7
FnCVflalYCr8NMNeW4ylnGFNvZ+B3SuNwVYfD67q6wDVsqptnuo2T/e4OWuS
sab56p2x7toKX+kPtvrhwVXXbOWSVbnkVBhKbxyctc1YER3hmTtmuvtBfOU5
2OoHp/KuBVyl6aqppur2yaRRdha+0vMVu1f7Blt9f3BVj6s2mwpLzRmM5dsR
4it8FT3Y6vsT3QXevRsUVz13VVX/p5RRdduC0XRWlbEcMqzu/St8tWew1XdH
Zccq21Vn/n2m5CrlrErBVN2G+OL8nch0P4dsZ00yFr7i7ODEwVY6rnpnq25X
Ve9WTTHVFE91e2mKvbqdpeirs8bCV7W+6v5udp7ttnLZsZriqu4O0NVUGGqm
uxxzrCkZFr4iu8ocbFWzY9W5u+7kKsWsqqv7w1Ea4+QsRWPhq9q7Gdi90pjN
tprgKoX9KnVXOZkKS3kMxtLIsPAVvlKdrbba4KqK84AdHWB2VjXJU90G2TKq
zlIzFr7S8BW7V/mz0VYqO1bdZwInu8phpwpLzZwJxlLKsPAVu1eOg61w1VVX
TewAnU3VbYnvzd8LTfezyLTWFGPhK3w1ebbZSqELxFX7TDXBU91emmCvLcZS
7gjx1TNfdX+Huwy20tqxwlWarlIwFY6aZS43Y03KsJR9pb571f0d7jLbbaXU
BeKq665SNVWUq3BU/zg4q3IfC1/t8hXZ1b3ZZKvuzKrzroVuVylkVS6mwlHa
o2ysJ85S6AnxFb6aMltshatyzgO6dIAO/R+e8hxFZzlnWJt8Vb17FXnvVfd3
uvpstZXLjhWuwlRYymu2GcuhI9zoK7IrbKXkqju2wlXeruow1URP/YPYdD+P
Cc6alGF1+qrr7CC+wlYKrnLZW59iqk2ecjNUt4umW6zbWkrOmmSsrv2r6H4Q
X2GrK656Zasp+1WdrpqcU3WaCkfN9tZUY3XmWE/3sKb5KjK/4k7R3ba6ekeo
Smbl6qrOvErRVBGuwlJ6o2wsfFWXX23fv8JW2GqLq97ZCld5ZFV4ymswlnZH
iK9yzg6SXe20laOrMnesnrjqna0ie0BMtdtS//iF6f55FKzlYKzJvlI9P6iw
e4WvdtkquwvsOBOIq7RdpWKqbld85KOO6X4GE4yVlWEp+sr1/CDdoPZssJV6
ZtW1Y1XhKpcOsNJUzp7qdpOrvbqN5Zph4St85TqTbIWrcNUGU+Eob3O5Gcsh
w1L31YTdK7rBnbbq7AI7dqy6zgTiqpmm6naN4mCs/AwLX/XtXpFdYau7tpq6
Y7XJVdtNhaW0RtVZ+MrfV87dINnVTFtdyawcukDFuxZUd9azXdXR/2Epj1Ez
lmqGpbqDha/oBrHVdVspd4FZO1bdZwKn5VXVrsJTvrPRWJ0Zlnp+lbXbrpBd
HX230g3OstUVV72y1dXMSm3HCldhKgVP/ZPAdD+DaGsp94TuvlK9W1TZV1dt
tdVXzraK2l936AKVzwQq94DKe1Wunuq2k5u9MFafr84Yq8tXDrvtZFfYKjqz
UnLVk8zqiavO2KrSVZkdoJupcJSftzqNtdlX2flVx+7VXVu98lVUN0h25W2r
rszKyVVPdtcrXbUlq1I3Vbdv1EbdWe7Gwle7usFuM2Cr+7a6mlm5d4G4yiOr
UvVUt13cRtVZFcbqzLBUfLV594pucIettnSBWTtWuKrGVYqm6vbJlMFX+Kpq
9yrjXoaKc4Pbu0E3Wynur6t1gdtcld0BVmdVWMpvFJx1d/8v01iOvlLcbSe7
8psJttqWWXWdCXR3lbKp8NSccTSWi6/OGqszv5q8e0V2NdNWmZkVrqqxFa7K
cVW3Jz6afy6e7te7zVhdO+4O+ZXL7hV77djqyFad++vsWM1zVZWpJmRU1XZy
tleXsVwzrM2+mpZdbfWVi63IrGa7SmFn3cVVOMrXWy7G2uKrabvt0b7CVjtt
lb1nNcFV2V2gqquyO8DJpur2Tve4OEvNWPhKe/cqKrs6+m7FV362inLVR7aK
zqxwVY6rVLKqalNhqf6ZZiyVDAtfeWRXUb7CVnpDZhXfBTq5KiuvynaVqqm6
reI8qsbKzrCm++qprSb4iuxql63UMqsJrnq6Y0VelecqPOU1SsZy7Qin+Mpl
90otu5rqq0m2ogvc6SolU9111TRP/UvD4Cy9DEvRV3SD7LVvt1VHZkUX+MxV
72zVmVcpZlXunuowlLq78BW+UveVWnbVbQ1sRWaFq/Lzqoqsys1U3TZyNZeb
sbI6wmm+ctm9IrvCVk9cpbq/PsVVlV2gm6s6TYWjvKw11Vj4quZehkl77djK
w1aT9tff/XeXZStc5eMqPOVtrS5j4Su6QbKr3bZyyaw2dIFnbKXoKkyFpdSd
1WEsBV+dNRa+6u0GI2y1+cygu62uZFZ3bEUXiKvuugpPzR4lY6lkWBt9lbF7
RXblP2q2IrPyuW9hk6vu7LgouKrbHxtGxVhuvqrsB5/Yqmv3SiG7OvJVZnbV
bRBsFZNZbd5ff/d5kn0mcKqr8NQPzr8mT/fri3aWsrGc86st3WDVXjvZlY+t
lDKr6P11NVdlZlbKrlLdrXI2VbadXO3VaSwFX0VnWOrdYIavlLtBsquZturK
rBy6QHVXnbVVp6ucsiocpe2tLmM5+SqyH1TdvSK72uUrFVuRWWl0gbjKI6vC
UX7emmasqfmV0+4V2ZXuONpqSmal5qp3tqraXXdx1TRTddtGaZSdVWEs9R33
ibtX6nvtZFd+tnLPrCr317u6QFzV6yo8NdNa+KqvH6QbJLvCVmRW7l2gsqsq
OkAlU3U7xX3cjYWvPH1FduU13bYis8JVLq5yNlW3R6aOgrEcd7DoBsmusJWO
rZwyqyld4CtbVd+1sMFVkz31b5//PkRN92vJNJZ7R+jkq3effWrZVfReO9nV
HltNz6zoAnHVVFNF2snZX13GwldzfKWcXUXYakN21Wkrh78b6J5ZPXFVRWal
7Kq731UdrtpsKFVzORkLX/V0g47Z1dF3K9nVLFtdcdWRrVwzK/cucLurXEzV
bSF3a3UYy8lXZ3ctI3y1ea+d7GqHrcisPLtAXDXfVN3W6R5lYyllWIq+ohus
uU80O7vCVr22mp5ZqbnqjK0UXaW0W6Vqqm7PqI6qs/CVnq+qu8GqOxnIrnxs
5XDvAplVTma1Na9SNFW3W9wGX2n4ynn3SnmvXW3vClvl2iqzDySz8u0Cu/Oq
qqwKT2mOo7HwlXY3qLzXTnblaavJmVX1/nrGuUBcVZ9V4SmPUTFWZoaFr/qz
q6q9drIrX1uRWc3LrNRcddZWqrtV20z17y+m+2frcBa+ivPVpHODkdmV2pnB
ifcxONqKzMprf10xr8o01V1XTfHUKytlT/dr7zaWi6/O7lQqZ1dP9to3ZFfb
e8FKW5FZ9eyvb3FVVl6FqfQM5WAufKWRXb3z1dbsSm3vClv5ZFZXbaV8NlAx
s1LrAje6CkvpW6vDWPjKuxvcmF1N6wWrbPXRs+noAyMzKxVXkVn5ucrBVN3+
mWatSRnWNF+p2cpt74qddi1bTc2s2F/f46rqrApP+VtrSoal5qtp3aBqdqWy
095tp622itph796zmtoF4iodV3U7RnlUjbXRV67d4LTs6qqttmZXFbZS2WE/
stXEzApXablKzVTdZnEcd2Phq93ZFTvt2CrLVVdtRWbV0wXiqp2m+o8vTPfP
U+ksxQwr2lebd6+2Z1cb72PYZCvFHfZJmVXVjtXZfyfjqn5TfdFLWbPdWPiq
ZveK7Oq1rciu6mylssNOZvVsf31yF6jkKkdPVflJ2Vzdvrqz++fsK8fs6p2v
VLMrekFs1ZlZVe5ZOXaBuGqGqbqt5OAtJ2PhK49u0Cm7Yqe9x1avzlhO3GFX
yqyU99dxla6pui3k6Cx89dxXFd3g5Owq+z4GesE+W03rA9mz6suscFWtqbrN
M8VaXcbq9pXL7pXTnQwV2ZXrTnu3o6bbSi2zumMrNVe9sxWummOqbteojZqx
8FVON3jXV2RXZFcqtoq402rCDrtSZvXEVSpdIK7CUxirzleOu1fTs6up9zFg
K6/MSnWHXW3PKjuzqt6xmuAqTDXDWfhKa/eK7Kpup33LXVcbbeV470L1nQvT
usBuVymYqtslk8bNV1eNVe0rsiuPvSvuY+i11ZYddoXMynXPSrELnOqqbod8
b/4zeLpfj4KxJuVXZFf12VXXfQzYysNWajvslfcuOGZWuGquqaL95OIulwyr
01cV3WDmXrtDdtV1l2jETvu0XhBb9d+7oJZZPXFVhK2qu8BprtrmKCVvdRnL
pR9U8FVHN+iYXdELatlKxVVdfSCZFa56aitlV3X7yMVZ6r5Szq9cd6/Us6uo
nXZstdtWXecDo+9dULqD3akLdHSVoqm6DeTurGpjOWRXFbtXTra6m1117bRf
tVW1r7pNha127rA7Z1YOrqrOqvCUh7NUfXXFWHSDPdmV4k472VW/rZRclW0r
lXsXHDMr1S5QOa/CVF7OUvWVaze4xVaKO+3YqtZWGzIr5x12MistVymYqtsv
DqNgLHyl5avqM4NqO+30gtiKzMo/s1J3VVVWhan6xy3D6vKVSze4Mbtip93f
Vkqu6rLV9MzKaX9dZceq01XdNpkw+KrWV122yvLV1p12bEVm5brDnpFZZdsK
V9W4qtsjR/NfJ6f758x0lquvpnSDZFd6vSC2wlaV9y5My6y2dYHbTHXWTVHj
bKztvlK1VdbeVVV2RS/obavNrorOrJRc9cpWLq7aaKqpdnKxV7Wzsozl1g9O
8ZVTdpXpK2y121YKXeBdW6l2gbhK01TdNnJy1jZfTc+vlLpB9q48zguq2mrq
PeyVZwMnZ1YdPWCmq5Szqm4HOTurylcO/SDZ1czsStlWnb7KsBWZlX4f2JVZ
uXaBV7+7rthK0VTd3pnkLHxFduW2d4Wt+m1FH6h5NnBzZoWr8NRWY6l3gwrn
BquzK3rBnb0gttKwlVIfeDezmrq/jqv2joqvFPKrDdmV0n1X9ILe2VW3rba4
KqMPrL7Pisyq31V4CmPhK7IrbDXbVmRWZFa4ys9V3U5xHnyl0w0qZleVO+1d
vSB3MWArd1sp7bBPyaxwVe/8d9B0vw4HX5Fd+e+0K/aC1bZy3blSs1XH3QtR
rqq0VUYfqHw2UDmzynSVq6miDKVuri5fkV35ZVdTekFHW3X4qsJWKplVtq3U
+0DFzCpifx1X9Zqqy1Eq1iK/Irsiu6IXzLSVeh/oZKspfaBKZtXZBU51Vbeb
1Jw1Jb9y6wax1XxbHflqoq0Udq3cXaV0p1XHDvuGLnCaq7p9pO4sfKWXXXFe
cK6tlHeulGxFZqXXBz6x1eTMKqsLVDRVt4McnbXFV2RX/dkVttLMrrJtRR/o
vcP+ylaTMitctc9U2caq9BXZ1Yzs6tW/tzf5Cluxa6ViK7U+kMzK11Xdxuke
fOXpq7vZ1bt/W9ILamdXk2zFrtWOHfaszOqMrXAVpuoefBXbDU7MrugF+22l
unOlYisyqx5bTe4DcRWm2uYrsqv47EqlF+w8LzjFVpW+6rAVfSA77Aqu6j4X
2O2qbrd8mv85Md0/o4KxHHw11VZkVzq+2marDbtWrncvkFlpZlabXHXGT0/G
zVj46pmv6AWx1URbKe9aHdlqa2bVYavsHfaOzEqpC3QwVbaluq01yVeOtnLL
rtx6QWVbOe2zK9hKPbPaaCsyK70uUNlV3Z7qcJa6r1yzq2k77RvPCyrvXGEr
X1tt7QNdMivHLlDRVd1uUnBWh686u8EJ2ZX7XVcOtrrqq4n77NW2Uti1csus
qm01fYd9k6u2e6rCWBN8RXaFrVx6wS22UtljV8msVPpAtTutpmZW2V2giqu6
PTTdWE7dINnV/F5Q2VYuO1eqtnLtAx1spdgHkllpuqrbP27GqrRVtK+mZVfV
d11tPS+oYqsjXznYil2rnF2r6X1gxQ67cmbl6Kpu7zgba4OvVLKr6l7Q4byg
ei+4ZZ+90lYKu1ZHtpqUWU07H6iYWeGquePmK7Krub3gRFtd9RW28rgzlD5w
Xh9IZhXjqm7TKA2+mm+rbb2gq61c99mf2Io99lm2UuwDyaxwlbOxqnzlnF25
9YLbzwsq2Mphn13RVq67VndsdWfXSqkPJLOKs1WHq7rt4jAOvjr7O0l2RS9Y
aSuVnStlW7HH7pFZTbKVc2Z11VZbXfW/J6b7Z+zyVWd2Femr7p12bJVvK8c7
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
VtjKxVfdrxtbYStsha022urIV9gq3lavfPXuc/SdrxRtFb1z5WyrDl91v967
rsJW2ApbYasqWx35Clvp2OpJdvXUVpVnBbts5XpWsMNW3a/V1VZnz8piq7m2
unJvKLbqt9VHvtpsq1e+2mgrlX32abba6qvu11llqzO/X9jKz1ZX71/AVtgK
W2Erd1tF71xtslWFr7pf33RbnTlvi62w1ZN7Q6/a6qNeDFthK2y121ZXfDXB
Vlm+6n5N1a5StdXZ3ccNtqq6NxRbPbPVR77BVjm2OvJVha2OfIWtuOPqznf1
Bl91vxZlWynusWMrbIWtjn2lYKsjX2ErbKWwcxVtq0nZVYSxun92bNXTByrZ
qmqPPdpWV84IYitstdVWr3yFrdhn7zZGpLO6f8ZMV6nvWjnY6sxdMFdtpXBG
0MVWV/bYsRW2euerClvdza622IqzgjN8NWUUMquptsrIrCbaKupuKxVbnT0j
iK2wVfc+O7by22efnl1NmYm2mnxGEFvNt9XZM4LY6vo+O7Z67qsntnrlqzM9
ALbCVg6T3Qc671phq3hbZd/JfmSrp3dbYascWx35ytFWr3w1zVbK2ZXiWUF6
wX2j4Cpsha1cbfX03lB3Wx35StlWH/kq21ZHvsJW2Irsat6oZFZXbKW0a4Wt
+u5fmGKrp/eGYitsha3mnBUku5oxKraKzqxU9tgn2OrdmW81W2X9vRtsVWur
I19tshV3XLHPjq38RsVVGbZS2WPPun/hyFavPh+n3RtabauI+xc22erIV6q2
Uvy7N9hqlq3w1Y7ZbCuHXatXtlLuA93vZHezVbSr1G1V/XdvFG31ylcTbMXO
FbZynQpXue9addtKoQ/caKvMe0OxVd49DFm2UrybXSW7evUZ1Z1dVe5cdfeC
+EpnJmdW7LHPstWkv3czwVYf+UrBVpv+7o2KrZR7QXdbVWVX+MrLVcp9ILbS
s9W0e0Oz/t4NttK/4wpbadhKtRfMshXZlaersjKrK7aKyqyq9tjf7RNMtZXi
/QtTbFWxx95hqy33h3IPQ5ytXHeurnw3kl35DLby37VSsZXiGcEpd7Jjq113
XL3y1WRb0QvqZFf4St9VnbaKyqyUbaXgKmw19+/dKNmKexj072FQ7gUn2Koy
u8JXuEq9D8RWs+62yro3dIqtptwf6mQrJV+p2kq1FyS7mjFPHTvJVlWZFbby
vH+BO9k9bMU9DNiK7IrsClfts1XWnaETbfXqe4i7rerPCEbaqvr+0Op7GDgr
OOMO0Wm2wlezXKWeWU2+e0HFVoq7VlPOCGIrH1u98hW2mt0L4qvZ8/SZklnR
B2IrbJVlq+l3XE29h0GxF4yyVUd2lb13ha/8XdWdWWGr/sxK1VZuZwQdbPWR
rxxt5XIPw52zgk7ZlcvO1cbsCmP5uKojs3LpA7EVZwS777bqspXKHVecFdSy
ldLOlaOtonzVbRt3Vyl1gYp9ILbqt9WUM4LTbDX9HgbOCs7fuXLoBTt9tdFY
Xa6alFlN7APVbdWxa3XVVllnBFXvtoq2VfU+e7WtOCtIL1idXeErH1OpuWpi
Hzhl18p9j33K/QvYSttW0fvsd3au7tpqYi+ofF7QLbua7is3V7lnVvSB/X2g
6xlBp7utqmxVvc/uYCv37GpLL4ivZhor+tnceX+mZVbqfSC28jgjOOH+ham2
mnpW0MVW9ILzusFJxsJVnjvsan3gNFtV77FX379Q2QeetdVHvppiK84Kzty5
muiru9/hGb5yNFbGM6hy1YTMalMfGH1n6B1bqeyxbzwj2Gkr9XsYpp0VpBf0
t5WirxyMlfW63V0VmVnRB3pnVpwR1LHV1nsYnH01yVaRvSC+mmes7Neq6qqp
mVVWH4itOCPoYiuVs4JHvsJWHr2gc3a12Vfdzqp4bXefvVtm5bTDzq4VZwS3
2kpl5wpb6dhKKbs68z2TlV1V+6rSWNnOqnwduCovs3KzVfSuVfSdoa577FPO
CGIrdq7O+OqurTbvtFdkV06+emqu7p9V3VXKtnrqKvpAnczK9Yygsq0+8pXj
PnuErZTvEM3IrrpsVd0Ldu5dbfWVwzx5vnddRWaVn1lhK84IbrNV5v3sarai
F5ybXV21VUc3iLH8XRW9vz5ph/2urdT7QDVbVe9aqZ8RfGqr6rOCEfezYyuy
q4m+ijBWt2OUJsKrVa6KttWWzCrDVu86BUVbXXGViq3U99izbFV9VpB99t5e
kOxKw1ZkWLjKLbOiD/TKrDps5bhrVW2rSfvsR756d3YjaueKXpDsCl/pmara
VZMzK8U+EFv57Vo52OojX7HPrpldbesFO7Kr6b7aYqyoZ7XFVRMyK/rAOFup
7Fop7bEr24p9dq+7GMiu5vpqsrEUXHXXVpO7QPrAXlup9IGue+wRtlLfZ//I
V262mtALkl3dzyZUfDXFWNHP5Mn7k+2qrZkVfaBmH7hljz3TVuxcaWdXir2g
a3al7qsMYzk6K+MZdLiKzEqvD8RWPnvs2MrXVvSCObZS9lV2N6jqK3VjZb3m
ja5SslVGZkUfyB77NFuxz+5zFwPZFb5St1b263v6HlS4SrkLdNxhd+gD2bXS
yazu2OojX6nss7vcc6WSXWX0gpuzq4puMMJXVcaqclbVa5nmKtfMymmHnT5w
565VlK0m3SE6LbvK6AU777qKtJVrN+jmqwh3df+sEc8bV+W7Sm2HHVthq0pb
sXMVayu17Cq7F5ySXSn4SsFY6oOrzv23pGAr+kDutcJWz3y10VZK2dWUXhBf
YSxVU111FZkVfeDkzMppj/2urT7y1aSdK2Vfqdhqa3Y13VcYK/ZZPnlfyaz2
ZVbYasYeO7aaYyu1XlAlu3LpBp/6CmNpmQpXzc+ssBX3WlXYip2rOFuRXc3o
Bq/aStFXG4yV8cwqXaXeBSpnVhv7wKu2Us6ssBU7V929YMddV5Ozq22+mmas
rGf09L1zcpVLZkUf6JVZTdi1emKrj3xFLzizF3xlq83ZlbKvMo3l6qzM5xHh
qju/J+quIrOadz5QyVaqmVW0rRz/brOqrZR6wSe2isiu3vkqMrtS2b1y8JWD
sypef0dWdcVWV/+9sCWzwlY+tnLrA6tstX3nSuW84PbsyuncYKSvqoylYK3K
14mrntnq7L+rslz1ylbssOu4Clt59IIf/a6oZldKd12pZ1cO3eBdX7kaK9tc
na8l6v3IdNX0LpDMClup7lphK21bOWVXT2ylmF3hKybTVGquUuwCn9pKKbNy
PB+oYivHzOqpra74arutXHbaN2RX+ApjdZpquqsmZ1bb+8AjWx19Bx/Zanof
WGkrfKXTCzpnV/gq/nu+2y3Ko2Kqba5y3LPa0AdetZVCH4itdttqw077lm6w
wlcYy8tUuIrMakIf6GirDldF2OojX2Er/ezqbi+ocGYQX+X5aruzXE2V6apJ
XaDLDvuEPlDBVdNspX4Xw9HvTXd2pbTT3rV3FZVdKfjqyvfik+9fjKXnKXVX
uXaBbpkVfSC2UrPV1OwqoxdUy66m7l1t9dVUZ2U/rypX0QV6Zlb0gXP7QGz1
3FbstOOrSF85GMvVWRXP5ampHF1FZrU3s1KylVJmFWWr7b5y3rvCV3r7V1HG
qnKWir86X2u1p1z2q6ryqi5XTduzmpRZYSt/W6l0g9X3XW33lUOGpWCsKHt1
/7wZpsJVdIGumdVVV224LzTDVh/5SslWatmV0t6VcnaFr+Yby3Gi3g9XV7n0
gJszKzVbbcqssm2l5islW1WfGXySXb36bHLKrlT2r7p9hbE8TbXRVY6Zleue
FbbCVp22IruKPzeIrzCW8kQ+76qsqtNVLpmVUx/46t/oSpkVtsqx1Ue+UrLV
lOzqrq2csysHX7lmWDhL11S4Kmd/3clVkZkVfeAcW6n5asNOu2J25doNVuRX
KhkWxsoxlbKrVHfXyazoA7HVXFtNzK6UbTXFV9UdYZaxNjkr6/k9eU+numpq
F7h9h13FVt2mmm6rI18d3X+WbSuyK+9ucLOvJjor+1lVmyrTVW5dIJkVmZXC
RNtKyVeZtnLeae/cu6rsBrt9dfc7Ut1Yrtaqei64al8XWJ1ZcQ87tnKxleNO
+9TsCl8991WlsRStVf3au0x1x1abXfXEVnddpZBZZdsq875QbNVnq67synmn
fZOvznw/qPrK0ViV7up+XU/fm6eucsmr6AK9MqsoW23NrLJs5ZpdOe60u2ZX
irtXk32lYqxJ02kqXBWbWWV1gZWZFX0gtuq2FdmVhq8isisnX2Es/4l4/sod
4FlXqXWBZFb5O+xRmdWGPjDTVh/5yrkXVMiu3M4MqnWDU3wVZSyc5Weqja5S
7QK3ZVb0gbq2UsquOnfaya76ukF8hbGqPeXQAWa4yqELJLOiD8RWunddbd67
cuwGVXylaKztzop+lh1Z1SZXkVnN3WF3vC9U0VZkV7rZ1VNbbfJVV4aVYawt
1sp6bh2mcnGVwo7V9MyKHfa5tlLKrpx22juyq2xfRXSD+KrXWFOclfl8oky1
3VUVXeCE+6ycMits5W0rp532jOwqqxt89xmFr3Q6wgpjOXmr6jlEvnfZpsJV
9a5yzazYYde01Ue+mtoLup8ZVOgGo3bbnX3laqxuc3W8xsj36W5WtS2viugC
79oqy1VVmZXSPezYyi+7yt5p35pdTe4Gp/uq01hP/dX9M1aYClfFuUoxs7rr
qo2ZFbaqtZVLdlW5d6WYXeGrWF9lGEvVWQ6jZConV7l0gWRW7LA72Uopu4ra
aZ+cXbl0g26+UjQWzurxlKqppruKzKo+s8JWs2x15KurtnLOrt75Kus+UXzl
5yucVeMpXOW3Y0VmRR84xVaZ2dXR70v3XaLTsqsoX535XO72VXVHWGGsjc5S
9tQdU21y1bQusCqzirIVmVWfrbZlVypnBtV9FZVdOfrKxVhTrVX13J6+x9mu
uvrfxCZXkVk9s9XWzMrRVmrZlcreVcdeu2M3ONFX1cZytVbHM+owFXmVdxfo
llmxw95vqyhfdey0T9676s6upvlqm7HUzNX9+iPeR7UOMNpVKjtWXfvryplV
VB/40fc0tvKz1YbsyvXOq2pfZfWDFRlWlLFUnBVpsO6fV9lUG101sQtUPRvY
lVlhqxxbbc2u1Pba330+KfoqK7+64qu735GRvnIwlvt0mwpXzd9fd9uz2t4H
dtjqqq9csqs7O+1O3WCEr6JsFe0rxR2sDGPhLD1PPTUVrqp3ldL++oQ9K2zV
Y6sJ2ZXTXrtLNxjdDyr7KsNYOKvXU+qmmu4qp8zqjqvIrPqnw1ZXfdVxH0PV
3pVTduXqq8z8CmPNn4xnjqv6dqyyMiuH/XUyK2xVdR+Da3bl3A3iK01jYa08
S3WYyslVZz4PpnaBCncucFfoHFtF+Wp6dpXVDW70lcqOu4uxtlgr+/lFvM8V
WZV7XjWtC1S9c4HMaoetyK7ybIWvPDKsKmNNcVbVs4pylVJWtdVVSl1g1f56
V2aFrXJ8pbbTrp5due9e4atYY1U6y8FcHc+iI6eqyKpwFZkVd4X62io7uzr6
fVHIrrL22id0g52+quoIJxir0l7drynDU3dMhavuu8qtC+zOrLgrdKatpmRX
bt3gk+wKX/UbS81Zkyb6fbr7+7LVVZ07Vkr761WZ1ZGt2LPSs9VVX23OrvCV
p6+UjIWz9Dw1wVSOrnLLrKruXCCz2mmrDdmVYjf46vNpm6+qM6wsY+GsXk9V
mwpX+brKLbPavGelZKurvnLKrrbstU/wlXqGlWksnFXnqSemmu6qqh2rd7Z6
4iqVLpDMCltdtdX27ErVV2c+76b5aqKxtlqr4pmqmwpX9exYKd8T2rVnha16
fDUlu+rYa8dXOr5yMNZEa1U+tyfv7xNTKWRVbq6a0gUqZlab+kBnWylmV1P2
2lV2r/CVrrPcvNXxbFxMNclVnTtWDvvrLplVt0Wm2eqqr7qyqw3d4GRfYax5
9up+nVGeemoqXDXHVZX76+xZYavK7IpuEF/d9ZWCsdScNXmmmypjt8rFVZu7
QPasZttK8e8MTsmu8JVmfhVtLJyl6alprlLMqzp3rCZ2gWRWnrY68tX27Apf
afhqgrFw1gxPuXaAk1xFZkVm5WSrq766kl0d2apyr736zqvsexkm+Eq9I8x0
FtaqsZSTqTqzKlxFZjVhJtiqM7va0A2esVXl3QxXfDUxw8o0Fs7Ke65dplJx
VbStnrpKsQusvMvqzv76R7Yis/Ky1VVfZWdX27vBquxqg69cjLXBW9nPLfJ9
VjOVc17l5iqFLpDMaqetonwVnV1Vd4PdvpqSXzkaq8pZjt6qfC7R72lF/4er
6ALJrPbY6qqvyK7m7F5t8lWGsaqdpWKurtesYqoKV3V1gFGuemWrTFc5dIFk
Vthqw167Yjeo6iuljlDNWJ3Omj5Z75eiqXCVTxdIZtU/6raK9FV2dnXXV6/+
u8JXGr6qzLAyjYWzNC1111O4Cle57K9vyqy22WpbN4iv+n2lbCyc1e+pp6a6
46pMUzm6SnXH6pWtKrvAzMyq2xbbbRXpq847GdS6QXzlY6wKZ2GtGkt1mUol
q9rkKqXMqtNV2Ep3ov4WzhVb4av3tqr2VdaO+x1fVfeElcba4q3qZxnx/leY
ClfNchX769jqqq+uZlcf/a5M2GtX373q8lV2R9iVYXUYa4K3up5Xl6mUOkA1
V026x6qqC8RWe2xFdlWzexWRXZ3xlWtH2Gmsbmcp2av7dTubClf1u0p5f/2V
rXCVt62OfNWZXeGrmflVpa8ijaXorG0T9T4qm6rLVWdt9dRV27tAMitsFZld
uey1u+9edeZXm4yFs/w8VW0qlaxKKa/CVbhqo62OfJV9ZhBfaftqUoaFs/Qn
+r15YirF/g9X1biquwvkntD5tqIbjOsG8dVsY+EsHU89NRWuOu8qdqzIrLBV
vK9cu0F8leurqgxL1Vh4q95SEZ5S3atSddXTvOqJq9y7wKj9dWzlM3SD+KrL
V53GqnDWNmtVPM+I932LqXBVjquu3mVFF4itKrOrTb4687kU5avoM4QbjFXl
rGneqnxmnaba7qrsHjBrx0ols6IL3GmrI19FZVcZ3aDivaJuvlLMsBSMVe0s
ZXd1PodIT6mbStlV2XnV9B0rMitsFZFdOXSDmb56aqtpvqrOsKKN1e2spz7r
/jm6PVVtquysStFVXWcCp7qKzGqWra766qqt8NUcXzlkWBnGcnWWw6h4qtJU
GVlVdQ+Y6Sq1+xYiu0Ayq122OvJVRXbF7tV1X3XuuLtkWJnOwlo6loow1Zas
yiGvmrBjdcdWuGqXrdS7wS5fKeRXjhnWRGNhrXpHRXlKOavCVXtcRRc421ZH
voqy1aZuEF/p9YSVztpqrYrnGmWqu6668/vu4Cr1uxaydqzoAnVnkq3w1ex+
MMtXrsaqctZEc1U/t05PqWVV2/Iqlx0rMitsddVWCt0g+VWtr6oyLBVjdThL
2V7dzyHSUw6mUs6qcBWuwlZ5vlLPrqb7quMMYWWGpWQsFWdFO6z75632VIep
trmq866FrB0rukCN2WIrB1+9+zeM4m57tK9UjFXtq+3Ocp2M92uaqaa6qmt3
nczKYybaqsJXHfcy4CufDEvVWVhL01JPPVVtqoysyslVXXkVrvKZqbY68pVC
dqW6246vNHbdq4yFtfo9FWGqCVlVtatUzwRm7VjRBWKrbF+9uq9fpRt09lXn
jvvkDKvKWdu9VfV8o34fFE2V0QGq5FWZPWC1q8issJWKr5z6wWnGUnOWirUq
veVmse5nEmmop5ZS81R0TjU5q1LpAXEVtsr0lVI/OMlX3TnWBGMpWSvKZd0/
m7unsvepXFzVec9C135VZA94ZKvu73Xl2WorfOXrq4nGynKWo7XcJut922qq
yr2qba6KzKy6v9PVZ4utPs0VWzntX2X76sn9V9t8pWwsnKXvqU5TKbiqsgPs
dlX1HVZ0gdgqc1x3r9R9FX2OMKsjdDJWtrOwVr+jojzlbqoOV3Xes4Cr5s92
W1V3g9t95ZhhdfaElc7CXLXPOOr3QtVUuMrfVXSB9wdbee1ePfXVu8+MTb5y
y7A6jDXZWx3PMPL34Imrrv7bYpKrlHtA9R0rbHV+ttnq01y1lZuv3v23T341
w1jd1lJ3V/czUfOUs6lwlYarsNX5wVZ5u1eTfdWx466UYeEsptJTk0yl2AHi
KlwVPRtt9WkUukH1uxmq8ivnDOupr7KMhbP8LfXUU3dMNTGrcneVwo4Vtro+
W231afBVTX7lmGF1GCvTWVjLw1JTTYWrdFxFZlUzm231aRR2r9R99e6zycFX
lcZycBbe0rJUhKcqTdWdVeEqXKU+2Op6djXxbgZ8pemrKmNhrVpHRXpK1VTq
rnpnK2VXsWOlP9tt9Wk27La7+Qpj9Ttruru6nmPk78MdV9393c/MqiI7wOl5
FTtWHoOtvjv4qtZXWRnWFmMpWEvdXt3PQ8lTVaZyz6pwFa6KGmz1/XHoBjf6
SjXDumusDc6K9lj3z6ngqWmm2uiqjrsW6AJ7Blt9f1x2rxR85dARbjWWs7Wc
J/O9VDaVQweIq3BV9WCrH5xNvjpjrCpfqWRYT42l6iys5WWpu56aYqpKV535
d6ZjD3i3C+z+Dp4y2OqHR2X3Cl/1ZViTjYW1NC31xFNPTeXoqjOfOw551d27
Ftix0h5s9fHgq/O2Ouur6I7QwVhPvisrnYW36h0V4amNporqAB1cxe6672Cr
48FXOcZSyLCccqwuZ003V+fzfPq7MM1UE1317jMbV80ebHU8GbtX+CrHV1UZ
loKxup3l5K7uZxPtqQ5TqbgqqgOcnFexu64z2Or14Kv+jlAxw1IxlqK1onzW
/TNN8pSzqXAVrnIcbPV+Ks8OVvgq4o4GZV+5GSvaWROs5TqR72HE71WlqTL2
qiI7wHeuOvPvTtUe8K6rsFXeYKtzM81XVflVdEdYkWF1GivDWVjLw1IbTOWa
VTnnVWRWPYOtzk/lbvuk/Mo1w+o2VpazsJaOoxQ8pWYqXIWrJgy2ujbT8qsI
X3V1hJuMlekszFXrqEhLdZnKIauqcpVqD4iregdbXZvq3fatvsrKsCYYq8pZ
G7xV+Rwzfg+quz+XrOqMq9TvWeCuBe/BVtcHX+l1hA7GynJWtbWc/NX9XJQ8
VWmqjKwqqgN0cBV5lf9gq3vj6KuIHfezn1tdGdZ2Y6lYa+tkvqcdnso0lWtW
hauYM4Ot7o+jr6ryq00Z1hNjVTgLa3la6qmpVHMqXHW/B+SuBZ/BVs/G0VfO
HaG6sRychbd0HdXtqTumcsiqqlz17rP5SV5FZuU12Or54CvtDMvRWNXOwls9
hlLxlJKpcBV51YTBVjGDr+ZlWN1dYbezNpir+7lG/G50uCqr/6vuABVcxY7V
zPlkK4ZhGIZhGCZu/h9J9mO1
  "], "Byte", ColorSpace -> "RGB", Interleaving -> True],
ExpressionUUID->"609b10c1-69a4-4ca3-9e8e-def4ae52f90d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1dcf0211-387f-4388-9e8e-4cc735cc87da",
   CellTags->"SlideShowHeader"],
  Cell[93920, 1611, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d10376ee-01f4-491f-842b-4a9bd2aa536c",
   CellTags->"SlideShowHeader"],
  Cell[105316, 1885, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"97c3ad49-28bc-489b-9514-2d8091368897",
   CellTags->"SlideShowHeader"],
  Cell[110796, 2037, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c81bdd2a-e592-40e6-9d4a-f5b5e17498f6",
   CellTags->"SlideShowHeader"],
  Cell[138655, 2599, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7e5c5a29-7ae9-441d-bd9c-f876c1881429",
   CellTags->"SlideShowHeader"],
  Cell[148700, 2867, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"310e86dc-6262-4899-a2ee-9f2e58b6a196",
   CellTags->"SlideShowHeader"],
  Cell[165237, 3331, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e549ec9a-a215-4514-ae6d-83b95a5f7e31",
   CellTags->"SlideShowHeader"],
  Cell[170024, 3455, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2dcf0678-1d37-4d69-80f9-0352ff8d1318",
   CellTags->"SlideShowHeader"],
  Cell[179990, 3719, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1d33df8a-f70a-4443-8eb3-686178d1fb57",
   CellTags->"SlideShowHeader"],
  Cell[185897, 3881, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d42989ad-7606-4b7a-b6db-77b9590b15d8",
   CellTags->"SlideShowHeader"],
  Cell[191832, 4043, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9057827b-1983-4ece-aad0-cfefc6ac35e8",
   CellTags->"SlideShowHeader"],
  Cell[198554, 4214, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4876aa59-8ef7-40f6-9576-dd393f68e44e",
   CellTags->"SlideShowHeader"],
  Cell[209986, 4518, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4b49a26d-26ca-4c6d-a401-2a8b9be62480",
   CellTags->"SlideShowHeader"],
  Cell[226810, 5054, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2c92a90c-ea40-49dc-a6c7-5b06f3570df8",
   CellTags->"SlideShowHeader"],
  Cell[227270, 5071, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b6dce450-a684-4b08-b227-0ebb856e8df5",
   CellTags->"SlideShowHeader"]},
 "SetDirectory"->{
  Cell[140865, 2645, 288, 7, 21, "Input",ExpressionUUID->"41b937b1-073f-4f09-91fe-9e7208c7cf43",
   CellTags->{"SetDirectory", "NotebookDirectory"}]},
 "NotebookDirectory"->{
  Cell[140865, 2645, 288, 7, 21, "Input",ExpressionUUID->"41b937b1-073f-4f09-91fe-9e7208c7cf43",
   CellTags->{"SetDirectory", "NotebookDirectory"}]},
 "FileNames"->{
  Cell[141156, 2654, 267, 4, 21, "Input",ExpressionUUID->"aa10cd4b-175f-4741-96ed-dbebe01c6910",
   CellTags->"FileNames"]},
 "Import"->{
  Cell[141426, 2660, 402, 10, 21, "Input",ExpressionUUID->"a8abbfee-e2de-4452-bb5e-fd0c6061d262",
   CellTags->"Import"]},
 "Dataset"->{
  Cell[141831, 2672, 407, 6, 21, "Input",ExpressionUUID->"c0256857-36f9-4c18-b1f5-4f6e90e621b0",
   CellTags->"Dataset"]},
 "Head"->{
  Cell[144540, 2743, 592, 16, 22, "Input",ExpressionUUID->"d9cac01c-2937-4827-9230-08e82b074571",
   CellTags->{"Head", "Extract", "Position"}]},
 "Extract"->{
  Cell[144540, 2743, 592, 16, 22, "Input",ExpressionUUID->"d9cac01c-2937-4827-9230-08e82b074571",
   CellTags->{"Head", "Extract", "Position"}]},
 "Position"->{
  Cell[144540, 2743, 592, 16, 22, "Input",ExpressionUUID->"d9cac01c-2937-4827-9230-08e82b074571",
   CellTags->{"Head", "Extract", "Position"}]},
 "Delete"->{
  Cell[145412, 2770, 422, 12, 21, "Input",ExpressionUUID->"9ceab829-b7d0-4d87-9f0f-0e93380cb0ac",
   CellTags->{"Delete", "All"}]},
 "All"->{
  Cell[145412, 2770, 422, 12, 21, "Input",ExpressionUUID->"9ceab829-b7d0-4d87-9f0f-0e93380cb0ac",
   CellTags->{"Delete", "All"}]},
 "Transpose"->{
  Cell[146118, 2793, 240, 4, 21, "Input",ExpressionUUID->"ca63c6d5-c6ad-4376-b892-de8f9a22f418",
   CellTags->"Transpose"]},
 "Apply"->{
  Cell[146361, 2799, 276, 6, 21, "Input",ExpressionUUID->"ee91cfa5-b032-4e44-bfb8-254f6dca8078",
   CellTags->{"Apply", "Divide"}]},
 "Divide"->{
  Cell[146361, 2799, 276, 6, 21, "Input",ExpressionUUID->"ee91cfa5-b032-4e44-bfb8-254f6dca8078",
   CellTags->{"Apply", "Divide"}]},
 "Mean"->{
  Cell[147015, 2819, 516, 8, 21, "Input",ExpressionUUID->"f4483276-9be1-429e-be33-db5165551c7c",
   CellTags->"Mean"]},
 "Round"->{
  Cell[147914, 2841, 570, 15, 21, "Input",ExpressionUUID->"7ff9695e-8779-467c-b35f-b4517f35e501",
   CellTags->{"Round", "N"}]},
 "N"->{
  Cell[147914, 2841, 570, 15, 21, "Input",ExpressionUUID->"7ff9695e-8779-467c-b35f-b4517f35e501",
   CellTags->{"Round", "N"}]},
 "ListPlot"->{
  Cell[162399, 3244, 416, 10, 21, "Input",ExpressionUUID->"6d449d33-9054-499b-90ed-d85e9b9464c8",
   CellTags->"ListPlot"]},
 "LinearModelFit"->{
  Cell[163021, 3264, 211, 4, 21, "Input",ExpressionUUID->"119876ca-eab6-4be9-9a7c-40114ccc8e7a",
   CellTags->"LinearModelFit"]},
 "Epilog"->{
  Cell[164549, 3306, 627, 18, 21, "Input",ExpressionUUID->"bc7bd543-5f35-4d3d-9d0a-263bbbaf9f1b",
   CellTags->{"Epilog", "Point"}],
  Cell[207934, 4460, 342, 8, 21, "Input",ExpressionUUID->"8f99edf3-b640-48f8-94be-f8ed620ec933",
   CellTags->"Epilog"]},
 "Point"->{
  Cell[164549, 3306, 627, 18, 21, "Input",ExpressionUUID->"bc7bd543-5f35-4d3d-9d0a-263bbbaf9f1b",
   CellTags->{"Epilog", "Point"}],
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "Framed"->{
  Cell[166754, 3369, 859, 18, 21, "Input",ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5",
   CellTags->{"Framed", "Style", "RoundingRadius", "FrameMargins"}]},
 "Style"->{
  Cell[166754, 3369, 859, 18, 21, "Input",ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5",
   CellTags->{"Framed", "Style", "RoundingRadius", "FrameMargins"}]},
 "RoundingRadius"->{
  Cell[166754, 3369, 859, 18, 21, "Input",ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5",
   CellTags->{"Framed", "Style", "RoundingRadius", "FrameMargins"}]},
 "FrameMargins"->{
  Cell[166754, 3369, 859, 18, 21, "Input",ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5",
   CellTags->{"Framed", "Style", "RoundingRadius", "FrameMargins"}]},
 "ANOVATable"->{
  Cell[168148, 3400, 324, 8, 21, "Input",ExpressionUUID->"b30cb504-5602-48a9-a5df-b8d863693308",
   CellTags->{"ANOVATable", "AdjustedRSquared"}]},
 "AdjustedRSquared"->{
  Cell[168148, 3400, 324, 8, 21, "Input",ExpressionUUID->"b30cb504-5602-48a9-a5df-b8d863693308",
   CellTags->{"ANOVATable", "AdjustedRSquared"}]},
 "With"->{
  Cell[168867, 3418, 1108, 31, 21, "Input",ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d",
   CellTags->{"With", "Join", "MeanPredictionBands", "Filling"}]},
 "Join"->{
  Cell[168867, 3418, 1108, 31, 21, "Input",ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d",
   CellTags->{"With", "Join", "MeanPredictionBands", "Filling"}]},
 "MeanPredictionBands"->{
  Cell[168867, 3418, 1108, 31, 21, "Input",ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d",
   CellTags->{"With", "Join", "MeanPredictionBands", "Filling"}]},
 "Filling"->{
  Cell[168867, 3418, 1108, 31, 21, "Input",ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d",
   CellTags->{"With", "Join", "MeanPredictionBands", "Filling"}]},
 "Column"->{
  Cell[172240, 3513, 486, 11, 21, "Input",ExpressionUUID->"bf47ac02-1412-4fbb-86d8-dd2553ff745d",
   CellTags->"Column"]},
 "Table"->{
  Cell[173497, 3546, 1499, 39, 50, "Input",ExpressionUUID->"1c0e400f-4574-4796-b60b-952ba5c9611c",
   CellTags->{"Table", "Flatten"}]},
 "Flatten"->{
  Cell[173497, 3546, 1499, 39, 50, "Input",ExpressionUUID->"1c0e400f-4574-4796-b60b-952ba5c9611c",
   CellTags->{"Table", "Flatten"}]},
 "Through"->{
  Cell[175389, 3596, 261, 4, 21, "Input",ExpressionUUID->"633d3123-8894-4004-9b59-4dc1399c0a14",
   CellTags->"Through"]},
 "AIC"->{
  Cell[175653, 3602, 295, 5, 21, "Input",ExpressionUUID->"7947112d-763e-459e-a22f-6d265368532c",
   CellTags->"AIC"]},
 "Show"->{
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "Plot3D"->{
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "Graphics3D"->{
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "PointSize"->{
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "Medium"->{
  Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
   CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}]},
 "FitResiduals"->{
  Cell[179675, 3708, 266, 5, 21, "Input",ExpressionUUID->"072da5ca-26c5-4576-b93c-07633b9aea7a",
   CellTags->"FitResiduals"]},
 "Dimensions"->{
  Cell[181682, 3757, 867, 19, 37, "Input",ExpressionUUID->"3484267c-b81f-46d1-83b7-e0f16dff14a8",
   CellTags->"Dimensions"]},
 "NumericQ"->{
  Cell[184355, 3829, 463, 12, 22, "Input",ExpressionUUID->"6c1676c2-7bb1-4c37-998d-78058f326b6e",
   CellTags->{"NumericQ", "Cases"}]},
 "Cases"->{
  Cell[184355, 3829, 463, 12, 22, "Input",ExpressionUUID->"6c1676c2-7bb1-4c37-998d-78058f326b6e",
   CellTags->{"NumericQ", "Cases"}]},
 "ReplacePart"->{
  Cell[185167, 3853, 681, 22, 21, "Input",ExpressionUUID->"f62ac03c-54ef-40dc-b94e-ecae37487da2",
   CellTags->"ReplacePart"]},
 "Mesh"->{
  Cell[186723, 3903, 270, 5, 21, "Input",ExpressionUUID->"bb2a96bc-6cbb-45a5-aa2d-bef57f3c5e82",
   CellTags->"Mesh"]},
 "NonlinearModelFit"->{
  Cell[188239, 3943, 553, 16, 25, "Input",ExpressionUUID->"b2639c48-e1fd-4a1d-b680-4b7f3d192b41",
   CellTags->"NonlinearModelFit"]},
 "BestFit"->{
  Cell[188795, 3961, 149, 2, 21, "Input",ExpressionUUID->"dd2032f1-369a-4b82-8a08-38d874fc1df1",
   CellTags->"BestFit"]},
 "ListLinePlot"->{
  Cell[189178, 3971, 1010, 23, 64, "Input",ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07",
   CellTags->{"ListLinePlot", "PlotMarkers", "PlotRange", "PlotStyle"}]},
 "PlotMarkers"->{
  Cell[189178, 3971, 1010, 23, 64, "Input",ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07",
   CellTags->{"ListLinePlot", "PlotMarkers", "PlotRange", "PlotStyle"}]},
 "PlotRange"->{
  Cell[189178, 3971, 1010, 23, 64, "Input",ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07",
   CellTags->{"ListLinePlot", "PlotMarkers", "PlotRange", "PlotStyle"}]},
 "PlotStyle"->{
  Cell[189178, 3971, 1010, 23, 64, "Input",ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07",
   CellTags->{"ListLinePlot", "PlotMarkers", "PlotRange", "PlotStyle"}]},
 "FitCurvatureTable"->{
  Cell[191240, 4026, 543, 11, 21, "Input",ExpressionUUID->"fa1d7830-5c82-4e82-a0c0-f271074b7947",
   CellTags->{"FitCurvatureTable", "ParameterBias", "AICc"}]},
 "ParameterBias"->{
  Cell[191240, 4026, 543, 11, 21, "Input",ExpressionUUID->"fa1d7830-5c82-4e82-a0c0-f271074b7947",
   CellTags->{"FitCurvatureTable", "ParameterBias", "AICc"}]},
 "AICc"->{
  Cell[191240, 4026, 543, 11, 21, "Input",ExpressionUUID->"fa1d7830-5c82-4e82-a0c0-f271074b7947",
   CellTags->{"FitCurvatureTable", "ParameterBias", "AICc"}]},
 "ConstantArray"->{
  Cell[193382, 4085, 684, 15, 21, "Input",ExpressionUUID->"7fa4712e-5060-4df4-a90d-115e6c590c98",
   CellTags->"ConstantArray"]},
 "Weights"->{
  Cell[194069, 4102, 1133, 28, 25, "Input",ExpressionUUID->"ab35c3de-bbbd-45d0-a383-b07f38f16a68",
   CellTags->{"Weights", "VarianceEstimatorFunction"}]},
 "VarianceEstimatorFunction"->{
  Cell[194069, 4102, 1133, 28, 25, "Input",ExpressionUUID->"ab35c3de-bbbd-45d0-a383-b07f38f16a68",
   CellTags->{"Weights", "VarianceEstimatorFunction"}]},
 "ImageSize"->{
  Cell[195205, 4132, 3300, 76, 107, "Input",ExpressionUUID->"6edff7c5-47a2-4156-bf3d-3cd5e37474ee",
   CellTags->"ImageSize"]},
 "ToExpression"->{
  Cell[204355, 4357, 672, 16, 22, "Input",ExpressionUUID->"37402914-b043-4250-b4bd-7b4b5f9e69c5",
   CellTags->{"ToExpression", "StringSplit"}]},
 "StringSplit"->{
  Cell[204355, 4357, 672, 16, 22, "Input",ExpressionUUID->"37402914-b043-4250-b4bd-7b4b5f9e69c5",
   CellTags->{"ToExpression", "StringSplit"}]},
 "ParametricNDSolve"->{
  Cell[205519, 4389, 774, 23, 37, "Input",ExpressionUUID->"37b55b3e-7499-4000-b347-653d6f056f02",
   CellTags->"ParametricNDSolve"]},
 "Quiet"->{
  Cell[207272, 4440, 444, 12, 21, "Input",ExpressionUUID->"67641744-11c1-4837-ab2c-94885bf93d25",
   CellTags->{"Quiet", "Most"}]},
 "Most"->{
  Cell[207272, 4440, 444, 12, 21, "Input",ExpressionUUID->"67641744-11c1-4837-ab2c-94885bf93d25",
   CellTags->{"Quiet", "Most"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 249714, 5473},
 {"SetDirectory", 251933, 5504},
 {"NotebookDirectory", 252108, 5507},
 {"FileNames", 252275, 5510},
 {"Import", 252413, 5513},
 {"Dataset", 252550, 5516},
 {"Head", 252684, 5519},
 {"Extract", 252844, 5522},
 {"Position", 253005, 5525},
 {"Delete", 253164, 5528},
 {"All", 253306, 5531},
 {"Transpose", 253454, 5534},
 {"Apply", 253591, 5537},
 {"Divide", 253737, 5540},
 {"Mean", 253881, 5543},
 {"Round", 254013, 5546},
 {"N", 254150, 5549},
 {"ListPlot", 254294, 5552},
 {"LinearModelFit", 254440, 5555},
 {"Epilog", 254583, 5558},
 {"Point", 254850, 5563},
 {"Framed", 255176, 5568},
 {"Style", 255356, 5571},
 {"RoundingRadius", 255545, 5574},
 {"FrameMargins", 255732, 5577},
 {"ANOVATable", 255917, 5580},
 {"AdjustedRSquared", 256088, 5583},
 {"With", 256247, 5586},
 {"Join", 256424, 5589},
 {"MeanPredictionBands", 256616, 5592},
 {"Filling", 256796, 5595},
 {"Column", 256975, 5598},
 {"Table", 257110, 5601},
 {"Flatten", 257260, 5604},
 {"Through", 257410, 5607},
 {"AIC", 257543, 5610},
 {"Show", 257673, 5613},
 {"Plot3D", 257866, 5616},
 {"Graphics3D", 258063, 5619},
 {"PointSize", 258259, 5622},
 {"Medium", 258452, 5625},
 {"FitResiduals", 258651, 5628},
 {"Dimensions", 258796, 5631},
 {"NumericQ", 258938, 5634},
 {"Cases", 259086, 5637},
 {"ReplacePart", 259240, 5640},
 {"Mesh", 259379, 5643},
 {"NonlinearModelFit", 259523, 5646},
 {"BestFit", 259671, 5649},
 {"ListLinePlot", 259813, 5652},
 {"PlotMarkers", 260004, 5655},
 {"PlotRange", 260193, 5658},
 {"PlotStyle", 260382, 5661},
 {"FitCurvatureTable", 260579, 5664},
 {"ParameterBias", 260760, 5667},
 {"AICc", 260932, 5670},
 {"ConstantArray", 261113, 5673},
 {"Weights", 261257, 5676},
 {"VarianceEstimatorFunction", 261445, 5679},
 {"ImageSize", 261617, 5682},
 {"ToExpression", 261764, 5685},
 {"StringSplit", 261928, 5688},
 {"ParametricNDSolve", 262098, 5691},
 {"Quiet", 262244, 5694},
 {"Most", 262387, 5697}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1dcf0211-387f-4388-9e8e-4cc735cc87da",
 CellTags->"SlideShowHeader"],
Cell[719, 26, 15007, 252, 55, "Text",ExpressionUUID->"5519368d-fb72-425d-89d1-8cac8344ddc8"],
Cell[CellGroupData[{
Cell[15751, 282, 335, 5, 107, "Title",ExpressionUUID->"4a5057bd-197f-429b-be9f-ac6e23346095"],
Cell[16089, 289, 262, 4, 53, "Subtitle",ExpressionUUID->"7f4643f5-9390-4858-8497-7be59b165c0c"],
Cell[16354, 295, 77517, 1310, 303, "Text",ExpressionUUID->"91ab197e-4ff0-4f08-9974-465e93453ae0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93920, 1611, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d10376ee-01f4-491f-842b-4a9bd2aa536c",
 CellTags->"SlideShowHeader"],
Cell[94045, 1615, 4996, 122, 95, InheritFromParent,ExpressionUUID->"07fbde5f-4b62-40a9-bf1a-dcd40974d2a4"],
Cell[CellGroupData[{
Cell[99066, 1741, 359, 6, 60, "Subsection",ExpressionUUID->"214af022-0a99-4593-89a5-ad7129e21c77"],
Cell[CellGroupData[{
Cell[99450, 1751, 445, 7, 21, "ItemNumbered",ExpressionUUID->"440dc52a-bda6-45f6-8ecf-6e758e89096a"],
Cell[99898, 1760, 447, 7, 21, "ItemNumbered",ExpressionUUID->"13e9c3c4-731b-4171-8ef5-eed3539c1b11"],
Cell[100348, 1769, 442, 7, 21, "ItemNumbered",ExpressionUUID->"110c7d55-c7a8-4172-91ac-fe8a553fdca4"],
Cell[100793, 1778, 438, 7, 21, "ItemNumbered",ExpressionUUID->"6322c123-026e-4de7-8f95-b4bfa05b4cac"],
Cell[101234, 1787, 451, 7, 21, "ItemNumbered",ExpressionUUID->"bc2985f7-e241-493d-bb7f-b5f4746757d2"],
Cell[101688, 1796, 448, 7, 21, "ItemNumbered",ExpressionUUID->"0db01272-ea23-40bb-b5d9-0fcc6b9b014c"],
Cell[102139, 1805, 457, 7, 21, "ItemNumbered",ExpressionUUID->"8d8978f7-175a-482f-8d11-b3ea47228e3c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102645, 1818, 362, 6, 60, "Subsection",ExpressionUUID->"a888267e-6754-42ae-a3a6-b4b74ac09fb5"],
Cell[CellGroupData[{
Cell[103032, 1828, 362, 6, 21, "ItemNumbered",ExpressionUUID->"4ce4f3c2-4288-47d1-8b4b-744721e1a30e"],
Cell[103397, 1836, 381, 6, 21, "ItemNumbered",ExpressionUUID->"fbf2c25d-e561-4647-87ee-192848e04286"],
Cell[103781, 1844, 317, 5, 21, "ItemNumbered",ExpressionUUID->"adbd642e-f701-47d9-9d56-befe3508b9e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104147, 1855, 356, 5, 60, "Subsection",ExpressionUUID->"7bdd6e2e-70d8-45eb-830a-87d2cd29c5f9"],
Cell[CellGroupData[{
Cell[104528, 1864, 369, 6, 21, "ItemNumbered",ExpressionUUID->"053fbfea-23f7-4813-8b05-120e8e432976"],
Cell[104900, 1872, 355, 6, 21, "ItemNumbered",ExpressionUUID->"5910d748-8555-4169-a332-8c6fce1608a0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105316, 1885, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"97c3ad49-28bc-489b-9514-2d8091368897",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[105463, 1891, 417, 6, 89, "Section",ExpressionUUID->"41343adb-f3d2-4420-b4a3-12bd6c9e8639"],
Cell[105883, 1899, 612, 12, 43, "Text",ExpressionUUID->"b6da0379-da25-429c-a943-b889064be476"],
Cell[CellGroupData[{
Cell[106520, 1915, 169, 3, 60, "Subsection",ExpressionUUID->"bc8f99f2-3114-4428-835a-39ec97998678"],
Cell[106692, 1920, 672, 16, 26, "Text",ExpressionUUID->"0858e1ec-41e4-40d8-9f5e-08213fd55251"],
Cell[CellGroupData[{
Cell[107389, 1940, 239, 4, 24, "Item",ExpressionUUID->"0471f917-b4d8-4904-b036-8ab6d1c6bc97"],
Cell[107631, 1946, 222, 4, 24, "Item",ExpressionUUID->"a0dba548-11ae-4449-9dfa-92eeaea521a1"],
Cell[107856, 1952, 241, 4, 24, "Item",ExpressionUUID->"15d33b6f-5158-4584-ad69-2a60a0c9a451"],
Cell[108100, 1958, 341, 5, 24, "Item",ExpressionUUID->"39755786-ba3f-40a5-9483-1192b93b3d08"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108490, 1969, 217, 4, 60, "Subsection",ExpressionUUID->"7b36510b-3d1a-487a-8d83-97b0fabef30e"],
Cell[108710, 1975, 654, 16, 26, "Text",ExpressionUUID->"1438e573-5c90-4acd-83fe-39f51d209c1e"],
Cell[CellGroupData[{
Cell[109389, 1995, 218, 4, 24, "Item",ExpressionUUID->"3a87efd3-eae5-48f0-b27f-e15bea9ffa5b"],
Cell[109610, 2001, 241, 4, 24, "Item",ExpressionUUID->"04df8d0c-9d60-434c-a93f-118250135f98"],
Cell[109854, 2007, 201, 3, 24, "Item",ExpressionUUID->"78e88f0a-47cf-4eb6-92b1-ed1ba2ce51e8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110104, 2016, 226, 4, 60, "Subsection",ExpressionUUID->"5844b6f6-6098-4fbe-912f-8e91b1fbba5a"],
Cell[110333, 2022, 402, 8, 26, "Text",ExpressionUUID->"351365a7-27da-4792-86a5-f444650ee4c6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110796, 2037, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c81bdd2a-e592-40e6-9d4a-f5b5e17498f6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[110943, 2043, 374, 6, 89, "Section",ExpressionUUID->"410ee483-6f75-47df-b34b-33f81e7417a2"],
Cell[111320, 2051, 1054, 17, 43, "Text",ExpressionUUID->"ca46e268-24bc-497d-be64-b5c841463d48"],
Cell[112377, 2070, 23142, 444, 239, "Text",ExpressionUUID->"ffc4bee9-faa3-4721-8cad-117f9a210ddd"],
Cell[CellGroupData[{
Cell[135544, 2518, 1483, 33, 24, "Item",ExpressionUUID->"ea6cf37b-4ba8-4312-981b-88561f5e6759"],
Cell[137030, 2553, 723, 16, 24, "Item",ExpressionUUID->"0a786e57-3d0c-4ca2-95e9-86f12fb4eeee"],
Cell[137756, 2571, 516, 10, 39, "Item",ExpressionUUID->"b8eaedc3-04e4-43d1-ab41-ab1aa48fa736"],
Cell[138275, 2583, 319, 9, 24, "Item",ExpressionUUID->"a2399209-c348-4b7c-be06-3164076c6b68"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138655, 2599, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7e5c5a29-7ae9-441d-bd9c-f876c1881429",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[138802, 2605, 160, 3, 89, "Section",ExpressionUUID->"63d98070-dc66-4e88-99f8-eac8884664be"],
Cell[138965, 2610, 888, 15, 43, "Text",ExpressionUUID->"1e0ce35f-e4f5-4e1f-ba68-ca27f01b903b"],
Cell[139856, 2627, 1006, 16, 43, "Text",ExpressionUUID->"3e8b5a97-7685-47e6-8d0b-e21eca57176b"],
Cell[140865, 2645, 288, 7, 21, "Input",ExpressionUUID->"41b937b1-073f-4f09-91fe-9e7208c7cf43",
 CellTags->{"SetDirectory", "NotebookDirectory"}],
Cell[141156, 2654, 267, 4, 21, "Input",ExpressionUUID->"aa10cd4b-175f-4741-96ed-dbebe01c6910",
 CellTags->"FileNames"],
Cell[141426, 2660, 402, 10, 21, "Input",ExpressionUUID->"a8abbfee-e2de-4452-bb5e-fd0c6061d262",
 CellTags->"Import"],
Cell[141831, 2672, 407, 6, 21, "Input",ExpressionUUID->"c0256857-36f9-4c18-b1f5-4f6e90e621b0",
 CellTags->"Dataset"],
Cell[142241, 2680, 548, 10, 26, "Text",ExpressionUUID->"679bdfaf-065c-4525-9f5e-45b0e3aab5cd"],
Cell[142792, 2692, 229, 6, 21, "Input",ExpressionUUID->"0cc7f776-9c53-4d5c-9ce6-ae1dccc40b9a"],
Cell[143024, 2700, 488, 9, 26, "Text",ExpressionUUID->"2ab7ab3f-478e-4474-81cc-c04363272efd"],
Cell[143515, 2711, 410, 12, 21, "Input",ExpressionUUID->"d1586bf0-f630-449d-b2a9-da71b06e1fd8"],
Cell[143928, 2725, 201, 4, 21, "Input",ExpressionUUID->"bc9f8810-87b7-42db-b584-1d1e6ce31d0f"],
Cell[144132, 2731, 405, 10, 26, "Text",ExpressionUUID->"93060a8f-ff71-47e7-a215-d66fc6f77ae0"],
Cell[144540, 2743, 592, 16, 22, "Input",ExpressionUUID->"d9cac01c-2937-4827-9230-08e82b074571",
 CellTags->{"Head", "Extract", "Position"}],
Cell[145135, 2761, 274, 7, 26, "Text",ExpressionUUID->"c4b488dd-3175-4e68-ac2d-8be611518158"],
Cell[145412, 2770, 422, 12, 21, "Input",ExpressionUUID->"9ceab829-b7d0-4d87-9f0f-0e93380cb0ac",
 CellTags->{"Delete", "All"}],
Cell[145837, 2784, 278, 7, 26, "Text",ExpressionUUID->"f37809f5-4f3a-4866-8fd7-45bdd96c0abd"],
Cell[146118, 2793, 240, 4, 21, "Input",ExpressionUUID->"ca63c6d5-c6ad-4376-b892-de8f9a22f418",
 CellTags->"Transpose"],
Cell[146361, 2799, 276, 6, 21, "Input",ExpressionUUID->"ee91cfa5-b032-4e44-bfb8-254f6dca8078",
 CellTags->{"Apply", "Divide"}],
Cell[146640, 2807, 372, 10, 26, "Text",ExpressionUUID->"0423aa3f-88d9-400b-9da0-ae724ed96592"],
Cell[147015, 2819, 516, 8, 21, "Input",ExpressionUUID->"f4483276-9be1-429e-be33-db5165551c7c",
 CellTags->"Mean"],
Cell[147534, 2829, 377, 10, 26, "Text",ExpressionUUID->"25e2adc2-40e0-4d7a-8a1c-c47b0cf9fba0"],
Cell[147914, 2841, 570, 15, 21, "Input",ExpressionUUID->"7ff9695e-8779-467c-b35f-b4517f35e501",
 CellTags->{"Round", "N"}],
Cell[148487, 2858, 164, 3, 21, "Input",ExpressionUUID->"7062082e-be69-4836-b128-fedde17c8428"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148700, 2867, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"310e86dc-6262-4899-a2ee-9f2e58b6a196",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[148847, 2873, 237, 4, 89, "Section",ExpressionUUID->"a8f0a87f-08cf-4d73-b9a6-030a1514f7e7"],
Cell[149087, 2879, 2324, 60, 43, "Text",ExpressionUUID->"01566098-efe8-4d49-8453-142456bd30ee"],
Cell[CellGroupData[{
Cell[151436, 2943, 163, 3, 60, "Subsection",ExpressionUUID->"55392010-e359-414c-bb39-6412b411fc35"],
Cell[151602, 2948, 721, 12, 26, "Text",ExpressionUUID->"31199fff-83e0-40d8-992b-dbf79d0443f7"],
Cell[152326, 2962, 8098, 231, 207, "Input",ExpressionUUID->"1a8fab8b-dd80-46f8-9d5e-898b534277ed"],
Cell[160427, 3195, 784, 13, 43, "Text",ExpressionUUID->"12f93f48-7af2-41bd-8b3d-15a9a5b98017"],
Cell[161214, 3210, 753, 20, 22, "Input",ExpressionUUID->"e243d3a3-eb84-495b-a570-680b6a0616bf"],
Cell[161970, 3232, 426, 10, 26, "Text",ExpressionUUID->"ff88e55e-3fd5-4b9a-963c-4cb82f83ffa8"],
Cell[162399, 3244, 416, 10, 21, "Input",ExpressionUUID->"6d449d33-9054-499b-90ed-d85e9b9464c8",
 CellTags->"ListPlot"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162852, 3259, 166, 3, 60, "Subsection",ExpressionUUID->"7c461a00-b7e5-4aab-b216-6ddede68065b"],
Cell[163021, 3264, 211, 4, 21, "Input",ExpressionUUID->"119876ca-eab6-4be9-9a7c-40114ccc8e7a",
 CellTags->"LinearModelFit"],
Cell[163235, 3270, 455, 9, 26, "Text",ExpressionUUID->"46b9df65-c616-41a3-9fca-f604c7c37422"],
Cell[163693, 3281, 637, 17, 25, "Input",ExpressionUUID->"9b82d719-10f4-4389-b1fa-092dcd297fe3"],
Cell[164333, 3300, 213, 4, 26, "Text",ExpressionUUID->"4b9d446c-4887-48ea-91ea-d79a948c6f7a"],
Cell[164549, 3306, 627, 18, 21, "Input",ExpressionUUID->"bc7bd543-5f35-4d3d-9d0a-263bbbaf9f1b",
 CellTags->{"Epilog", "Point"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165237, 3331, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e549ec9a-a215-4514-ae6d-83b95a5f7e31",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[165384, 3337, 193, 3, 156, "Section",ExpressionUUID->"7469f8ed-2b20-498e-9861-b68e2a82388c"],
Cell[165580, 3342, 1171, 25, 26, "Text",ExpressionUUID->"8028f9f3-f6ce-4a4f-b5ef-a4e7d629f438"],
Cell[166754, 3369, 859, 18, 21, "Input",ExpressionUUID->"ee9027d8-49d2-478c-bd0c-6b3fb0df0ec5",
 CellTags->{"Framed", "Style", "RoundingRadius", "FrameMargins"}],
Cell[167616, 3389, 529, 9, 26, "Text",ExpressionUUID->"7901dea6-bd38-4ffc-93ac-324c3788ef37"],
Cell[168148, 3400, 324, 8, 21, "Input",ExpressionUUID->"b30cb504-5602-48a9-a5df-b8d863693308",
 CellTags->{"ANOVATable", "AdjustedRSquared"}],
Cell[168475, 3410, 389, 6, 26, "Text",ExpressionUUID->"d8e7ba58-e277-464c-9ec6-2956a5481816"],
Cell[168867, 3418, 1108, 31, 21, "Input",ExpressionUUID->"11a3b6eb-b003-4fcd-935e-8549ee725c3d",
 CellTags->{"With", "Join", "MeanPredictionBands", "Filling"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170024, 3455, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2dcf0678-1d37-4d69-80f9-0352ff8d1318",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[170171, 3461, 177, 3, 89, "Section",ExpressionUUID->"05cd86f5-ee47-4fc9-badd-9cc8d8efb6fa"],
Cell[170351, 3466, 690, 12, 43, "Text",ExpressionUUID->"9eac0dac-0c8e-43e4-ae14-df003c779642"],
Cell[171044, 3480, 379, 8, 26, "Text",ExpressionUUID->"877c84c5-6a85-4448-a41e-f89950259a3a"],
Cell[171426, 3490, 494, 13, 25, "Input",ExpressionUUID->"d951bafb-2327-4171-9edd-2a97b01f0eef"],
Cell[171923, 3505, 314, 6, 26, "Text",ExpressionUUID->"b14f9a89-b116-4bf4-acad-bd940d51ad33"],
Cell[172240, 3513, 486, 11, 21, "Input",ExpressionUUID->"bf47ac02-1412-4fbb-86d8-dd2553ff745d",
 CellTags->"Column"],
Cell[172729, 3526, 765, 18, 26, "Text",ExpressionUUID->"91f3b7ce-4f70-4437-adff-2d4e5c6c279c"],
Cell[173497, 3546, 1499, 39, 50, "Input",ExpressionUUID->"1c0e400f-4574-4796-b60b-952ba5c9611c",
 CellTags->{"Table", "Flatten"}],
Cell[174999, 3587, 387, 7, 26, "Text",ExpressionUUID->"6cc9da2b-ecbf-4543-a664-354825e1b41a"],
Cell[175389, 3596, 261, 4, 21, "Input",ExpressionUUID->"633d3123-8894-4004-9b59-4dc1399c0a14",
 CellTags->"Through"],
Cell[175653, 3602, 295, 5, 21, "Input",ExpressionUUID->"7947112d-763e-459e-a22f-6d265368532c",
 CellTags->"AIC"],
Cell[175951, 3609, 339, 7, 26, "Text",ExpressionUUID->"d75c0ed4-c810-496a-b800-8d08697bb636"],
Cell[176293, 3618, 467, 12, 21, "Input",ExpressionUUID->"6bc2fc90-7310-46fa-b8f9-14bb4c6f978d"],
Cell[176763, 3632, 291, 4, 26, "Text",ExpressionUUID->"6848c953-c4bd-4f3a-a08c-d215113fa128"],
Cell[177057, 3638, 1527, 37, 21, "Input",ExpressionUUID->"79d17339-0462-46e4-b3d5-d4ccfa4c750a",
 CellTags->{"Show", "Plot3D", "Graphics3D", "PointSize", "Medium", "Point"}],
Cell[178587, 3677, 424, 8, 26, "Text",ExpressionUUID->"4f7bb0eb-6dd6-49d7-b7e2-43a91392bce9"],
Cell[179014, 3687, 658, 19, 25, "Input",ExpressionUUID->"2be10696-f246-4a2e-b88b-6f95f71b3b58"],
Cell[179675, 3708, 266, 5, 21, "Input",ExpressionUUID->"072da5ca-26c5-4576-b93c-07633b9aea7a",
 CellTags->"FitResiduals"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179990, 3719, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1d33df8a-f70a-4443-8eb3-686178d1fb57",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[180137, 3725, 234, 4, 89, "Section",ExpressionUUID->"0b444378-c129-404d-ac6b-5f48c0ffc0d0"],
Cell[180374, 3731, 505, 9, 43, "Text",ExpressionUUID->"cd3ea05a-0201-4cba-80be-a7389028619d"],
Cell[180882, 3742, 797, 13, 43, "Text",ExpressionUUID->"f213d239-1aa5-430c-9505-8f7cdcce7b0c"],
Cell[181682, 3757, 867, 19, 37, "Input",ExpressionUUID->"3484267c-b81f-46d1-83b7-e0f16dff14a8",
 CellTags->"Dimensions"],
Cell[182552, 3778, 512, 9, 26, "Text",ExpressionUUID->"f95ab26f-8325-4e02-b373-70d03cf2c2b1"],
Cell[183067, 3789, 275, 6, 21, "Input",ExpressionUUID->"20752cdc-a5ec-40b9-8ac5-7972a807b2d0"],
Cell[183345, 3797, 356, 8, 26, "Text",ExpressionUUID->"b12a67bc-1659-4c5e-abe6-2a7d82f3a5c9"],
Cell[183704, 3807, 375, 11, 21, "Input",ExpressionUUID->"6f9cb064-45bf-425c-984d-565f4f92e598"],
Cell[184082, 3820, 270, 7, 26, "Text",ExpressionUUID->"f77a7fe7-086e-468d-9e52-005610c16c8b"],
Cell[184355, 3829, 463, 12, 22, "Input",ExpressionUUID->"6c1676c2-7bb1-4c37-998d-78058f326b6e",
 CellTags->{"NumericQ", "Cases"}],
Cell[184821, 3843, 343, 8, 26, "Text",ExpressionUUID->"2b0fcc51-ac7f-4ceb-a08d-23650810b8df"],
Cell[185167, 3853, 681, 22, 21, "Input",ExpressionUUID->"f62ac03c-54ef-40dc-b94e-ecae37487da2",
 CellTags->"ReplacePart"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185897, 3881, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"d42989ad-7606-4b7a-b6db-77b9590b15d8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[186044, 3887, 276, 4, 89, "Section",ExpressionUUID->"dcc56c25-67fe-46ff-9976-38643f1a7784"],
Cell[186323, 3893, 397, 8, 26, "Text",ExpressionUUID->"2a088bec-a3a4-4f8e-9a42-8005951f7e76"],
Cell[186723, 3903, 270, 5, 21, "Input",ExpressionUUID->"bb2a96bc-6cbb-45a5-aa2d-bef57f3c5e82",
 CellTags->"Mesh"],
Cell[186996, 3910, 1008, 24, 26, "Text",ExpressionUUID->"1759b499-85a9-4a32-9b8a-48977a894262"],
Cell[188007, 3936, 229, 5, 21, "Input",ExpressionUUID->"73af1767-b145-4690-8271-a975ce605be4"],
Cell[188239, 3943, 553, 16, 25, "Input",ExpressionUUID->"b2639c48-e1fd-4a1d-b680-4b7f3d192b41",
 CellTags->"NonlinearModelFit"],
Cell[188795, 3961, 149, 2, 21, "Input",ExpressionUUID->"dd2032f1-369a-4b82-8a08-38d874fc1df1",
 CellTags->"BestFit"],
Cell[188947, 3965, 228, 4, 26, "Text",ExpressionUUID->"ddd3393f-bca0-425a-81fe-90de5e7bf846"],
Cell[189178, 3971, 1010, 23, 64, "Input",ExpressionUUID->"83e77c49-36b0-450a-8035-6f587c339e07",
 CellTags->{"ListLinePlot", "PlotMarkers", "PlotRange", "PlotStyle"}],
Cell[190191, 3996, 629, 16, 26, "Text",ExpressionUUID->"59ee851a-b46f-4734-b91a-a0664605654b"],
Cell[190823, 4014, 414, 10, 21, "Input",ExpressionUUID->"060d38e5-838a-4819-ad3a-4b0b4d346924"],
Cell[191240, 4026, 543, 11, 21, "Input",ExpressionUUID->"fa1d7830-5c82-4e82-a0c0-f271074b7947",
 CellTags->{"FitCurvatureTable", "ParameterBias", "AICc"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191832, 4043, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9057827b-1983-4ece-aad0-cfefc6ac35e8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[191979, 4049, 222, 4, 89, "Section",ExpressionUUID->"1954165d-7aaf-40ca-a909-b23221a89cf0"],
Cell[192204, 4055, 1175, 28, 43, "Text",ExpressionUUID->"6b8b335e-7db1-4233-a4c7-3a4a617de32a"],
Cell[193382, 4085, 684, 15, 21, "Input",ExpressionUUID->"7fa4712e-5060-4df4-a90d-115e6c590c98",
 CellTags->"ConstantArray"],
Cell[194069, 4102, 1133, 28, 25, "Input",ExpressionUUID->"ab35c3de-bbbd-45d0-a383-b07f38f16a68",
 CellTags->{"Weights", "VarianceEstimatorFunction"}],
Cell[195205, 4132, 3300, 76, 107, "Input",ExpressionUUID->"6edff7c5-47a2-4156-bf3d-3cd5e37474ee",
 CellTags->"ImageSize"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198554, 4214, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4876aa59-8ef7-40f6-9576-dd393f68e44e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198701, 4220, 149, 3, 89, "Section",ExpressionUUID->"81528398-8394-472a-a426-41addd2d6337"],
Cell[198853, 4225, 1154, 19, 43, "Text",ExpressionUUID->"9a3465a0-465e-4020-9a2a-82d2ed63f6a4"],
Cell[200010, 4246, 1186, 27, 62, "Text",ExpressionUUID->"d6857d29-d5ae-4748-b21c-31d00d514281"],
Cell[201199, 4275, 893, 23, 26, "Text",ExpressionUUID->"ccda55c0-81dd-4c67-8a0e-e83677c72278"],
Cell[202095, 4300, 963, 18, 43, "Text",ExpressionUUID->"2335d6ac-06c4-46d3-b535-8866ff96e516"],
Cell[203061, 4320, 238, 4, 26, "Text",ExpressionUUID->"2458ce90-2951-409f-afa9-a004c1dd0e18"],
Cell[203302, 4326, 250, 5, 21, "Input",ExpressionUUID->"2a564516-f540-4f61-968d-200ac75c9278"],
Cell[203555, 4333, 281, 6, 21, "Input",ExpressionUUID->"710eeddc-73f0-4994-a2e1-11fd7e23ba0e"],
Cell[203839, 4341, 196, 4, 21, "Input",ExpressionUUID->"8eb16780-e2fb-4a6b-a346-abcc7752edea"],
Cell[204038, 4347, 314, 8, 21, "Input",ExpressionUUID->"4036b906-3913-4188-8056-4ecc4e8812ed"],
Cell[204355, 4357, 672, 16, 22, "Input",ExpressionUUID->"37402914-b043-4250-b4bd-7b4b5f9e69c5",
 CellTags->{"ToExpression", "StringSplit"}],
Cell[205030, 4375, 486, 12, 26, "Text",ExpressionUUID->"4e9349b9-3150-40ec-bc0d-45a659d9d59b"],
Cell[205519, 4389, 774, 23, 37, "Input",ExpressionUUID->"37b55b3e-7499-4000-b347-653d6f056f02",
 CellTags->"ParametricNDSolve"],
Cell[206296, 4414, 973, 24, 26, "Text",ExpressionUUID->"a6bf2dd3-babe-4646-98e0-0e15582ae8b1"],
Cell[207272, 4440, 444, 12, 21, "Input",ExpressionUUID->"67641744-11c1-4837-ab2c-94885bf93d25",
 CellTags->{"Quiet", "Most"}],
Cell[207719, 4454, 212, 4, 26, "Text",ExpressionUUID->"893be19a-c3ee-4088-8670-f9c9bbd46015"],
Cell[207934, 4460, 342, 8, 21, "Input",ExpressionUUID->"8f99edf3-b640-48f8-94be-f8ed620ec933",
 CellTags->"Epilog"],
Cell[208279, 4470, 505, 9, 26, "Text",ExpressionUUID->"f934a287-9239-40f5-bed7-cc866cb0b52d"],
Cell[208787, 4481, 335, 6, 21, "Input",ExpressionUUID->"dc42d992-4a3d-45ae-b07c-a42a535933b8"],
Cell[209125, 4489, 278, 7, 21, "Input",ExpressionUUID->"59937c86-cedf-4bc0-8421-dae0efe0ba34"],
Cell[209406, 4498, 309, 7, 21, "Input",ExpressionUUID->"a54f3eca-d091-4612-889b-e5ad2f4cdd3e"],
Cell[209718, 4507, 219, 5, 21, "Input",ExpressionUUID->"59041c19-b8e0-4e91-a0e0-f9d5b0d3984d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[209986, 4518, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4b49a26d-26ca-4c6d-a401-2a8b9be62480",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[210133, 4524, 82, 0, 89, "Section",ExpressionUUID->"6df815f8-597e-4217-a474-47b23a9d8382"],
Cell[210218, 4526, 16543, 522, 219, "Output",ExpressionUUID->"f199cf4a-acc6-4b5b-b247-23489b06bdca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226810, 5054, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2c92a90c-ea40-49dc-a6c7-5b06f3570df8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[226957, 5060, 90, 0, 89, "Section",ExpressionUUID->"7db081a2-0183-4932-8c7c-13ee92c60d90"],
Cell[227050, 5062, 171, 3, 35, "Subsubsection",ExpressionUUID->"d42162d7-9dff-4b95-8783-f2d24c4cdf7e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227270, 5071, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b6dce450-a684-4b08-b227-0ebb856e8df5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[227417, 5077, 161, 3, 89, "Section",ExpressionUUID->"938ef96c-0222-42e8-a497-d66828945349"],
Cell[227581, 5082, 626, 18, 34, "Input",ExpressionUUID->"01a2d017-f187-4a71-a271-83cfb061a531",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

