(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    457855,       9199]
NotebookOptionsPosition[    419910,       8398]
NotebookOutlinePosition[    450809,       9086]
CellTagsIndexPosition[    450729,       9081]
WindowTitle->Overview
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fee139d7-840a-4bd9-8549-beccede17cb2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXQfYHUXVhhAIndAOVbj00DuEIiQQurQA0jFAIIiEkoA0hY+qQGjSUSBS
BWnySy8JoAgiGEOVGnoTfwQU+Gn/vM6Z3LnzzezObPnu/ZLzPs+BfLszZ87u
3t13yplzFtvnkKH795lmmmlGz6j+M3TvIwePGrX30Tv0V3/sdPDoH444eL/h
Wxx8+H4j9hs1cJ/p1MHhSh6adppp+k7THtCyG82qZA0luys5Usk5Sn6j5CEl
Lyh5TclHSj5W8q0l3/DxD5VMUvKsknuUXKXkNCWHKtlRyfJKpm/T5QkEAoFA
MBmKj+ZVsh3z1O3MX98GBDz3rpJXlExQ8qSS8Uoe4P8/yMcnsp5/Zuj6Uskz
Sn6r5KdKNlIyc7vvh0AgEAimbCiumUvJbkp+qeR5Dz+9y7z2CyUHKtmSx4YL
KEkeoqo6/ZQ0lKyjZKiSUUouV/Kokn85bX/Fx8dwu/3quAcCgUAgmLqg+GQR
JSOV3M/jMMM7n/K85XE8HpsrR08fJXMrWUzJKkrWVzLIkYFKVlSyqJLZI2xb
iMejY5gDbfs+UXID8/Yc1d0RgUAgEEzpULzRX8kBSv7kjLkeV3KsktWVTOep
Ny/zGcaCZym5hec/31HydcY8Z0i+UPI6c9x1Sk5VMkzJmkpm9bQ/M3My2n7F
mUe9lTlT1hYFAoFA4IXiiJV4zvPf1FzTu595bWGn7Aw8pjtGyc1K3irAc2UE
tmFu9kolP1KygpJpPdeD9cOJVj1w8glKFuzZuysQCASCToXihMGk5zgNV7zG
4z6X+xZXcrCSO5X8p4d5L0Y+4HHjHkrmcWxfTcl51PRT/T8llykZ0LN3WyAQ
CASdAsUBG5D21TQ8gr0N25I150l6PQ9jvic6gOdSBPOwGMuOUNLfuh7s6/ih
kpescmOVLNGepyAQCASCnob65i9Jer3McMZdStaxzmPOE/4l8P38pgM4rax8
TnoP42DrGuG3swvpfYpmfHimzZkCgUAgmLKgvvEzKjmRtP8Jvv3wg1nXOj8P
af/P9zqAu+qSp5QMB9fzNYMPsef/dT7/Pv5u31MSCAQCQR1Q3/a1qLnn720l
uxL7lTD/Ye/Bpx3AUz0l4L2DLT6cibRPzed8HmugC7X3qQkEAoGgLNS3fDrS
Y7yv+Pt+EfHePP7245wb42xqkldJ+9WYPgHmjB/gc4hps1N7n6BAIBAIikJ9
w0nJffxNf1PJEOvc9pQdB62nBPOU/9sBdvxBycp8b6YlHTvA+MQiPs4M7XuS
AoFAICgC9e1+g7/jmOObi4/NTzouZ7t5x8h6Sg7pADsgGDOfQhyTjfSeRDOX
fEt7n6ZAIBAIUsHfb+yF6MN/I+7mBx3AN0auZbv6ko6b3W57jCDe9wC2bTbS
cQUmtPNZCgQCgSAd/E2/lf89qAP4xRZwy0KWrUM6wCZb4DM0H9v2kfCgQCAQ
9D44PLhdB3CLLcewXYiJtg7/+5YOsMuWBtslPCgQCAS9EB3Mgy+T3suI/BPw
yUT8buzjQ+yazzrAPuFBgUAgmALQwTy4Ldt0kXVsXz52UgfYJzwoEAgEUwBq
4kHk9EM8sscK1r+b7VmZWnMxIYbNHKRzJ71RQC/iv/1eycbkzxEsPCgQCART
GWriwQcs/eswL34VWRd5AJclvT/vQc/5s1nvLgn2wJ/lfCVLW3ZVFRegwfqE
BwUCgaAXoiYefN7TDnLWn0H5++HzeC6PJ21BbqgjyImLTXo8WcV1Cg8KBAJB
L0dNPPix0wb25U/P/0ZOI/h/vuCph/jVMfOeoXlTI48o2UlJXy6H/X1zWPYs
LTwoEAgEAqAmHvyWuWx60vmZwG3Yq3+0krm5Lfh+fo+aMd0gw/lcjB+M60eD
cSLy665lXRt8S88mHRsH48dZ+fgGwoMCgUAgAGrkwaWZA89h3WuSzt+HeJyX
KFnWsmFF0rmeUvZF2PsqTlaysKUPPHcz6bEi8mYghipiiZ/L51PWFoUHBQKB
YApGjTy4AeuEj+fW/O/DnDLI7bsZcR4HLnNNQhujrXrg3D2VPGmdBw8O5vNd
aI//PUp4UCAQCARAjTy4C+ucSHof/HdIz03+j6cs8r1vz+UR3zQmvz14Z0mu
M1rJO54yXXx+EHPi5fz36cKDAoFAIABq5MFRrPMu/hs5ixArey7S+Z3c8pgz
Hch1uiL0b8Nl9w+cH096LhRzom/zsVO5zrXCgwKBQCAAauTB01nn5dYxw0Pr
k38/4VtK5iO9TnhHhu6TWc9aSr7wnIff6YKkx593WccP5HoPZOgWHhQIBIKp
CDXyoMmXdKp1DPOdm/LxA5iv3HrjSI8b51Tyiuf83aTHefMqed1z/kUlG3Mb
RznnhvLxqmLJCA+2CdxXQl9neSWrsCyhZKZ22yYQCHoXauTBB1jngc5x+M3M
xufAd1souZp0zBdTZgyfx7fN9h2dRNo/FDx4n6PzXCVrW9cFH1R3zGnmXauK
JVMLDyo9Syo5p4TMVaC9VSyZO7H+9gXtjOYs0n5Q25LeJ/M38s8DGMHe0xtJ
97WSrsVqb8OSz+CIIu0GbNmtpC2psnkNNmBN/jjS+bR3IN1/ma6qe1QGpPNq
27aOqKGNIu/I8lXbwbbMXMCWDStot+x37ZyINorqrosHn2edQz3nljH3xbJ/
Fn7Xbie9VrgTH/8B1/lcyRp87OekefNKvLP2+6T+vRT/f5in3UWo2lgydfHg
oCpsimwLc8fvOfV/kWjvOQXt7B+huz/p9eJ/FGwDfDnW/q1FXtOhJZ9BZXMD
bH+Vv9k86eohGz5RcivpfUwzVHW/UkB6bcW1C9+WWStup8g7cmGVNli27FrA
lkMraLfsd+3biDbK6K+DBz9mnQM951axbH5UycFKyLoWzHnupaQf/32hkn34
34hNs7OSma3yS5H+VmJO9BE+5uNBjCmqjCUDaXB7VfLgGqT9bH0+sCFBzmLM
905QsmBCW6t6dL2UaO8R3C78n77MsfMLfk4oP1uO3t2VfJijD77ImCd4i7LH
iOhb/ZQ4xlDENaHtp0j7WPliFoXkQ34O16fcwxxbsLf2mcTfQxk5LWDDszXa
gDWO3aq6Zwn39sKAPXtW3M4R/AzfTrgn+C1V3j+gbN8LW8z+a7wHu1fQLr5r
E/h9/b+E+4Bv20sU8X1l/fi+fBKh9z9GL/9dFQ/im3QnaU7anHXC78X9Pq3G
5z6yjmEOEz4te5DTFyPP/AnrxRzLnx3d4/n8Qc7xl/n4TKRjro0h7cNaNpdh
w7qWytcHlc5lqHVPpCu4bz/w3aNI/e4aqpGk8ZOlD7GDQvtSLnWfbUAH4hD9
MqDjM9aDfadu3FisGaJPhLh9fwvUH0fp88Zz8+8l63fwsJIVUu9XKkjvP8ra
Y4u5kkERgr7kBdS6HmEkc/6JbfhNhg3w4W5Ygt8wvoFbKzlGyf0U3ht1WdHf
coF72Y/C8Y7vqbHd+TN+365sV3Hb8J/P66t+y7/3pPck0Q7EQBlOmotCNrzJ
73ny74G/BRspedWjF9y+JbXOI+J4ER7E9xffZ6zX/IB/69M6tpiYoj926g7i
4x8FdIP/ESNtK6ODyyNOKMaJ8JUJ9dHv4bLuvNYQ2yZLZ19+R/HtxDqlL+5p
23iQdeNbEuo//bak7nEBvaXmQUj3IW19/82jHFEPa7+3BGy6jdLGuvit/Muj
B7Ylv+MU/vZjzjZ3jrcq8Dvu9v+MDEvUhd/W3x0dF0TUw3P6a8CG3G+3KrNC
Rv2LU66hKFQ73894r8HTC9Xc/viI70up99vT5kjnGn1t/qbKNnPscccrtqxT
gf6VPXo38JSL5UFw6E2kOe27ZM1Lcl3wyeqk/WKwbvcCfx8W4vfWfuaDuI5v
H2G3bwyXxXxmzNjNXIs9zjmLj2G/BsamT5CeD9mT9br8jf4/+guIc3oPhfm6
R3iQ9d8QaP/MEjoR8zzEr3eXtNflsqh+Lekxis+eMe5zitQHf6kPPPowFzB9
voYWXdsEbLsy1a6yID3PVpoHWddK1PpNHBtZ79iADbHPGv3aiQEdW6VeRyqo
dX7Q9x78uOb2RzjtPe6xAd+ryvpY1JoTNsTD21TVXoQ98wRseKXCNp619L4W
KBPDgwd56i2sZEfSuZTwTQmNb8Ej8MXAXIrhE7MHflKgTotw2VViyiq5mct3
8d94zzD/MXtGe5iHx3wu/NlC822XB+o2uEzdPLhboP3bSugMfdch8EuaOV9L
ULc9l4v58lzOyfj9YW4gmQMtvciB6duvekaiHt9aKuRnRW0rCgrHyB1WUJ/9
Tfx1ZB3fGnw0D7KOdQM6/lLkOhLaxdykmVP6OvB+P1WzDe7v/ZDAvdi/ovaW
cvTuF2hv1SraS7Drc48N91Wo3/5t/yFQJoYHwXHrcRnwUWou+EO5rnl3t+O/
o/bxWe3GtDWWy5/E93dF/vuqRJsxZpyL6+6bUa7BZermwTnJPxeMeb8o3w+P
zvNz7kGhfiHpcabNO1dH1IG/sG9+AH4Zc+TVj9D/M49u3M9VEnSEfoNdZe1L
Rca7OqygvlMsHbdG1inNg6znmYCe2tZble7DrXYwP7ttwIbaOMHzDNHP8vXV
H66ovRMsnRgXDgpcc/Q7UZFdvvm2qN9gpH6bB8cHysTwIARjpgFc7ric76cr
Nh9hDW43/veEmPpcNpUH4afs8m+s4PtoxqxbUra/YMN6lrXuoyedu8pnQ7f5
7kh9L+Xch4sK6t3S0bNHRJ1jAjYcWMQGj37sv/D5RET3OzN+g11V2JiCjHd1
WEF9dl+vp3kw5DNSybMPtPm01Q76SNhP5Vt3ObtGG9xniN/XKYF70aigPft9
x7qc8GCzTCwPQtBXWYDLXpJT1hX472F+Ev6EJgfEX2LqctlYHjyPyyO3oZmP
DfmEhWQE61ibsv2ZepoHXX8jI9383CN0Le7oeMyjd1JBO39h6cC60zw55bGf
xedPjns6SxEbAu2E9nCtGVl/SubBzSwdD0TWqYoHR2e9y1WDtF+c3Y6Z67rN
Y8O7VJP/qucZ4ve1TOBeHFuyLXv/GvxF4TcqPNgsk8KDEIzhwGXTBX43WXJm
hn1V8eA5ln6s641LtPEErou5dJ9/hSsN61nWzYPLB2yYWECXHecH89wh37nk
uSlq7Xc+HlE+NCc1NrXtnHbWDrTzq8j6UzIPzkTNeEJRe2aoOh7cO6DnmiLX
EtGevR6A/lcfPr5nwI4ta7KjGw/ycZ8v8N9LtmX7n93Bx4QHm2VSeRByL+k+
POYSHomsY2TjgH1B4bKxPPgzS39o/BQSrJVjDIm+0suRdRrWs6w9vij598NA
Fs6v3aLnd851Y97Q50tyeKLeJZ36J0bUuS5wTTultB3RDvpFvrg0eHb9IupP
sTxY0IaqeHCPgJ4barAZ3y07NsO51jn4r/rmRq+r2g5uL8SDIwP3Y62C7WA/
rt2n35WPCw82y0xuM+Pd8gnW+cAZ8Ht19x+FBL7J51ltYx0J+Qiz4oDE8iD8
ReALsyqXxxzsvQnXA39R7P2Aj8cTCfUa1rPsCR48L2DH8AQdeC/seAsmV6Sv
XxI1R2bpPtipn7kHiH9DoXH3AiltR9r3+0BbgyLqCg+22lAVD4b8Fi+pwWY3
zuMazvmbPHaAG2evwZYQDyKelm+v+7l5OgPtbGXpQNyEmfm48GCzTFEehJzB
9RYjPY8eKod1QKzLeteJSM+zYp3+Lt/z5zK+bxCeKfgYcSq8/XnSOQi6KDyO
gmDfDsa201NrnqZO5MHNA3bcnKBjQ6ve5PU79f8jPXq/TPkGkO5PmLrod2eu
rajzywWu55+xbaaAwrFuuiLqCg+22lAVD4b2IR5Sg832Ws6znvM7BmzZtwZb
vDzI53z5ypGfJ2nPK+uy4z9caR0XHmyWKcODk3+rpH1+7TwOb/E3ZzmrrWmt
f2Psdhe/S3NYx5Gnt4UT+bj5Bn3KzxUx62ey6iGGNtbbEa90tHXczP1j3IHv
P+YA7bEQ1rLm5fNjC1x/g/X3FA9inPtvjx0fx74j1JoL6wnr+AqBaxwaqRdr
TPa8Uu58EoV9eWvZP6b0/jDQXu4+TBIedG2oigdDebGXy6+d1M581NrPPspT
Zibyx6YcX6Ut3FYWD4bW65PiC1D3ud5NrXPCg80yZXkQewp25Pqb8m96ckw4
0msyQ5T8mjh3B3WfO8O8KPo/WKe2ORFzrgfwvxeg7tyH/HOYS/+jow/rXBtw
GcQ6PMv5jWHshzUJ9A2X5GMhf+WO4kFu69aALYMi69t73E91zr3m0RvrR7KZ
U2+viDonBq6l0nhSVnuh8fSkiLrCg602lOZB0v1PXx7RyvZRW22NsvRjHsS7
pk46HpZrD8ovWrE9WTyI+Ju+mIBJMc+cZ4S9uHZMTeHBZpmyPGh4bH1HL+KV
Ydxh9tyfxMfhv5sVa9xwIuKndIvJTE3ue5jC8fHMM5+f3zMTPwm+rocpmc/R
6cY36nQeHB6wZUxEXXLu22Dn/EUevfCpy43nQq37EtAGRdQJjcFzc40VAYV9
btF3yox/SsKDrg1V8OBWnvroW69eg7127PV7M8q5/TkjpfYueNoJ8iCf9+2r
TFqrpFYfibOdc8KDzTJV8CDmQBdhHfCBftQ5j5y52GeB8V1KLBrs3VvGshV5
IrK4z5Xx3C7mWidZxzE3Aq7diPVuSGl5QNrNgwsGbHk6oq7tm4f51Rmc898r
+m5Qq7/Uk5HXElqP7YqpnwrScaVDz3L+nLrCg602lOJB0j7KL3rqH12Dre6z
C8Z24G+Gz9+h1N4FTzt5PPjdwP3dO1I/vhN2DBDXJ0h4sFmmLA9i7L4y1x/l
OY9YWcS/rRT/TcjprBe5MjG2wxzr/Yk6TmMda1J3v1Rwn8lDkRV7vqN4kNsL
+bQuklPPnvO53XM+FFfjmBy97r78kyOvw53TNtJt7aYKkF4LDj3LpXPqCg+2
2lCYB1WZAeTPN3FcTbbacxVY/8uMz6DOnxu4tkJ7FwJt5PEg5rJe9dgwLlK/
HZ/gOc954cFmmTI8CB4xYyqfvwPGXevy+dA6UEgwpoT/JuJqYs0KHAoeBB++
n6hrW7bB5yPxL2r6Kx+WqLedPHhCwJ4RGXXc3PNefzxq9fk04o1Pa9Vx86es
n1XeqheKrVc6/3Wgvf4ZzzLz/afewYOI2Ts+UQrNQVMkD5KOHbsQ3z+sQdxI
3feqvmve06pB3ffPjY2o48tTDzm/QrsyeZDLnOSxAXNi34nQb/czus3pkvCg
XaYMD5p9Z8h36JtXNPE9t6C0+Uzcl8W47s3W8WP42KaJdiKu2hJc1xdvG+tf
i/L5MxN1N6xn2ZM8uGbAnuDvh7rnS/D645F/Hy/mV+bM0G3vy8P9jopFRWEe
HBlTPxWk/Q+mZB4sIuML2hDiwRQB/yFHWm5+5qLw3KvB+bX+W883Z4s4DMl7
FyLt8vHg0oH7dmSObnc/0mKeMsKDzTKT20x8t0ZzHeQ59Pk13cDnFyWddyfl
3TD+pz9yjqMPaWIB/jxRJ/pG8IlG3/Rpz/nnSOcdxJgpK9e2Kw3rWfYkD/Yh
/xoG5nxmCNSxczK+kaHbneM0snOgPLjFjsN6fcJ1hPLJHharIwWUPR5cMaeu
8GCrDWV5EM++Ek7JsdP2r8bcUm4+aK7XFbC7knGr5xl6+Yf8sX+fydFt51f5
Y6CM8GCzzOQ2E96ts7k89uy9ZR3HPKjZEzgTl4Fviy+/ZEgu5nr45vjyUsHH
Gn4vmOv4U6ROjFXhq7Mm68Y+IrPX0C6HtSqsjyH20gORuhvWs+wxHuQ2QzkR
hwTKj7PKXJ6j+zmPXm++WeruXzcs4RpC97krVkcK+DcbepZ5a6u9gQeH9aAN
IR7EMx1rCWJdhOaDas23S9o3z56rOiWhbmgsdlNFtsXyoDseMOLNCUW6L2/v
fzogUE54sFkmlQdv4PsMLkKeX8yXwXflAOJ8fawL4y573zzW9fYhPc/p26cK
eYr02AKxzbJitd3KNjQonEsCY6UrSO85nM2yA7HT+ll/I94MxknGpxr2wadn
Dmr1s+5EHnRjRBk5y1PWzT2/S45u3/ww1mW79aWpex6HTL9Lp25o7F1Lblvq
Hv/Ulhlz6goPttoQtT7IZUO5lfC9rnNO1N2rnOkL5anvm6+Av11wjSBBdywP
gst9cda6vedcfkOrDN75uQLlhAebZVJ4EPpmYMG4e6T9zSMduwB74U3MUPiK
Xko6n8AsVjnUH8LfT5ObAD78y/J53z5WV0Zy2R2sY4jfhrkMrJ31sdrD72gv
JdfzPTexSLGnenqrHHzYjldyEP+NtX3fHt9O4cHZyB+b1ecbtrV1PiYX0kaB
613DU9busyTdA1X+7EA7UXv3U0E6N72vvdw4biQ86NqQwoN4B0PrI3Xm+Hsy
0GZZCfqjJdgWxYNc9nceG1r2xVtlL7XK/C5Dp/Bgs0wsD04kT15w0mtuO5OO
T+vztzeCOU74IcKvsOHoQM4t41e6V+TvEN9/E1Mb83LzOzrxzULcQsydZvno
/JN/NxsHflPLZby/beVBbje0F2VRp9wY69wTIX1Wecw7f+zR+xOn3GLO+aRx
HOl5BJ/996foSWhvt0B73jUUp67wYKsN0TzI5UPPGnNK3fpXFdi3UuS3pIg8
UoF9KTy4U8COzZxyiLtoz5EFc7aQ8KBdJoYHsfd9YaceclliTuvTgr8jxHhZ
zNGJOcuUPRF3e65nPdKcXcQmtI0csos4OtenMMc3uEy7ePCQgF37OuXsnMen
hvQ5dW726B3nlHFj22yQaP/6AftfTdGT0F4opvNFEXWFB1ttSOXBPhTOvQ0/
tr4V23eWpR/zipMKiq8/CInK05hhXwoP9iM/X1zjlNveOod5r+BcPwkP2mVi
eBB71brtVyEdrwDzkoinjThnebnb4aeJ/TCrO3oWsf4dWhN2BX1IM4bEmuKC
lg6MZTC+Q77Nt3L0oO8E3x7Mp2J/x1yObViHxHg1tI7V4HLt4sElAnZdb5WZ
g1rjSsT6je/j0Ytx/cxWGfu+4B4kfctIzyf49tzANzg3J2AqKOxbtHtEXeHB
VhuSeJDrIBdyaH7miAptQ5/a9qe+toSu3et47p5nmLdv51KPDRiHzGqVsfuu
eb5wwoPNMjE8aORtvs/Iz7MBOTEZ+Le3Gun96ljjw7oR5iWRD3cpqxy4BftU
scaIfb8fOufuybEDYufbbfC7Zdpa0tGHdw/7LODXg37nRfwOg99a4maS9v8B
H4IXwY8hP5yO4EFu+3mPXdg3bHJt2LGlu8VSy9C7QOCaN+Hzbu7AGwva/3Cg
nczchQXb8u2ZwW9nvoi6tfAg6fk7M/a4I7JOr+RBrhfymUE/evGKbHPjA25R
Qhd8zHzzXi+7349Evak8GIqztiefx54g218gs79Lnc2D3eb6SuivmgddQZ89
k1esdsCRZoz2pqPnIy6DcQvmThYO3Bsj8OPEPEF/rtfwlIHvKcaeq2XcHx9v
p1x/p/DgmIBtq/F5e69lt1hqObp9fgYmVt3KzvF9Cto/OmB/1XGN3RjjRh6K
rF8XD9q+Xn+KrNObeTDLZ6aS7x/pmDVGJ2IolZpzVfWvCdi7XgmdqTyIfucr
Hhvu4fP7W8fwjc2LG98pPPgPjw2Z8asS9dv7L38fKFOGB30yeZ6RdeI3/+uM
3z3kEy6L78xh/O89AmXR3zHxTK+x6mXZhH72GZY9sfO4vYUHQ7/nw/n8Q9ax
pNym5I+H9xifO9Q5vmCevkAbmF9342xBomJ1J7QTytMRlWM143fWVdKuwy1d
4yPr9Foe5LohnxlI7hx1ju65qXVcVDp3Cek5Ip+tl5TQmcSDXMcXT/Frfoce
tI6dHqGrU3jQ588xqUL99rjrqkCZqnnQyPusc4OY8lzW7J0fwH/f5Cl7NJ+D
/9QXVr0Ym7AW5Rs7lpEG29BOHuxL/vEzYp1hfG3v1xyQqHugRy/W87Ame4N1
bGLJa7gucH+D4/kCbfj2gmENKXPfoFW/Lh680NJ1Z2Sd3s6DWT4zmGufu4Rd
bqzb0jmc+B17z2Mr+v2F1rE9zzCGB5cK3DP499lzHStH6OoUHvR95yG5axUR
ut3vvTeOO5+rgwcnss5QvvEW4bImfsNf+Hc3L7WudT9Ceo879uRjLG3mU9eO
tAl7qPtVeI2QBtvQNh7k9q/32Aab7DiDrxfQ24f88xbrUms/67SS9q9I/jFh
JevlSs8mgecXHceU6uPBe1OvN+NdHVbGlhRQ+bxLWT4zV5Swy+7vdNtLW0Jv
KAdFcG9Cjr5kHuR6eXG0ovqk1Dk8+OOAHT+qQLfrT79xoNzkdy/j3Soid7FO
Xy4mnyCemc3dXVx/G/4b/h1L8TET09nwYOh5urI+l/d914tKg3W2mwf3DNhn
+45fVlC3L66BG0NmUAXXcEHgGr5XUi/Grr44cZiPiV43ohp4kHS/7kNLV5Rf
Y8a7OqyoLamgavLwhnxmIJsXsMndMxi1RyhS93oBO4N71XP0FeXBA3O+SZkx
uC09ncKDAwJ2YC00aq4moBf+TXZfHe+ZN54tn6+DBy9nnadHloevk82D2O+z
Buu4As+e/72vVeZ1PhbLgztzeZ/PYFFpsM528yDWPb/22GfPiX6/oO5dc/R+
HPp9JbaD3+0LnrbQb0mKh2XphG+Bj8fRr1o+UZdvjhjSVcQ21unmYx8bWW/v
gC2l45zEgnQOJZ8N0et7lO0zg3gp8yba5O4t2D79yoK60WfxxW/Ct4oK6NvR
0bN2ZD2sf4byhkflZGI9blxgIwNTr6UsKBxnOHdfb0AfnpU7RxbsE/H5Onjw
VNZ5bWT5/tQ9FwD2OaAvj3U9fM8Qu8Te0zqJ29gmsg2TB+ruCq+zwTrbyoNs
QyinrXk/Cq25kM4B6eNYIzdXeA3LU+v4yP4mrpmoC7+bqz26cC3J30cK723t
StXF+jAH4vbJLoisG8oPdmkRW4qAwvOESXPk5N+nagRzxrH7fOAP7Pq+bVns
6oJthPzYk/MHo46jY6+EurcG7IjK0cs6QjE4Dky9lrIg3ccMzZGjbzNTgi70
E25xdGDPX7d4aFYdlKmDB834LTpvA/lz4pzFerBONd4592Ki3cbff2yF19lg
nZ3Ag8dk2Pl4Sd2hPX6Q4VVdA7eFdaMPPO1g/RDf/0y/VNJry/Cj8uWPQz86
M8Z4QCfWqicFrr+rgD74O/j6Lbm+jaTzYoW+x/AzWynVnoL2h+KsoB+zaL6W
ybrQx83qmyJe8WwReny5Ra8ud6Ut+kNrzBCMaaPGYawL/p1u3jT4P8Ry/g4B
O6LeRfL3wYzgd540Dq8ClJ2rHXGeDyUnJqdTH7/J46n7/ALe+UE5baNcHTw4
lHX69njbgnkGxPjAnBj6725c9W9Yj7tXDfJnPofvgi+HuvedoNbcXGWlwTo7
gQez4ilG55sJ6D46Q3f0+5/QHp5pyJ8Q4znwMtY+MUbDOtV+Sn5C2u80tP6L
d2n9yPaxhxWx4BE7F+/nOxnXj9/4rZGCb/oTKc+J9PoJck/D5wzrDL7xsi3Y
8w3/QcRBwdwX1g1KrfmwDZuxDWdS9v7eb9nGn3N52J7pp0x6LPdGhr43+Pli
/8KM1jPCtYET3P6/LeDY/bkuykfltyDdN0d5zF2fQuE8OUYQuwo+H4hpv4aj
Cz56m/DvCd8fn+8pBLng8JtGHIBg3hbqHkfUfEuzxjwLs17o/2ugfSP4vZ/I
9uI9WDiktyqQ7g+dl2MXBH1k9BkQmxN79OAX5cvFat6FXP8CLlsHDw5knaE+
I34Hx5Mzr06e/AN83OejsKtTF+8q9vSH9gXex+Vcv+oy0mCdbedBtiOUH2PD
knpDHPt0VbZ72sS4Dnvryvo1fca/q9kT2nb3RvaUdHlsqWL+YnzJZ1HWhrER
bYArJiS8c0WfUaw/SleJ653g6HL9ymJkWI59lzjlM+M5lfxNHxpzz6oA6Vj4
oX5CiqCvvGxkmyhfBw8i3+nMvt8H6f57P24TY0D05e/h8nO494DLuTyIa0T/
YQDXRR/MxBFDbDTkFHTj1jzH59316TLSYJ2dwoMXemxEnyhqviVHt6+/PqYK
u3PaxXw5+i4p+ZwhiHuFb1nyeJXax4OHe2yZKniQ20HfB2MQxIN5lfxrRo2S
z2hK4UHXfzUvjk+v4EG2FfODWL8MzQmFBOsCmHfZLL+VlvZQ1/Bg1J73SEGO
QbMfEL9l5M8abLWL+fGTqbWvfxKfs31CfTyIeTGTc+ku6zh8DfG9nJXPId42
fB1NXB2zzyKUgy5VcM/nYZ2dwoOzk57PsaVQnBeP7vk8umvLoRqwAWvg6PMc
oeRi0mtC+N1jTz/m1xFvA/OBjZLt+O5jT0i3MStpn8qyeqNzIwfuR1kbMvNd
ZrQ7LT9zW1ffks8odg2uf0H93d450n3zVB2Z7xY1c5G33JeM8mV+09FzKVWD
9Jw55nMxN4S1kF+Rft/x3iPeHfoYhykZTFYOgMQ2sB4HX5q5+e+xVJ4f3mNd
iN2JdQo77vXqpH34fH6/mL+CTyh8Yib3/bmezYMX87GtA+2Dk84ga62e9L5v
3Lt+/Fyr4MGDrOsENz9W/GkLBAKBoB2gpu/uLfx3aA9XirhzAtjLgbXsLJ9D
IzdzncljNv7b8CDWhudhPnspRxf8C39LnJ/JsqeKmDK3ke6PzULN+NyV+mgL
BAKBoH4wRxl+GsHHViW9z7goR9zJerDWh3gyrybWH8L1r/Lw4Ej++6hEnfAp
whzp9Fy/jO8FrseMn82+3fPb8fwEAoFAUB7qG74o6blE+FmadTfkNQ7ta8wT
rNlhj22en3FIniG9Xo78d3Yuiqf5+EIldMN35ugC3GwEOZ6XZZtMfk7keCoc
/0cgEAgE7Yf6jg/lbzr87ufnY6ljrirlELbhSP4/eHBj/rcvRkhPCNYAN2cb
kEf4M+bjpPhcAoFAIOhMUNNPGPHMzb6G2PigVQvWAeEnZHzDzP/XbSMH7s42
YD/qO3xs6/Y9MYFAIBBUCdJ+HyanHPxA+vKxi9rEPZc69sGPNCsWR50ynG1A
fK2n+NhR7XlSAoFAIKgLpPeyj+PvPPZmTEfx8W6qFqxPrmbZFsonXvc40HAg
/H7Mvs5CcdAFAoFA0Png773Ze34FuJCPH98GHvoj8zBser+H20a8vqGeewI/
1mnb+5QEAoFAUCdIx3CYyN/9m4hjMJCOVxvKfVWXwC+zSFyiMoI4wRvyNWOd
8m98HDmtpmvv0xEIBAJBT4DHQCY3zH3EsXXAD+TPi1OXIN7oVz3YHvZnLM7X
ivg2Zr/+5cKBAoFAMHWB9HqhieH5jMUPiE325x4eo/WEYLw3G1/jIGrut0eu
GZkLFQgEgqkQpONVX0zN+cLB1vEzOoC7qhDsBdzfuuYDSM//Yhx6UPvuvkAg
EAg6BaTzN4IX4EOJuKTGfwb5JUN573qDwAd0Ob6W2ai5Tx97GIe0964LBAKB
oJNAem3wbeaJ+5UsxMeR0+OXHcBpKYK8ScgfbfboI67qi3wO+xSXaO/dFggE
AkEngvRe8juZLxCXdJh17ruk/UzazXF5gjXPpdhmzO8ils6XfA65ovq17QYL
BAKBoONBek/fwaRjc4M7bifO90c6Ds1hPK/Ybr5zBTnKh1rXgTihE/jcW0q2
at9dFQgEAkFvA8ZU1MzbhFxNiM1tchvNSdrPsqf3G/rkQ+bmGSzb4Ptjcmog
/3D/9t5NgUAgEPRG8NhwP+YacAry0m5rnV+EOacdfIh52y7DcaTHqgdRc/8j
cg5v0r67JxAIBIIpBaTzxCMv7dfMMQ8qGWidBx+eR+Vy/MbKu0qOtfgPXL09
NXPHf8rnZR1QIBAIBJVCccuKSu62OOkO4vy+fB4x235COk5M1fz3PI9NTd4o
8N/WSv7K58HRv1KyQPvukEAgEAimBiiuGazkUYuj7rHnINW/ZySdQ2JCQc4z
8g3rBt/1Yd3wAd2DmjFSIcgptVz77ohAIBAIpkYo7tmcmr403zLvIXZ2X6sM
/DYvo6b/aYwg/wTyBC9u6cE++NFK3rDGfzfY41GBQCAQCNoBxUUDSeeuMD6a
r/Ma3fxWmf5KDqRw7NKveZ51J2LfT663HOmcFB9xOcRJu4BkL7xAIBAIOgyk
91pcbI39sH/9RiUbkxXLmrkN4713lDxLOvbLAtb5GZTspmS8M0aEf+g87bk6
gUAgEAjiwGO/kaTzWBgewz73nypZxCo3nVNvFR772bmfwIW72GNEgUAgEAh6
C0jHY7uK5zON78t97OsyC+lYbodSq0/NP5gPB7TbfoFAIBAIqgDp3L/Ief+I
xXf/pmbsT/z/NiVDZewnEAgEgikZiueWVnKqkjdJ738YpWS+dtslEAgEgikH
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{268.015625, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "WolframULogo",ExpressionUUID->"897521f5-\
635f-4c39-b436-0d45edba4dce"],

Cell[CellGroupData[{

Cell["The Multiparadigm Data Science Workflow", "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
  3.726941915180914*^9, 3.726941915962871*^9}, {3.746978317832979*^9, 
  3.74697832889117*^9}},ExpressionUUID->"509e9055-2a11-4f2d-8b06-\
e137fa40fc7c"],

Cell["overview", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
  3.726941908757318*^9, 3.7269419228992167`*^9}, {3.727530497787223*^9, 
  3.72753049862645*^9}, {3.746978334559821*^9, 3.7469783397495947`*^9}, {
  3.746979745667923*^9, 
  3.746979748257806*^9}},ExpressionUUID->"58ed9063-778b-4a12-b837-\
9cebc4d7baa8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"34ceb8ea-0b72-4bdd-a954-d43616e768f9"],

Cell[CellGroupData[{

Cell["The Project Workflow", "Section",
 CellChangeTimes->{{3.747658934478321*^9, 
  3.747658938940503*^9}},ExpressionUUID->"8ac8f043-ebba-449b-8977-\
3eb8ee2e80ce"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
R/vM2LgMd96KPmOJuRG9n63NbfOI6HOkf+tzq3Pttrf1s12ruvlj/PEg2rc/
DsN+r5/dfGmTOSymXj6616IuZ6zzZbkj6yPirl8Tuif6fUCU84jNTZf119Lz
hcrz2Bxy7uUjsnS2yaBNAwB9KMq0owzKVWSuad3f2txT0maNyynW/cccM+PW
/cvq7H1Tu69qnEfudf++w82LuLkLf97Optx2nzvGoMm8rrGxxNyI7dv6f9jP
NheTnWv9V5+rX/uD9eZPv3L/QV7DD9uHrpt73aveA6Ftm+S+plg+uuGO3Yz1
T//kztZ8uDa3uL+tf52aPFfV2JpQHxW9V2LucbmXj8gOY2kAzE5Rrq0zKF+R
saZ1f+vLPSVt1kWcYt0/VEcfkq1ZOfZ8rmX5kdzr/n2H9emw/iJ9vRdC/ays
P0LoubrEEnIj1kdH7XG3j0Fd/uoX3vuHmx+79b4H10TlWKgs8/skxObF3PxI
0+s6xfLRom5sS5l/55d/o9H2Vf1K6ih0rd0+IXWf6bp+P7mXj8jO0SaDdgwA
9Kko2/YyKF+RsaZ1/1zn8ayylH4joe8U56jseuZe9+8zrJ1U9h1z274jZf0H
3D4qep/1FUvIjViZ6Y9vacLyVWX5EfvsN73m/vHErA2smGL5aOdvrOOwcqrN
PdPNg9i1/4Ff+c3aa1kVuZePyMp6k0EbBgCGsGJsDSqQGwnHFOv+qvdrvr6p
zLnalF6X2gllff9zr/v3Ffou2fap7/vLzkebviNlc/PYPBh2Hdr0xQrFXHMj
6ttk8+TUrUMeQ3kpdz/uddFn3l1bNnRN3blM/M+Umx+JHTc1xfLRzpe7bdlc
xP65r8tLhFg/Dv+cx3Cvie65f/TFL0c9rmpcVO7lI7Kyt8mg/QIAQynKuXsZ
lLXIELmRcEy17q9Q/VjfI4891mUoeh0x87HmXvfvK/zPoK3r47/Pm/YdCfUZ
URvfbZPb/mz90q4x19yIf75CdA7f9MwHNr/8/o8Wn9dPXvxXP9e1pd3+AX7+
y2/n+/2KQu8JKyeaXNMpl4/u50f/rutv13Z8mo396zrWUcf4v/yzj0RtW3Wv
y718RDaONhm0WwBgSEVZt59BeYsM5ZwbsTV+pUtfiKXlRiymuKaQS9e9au5V
P3Kv+/cRdk11bsrmk9TvrP9Hk3aZPUZ5llD+xfofWFu6zefKj7nmRsryGzp3
b3n3v9z8t+98b+Xz6u/KlYTym9ZXSOdfc7TqupSVj6F+QP61dddPj/28Tbl8
dMeH2euu+1zYv5usKW/RJjei949dU+Vufvb3PhT1uKo5R3IvH5EFFQDJ2ywA
MIaizDvOoNxFZobOjagu6fe/V/27bPuqPgJqC7bpn77U3IjVyVW31jmYSp8f
XePYdSndyL3u30dYm9t9T9vaUX67TdvE9h2xNTfceSr1O10Lv71l2/QxL+uc
ciO6Djo3Ou+h3MjP/v6HGn8G/4vffGbz5mc+WPp3W/vXXePX/7sf/vvBf0zM
Wr5TLx/d9ZdiPht2nmLzzW4fnKZzv1re067Tr3zg9kW+MuaxVevV514+Igv7
mwzaKwAwhqLM21kxtgaeIXMjZfW0svql6p4x60gqt9KkH8nScyNunkHttz7m
P+ib9UvoMo9F7nX/rmFzJdTNCWGfL2ufxXxvbe1hfb5jPofWXmyy7mso5pQb
Kftc6b2tNWfa9n27fHy4baw2s5vbCD2HzZ1bNveJPcZyYTGfwTmUjwrdS2L6
grhz7MSMVXTvOTrvTa9329dObgQdHG8yaKsAwJhWjK2Bp2luJGZeOdUdq/IR
odyIfW8dG02+i1t6biQUOtdVffHHEjuXSEzkXvfvGvaer1snxtpi1megru+I
O3+F5T7rwr7HjuljUBVzyo24c+S6lBfp41hC+ZF/9tnnrv3srssb+/mzfzf5
DM6hfLSo+3zob+5Yo6p+jxLKLbWZj7UNciNoSd+b7mwyaKcAwNiK8u/pDMph
ZKJpbiTmO+iq+pkilBsJjXPXftRWU70yNMYiduz3knMjZWu8Wtg4gLHnbdVx
6Xn7Wu9EkXvdv2tY+6runNnny/0cVn1u3fyG9SuoC3uOruNq5pQbUfj9MjSO
pq/8o/bzY7fed+13NieTrm/VWjUh2t7dNnaNGsUcykc36s57k+1D95u6fEpf
qsYi5l4+Iqn9TQbtEwBIYXU5tuY8g7IYGRgiN1KXi/BzI6G6pz++OrRuaN36
ArHHE4o51P3VTqvKjdgYDW2jczTGnCQ6Jv+5+ugzosi97t811JZ1+3iURSg3
UvbduL+/0DissrD3TpeYQ25En6PQnNE6t31/njT/SOg6/jfv+P2tPEfVfuy9
5P8+dp6fOZSP7vWr26dbRtVtH7rfjDUvdlXkXj4imdNNBm0TAEipKAsPMiiP
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
R+/zd3zszyq3s7l4mvQnsM9l3Vyh1kbro6/CXHIjofbswW++q/fPU2iOXOl7
fFpdTL18dMPW2NI9RPcL5Zjs/vHRL355871Xvn9t+6rcyD/9kzvB53Dvm+4Y
R/e4rYz2+/xJWW7EfS/URe7lIwbTaSzN6rLNfD/iebTNEzX72npcxPMny40U
f7uxup5HqHItt9DHtevj/A1wDUO5EXmkj2sI5Kp43x4nLssxkhxyI6F2uz/P
quqT/n7+8lvfuajLDhFTr/v72//pV+9Hv3a1B173tt/p/birxhH0EbnX/ccM
m68iJifmP6bqGtn62X2tuzyX3EhZ/7U3v7t63pGm/DlY+5zLuElMvXx043Nf
P2+0vXLt9lz6PPxHb33Hg59jciOW1/C/A7B+P6F7rJ8bsevu/q4uci8fMZj9
Tbt2gPoZlLWDq+gxwf4Hoe0jjiNJbmR12Vek6b5u22vv49p1PX8DXcOy/d3q
4xoCuSretzuFewOU0chMDrmRsvkN9H2ezRE5Zn9xxZTr/nZ+1Z/mvR1yEX3W
pfV999BzIuRe9x8zrN3VJIcRWgfHDf1en9U+x2/MJTdi4c8PrXP1s7/3oV6O
5Rfe+4dbvxu7v4jFlMvHPkJ9t/Rc/r3smT+9G9zevW9avyx/TleL0PhGPzdi
+3DnRqmL3MtHDOJ4074dcKvD8wbHWIS2jTiO0XMjxe8eWcX1s/Dllhvpcg2D
uY7Q9XDc6HoNgZytGFuzCDnkRqTr3AW2lqm/7obqmW3acVOu++s1q99H6HXr
PLk5p7rz9Duf+lzn460bo9FX5F73bxq6HurL4V8rvc9j2sOWx4gJm9cxNNeI
/qbjsPU7mvRFqYu55UZC5WMf+RHlRcrWk2pyPWxeE1dojea6mHL5WBZNy0b1
WawbH2rh5jUsX+nmNdwy0p9jVdRPpC6/Uhe5l4/onb7f3Nm0q/8/VrLPizEX
q8uxJvLkqjyH8Fhgv1vbRRxL19zIjRqPBvbzVMRrv+ltd9/dV8XzRR9jl/O3
Ku/34r+OqvE2oWtYlRsp64NDbgSzsWJszezlkhsR5UeafgeqOqs//iZEddMm
9f8p1/1/648/vfnWi9fPY+x50jZ+O6BtfiS0ryEj97p/bOjzUTfHsNrJ+iz6
n5f3ffYLD865zVsQM7+LfVdt7Wwdg/7tH0cf86+6MbfcSNX1+vn3/GHj+Uds
HozQZ8va8XVlpv6u7erW6m6yFvCUy0c/upSNGqvoblN2/tw5RCz/GPqdhX+t
9Fl0t3c/p/a7usi9fETv9jft6/6hOTYe9Inwtn14dX2OUnMnsO3WcUYcS6fc
SI+vfyuHcrXtI1fHuJVH6PsYmzx2wGtYN0YnlNMhN4LZWF2OrTnPoIzHQMbI
jdg6DKZqH6qf6+9+HuNL3/z25q++++K136ltUFffdzVZ63LKdf/vfO/laz/b
PBJdzpPOv65LXdtOf1cdfuwxUIrc6/51oTZsTBvNpb74btvYzTXY/KC2For/
OXT7WcW02f3n6iPmlhvROVW5pM9P6JyqDfzL7/9o7Xo0+rv6ipRdl9i+WGXH
USUmlzbl8tGNrveQF4qyVmMX7e+h8Ncwsvyi2z/EH/vmH5O2FctV2vV3x3Cx
Tg0cT2/a1/sfLdln1VybZY951Ntua5uI40mRG+llP33vO/axLa/hI5HX0L8e
fg4mNEaJ3AhmpXgPH2RQzmMgY+RG+qA2lBtt15xVnTOmfTeXun/TtrapmsdA
bQO9D6yerv8qH9JmreQ+I/e6f1WE1oCN5ber1G9I16TNGin6fNj1FGuj6XdD
zGsxt9yIG1Vtbl2bn/v9D23e+qGPXeRK9DnVmr/6t34fk4OsC31Om7T7XXWf
5TmUj32VjW65Ezpvbt8OPae7jXsMoe2N5WPsZzd/ZeVw3dxCuZeP6I2+z2w1
lmazebCmib/PyjVarx4XGofyhLfN1vFG7DdFbiQ0xkSvr3aN24h9tz7G2Meu
Lsc6DXUN/euh94ufH7lR85hW1wXISfE+Ps2gvMcAppAbUZ9yP9rW+SVmbYc5
1P31nWKX8zTUWrtDRe51/6qw9V/acr/L/uM//8qDtpu1s2ydJ5+e194j1tfH
xmA0+by0jbnmRtw1SNRm7fI5dK+DrpH+G/PZrBuXVSU074wbUy8fu5aN7hwv
f/KVb1z8TjmToeebts+tGzYfUF0+K/fyEb052HSr74fGTNSOF1mF5yh51ttm
63jbHE/Fto33X7KfsjlMlTNR3qG0/0XEvlsfY+xjB76GodyIn0+7U3c8Xd6j
QA5WjK2ZrSnkRsRfq7fse3bV6fVdXNX3rjHfuU697m8R+u5YP6u9pvNU1T6o
ax/lFrnX/esi1BdK71Vdq7r2tTvGQvkGm49EbUCb8zE0V4h9b23tbndeiibz
T7SNueZGFDa2RtElTxG6xjFRNkZL5aZ+X9dPqWpc3BzKx7KyMeYe4peNY803
3SVyLx/Ri9NN9/p+aJ6K2lzAKjwmw28jbx1zxH6HnIs1+LpW5XOmujQ/h+Y7
bdSXpM05aPrYga+hfz0u1vtdbfe1udnmGgJTUryXH8+g3EfPmtb9245l6UNV
fkTtP7/Pv7sOgK8u5lD3t1AbwM6TP99t1ViO2DVOconc6/4xoVxE2XowVd91
u221F19+5Vq7zv23PhP23bPbXve3H6utN+fciBvu+LMm+WXrExB6P8SG5UdC
62hXzUVUlRebS/noln+hsrEqpzW1yL18RGedxtJsXq3rh97rvTy2zb5Xw67h
+0TFvkLjS0Js3ZeoHMmQ53eka7iVGyk5X3ecx2z1w+n6PgVyUbyfzzIo/9Gj
NnV/W78iBb8vubUdQuHOUxcolytjLnV/9zxp/EQoqsZzTClyr/vHhtqvMetd
uEJ9fHRd6/oGGW2jbcveI0PFUnIjOq82Nsktl2yNZvtZ5Zubr+grtM+y+WLK
3h9LyI0oqu4hZWuq9Xltxorcy0d0drjpp54feq/38tg2+14lyo1c7S80b0cZ
9SMJrmUz1vkd6RqW5UZCfU5uXv1taw6bPt6rQA6K9/PuirE1s9JX3T/HcNcB
CJTLlTGnun9dzKX+n3vd319XuU2U9TmoG/+k9rius637Kvq3fpdiTSGLpeRG
/FAeyr1m6qvj9tOKnVOkjyjrN1aVG3nd234n+bUp02f56M4b45ta5F4+opOz
TX/1/NB7vZfHttn3KmFu5GqfGl9TNv+IT2NZKvuPDHl+R7qGpddjVdJ3ZEVu
BDNXvKcPM7gPoCeheU7nEmXtyJj5Rtx1GXOjY+szytZrqFv3ILfQezn1tani
r7XUJsrasVOY7yAU7+04B+3Qjp4dbh5aN9QGH3oez1BU5UWrcmapr0uVmPI9
NtrmInOMH68YY4pJ0/eVu5v+6vi3A88x5flGqtTmRrzXF1qTpdE+25yDpo8t
uYYxfVpCa//ejr0eJe+Bx1bkRrAAK8bWzEaf9cicomr9yrp2pK07kLM+2tmK
qvE0U1unps2atWPq2s6umqciZd+PLpF7Pmuu5aNC/erKPjNVbf/c81l9fR6q
8kZTKxvVZy3nfD866WUszebV+n1ojZMbEY+LWeMklFeo62fht/PvVGy7dX76
PDfeaw2dp63X3Ocxxj625NhuRuz/ZsQ1rMxVrbbHIWn7rblth7guQErF+3ov
g/sBevK2j7ab4y/XUJ2/LC+i793Lxt1b5DyexvTRb7wqfzS170X1Hk59Teqo
bdJ2XE3VHMhT7TNSNR9QTt478hwsY0XZPKMqE6a6Ro358Y593qrKRt1DphaM
p5mts03/9fut7/gLT0Y8LjQ3xxPeNo3zLoHtS3MPoXPU9/mJOFeVz9nlGGMf
W3JctyL2Hxo7VHsNvb8H16wZ87oAqRTv7aMM7gvogdps6isxh6hbd6Wu37rW
wkl9PWL56/Y0PU9ldX/9vi5/lFPovTuV70Tb5LSq5jyYWg7LQjminOescM2p
fLQoG0d3Ua5U9ImYUhu7bflY1Z+mLm+UY0yhHyRa29v0X7cPjatQW7e0f8cq
3B6WR73tQvmT0rzLKtwXpWr7rXPU8Tz0Prdql2OMfWzJNdy6Hm0es4oY47Ta
zs1s9Rfq+30L5KJ4f68zuDegB6r/z+H70ap1e6vmFlRMqd5v2s4V2SV/lFPo
PTuVvIhRfiS2fVW1bm9MH6gcQ69pKnkRo/dYX+PYUkfVur1l67Uol6UxYamv
Q1Ntyseq/jRTKhsVUywfEe1oM1zdPjT25amK7UPr3W6NfVmFcx3KqWy12VeX
+ZbQcTxWcRxb56nl63efu3R93lVgrMjKm5+jz2Ns8thVuI+OXtPW3DGry3lC
Qud6q49OaL8l5y+UK+t0XYApWDG2ZnbUbtP4BLUDynQNfY9Vtf8mXnz5lQf7
bTJ3xle//cKDfajOn/tcFVV07HoNZefoj774lWuvvWreCr/uf+/+t1pdlz6+
Z6/av96jU+jbX0VzbajtUnXeqtppfl6kj89V17V0lPco27e+x899fpE6deXj
0O/7NlTWuden9P34ruvzcn/npZcvyg6VLVNuX6t8VI6krGx85ft//eA1V+WN
/Nz6X37rO62vyRjl49Tyj2hkvRm2bh+ad0KUA3nE2e6RVTgvIsH5LVbhNrja
0epTcuNK2Zyn92uOO3QcNyI87O3Hb//fv3qdjzmPeXIVbv9Xjj8KHWOD6xL9
2FU4bxM612Wv4+LcBfYbNTfuqmS8UdPXDExR8R4/HrD8R4a6RJ9jVvzxCWX5
Da2H6cYU5hLsk7sWUdVYGv87467XqsuYH0Xq85aCe86qxtL4Oay+cg5qT3XJ
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
HksT2l/JdqH2+1auovjdI5HbtX2tUfmRYrs7Ffuo7P9R8Xol2K+m7DE1z6H+
IPcbvv7SY4+9lm3eExHIjQBYtKIcPM2gPoBE2o7jH7PvCHPBAsOpyzcoF5pT
PwKVPWX5XOUQ+lpfRbmIqnlM+8obaR9V43h0DH2VgTo3ZbmY3K7zQumG3LYu
F8ohbI3fKHneUH+QUF+Um5H7i3Wj5jWF8jOuOxHnpaovR/D5Q4+p2P+jLV97
aW4otH3L90Sb4yI3AmDRTi7H1pxnUCdAAm3XfxhrfUebHzb1eQLmKrYMyK0P
ia2lZfTzEMenHIn7POpXMUS+VvvUHCT2PPr3EPOh6hzpNbiviZxIFk471uVu
BfZ5w9umtB0f2N/Nuv1dbRezL+VZ/LlLpG7eD3/8T2g80KM1+6jKjZSNO4rK
jRS/f/ikvF/Ls1fn8MbVf9193q455tpzGvmeCB3XjRqV5xMAlqAoCw8yqBcg
gbbrO46Vr7Dvh+cwx4nOGZCbJmPq6FsADELfT3Val+YknDe46W0TyneYR+v2
V/K8W/sq2S7UB6QuR+DnKDSPrJ9jqZu7o24OkFC+JzY3EjrnW+fd215jbyrn
o409pxHviV72AwBLdMLYmkVqsyaDout4/hjuOg5zmOOEIOYSufUhASau9Via
zat1uND6M0942zxVcQz+tn4/lOD4ldC+Ko6xyViVhwP7Vn7Fn5u1aX7F7+cR
Gk8UmxsJzTFSl6tJuk5N1/cZACxFUWbunjC2ZnHarCOp0OOGPC61u/xx8WON
4xkKQcwp6EMC9KLTWJrNq3W40HiZW942bp8LP0fwlLetnx8oG3+y9ZoqjrFJ
bsTv43K/5PfSZM2ZJwKv3R97VHucJ+FclPZbm/uIuJbR53SM/QDAUhXl5mEG
9QSMSGPc28TQ86OG1pzssoZlDghijkEfEqA1fR+lm3BfdTh//89W/N0fD3K7
Zl/B/hCh11VxfH5O4n7Ftn4fl1tXvw+NzQmOYbnaPpQb8V/7nZrHbL2mk/Da
wtFrEze8jqXndIz9AMCSFWXnWQb1BYyo6biaocfTaP7BVM89JIKYa2jektSf
L2CC1HGzz/qb36a/7/zNX3dG/R78XMXDV9uGxrOUzaGx9bpKtgute1O6JsrJ
9niVJyr+1mQ93mevXp+/j5sVj9l6TaFtTmrW3WlwHaPOaZv9nFTPw1o5DwoA
LNEJY2sWR9/5fuPj601MaLuhvyNWO6sqptqPnyDmGPQbAVrRja7v+tvWfCLO
3/y+EhqD47fvb1xtG8pjlK13u/XavL8rD6FxMNFzc9Q9/0lgTZ6KcxIcGxQ4
V3ea7P8kcs3kltex8px22U+NyrlSAGCpivLxKIN6A0aktk1dTkJ/H7oNpPVo
6mKq31ETxJyC+UaA1nodS7N5te4WWjfF8h3X2vsl2z9x9futuTQqnrPtOVCu
JJhLOAmMV4l4nY+V7KssN1I6Nie0/5jXHXk9ts53m31Hvh+aXhNyIwBQoigj
1wnrDUhEbR2NW7F+JPqvfh6rDRS7nugH3vh48nPVFEHMJegrAnRytBmm3lba
3+Lk+jyst69+5+dAbE6Pyvk4vOdsew6q5gjx+2T4c6GEXudTJfsqHR9zUtJ3
JPD6NzGvO7ANuREAmImijNzLoP6AClPtP1FG69DEhnIoU2ub6XoBuYnNR9rn
Lre+ImPlabQ2l+ZCGvp5dH7Vf27o59E5m/raXxO1HrDeFponxPqCuL976up3
ft8Jy5n4/Taq5gVp+vqV9wj28Sg5Jtma4zS035L9VeVGQs+lfBG5EQDAlhPG
1mTL1t4dei3dsYTW7K0L6vVAd7E5yRz7itgYvKHLAq3LpfJJuaShX5PyT2Os
yWVzcOeW61qAvYHrbVtzmJ5s97Mondf06ndba7tUPF/T11/aX+Rqf3X5hCqP
BvZXOa/qSSAPFDhfm8B+bwee318LOLvcyJDvPQBYgqIsvZdBXQION48w9XVt
TdO1cuy1D72WMDB3dbmRHPuKGOvzMnRZ4JZPQ/bpsJy3QrmooZ7HXQtsjHwP
Hjgaoc7m5wI0z8hN73c3KrZXXsBv91f189h6nc7fQv0ySucZKTmeJrZyDaH9
eX8PrllT9Zirx23Next6/ppzRW4EACamKEv3M6hPwOHnEaa8rq2o3dU27r3r
NPnxA1NWlRvJsa9I2XEPVRb45ZPyMUM8T6jv3FD5HuVD3Jji/E0TdG8zTp0t
1A/i2u+87f2+DVt5gZNAfwzn8Vuv1ft7dA7hJDwmqInbgX3GrMe7Nb9KxGNC
56ku7xN7HirPaYP3Qi/7AQBcV5SnxxnUK/Ca69/3uTHGOPih+PX0ppHrd9rA
FIRyIzn3FZGyMXhDHHNoffMhxvAoD+XHEH06QmuBTXH+pgna34xTX/Pb7Gqv
u/kBf15Tfz7WyjViAs+39Vq9v0f3HQkcexuPePuMyY2E+o7UnoOT8Dq+t0Ov
reRckRsBgAkqytOdE8bWZKEsjzDVftH6XlTtjC7GmLcQmKtQ/4vc28llY/CU
x+jzedSfIhR9j2VUOVgWfeZ7dMxlc+8yf9Ogjvuqj9U5Ca/h4rb7n/K2r+ur
sdUXw3v81mMC24T6jmytK1OyXdV4ntD4m5t125Tsq3JukJLHlOVydL6VY3rs
6nrcOAnknE4a5Eac/ZQJzbXSZj9S2vcFAHDphLE1yYW+73ODHAGApiw3ovb+
FMqQujF4fY0PqZsfus+xjFV95/ocw1M3twzzNw1C3yvtbMatr1UdT2hOjlD/
B3Or6XMFtgn1HRG/j8dW342a5w7lM25528TmRir7jlQcQyifE6tJbqTO1lpC
HY7rRtV5BwBcKsrLpxPUK/Ca6u/7LIYaBw9gvtRenkJfEVM3Bq+vPh0x6/f0
0aejLuet6GM9MltrpyqYv2kQ+5vx62qhNVTMVrv35HK+1rLtm84vuinZLpRD
eNb5e6i/S+nawVePebTu+U8icyNX25aO6ak5jjb5EeVhgn1iWr7PyI0AwMhO
LsfWnCesYyxW7Dqb9IsGMFdlY1z6Lgerxri40cdYxrqct6KPfE/sWmA5zzMz
QaebNHW10lxHyfZV40lKx7RcPTb2Ocr6jty4+nv0mBNvv6G+Ho85f4/OjVxt
H+xDE3Ecj5UcS4iO6ZGKfbV5r5EbAYAEijLzIIP6xqLEfN9nwbq2AOYopu+c
G13KwSbzQ3cZwxOb81Z0GcPTZC2wvudsWTB9jzTqWJrNq/W0slxHcO6Qk3Cf
DVO6Rs3VY7ceU7Ftad+Rk3BOovK5K/b5lPP3prmRYN+RBuf+5tUxuX13bD7c
JyJfU5v3G7kRAEikKDdPM6h3LEbs930WU1/TFwB8TfIIirZ9OpquKd52jZe6
+UxC0XY9stBaO1XBmr690GCp5PU1AAAwrBPG1oymaT3dgn7RAOaiSd+5ruVg
k74pFm3G8DTNeSva5HtixyG50fc6PAuUZCwNAABIo7j3H2ZQ/5i9Jn273Zjq
mr5j0HevmtvQ1gAmjwTkTXOEtomm81OrXGgTTccyqgxqG03WEmrTN8Xik792
nPy6T1SysTQAACCd4v5/lkE9ZLbafN/nxpj9oqcwx4naI2W5JrWh6EcO5Kdt
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
RLF5B0LxrWf+UelYmTJqn6ldpe3177r5VvV3a9Ppv+733mjucu6Jv7p2HWc2
l8TsKNfgjoVx5xax/lX6nNjnQr9zQ/kKf5/2uXb7eigfov3bZ9lfq6Yq3P4n
mebazlKX+wAAAAC2FXX1owzaC7Xc8Rd+aJ6QJvtSbkPtL2t7hcbS+GyeBPd3
7jwKqc9PjmyuCJ0jO9e2XqvO+V/+vR+51s+A85g3d80YG/dStq2ut80losdZ
vsP/nCmX4q5bY+8bbatcis1RUhbaxvqN2Fyu1tck0/V+d1OX+QAAAADCivr6
OoM2Q1S7LBTf+r23Rberrc+HtdGqxtL4tJ3fV0TtNu2PeVq3ueMh/vp7L25e
+dqfk0uaMMtRWD6rrF+G5UUst6HfWZ8Tt3+Wrd8bmjfE+orYWBvrrxIKm7dV
z6Ht3XE1mb3XjlKX9QAAAADKFXX2vQzaDVHtMj++/8LzF/0PbI4R5S/K+oDY
ejPu2Ji6sTQ+9/Eue+7U5yknfnz9H/xk8mNCN9YXxD4HonyhO47Gz4sYy2/a
+Bkb++LmFW3dInd7WxvYDx2Dfu/O22p5T9s+o/zIOnU5DwAAAKDe3QmMrfHb
R3/98kubFz/zR9f6zqtdpByF5UqsnWX9O9x2kv7edL5G63cS+pv168+kLZbc
K9/8+rXrRd+a6dE1U35BuQ/LT9rn7XLOmFf7c9i/q/IRyqtYbsX+bX9z5zOx
z60794g7bsbvs2Kfbws9zra1cTeJ52bdS13GAwAAAIhT1N/vpW6L1VH7xuYX
eO5H/92L9o9yIaG5BdQ+0++/8+FnNi997mPX1vHV48v6eVg7rKwtVTUOJzRP
q60rOoG1RXujc/29L35m852P/O5FOzXTuR9Qw/pk6L/Wj8P6i5SNc6l6n4fW
nbFco+VGxO3b5fZDsbE2Zc+hbXScZWsHJ/oMHqUu2wEAAADEK+rw+6nbYk1Z
nsLW7vX/rt9b20vtIm3z7X/+js2Lf/bRrdyHzdHqRmifUtfnxPqufO2tP3mt
Dak221T6T+j4LZrkNvT65ja3amj96Byj7zEk+nzpWuqzo33b/KtV60ZZHsXy
gUafibKwz4TlXdxjcOceqcuN+O9f++xZn7OyPl8DUr5ZE6skL98BAAAAxCvq
8cep26Ft2q3WR8TNZdg8Bf72F+22w//k2tgba8+HIjTnZMxcJZoHJRTu9+K5
Cs3vEvu4jOZ46CyUL8s1hjzvygMqrL9UVW6kTbjj30Ksz4rlqELbWhngzsdq
YT+X5ToHtL/JoFwHAAAA0ExRl9+5O4GxNX6byL4PtrV2n3//O4J5kdBYGmtT
lUXZWqXaV9laHW57LhS5jzGx7+fdqPuuXud+Sv1i6tjrGTuU47B+F36uQzmK
UK5m6Hlu/HlTqz4v7vvEHU/m9kOqCpuPROfA5jnRvtzX7fcF0zmzsDlZdYxu
ji/BXEB6wcnLdAAAAADt3J3o2Bqb4+P5f/7/Br9Dr5pHVcpCbTW100LUXvvW
u/9R6d/KIuc1bdT+1vl75f6XHxzvC3/0novXY+MrbFubm2VueRF/ntExQm33
mPNnc4xajDFOxOZO1b8txxHKG+l9U7aPsjlK9DubR8jyHKHPjuU/Qs+r7fWZ
8s+fP3/siBhLAwAAAMxAUa8/Td0+bUrziGjuT7WHLA/i5keUr/DnCFE+xcbV
/PWLL2xCof3WtRtD30dXfbeeaw5B50NtT8t/+HPI6t+WI1G+xEJrBjV5Tdbn
xpd4LZELsf0b3FD73uYFds9DVd8hN9z5OcrOQajPyNB5Eb2vbZ4QPbflJ+yz
pf/qtev4LWdT1r8oNE7Lzae5593tB6b3pPZvz63921rCdX2Z7PgSvI/2NxmU
4wAAAAC6uXs5tuY8dTu1SRtOeZHv/OG7rv1O7Tnr26A2ntqXNi+JuOvJvPCx
92/8+P4Lz29euP2+yna//uaPrbF248tf+cLWPhPMB1nKbYvrfMTOofqVX/qv
t15XkzVAynIGKdfyaTK3iJ8LsfdVqH+CzcHSJOz9ZPsNHdcYc2f4x63X7b5G
/d3m3dH5s3V5Q3223L/pdfmfKYX2Z3OK+H8PjfPy858+G1+jbdxjHZiSRMnL
cAAAAAD9KOr4B6naqU2oDWXtH3dsjbXJXvjo71+sJ6tt1OYM5TlsPla1v7Sd
2qLuWjT6d9XcImoj2/NqH2qD6bH67zd+4+cu9qd/5zLPiLUVLV7+6nOVr89n
c3O60aTfSG65kbq5RfQ3dw4Ly1nYvJ9qg1eNk9L59vuj6Pz7c5DGjuUZ632k
cNfvdT9b/vys9t5X+Hkb61Pivkf0b/d12DmR0HzFljPRMdhavXZtQu8bmy/W
+p1YDHzOlE9mLA0AAAAwM3czGlvj9uFXe+iiXfmm/3Srr4O2+cr/+qMX/9U2
apd9+wO3gu1Jt29J3fNbzqPse2r97VvP/MMHOQY3X5Ibfz1V9Y9pug+3vdm0
L0xOuZFQPsLNhVgfB50zm3ej7XFrO+2zqq9DXT+TMfNrdhz2mfPPm8IfA2Q5
IPtM2XvNzaHoMXbO7ffuGDR/3hLLufj5O/dc6Xlt7ld3rRpbF9jmdh34nB00
KV8BAAAATENR19+9m8HYGr+fg8Ur51978HcbK6P8hMbHWJvK2l76m9uutFxL
kzku7DF+G0ttNI29sTE9oXE2udDr1bG60fecDNYHx2d/zyU34h+HvR/cXEhM
P46+1z+xNaL9GLvfka37FJon1vIPdrz2OXLHz9hrCI1lsdyF//mza+K+F/TZ
D43VseezfEzoWlXND9szxtIAAAAAM1bU+Q/HbI+FVM1rqjyIP1ZGuQvrO+Lv
x+aI6LKmp/ah57S5Ku07az2vtalHXi90i80fYseiY9O/9buvvfUnr+Wa+m5z
l83bYX9PnRsJ5R7sHMTOn+qGXu8Q88i6/Tbc9XNtPtyQsd57/lweCssZ+uOH
moy3svVsbC1jdyxN1eOqyogRckrKH+9uMiivAQAAAAynqPefjdFmLVPVXi3r
n/G9L3z6YsyN//v7T//Pm5e/8lzn9qP2/fKXPrf5+j980/X27OfWm7/8ez+S
7FyJP2bmr1/8zkUbMzS/5RBt+pxzI/6YFVsrpclcrGXRtB9SGfdY/LxIVbjb
DsXtp2Fzf1hY/sL6jbjHa3kbXXv9Xte6rB9IqP9H6LzaGJqy+WotRujDpQ9c
8nIaAAAAwLDuJh5b47f13fjOh5950Eaz7dVeOn/nk1v9RvR7m/+yyzof7nyr
2o+N2yl73rH5uYfvfupDoz5/rrkRvU/cdrfNVaN8QszYmdjo0hZ3+2HklhcR
d74Ve5/rc+BeO+vrodD2tsZv2fvCzZuUzbVi/Uiq9lMWVfPk9kAH06QsvVG2
r8jHPxt47FNNHzP0cV7tI/qxxd+eCGx/p8W5eKLsuSM9G/ta2u4LAAAA01bU
846GbneVKfsu2ebJsFyH3P+Nn7uYT0O/d9etsXVFbJ9qR8auWetS+8xv+17k
Sj7yu5sXCvZzyvlG/PVOm+aBQnOFNGl355gb8Z/Tro/N09m3Nv1H3PVylAuw
fdSN89G2Y+RFbG0afY4s/+HOWWvb2VizspyE29+jab6jqv9JaI4WlRFD9I26
0ngsTbH9kxX7eyzi8aF8gDzS5DFDH+fVPrYeW7Htw4X7gcfcKNn+kcC2evzD
Zc8didwIAAAAahV1vfVAbYxalsuw0L+/8dTPbLX7n3/PP96c3/qVB7mS767/
xebr/+Ang3MOuOv/1j2/rclb1ga9mAP29vuuzbkwRnu1jK1d2mauhVDofMc+
PqfcSNm8pjmHch32nnT7YNRtO4aq/jU2/6rN6dPmWlXtO+bxofFSA54PvZGb
lqF3KvZX2f/j6vFluZFbTR4z9HFe7SNUtlRtH+o7Enyukm2fqHruSORGAAAA
UKuo6+0N2M5oxdbSsO+i3f4a+t2Ln/mjzStf/9LFNv7YG9vG5uJQ/sPmWXVz
CrYGTlkb1OZg1b/duVkv1rT5n/7zB30JUuZKmgjFVHMjNt5jSnLNi9jnTfkP
HZtdZ/3X+mW5Y26UR9HfdL1D19b6m1jfnaq8S+yYIT3fSP1o1k3Kzs2mtK+D
q3IMydU+ynIjUtbHolFupI/jvNpPqGxp+rwP+oJ424ZyN49UPXekJ2NfSwRy
IwAAADN2N+HYmjIXfUo+9aEHY1qM5UOUr7DxNdafRL9z1x1V/5Lvv/D8xo2X
Pv/JzfPvf0flGhnWL8E/Hrft6MbY67C2EYqp5kZiWW4tF3V5kRzWQrLP2MVn
xcnT2LpItlbStc9UsZ3/e8uJWI7y/2/vblpkyc7EANdPqP4FKvoHmIJeG2px
V17VprGXvboLe1MLw90YUxtD75wDZpoLHrkX1izaWhQa8IfE4PIwzAjTRsVY
lmfhW75jjD2SRlc1LbUctz9uOk5Wxu3oyBORkZkReU5mPAceum9mxInvIN+3
4j3R/C5MX+VcumrVqudOqndIhX207v02Ozifb37vbD7rEHv24b01fXTlRtqe
edg0N7Lzei77WVnHHvM8j8z3tDFNbCyU55FpusSWE83DtG1Lj2Ws3UcAABy2
+4S1NW1CLc3nf/aDRUxUxUX1vx03Y8nwXciPhHgsxF5f/c3/mcfa53/y/c7l
tsWo4XmRtjbi+AeDiLVjzo2E49E2BmiOLfVYvyvn+nKM26A6htWYI9W/q2e6
wrlR5ULCv0POoz5fJVyf9c/qtVFt4wSF9QitnluqxiQaWDiBt7lvNnMU75c+
bXz2bMM+mlaeHYnNM/Z6LvtZWb8e88SeHfmkMU0sr9E63kpkGW1jm7SOo7LN
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
TFfmGWM9l/12LneD/bhxP/fxGqGQI+o9/uoY2wIAwLTcj1Rbs40QX1V5jar2
pjlNyH/86vk/nn/+53/0NveyeH/o3X9cvAcnt/FWu8iN9HNIY4uEtuk7lY5F
PT9SPRM28jJDXvdsPsx9MDaOaNc7b2N1LU/XTdPSV+f4IWOv53K62LKfrBEb
Y6Vz/SPThzFKYrmhD3ss/0lLn9tsS7BVLgYAgONR/ia8GzmG2Upb7c1v/vgP
58325vX/W+ZHzpKvd19yI90ObWyR0KaaF6kfszD+atXC/4/4/MzOtTTzb+6B
K/H5mulj+YxPGtP0zY10Pjsy9noup9tm/6+Mk7pu/SPTf7LLOdDS57b9RXMt
AABMR/mb8Hyk2GUwodYmxOkh9nzzRTGPteb7aXInN9Iu5LgOaWyR0KaeF6mf
k1UtXWgjnSvh5Bjq/hcbB7Tz/Sjl9++1bHt9ml65keW0rbUyY6/ncrptjsEQ
uZFdz7Uh+5QbAQAg/J68HiF+GUVbq+cEDoHcSFzIgx3S2CKhhTFzUp9PuajO
qXAMR3yH7/l8uHtf7N2x0fe5NOaLPevxfu373rmR5fQr47DW5xlrPZfTbHMM
5EYAADhK95nW1kR+D0fboeVG4BiFGppQB1e9e3uEZVwPfN+L5STWvjv2Pj72
x/Pa95vmRqLPjoy9nstptjkOciMAAByl+wOorQlCzBVrid4fCuzPYLU0AAAA
bcrYY5ZB/NMp/F26nh8Jz+53vScYOBoXqe+RAADA8Stjj9PSywxioLVCjmSf
75IFkpqlvj8CAADTUcYgFxnEQQCVkK89TX1vBAAApuX+AGprgMm4SH1PBAAA
puf+sbbmIYOYCJg2tTQAAEAyZUxymUFcBExXyM+qpQEAAJIq45KbDOIjYJou
U98DAQAA7tXWAGncpL7/AQAAVMoY5YMM4iRgOtTSAAAA2SnjlNsM4iVgGj5I
fc8DAABoKmOVs3u1NcD4blPf7wAAANqUMctVBnETcLxC/vUs9b0OAACgy73a
GmA8V6nvcQAAAOuUsct5BvETcHxuU9/fAAAA+ipjmOsM4ijguJynvrcBAABs
ooxj7jKIpYDjcJ36ngYAALCpe7U1wDDuUt/PAAAAtnWvtgbYnVoaAADgYJUx
zWnpZQaxFXCYZqnvYwAAALsqY5uLDOIr4PCEvOpp6nsYAADAEMr4ZpZBnAUc
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
Ypu++677UOdVpN9mLu2T5eex51TWLm+b4zDk/AAAwDDK3+KXO8bWg6ia3Mhe
hbzYVrU0tfMnNubHxmNFFvGxRvr83T4W08beMxJ7nqP5rMr7tembMfRKDqZl
ffa1nNg1tG5fbZsbWbwfuVitD3q6ad99132o8yrSb3MbnnV812fsko2Pw7r5
i+5xWNdeEwAAwHbK39s3Lb/R96Zqx5QbefPLu0UOpG5ePCy+yyQ3cjnAubNT
bDhEP33mLVZzFj8qVt8z8rw2fbPOZeWdJC3rsq/lbLy/ih1yI8vPm3mcF7V5
etUCbXC8BjmvGn3G3ivzZJttGGo9t7hme40RCwAAbK7IoLamaseUG+lqGeRG
bgY6dwaJYXfpp8+8RSRnsfy8npuoxp6I1blsnRsZaTkb769i99xIa91JZLtb
16fn8RrkvGr0uTKmzZpjF3TWde26nltct3IjAAAwovI399UWv9MHU7WDz438
/NPlwn698sxI3Vc/mSXb18UAtTS182aQGHaXfvrMG4t7l583n4UIuYlmDP1O
2/wJl7Px/ip2eIdv7bvosyN913uD4zXIedXos1m39Wnj+9hzJZ3jAe+6nltc
u3IjAAAwsvJ39+0Wv9UHUbWhciPFR6dvcxuV1s/Lzzb+vGW5mY0n0uZqwHMm
Nk7INuONbDW+RBF/9+/K+0yK9pxFMx7+sLFNn3TNn3A5sWto3b4aIjcSe3bk
/b7r3Xfdhzqv1qz3hz3WbWXsml2Pw7r515AbAQCAkZW/u8+KRLU1VRssN5LI
AeRGbgc+Z2LvlxnqPTV93hMSe/dqn/fUzGvffes9MrF16Jo/0XJiuYN31uyr
Zv4pGvfHjkXj++bzLrExVaLrvZx/5bwc67zqOi4baM3J9NmWNeu10/wAAMA4
ikS1NVWTGxlVyHudDXy+xGLOte/3GKqfIv6u15W/rcf6r323Mg5FzTvr5k+0
nFju4MmafdWcfiWH1NZ34/voO2v6rHfLeqxMO9R5tWZ/9dX6rEafbdnwmGw0
PwAAMJ4iQW1N1eRGRjVYLU3tXInVtATr4vR3evbT9Tf73vMU3TmLtn6e95k/
0XJieZaVGpHa9CvvBm6bvuhRexNZz5XnWDrWZWUfjHVeVZ/teN2s1Ghtsi1r
1nen+QEAgPGUv8/Pd4wlNlY1uZHR3I14vsT+Jh+eK4jmNYpvnjF42qOfEHO/
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
AAAAAAAAAAAAAAAAAABMxf8HDD8POA==
    "], {{0, 683}, {1095, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{891.42265625, Automatic},
  ImageSizeRaw->{1095, 683},
  PlotRange->{{0, 1095}, {0, 683}}]], "Input",ExpressionUUID->"46e32939-24c8-\
4ce0-ba63-5b2a58720b75"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"eefaf0d0-6bac-4889-9c11-09ee3ec2e0b3"],

Cell[CellGroupData[{

Cell["\<\
From Data-Driven Questions to Communicating Actionable Insight\
\>", "Section",
 CellChangeTimes->{{3.7476603637173367`*^9, 3.747660376203383*^9}, {
  3.747660456308832*^9, 3.74766045985865*^9}, {3.747660648707803*^9, 
  3.747660649439012*^9}, {3.748188913745203*^9, 3.748188914609353*^9}, {
  3.748524394836997*^9, 
  3.748524404587414*^9}},ExpressionUUID->"ef048d3a-2b48-413c-81ff-\
6f78c931c672"],

Cell[CellGroupData[{

Cell["Data", "Subsection",
 CellChangeTimes->{{3.7476604327070217`*^9, 3.747660447491151*^9}, {
  3.74766048028581*^9, 
  3.747660481745479*^9}},ExpressionUUID->"47f88e88-9aef-4fed-bb51-\
a77242375580"],

Cell[TextData[ButtonBox["https://twitter.com/WolframResearch",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://twitter.com/WolframResearch"], None},
 ButtonNote->"https://twitter.com/WolframResearch"]], "Text",
 CellChangeTimes->{{3.7476604327070217`*^9, 3.747660447491151*^9}, {
  3.74766048028581*^9, 
  3.747660483539847*^9}},ExpressionUUID->"1e1bbab5-b37d-4354-a147-\
24af1a5d9244"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Questions", "Subsection",
 CellChangeTimes->{{3.747660469836104*^9, 
  3.747660495418371*^9}},ExpressionUUID->"2fc8dac9-93d1-4c31-b9e3-\
d2da5659d6ae"],

Cell["How many tweets did you send out and when?", "Item",
 CellChangeTimes->{{3.747660539598061*^9, 3.747660631022023*^9}, 
   3.7481887891956987`*^9},ExpressionUUID->"546acf5b-4720-45de-9c2a-\
0028e8f6eae3"],

Cell["What are you tweeting about?", "Item",
 CellChangeTimes->{{3.747660539598061*^9, 3.747660631660058*^9}, 
   3.748188791946951*^9},ExpressionUUID->"e5514657-2948-4037-a5c4-\
ae015fde3d97"],

Cell["Who is being mentioned in your tweets?", "Item",
 CellChangeTimes->{{3.747660539598061*^9, 3.74766063225311*^9}, 
   3.748188845861677*^9},ExpressionUUID->"12f4234a-a6a0-4c25-b8e0-\
4ad47127e97c"],

Cell["How many tweets are tagged \[OpenCurlyDoubleQuote]#DataScience\
\[CloseCurlyDoubleQuote]?", "Item",
 CellChangeTimes->{{3.747660539598061*^9, 3.747660613426799*^9}, {
  3.748188794832364*^9, 3.74818880087925*^9}, {3.7482788665426702`*^9, 
  3.748278870092499*^9}, {3.748286285377564*^9, 
  3.74828633441236*^9}},ExpressionUUID->"1eed49a6-1903-471e-9768-\
0e7e8600b358"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Insight", "Subsection",
 CellChangeTimes->{{3.747660514944498*^9, 
  3.747660526211856*^9}},ExpressionUUID->"745dc013-c91d-4e93-a1c1-\
7739ccb40171"],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Numbers at a Glance\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       TagBox[GridBox[{
          {
           TemplateBox[{
             StyleBox[
             "\"Number of tweets per month: \"", "Subsubsection", 
              StripOnInput -> False], 
             StyleBox["42", 18, StripOnInput -> False]},
            "RowDefault"]},
          {
           TemplateBox[{
             StyleBox[
             "\"Number of tweets per day: \"", "Subsubsection", StripOnInput -> 
              False], 
             StyleBox["1.4054346727333358`", 18, StripOnInput -> False]},
            "RowDefault"]},
          {
           TemplateBox[{
             StyleBox[
             "\"Number of hashtags used: \"", "Subsubsection", StripOnInput -> 
              False], 
             StyleBox["55", 18, StripOnInput -> False]},
            "RowDefault"]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], 
       GraphicsBox[{
         {Opacity[0], 
          PointBox[{{0., -0.4116533139111435}, {0., 4.35360524399126}}]}, {{}, 
          {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
           0.6789999999999999], Thickness[Small]}], 
           {RGBColor[0.466987, 0.173327, 0.0693065], EdgeForm[{Opacity[
            0.6789999999999999], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0., 0.5487982520029133}, {32., 
                  1.4512017479970867`}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{58.75000000000001, 343.46938775510205`}, {
                 12.09826227741506, 46.387942302667454`}}],
               StatusArea[#, 32]& ,
               TagBoxNote->"32"],
              StyleBox["32", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[32, {}], "Tooltip"]& ]}, 
           {RGBColor[0.912428, 0.879103, 0.810742], EdgeForm[{Opacity[
            0.6789999999999999], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0., 1.5487982520029133`}, {5., 
                  2.4512017479970867`}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{58.75000000000001, 
                 103.6592793367347}, {-25.345830276799248`, 
                 8.94384974845314}}],
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}, 
           {RGBColor[0.912428, 0.879103, 0.810742], EdgeForm[{Opacity[
            0.6789999999999999], Thickness[Small]}], 
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{0., 2.5487982520029133`}, {5., 
                  3.4512017479970867`}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{58.75000000000001, 
                 103.6592793367347}, {-62.78992283101357, \
-28.500242805761175`}}],
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., -0.4116533139111435}, {0., 4.430862345229425}}], 
            StyleBox[{}, "GraphicsLabel",
             StripOnInput->False]}, 
           StyleBox[{
             {Thickness[Tiny], 
              LineBox[{{0., 0.5487982520029133}, 
                Offset[{-6., 0.}, {0., 0.5487982520029133}]}], 
              LineBox[{{0., 3.4512017479970867`}, 
                Offset[{-6., 0.}, {0., 3.4512017479970867`}]}], {{}, {}, {}, {
                LineBox[{{0., 1.4512017479970867`}, 
                  Offset[{-4., 0.}, {0., 1.4512017479970867`}]}], 
                LineBox[{{0., 1.5487982520029133`}, 
                  Offset[{-4., 0.}, {0., 1.5487982520029133`}]}], 
                LineBox[{{0., 2.4512017479970867`}, 
                  Offset[{-4., 0.}, {0., 2.4512017479970867`}]}], 
                LineBox[{{0., 2.5487982520029133`}, 
                  Offset[{-4., 0.}, {0., 2.5487982520029133`}]}]}, {}}}, 
             StyleBox[
              {Thickness[Tiny], 
               InsetBox["\<\"Others\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0}, 
                Automatic, {1, 0}], 
               InsetBox["\<\"Data related\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0},
                 Automatic, {1, 0}], 
               InsetBox["\<\"DataScience\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0},
                 Automatic, {1, 0}]}, "GraphicsLabel",
              StripOnInput->False]}, "GraphicsTicks",
            StripOnInput->False]}, "GraphicsAxes",
          StripOnInput->False,
          Antialiasing->False]},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, False},
        AxesLabel->{None, None},
        AxesOrigin->{0., -0.4116533139111435},
        CoordinatesToolOptions:>{"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )},
        DisplayFunction->Identity,
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->Medium,
        PlotRange->{{All, All}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.05]}, {
           Scaled[0.02], 
           Scaled[0.02]}},
        Ticks->{Automatic, None}]},
      {
       TagBox[GridBox[{
          {
           StyleBox["\<\"Top 5 hashtags: \"\>", "Subsubsection",
            StripOnInput->False]},
          {
           TemplateBox[{
             TagBox[
              
              DynamicModuleBox[{
               TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                Data`UnorderedAssociation[
                 "DisplayedRowCount" -> 20, "RowCount" -> 5, "Length" -> 5, 
                  "InitialType" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 5], "DisplayedColumnCount" -> 
                  20, "DataRowCount" -> 0, "Shape" -> 
                  TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[144.00000000000003`], 
                    TypeSystem`PackageScope`AtomShape[34]]], 5, {}], 
                  "DataColumnCount" -> 0, "InitialData" -> 
                  TypeSystem`PackageScope`CacheHandle[746780487], "Type" -> 
                  TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 5], "HandleQ" -> True, 
                  "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
                  TypeSystem`PackageScope`CacheHandle[746780487]], 
                TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                DynamicModule[{
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["WolfLang", 
                    Style[
                    "WolfLang", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][{
                    Key["WolfLang"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolfLang"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["12"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolfLang"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["WolframSummer", 
                    Style[
                    "WolframSummer", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][{
                    Key["WolframSummer"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolframSummer"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolframSummer"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["DataScience", 
                    Style[
                    "DataScience", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][{
                    Key["DataScience"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["DataScience"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["DataScience"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["computation", 
                    Style[
                    "computation", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][{
                    Key["computation"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["computation"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["computation"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["WolframTechConf", 
                    Style[
                    "WolframTechConf", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][{
                    Key["WolframTechConf"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolframTechConf"]]], "Mouse"], 
                    ImageSize -> {{144.00000000000003`, Full}, Automatic}], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    GeneralUtilities`Slice[
                    Key["WolframTechConf"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                   TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                   TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1951152423][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                   TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                  DynamicModuleValues :> {}], 
                TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                  TypeSystem`NestedGrid`PackagePrivate`alignBar[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1951152423]]]], 
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                  Dynamic[
                   Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1951152423][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                   TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                  0, FrameMargins -> 0, Alignment -> Top, 
                  ImageSize -> {Automatic, 14}]}, 
               DynamicBox[
                ToBoxes[
                 Column[
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                  Spacings -> 
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                ImageSizeCache -> {199., {68.4169921875, 73.5830078125}}, 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
               BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
               TypeSystem`NestedGrid`PackagePrivate`deleteState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$], 
               DynamicModuleValues :> {}, Initialization :> 
               Block[{$ContextPath = $ContextPath}, 
                 Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> 
              "Deploy"]},
            "CopyTag",
            DisplayFunction->(#& ),
            InterpretationFunction->("Dataset[<>]"& )]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], 
       TagBox[GridBox[{
          {
           StyleBox["\<\"Data-related hashtags:\"\>", "Subsubsection",
            StripOnInput->False]},
          {
           TemplateBox[{
             TagBox[
              
              DynamicModuleBox[{
               TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                Data`UnorderedAssociation[
                 "DisplayedRowCount" -> 20, "RowCount" -> 5, "Length" -> 5, 
                  "InitialType" -> TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration[
                    "data", "DataMining", "datasci", "DataScience", 
                    "DataViz"]], 
                    TypeSystem`Atom[Integer], 5], "DisplayedColumnCount" -> 
                  20, "DataRowCount" -> 0, "Shape" -> 
                  TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[99.], 
                    TypeSystem`PackageScope`AtomShape[34]]], 5, {}], 
                  "DataColumnCount" -> 0, "InitialData" -> 
                  TypeSystem`PackageScope`CacheHandle[759174995], "Type" -> 
                  TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration[
                    "data", "DataMining", "datasci", "DataScience", 
                    "DataViz"]], 
                    TypeSystem`Atom[Integer], 5], "HandleQ" -> True, 
                  "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
                  TypeSystem`PackageScope`CacheHandle[759174995]], 
                TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                DynamicModule[{
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["data", 
                    Style[
                    "data", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][{
                    Key["data"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["data"]]], "Mouse"], 
                    ImageSize -> {{99., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["data"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["DataMining", 
                    Style[
                    "DataMining", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][{
                    Key["DataMining"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataMining"]]], "Mouse"], 
                    ImageSize -> {{99., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataMining"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["datasci", 
                    Style[
                    "datasci", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][{
                    Key["datasci"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["datasci"]]], "Mouse"], 
                    ImageSize -> {{99., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["datasci"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["DataScience", 
                    Style[
                    "DataScience", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][{
                    Key["DataScience"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataScience"]]], "Mouse"], 
                    ImageSize -> {{99., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataScience"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["DataViz", 
                    Style[
                    "DataViz", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][{
                    Key["DataViz"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataViz"]]], "Mouse"], 
                    ImageSize -> {{99., Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    GeneralUtilities`Slice[
                    Key["DataViz"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                   TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                   TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1785313059][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                   TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                  DynamicModuleValues :> {}], 
                TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                  TypeSystem`NestedGrid`PackagePrivate`alignBar[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1785313059]]]], 
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                  Dynamic[
                   Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1785313059][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                   TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                  0, FrameMargins -> 0, Alignment -> Top, 
                  ImageSize -> {Automatic, 14}]}, 
               DynamicBox[
                ToBoxes[
                 Column[
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                  Spacings -> 
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                ImageSizeCache -> {153., {68.4169921875, 73.5830078125}}, 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
               BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
               TypeSystem`NestedGrid`PackagePrivate`deleteState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$], 
               DynamicModuleValues :> {}, Initialization :> 
               Block[{$ContextPath = $ContextPath}, 
                 Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> 
              "Deploy"]},
            "CopyTag",
            DisplayFunction->(#& ),
            InterpretationFunction->("Dataset[<>]"& )]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]]}, {2,"\<\"Contents of Tweets\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       GraphicsBox[{InsetBox[
          StyleBox["\<\"WolfLang\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.20833333333333331`],
           FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center,
           Automatic], InsetBox[
          StyleBox["\<\"WolframSummer\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.11093073593073592`],
           FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0., 46.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"WolframTechConf\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.07846320346320346],
           FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -36.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"DataScience\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09469696969696968],
           FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -63.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"MachineLearning\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.07846320346320346],
           FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., 74.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"computation\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.07846320346320346],
           FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., -88.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"GetItDoneWithWolfram\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., 94.5}, Center, 
          Automatic], InsetBox[
          StyleBox["\<\"WolframNotebooks\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., 109.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"SystemModeler\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.28026441037696703`, 0.715, 0.4292089322474965]], {-1., -110.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"DeepLearning\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           FontColor->RGBColor[0.571589, 0.586483, 0.]], {92., 123.5}, Center,
           Automatic], InsetBox[
          StyleBox["\<\"BacktoSchool\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           FontColor->RGBColor[1, 0.75, 0]], {-6., 124.5}, Center, Automatic],
          InsetBox[
          StyleBox["\<\"NeuralNets\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {2., -127.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"petrochem\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.736782672705901, 0.358, 0.5030266573755369]], {109., -81.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"blockchain\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-112., -83.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"NeuralNet\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.40082222609352647`, 0.5220066643438841, 0.85]], {-92., -107.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"LanguageProcessing\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.5472001045252132, 0.43417993728487203`, 0.85]], {104., -104.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"BusinessLaboratory\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-84., -125.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"WolframEnterprise\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {85., -124.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"WolframNotebook\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8607200975568693, 0.34335598048862614`, 
             0.30296650407188447`]], {110., 104.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"CellularAutomata\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-107., 108.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"SocioEconomics\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {120., 88.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"CloudComputing\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-93., 125.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Gerrymandering\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {86., -136.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"NeuralNetworks\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-118., 93.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"2018Midterms\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-123., -50.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"EnergySaving\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {123., -52.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"spreadsheets\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.428777913273419, 0.5052332520359486, 0.85]], {-121., -62.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"programming\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {122., -64.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"GraphTheory\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.37977756485605163`, 0.715, 0.3025558265468435]], {81., 136.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"technologies\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8342400905885153, 0.4628267270590103, 
             0.0038160815296638794`]], {8., 138.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"EcoFriendly\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-136., -26.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"engineering\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[
            0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {0., -141.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"pneumonia\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {125., 26.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"DataMining\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {128., 63.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"simulations\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-128., 70.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"LiveCoding\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-49., 140.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"WolframU\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-51., -140.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Teachers\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.2187618985811806, 0.715, 0.5074848563512248]], {-97., -137.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"educators\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], 
          {-99., 137.5}, Center, Automatic], InsetBox[
          StyleBox["\<\"tech\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           
           FontColor->RGBColor[
            0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-145., -100.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"innovate\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {128., 75.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Wolfram\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.596786740995709, 0.404791067752503, 0.7955331475107271]], {108., 146.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"airplane\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-149., -114.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"lectures\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {46., -146.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"DataViz\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {147., -117.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"election\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-150., 120.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"datasci\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.47401116530937026`, 0.47809330081437784`, 0.85]], {-147., -127.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"student\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {141., -134.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"FOMO\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {23., 24.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"summer\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.7513196300394465, 0.358, 0.48066210763162087`]], {59., 27.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"AI\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.04599567099567099],
           FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {16., 0.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"devs\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.7748409210981391, 0.358, 0.4444755060028629]], {-152., -9.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"data\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           
           FontColor->RGBColor[
            0.5407932311309059, 0.715, 0.09762679674248334]], {147., 38.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"GIS\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.02976190476190476],
           FontColor->RGBColor[
            0.7132613816472081, 0.358, 0.5392132590042952]], {147., -38.5}, 
          Center, Automatic]},
        DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
        ImageSize->Medium,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRange->{{-169.5, 166.5}, {-152., 154.}}], 
       GraphicsBox[{InsetBox[
          StyleBox["\<\"computational\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center,
           Automatic], InsetBox[
          StyleBox["\<\"modeling\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, -54.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"solutions\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-0.5, 54.5}, Center, 
          Automatic], InsetBox[
          StyleBox["\<\"creating\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-9.5, -109.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"register\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[1, 0.75, 0]], {1.5, 111.5}, Center, Automatic],
          InsetBox[
          StyleBox["\<\"network\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-28.5, 162.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"thanks\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[
            0.40082222609352647`, 0.5220066643438841, 0.85]], {-9.5, -164.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"school\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.571589, 0.586483, 0.]], {18.5, 215.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"good\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {34.5, -206.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"CloudConnector\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.845266573755366, 0.437100139366951, 0.03816643438841502]], {33.5, -254.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"crossdisciplinary\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9107287510704583, 0.33890687339431275`, 
             0.20182187767614543`]], {6.5, 260.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"read\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {177.5, 96.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"just\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-167.5, 97.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"computations\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7658565873730018, 0.358, 0.4582975578876895]], {-155.5, -198.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"convolutional\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.4177882075393331, 0.715, 0.25417864494993975`]], {195.5, 157.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"automatically\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {195.5, -158.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Coincidence\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-179.5, 194.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"consolidated\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-180.5, 224.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Community\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {201.5, -110.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"anniversary\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7132613816472081, 0.358, 0.5392132590042952]], {-204.5, -143.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"competition\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.4567336004533182, 0.4884598397280091, 0.85]], {199.5, -190.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"consolidate\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {205.5, 186.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"accomplish\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5407932311309059, 0.715, 0.09762679674248334]], {-179.5, -230.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"save\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-213.5, -42.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"businesses\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5019668524892619, 0.46131988850644284`, 0.85]], {-67.5, -279.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"cornucopia\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.529922539669161, 0.44454647619850335`, 0.85]], {195.5, -221.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"contiguous\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {202.5, 219.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"application\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5472001045252132, 0.43417993728487203`, 0.85]], {-215.5, -87.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"configured\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[
            0.15725938678540247`, 0.715, 0.5857607804549424]], {-204.5, 254.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"authorship\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {215.5, 249.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"appreciate\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {130.5, -279.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"advantage\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.47401116530937026`, 0.47809330081437784`, 0.85]], {220.5, 45.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"accessible\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-220.5, 33.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"algorithms\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {220.5, -38.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"consultant\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {220.5, -70.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"breathless\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[
            0.6897400905885174, 0.358, 0.5753998606330502]], {-230.5, 141.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"Company\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {9.5, 290.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Celebrate\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-142.5, 283.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Awesome\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-231.5, -173.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"AntonvdH\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {158.5, 282.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"advanced\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-230.5, -268.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"combines\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-228.5, -299.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"accidents\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[
            0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-0.5, -310.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Congrats\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8510135028964549, 0.47400900193096995`, 
             0.018912152606809424`]], {150.5, 311.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"Cleaning\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7277983389807635, 0.358, 0.5168487092603637]], {163.5, -310.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"available\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-131.5, 312.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"analyzes\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {261.5, -253.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"business\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8745421494417032, 0.39318677583744527`, 
             0.11135537360425793`]], {7.5, 320.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"analytics\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-270.5, 313.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"attached\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[
            0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-142.5, -328.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"compact\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5788038738141875, 0.715, 0.049249615145579635`]], {283.5, 0.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"complex\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-284.5, 0.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Assured\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-283.5, 82.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"use\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.09198423127463863],
           
           FontColor->RGBColor[
            0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {289.5, 288.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"analysis\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {276.5, -285.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Contact\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-290.5, 277.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"benefits\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], 
          {-273.5, -329.5}, Center, Automatic], InsetBox[
          StyleBox["\<\"analyze\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {280.5, 328.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Andrew\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {290.5, -323.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"created\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {22.5, -338.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Awards\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.428777913273419, 0.5052332520359486, 0.85]], {300.5, 71.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"choose\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.38354466123747527`, 0.5323732032575149, 0.85]], {-279.5, 111.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"beyond\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8607200975568693, 0.34335598048862614`, 
             0.30296650407188447`]], {-294.5, -118.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"college\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {301.5, 106.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Create\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-115.5, 341.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"criteria\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {123.5, 340.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"control\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7042770479220728, 0.358, 0.5530353108891188]], {134.5, -340.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"benefit\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-222.5, 342.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"annual\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.37977756485605163`, 0.715, 0.3025558265468435]], {-0.5, 348.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"coding\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-314.5, -203.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"bundle\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.47929071933511125`, 0.715, 0.1759027208462221]], {-320.5, 170.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"creates\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-54.5, -363.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"basics\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8342400905885153, 0.4628267270590103, 
             0.0038160815296638794`]], {-326.5, 199.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"Camp\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-333.5, -24.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"correct\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9986489531525362, 0.7507447657626809, 
             0.0036478264881522893`]], {-168.5, -356.5}, Center, Automatic], 
         InsetBox[
          StyleBox["\<\"Cloud\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.31827505306025683`, 0.715, 0.3808317506505822]], {-333.5, -56.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"codes\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {329.5, -134.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"based\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.2187618985811806, 0.715, 0.5074848563512248]], {330.5, -220.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"check\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-181.5, -118.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"affect\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {336.5, -95.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"chest\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {336.5, 133.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"catch\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {337.5, -171.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"apply\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-310.5, -234.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"class\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-333.5, 55.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"cash\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {339.5, -24.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"blast\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[
            0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {341.5, 27.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"access\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {176.5, 129.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"alive\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {338.5, -55.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"Alex\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7748409210981391, 0.358, 0.4444755060028629]], {-334.5, -87.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"30th\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-336.5, -150.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"blog\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {330.5, 163.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"16th\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {322.5, 192.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"cost\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-336.5, 23.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"core\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {39.5, -363.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"30\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-336.5, 137.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"15\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.28026441037696703`, 0.715, 0.4292089322474965]], {64.5, 363.5}, 
          Center, Automatic], InsetBox[
          StyleBox["\<\"C\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-354.5, 101.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"B\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.7513196300394465, 0.358, 0.48066210763162087`]], {31.5, -285.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"3\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {172.5, -251.5},
           Center, Automatic], InsetBox[
          StyleBox["\<\"1\"\>",
           StripOnInput->False,
           FontSize->Scaled[0.045992115637319315`],
           
           FontColor->RGBColor[
            0.736782672705901, 0.358, 0.5030266573755369]], {-144.5, 55.5}, 
          Center, Automatic]},
        DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
        ImageSize->Medium,
        Method->{
         "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
        PlotRange->{{-381., 380.}, {-376., 381.}}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]]}, {3,"\<\"Liked and Retweeted\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       TagBox[GridBox[{
          {
           StyleBox["\<\"Most popular tweets: \"\>", "Subsubsection",
            StripOnInput->False]},
          {
           TemplateBox[{
             TagBox[
              
              DynamicModuleBox[{
               TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                Data`UnorderedAssociation[
                 "DisplayedRowCount" -> 20, "RowCount" -> 20, "Length" -> 4, 
                  "InitialType" -> 
                  TypeSystem`Struct[{
                    "Text", "Hashtags", "FavoriteCount", "RetweetCount"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 3], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], "DisplayedColumnCount" -> 20, 
                  "DataRowCount" -> 0, "Shape" -> 
                  TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"Text"} -> 
                    TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
                    "Hashtags"} -> 
                    TypeSystem`PackageScope`UnknownShape, {"FavoriteCount"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {"RetweetCount"} -> 
                    TypeSystem`PackageScope`AtomShape[34]], 1], 
                  "DataColumnCount" -> 0, "InitialData" -> 
                  TypeSystem`PackageScope`CacheHandle[2146219332], "Type" -> 
                  TypeSystem`Struct[{
                    "Text", "Hashtags", "FavoriteCount", "RetweetCount"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Atom[String], 3], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], "HandleQ" -> True, 
                  "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
                  TypeSystem`PackageScope`CacheHandle[2146219332]], 
                TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                DynamicModule[{
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Text\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Text\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][{
                    Key["Text"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["Text"]]], "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    "What can you get done with #WolfLang? Creating a \
solar-charged probe that identi \[DescendingEllipsis] ", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["Text"]]], "Mouse"], 
                    ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Hashtags\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Hashtags\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][{
                    Key["Hashtags"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["Hashtags"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"WolfLang", "airplane", "MachineLearning"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"WolfLang", "airplane", "MachineLearning"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][{
                    Key["Hashtags"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["Hashtags"]]], "Mouse"]]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FavoriteCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"FavoriteCount\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][{
                    Key["FavoriteCount"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["FavoriteCount"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["36"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["FavoriteCount"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RetweetCount\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"RetweetCount\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][{
                    Key["RetweetCount"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["RetweetCount"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["17"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    GeneralUtilities`Slice[
                    Key["RetweetCount"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                   TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                   TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                  Dynamic[
                   TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 595796022][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                   TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                  DynamicModuleValues :> {}], 
                TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                  TypeSystem`NestedGrid`PackagePrivate`alignBar[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    595796022]]]], 
                  TrackedSymbols :> {
                   TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                  Dynamic[
                   Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    595796022][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                   TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                  0, FrameMargins -> 0, Alignment -> Top, 
                  ImageSize -> {Automatic, 14}]}, 
               DynamicBox[
                ToBoxes[
                 Column[
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                   TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                  Spacings -> 
                  If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                ImageSizeCache -> {628., {55.4169921875, 60.5830078125}}, 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
               BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
               TypeSystem`NestedGrid`PackagePrivate`deleteState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$], 
               DynamicModuleValues :> {}, Initialization :> 
               Block[{$ContextPath = $ContextPath}, 
                 Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> 
              "Deploy"]},
            "CopyTag",
            DisplayFunction->(#& ),
            InterpretationFunction->("Dataset[<>]"& )]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"], "\[SpanFromLeft]"},
      {
       GraphicsBox[{
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.7], Thickness[Small]}], {}, 
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.7], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.466987, 0.173327, 0.0693065], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{0., 0}, {5., 14.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{20.388911128903125`, 
                 62.38210568454764}, {-97.06491477616652, 
                 102.17767038713663`}}]},
              StatusArea[#, 14]& ,
              TagBoxNote->"14"],
             StyleBox["14", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[14, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7691156153846153, 0.34460023076923063`, 0.09570576153846153], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5., 0}, {10., 11.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{61.88210568454764, 
                 103.87530024019216`}, {-54.477217955458684`, 
                 102.17767038713663`}}]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.7691156153846153, 0.34460023076923063`, 0.09570576153846153], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{10., 0}, {15., 11.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{103.37530024019216`, 
                 145.36849479583665`}, {-54.477217955458684`, 
                 102.17767038713663`}}]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9193227692307693, 0.8255226923076924, 0.6830878461538461], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{15., 0}, {20., 3.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{144.86849479583665`, 186.86168935148117`}, {
                 59.08997356642881, 102.17767038713663`}}]},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[
               0.9158753846153846, 0.8523128461538462, 0.746914923076923], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{20., 0}, {25., 2.}, "RoundingRadius" -> 0]},
                ImageSizeCache->{{186.36168935148117`, 228.35488390712567`}, {
                 73.28587250666476, 102.17767038713663`}}]},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.912428, 0.879103, 0.810742], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{35., 0}, {40., 1.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{310.8412730184147, 352.83446757405926`}, {
                 87.4817714469007, 102.17767038713663`}}]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{-0.8, 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->Medium,
        PlotLabel->FormBox["\"Liked\"", TraditionalForm],
        PlotRange->{{0., 40.}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}], 
       GraphicsBox[{
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.7], Thickness[Small]}], {}, 
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.7], Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.8548370000000001, 0.47537, 0.20935185], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{0., 0}, {2., 11.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{20.38891112890312, 
                 57.77175073392047}, {-26.92047295382426, 
                 102.17767038713654`}}]},
              StatusArea[#, 11]& ,
              TagBoxNote->"11"],
             StyleBox["11", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[11, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.466987, 0.173327, 0.0693065], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2., 0}, {4., 17.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{57.27175073392047, 
                 94.65459033893781}, {-97.06491477616652, 
                 102.17767038713654`}}]},
              StatusArea[#, 17]& ,
              TagBoxNote->"17"],
             StyleBox["17", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[17, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.92156925, 0.741993, 0.5326774999999999], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4., 0}, {6., 6.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{94.15459033893781, 131.53742994395515`}, {
                 31.533228564794285`, 102.17767038713654`}}]},
              StatusArea[#, 6]& ,
              TagBoxNote->"6"],
             StyleBox["6", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[6, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.9195065, 0.691951, 0.462051], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6., 0}, {8., 7.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{131.03742994395515`, 168.4202695489725}, {
                 19.842488261070585`, 102.17767038713654`}}]},
              StatusArea[#, 7]& ,
              TagBoxNote->"7"],
             StyleBox["7", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[7, {}], "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              {RGBColor[0.912428, 0.879103, 0.810742], 
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{16., 0}, {18., 1.}, "RoundingRadius" -> 0]},
                
                ImageSizeCache->{{315.4516279690419, 352.83446757405926`}, {
                 89.98693008341283, 102.17767038713654`}}]},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{-0.36, 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->Medium,
        PlotLabel->FormBox["\"Retweeted\"", TraditionalForm],
        PlotRange->{{0., 18.}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]]}, {4,"\<\"Timeline\"\>"->
  PanelBox[
   TagBox[GridBox[{
      {
       GraphicsBox[{{
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.637], Thickness[Small]}], {}, 
           {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
            EdgeForm[{Opacity[0.637], Thickness[Small]}], 
            {RGBColor[
             0.7579256666666668, 0.33825677777777785`, 0.09472801111111112], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               RectangleBox[{0., 0}, {86400., 8.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{20.398518815052043`, 
               68.38793892256663}, {-53.44395978784203, 
               106.28020106078975`}}]}, 
            {RGBColor[
             0.8346556666666668, 0.4365376666666668, 0.17220313333333345`], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{86400., 0}, {172800., 7.}, "RoundingRadius" -> 
                0]},
              
              ImageSizeCache->{{67.88793892256663, 
               115.87735903008122`}, {-33.540939681763064`, 
               106.28020106078975`}}]}, 
            {RGBColor[0.466987, 0.173327, 0.0693065], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{172800., 0}, {259200., 10.}, "RoundingRadius" -> 
                0]},
              
              ImageSizeCache->{{115.37735903008122`, 
               163.3667791375958}, {-93.24999999999997, 
               106.28020106078975`}}]}, 
            {RGBColor[0.466987, 0.173327, 0.0693065], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{259200., 0}, {345600., 10.}, "RoundingRadius" -> 
                0]},
              
              ImageSizeCache->{{162.8667791375958, 
               210.85619924511042`}, {-93.24999999999997, 
               106.28020106078975`}}]}, 
            {RGBColor[
             0.8884725555555556, 0.5400905555555555, 0.2712663777777778], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{345600., 0}, {432000., 6.}, "RoundingRadius" -> 
                0]},
              
              ImageSizeCache->{{210.35619924511042`, 
               258.34561935262496`}, {-13.637919575684094`, 
               106.28020106078975`}}]}, 
            {RGBColor[0.912428, 0.879103, 0.810742], 
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{518400., 0}, {604800., 1.}, "RoundingRadius" -> 
                0]},
              
              ImageSizeCache->{{305.33503946013957`, 353.3244595676542}, {
               85.87718095471078, 106.28020106078975`}}]}}, {}, {}}, {{{}, 
            InsetBox["8", Offset[{0, 4}, {43200., 8.}], 
             ImageScaled[{0.5, 0}]]}, {{}, 
            InsetBox["7", Offset[{0, 4}, {129600., 7.}], 
             ImageScaled[{0.5, 0}]]}, {{}, 
            InsetBox["10", Offset[{0, 4}, {216000., 10.}], 
             ImageScaled[{0.5, 0}]]}, {{}, 
            InsetBox["10", Offset[{0, 4}, {302400., 10.}], 
             ImageScaled[{0.5, 0}]]}, {{}, 
            InsetBox["6", Offset[{0, 4}, {388800., 6.}], 
             ImageScaled[{0.5, 0}]]}, {{}, 
            InsetBox["1", Offset[{0, 4}, {561600., 1.}], 
             ImageScaled[{0.5, 0}]]}}}, {{}, 
          StyleBox[{{{}, LineBox[{{0, 0}, {604800, 0}}], 
             StyleBox[{}, "GraphicsLabel",
              StripOnInput->False]}, 
            
            StyleBox[{{
               LineBox[{{0, 0}, 
                 Offset[{-1.4695761589768238`*^-15, -8.}, {0, 0}]}], 
               LineBox[{{604800, 0}, 
                 Offset[{-1.4695761589768238`*^-15, -8.}, {604800, 
                  0}]}], {{}, {}, {}, {}, {}, {}, {}, {
                 LineBox[{{86400, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {86400, 0}]}], 
                 LineBox[{{86400, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {86400, 0}]}], 
                 LineBox[{{172800, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {172800, 0}]}], 
                 LineBox[{{172800, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {172800, 0}]}], 
                 LineBox[{{259200, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {259200, 0}]}], 
                 LineBox[{{259200, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {259200, 0}]}], 
                 LineBox[{{345600, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {345600, 0}]}], 
                 LineBox[{{345600, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {345600, 0}]}], 
                 LineBox[{{432000, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {432000, 0}]}], 
                 LineBox[{{432000, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {432000, 0}]}], 
                 LineBox[{{518400, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {518400, 0}]}], 
                 LineBox[{{518400, 0}, 
                   Offset[{-7.347880794884119*^-16, -4.}, {518400, 0}]}]}}}, 
              
              StyleBox[{{}, {
                 InsetBox["\<\"Mon\"\>", Offset[{0, -2}, {43200, 0}], {0, 1}, 
                  Automatic, {1, 0}], 
                 InsetBox["\<\"Tue\"\>", Offset[{0, -2}, {129600, 0}], {0, 1},
                   Automatic, {1, 0}], 
                 InsetBox["\<\"Wed\"\>", Offset[{0, -2}, {216000, 0}], {0, 1},
                   Automatic, {1, 0}], 
                 InsetBox["\<\"Thu\"\>", Offset[{0, -2}, {302400, 0}], {0, 1},
                   Automatic, {1, 0}], 
                 InsetBox["\<\"Fri\"\>", Offset[{0, -2}, {388800, 0}], {0, 1},
                   Automatic, {1, 0}], 
                 InsetBox["\<\"Sat\"\>", Offset[{0, -2}, {475200, 0}], {0, 1},
                   Automatic, {1, 0}], 
                 InsetBox["\<\"Sun\"\>", Offset[{0, -2}, {561600, 0}], {0, 1},
                   Automatic, {1, 0}]}}, "GraphicsLabel",
               StripOnInput->False]}, "GraphicsTicks",
             StripOnInput->False]}, "GraphicsAxes",
           StripOnInput->False,
           Antialiasing->False]}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{False, True},
        AxesLabel->{None, None},
        AxesOrigin->{-12096., 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {None, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->Medium,
        PlotLabel->FormBox["\"Tweets by day of week\"", TraditionalForm],
        PlotRange->{{0, 604800}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{Automatic, Automatic}], 
       GraphicsBox[{
         {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
          EdgeForm[{Opacity[0.63], Thickness[Small]}], {}, 
          {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
           EdgeForm[{Opacity[0.63], Thickness[Small]}], 
           {RGBColor[
            0.8884725555555556, 0.5400905555555555, 0.2712663777777778], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{28800., 0}, {32400., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.2761437908497, 
              143.39950980392157`}, {-14.946759893495255`, 
              103.00810026626186`}}]}, 
           {RGBColor[0.466987, 0.173327, 0.0693065], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{32400., 0}, {36000., 10.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.89950980392157`, 
              157.02287581699346`}, {-93.25, 103.00810026626186`}}]}, 
           {RGBColor[
            0.9174075555555555, 0.8404061111111111, 0.7185473333333333], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{36000., 0}, {39600., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.52287581699346`, 170.64624183006535`}, {
              63.35648021300949, 103.00810026626186`}}]}, 
           {RGBColor[
            0.8346556666666668, 0.4365376666666668, 0.17220313333333345`], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{39600., 0}, {43200., 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{170.14624183006535`, 
              184.26960784313727`}, {-34.52256992012144, 
              103.00810026626186`}}]}, 
           {RGBColor[
            0.8346556666666668, 0.4365376666666668, 0.17220313333333345`], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{43200., 0}, {46800., 7.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{183.76960784313727`, 
              197.89297385620915`}, {-34.52256992012144, 
              103.00810026626186`}}]}, 
           {RGBColor[0.912428, 0.879103, 0.810742], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{46800., 0}, {50400., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{197.39297385620915`, 211.51633986928104`}, {
              82.93229023963568, 103.00810026626186`}}]}, 
           {RGBColor[
            0.9223871111111112, 0.8017092222222223, 0.6263526666666667], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50400., 0}, {54000., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{211.01633986928104`, 225.13970588235293`}, {
              43.780670186383304`, 103.00810026626186`}}]}, 
           {RGBColor[
            0.8884725555555556, 0.5400905555555555, 0.2712663777777778], 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{54000., 0}, {57600., 6.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{224.63970588235293`, 
              238.76307189542484`}, {-14.946759893495255`, 
              103.00810026626186`}}]}}, {}, {}}, {{{}, 
           InsetBox["6", Offset[{0, 4}, {30600., 6.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["10", Offset[{0, 4}, {34200., 10.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["2", Offset[{0, 4}, {37800., 2.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["7", Offset[{0, 4}, {41400., 7.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["7", Offset[{0, 4}, {45000., 7.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["1", Offset[{0, 4}, {48600., 1.}], 
            ImageScaled[{0.5, 0}]]}, {{}, 
           InsetBox["3", Offset[{0, 4}, {52200., 3.}], ImageScaled[{0.5, 0}]]}
           , {{}, 
           InsetBox["6", Offset[{0, 4}, {55800., 6.}], 
            ImageScaled[{0.5, 0}]]}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{-1728., 0},
        FrameLabel->{{None, None}, {None, None}},
        FrameTicks->{{Automatic, Automatic}, {{{0., 
             FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
             FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
             FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
             FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
             FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}},
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImageSize->Medium,
        PlotLabel->FormBox["\"Tweets by hour of day\"", TraditionalForm],
        PlotRange->{{0, 86400}, {All, All}},
        PlotRangePadding->{{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.05]}},
        Ticks->{{{0., 
            FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
            FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
            FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
            FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
            FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}]},
      {
       TemplateBox[{
         GraphicsBox[{{
            Directive[
             EdgeForm[
              Directive[
               Thickness[Small], 
               Opacity[0.48999999999999994`]]], 
             RGBColor[
             0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
                Directive[
                 Opacity[0.5], 
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.48999999999999994`]]], 
                  RGBColor[
                  0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                 Directive[
                  RGBColor[
                  0.8627450980392157, 0.6196078431372549, 
                   0.2627450980392157]]], {{
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{259200., 0.}, {345600., 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{345600., 0.}, {432000., 4}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{432000., 0.}, {518400., 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{518400., 0.}, {604800., 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{777600., 0.}, {864000., 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    RectangleBox[{864000., 0.}, {950400., 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{950400., 0.}, {1.0368*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.0368*^6, 0.}, {1.1232*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.1232*^6, 0.}, {1.2096*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.2096*^6, 0.}, {1.296*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.296*^6, 0.}, {1.3824*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.3824*^6, 0.}, {1.4688*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.6416*^6, 0.}, {1.728*^6, 4}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.728*^6, 0.}, {1.8144*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.8144*^6, 0.}, {1.9008*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.9008*^6, 0.}, {1.9872*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.9872*^6, 0.}, {2.0736*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.16*^6, 0.}, {2.2464*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.3328*^6, 0.}, {2.4192*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.4192*^6, 0.}, {2.5056*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.5056*^6, 0.}, {2.592*^6, 2}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.592*^6, 0.}, {2.6784*^6, 1}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
                Directive[
                 Opacity[0.5], 
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.48999999999999994`]]], 
                  RGBColor[
                  0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                 Directive[
                  RGBColor[
                  0.5647058823529412, 0.23137254901960785`, 
                   0.15294117647058825`]]], {{
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{432000., 2}, {518400., 3}, "RoundingRadius" -> 
                    0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.3824*^6, 2}, {1.4688*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.728*^6, 2}, {1.8144*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{1.8144*^6, 2}, {1.9008*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  TagBox[
                   TooltipBox[{
                    
                    RectangleBox[{2.4192*^6, 2}, {2.5056*^6, 3}, 
                    "RoundingRadius" -> 0]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, \
{}, {}, {}, {}}, {}}}}}, {
          ImageSize -> Medium, PlotLabel -> 
           FormBox["\"Tweets by day of month\"", TraditionalForm], 
           AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-53568., 0.}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {{{172800., 
                FormBox["\"03\"", TraditionalForm], {0, 0.01}}, {518400., 
                FormBox["\"07\"", TraditionalForm], {0, 0.01}}, {864000., 
                FormBox["\"11\"", TraditionalForm], {0, 0.01}}, {1.2096*^6, 
                FormBox["\"15\"", TraditionalForm], {0, 0.01}}, {1.5552*^6, 
                FormBox["\"19\"", TraditionalForm], {0, 0.01}}, {1.9008*^6, 
                FormBox["\"23\"", TraditionalForm], {0, 0.01}}, {2.2464*^6, 
                FormBox["\"27\"", TraditionalForm], {0, 0.01}}, {2.592*^6, 
                FormBox["\"31\"", TraditionalForm], {0, 0.01}}}, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{0, 2678400}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {{{172800., 
               FormBox["\"03\"", TraditionalForm], {0, 0.01}}, {518400., 
               FormBox["\"07\"", TraditionalForm], {0, 0.01}}, {864000., 
               FormBox["\"11\"", TraditionalForm], {0, 0.01}}, {1.2096*^6, 
               FormBox["\"15\"", TraditionalForm], {0, 0.01}}, {1.5552*^6, 
               FormBox["\"19\"", TraditionalForm], {0, 0.01}}, {1.9008*^6, 
               FormBox["\"23\"", TraditionalForm], {0, 0.01}}, {2.2464*^6, 
               FormBox["\"27\"", TraditionalForm], {0, 0.01}}, {2.592*^6, 
               FormBox["\"31\"", TraditionalForm], {0, 0.01}}}, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{"\"All\"", "\"Data Science\""}, "SwatchLegend", 
            DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.48999999999999994`]]], 
                    RGBColor[
                    0.8627450980392157, 0.6196078431372549, 
                    0.2627450980392157]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.48999999999999994`]]], 
                    RGBColor[
                    0.5647058823529412, 0.23137254901960785`, 
                    0.15294117647058825`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8627450980392157, 0.6196078431372549, 
                    0.2627450980392157], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5751633986928105, 0.41307189542483663`, 
                    0.17516339869281047`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.8627450980392157`", ",", "0.6196078431372549`",
                     ",", "0.2627450980392157`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8627450980392157, 0.6196078431372549, 
                    0.2627450980392157]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8627450980392157, 0.6196078431372549, 
                    0.2627450980392157], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5647058823529412, 0.23137254901960785`, 
                    0.15294117647058825`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3764705882352941, 0.1542483660130719, 
                    0.1019607843137255], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.5647058823529412`", ",", 
                    "0.23137254901960785`", ",", "0.15294117647058825`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5647058823529412, 0.23137254901960785`, 
                    0.15294117647058825`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5647058823529412, 0.23137254901960785`, 
                    0.15294117647058825`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.48999999999999994`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )], 
       TemplateBox[{
         GraphicsBox[{{{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.602]]], 
              RGBColor[
              0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
                 Directive[
                  Opacity[0.5], 
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.602]]], 
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                  Directive[
                   RGBColor[0.9213912, 0.8094486000000001, 0.6447916]]], {{
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 0.}, {2.6784*^6, 44}, "RoundingRadius" -> 
                    0]}]}, 
                    StyleBox["44", {}, StripOnInput -> False]], Annotation[#, 
                    Style[44, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6784*^6, 0.}, {5.0976*^6, 33}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["33", {}, StripOnInput -> False]], Annotation[#, 
                    Style[33, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.0976*^6, 0.}, {7.776*^6, 49}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["49", {}, StripOnInput -> False]], Annotation[#, 
                    Style[49, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.776*^6, 0.}, {1.0368*^7, 43}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["43", {}, StripOnInput -> False]], Annotation[#, 
                    Style[43, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.0368*^7, 0.}, {1.30464*^7, 66}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["66", {}, StripOnInput -> False]], Annotation[#, 
                    Style[66, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.30464*^7, 0.}, {1.56384*^7, 61}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["61", {}, StripOnInput -> False]], Annotation[#, 
                    Style[61, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.56384*^7, 0.}, {1.83168*^7, 75}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["75", {}, StripOnInput -> False]], Annotation[#, 
                    Style[75, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.83168*^7, 0.}, {2.09952*^7, 81}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["81", {}, StripOnInput -> False]], Annotation[#, 
                    Style[81, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.09952*^7, 0.}, {2.35872*^7, 65}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["65", {}, StripOnInput -> False]], Annotation[#, 
                    Style[65, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.35872*^7, 0.}, {2.62656*^7, 101}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["101", {}, StripOnInput -> False]], Annotation[#, 
                    Style[101, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.62656*^7, 0.}, {2.88576*^7, 83}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
                    Style[83, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.88576*^7, 0.}, {3.1536*^7, 61}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["61", {}, StripOnInput -> False]], Annotation[#, 
                    Style[61, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
                 Directive[
                  Opacity[0.5], 
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.602]]], 
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                  Directive[
                   RGBColor[0.466987, 0.173327, 0.0693065]]], {{
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6784*^6, 33}, {5.0976*^6, 34}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.0976*^6, 49}, {7.776*^6, 50}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.83168*^7, 81}, {2.09952*^7, 82}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.35872*^7, 101}, {2.62656*^7, 102}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
                 Directive[
                  Opacity[0.5], 
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.602]]], 
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                  Directive[
                   RGBColor[0.9186814, 0.6719342, 0.4338004]]], {{
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 44}, {2.6784*^6, 87}, "RoundingRadius" -> 
                    0]}]}, 
                    StyleBox["43", {}, StripOnInput -> False]], Annotation[#, 
                    Style[43, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6784*^6, 34}, {5.0976*^6, 73}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["39", {}, StripOnInput -> False]], Annotation[#, 
                    Style[39, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.0976*^6, 50}, {7.776*^6, 108}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["58", {}, StripOnInput -> False]], Annotation[#, 
                    Style[58, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.776*^6, 43}, {1.0368*^7, 99}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["56", {}, StripOnInput -> False]], Annotation[#, 
                    Style[56, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.0368*^7, 66}, {1.30464*^7, 110}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["44", {}, StripOnInput -> False]], Annotation[#, 
                    Style[44, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.30464*^7, 61}, {1.56384*^7, 102}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["41", {}, StripOnInput -> False]], Annotation[#, 
                    Style[41, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.56384*^7, 75}, {1.83168*^7, 120}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["45", {}, StripOnInput -> False]], Annotation[#, 
                    Style[45, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.83168*^7, 82}, {2.09952*^7, 133}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
                    Style[51, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.09952*^7, 65}, {2.35872*^7, 79}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
                    Style[14, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
                 Directive[
                  Opacity[0.5], 
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.602]]], 
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`]], 
                  Directive[
                   RGBColor[0.7288318, 0.32176380000000004`, 0.09218586]]], {{
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0., 87}, {2.6784*^6, 88}, "RoundingRadius" -> 
                    0]}]}, 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6784*^6, 73}, {5.0976*^6, 75}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.0976*^6, 108}, {7.776*^6, 111}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
                    Style[3, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.776*^6, 99}, {1.0368*^7, 103}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.0368*^7, 110}, {1.30464*^7, 116}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
                    Style[6, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.30464*^7, 102}, {1.56384*^7, 106}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.56384*^7, 120}, {1.83168*^7, 124}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
                    Style[4, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.83168*^7, 133}, {2.09952*^7, 138}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
                    Style[5, {}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.09952*^7, 79}, {2.35872*^7, 81}, 
                    "RoundingRadius" -> 0]}]}, 
                    StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
                    Style[2, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, \
{{}, 
            StyleBox[{Antialiasing -> False, {{}, {
                LineBox[{{0, 0}, {31536000, 0}}]}, 
               StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
              StyleBox[{{
                 Directive[], 
                 LineBox[{{0, 0}, 
                   Offset[{-1.4695761589768238`*^-15, -8.}, {0, 0}]}], 
                 LineBox[{{31536000, 0}, 
                   
                   Offset[{-1.4695761589768238`*^-15, -8.}, {31536000, 
                    0}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
                   LineBox[{{2678400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {2678400, 0}]}], 
                   LineBox[{{2678400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {2678400, 0}]}], 
                   LineBox[{{5097600, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {5097600, 0}]}], 
                   LineBox[{{5097600, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {5097600, 0}]}], 
                   LineBox[{{7776000, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {7776000, 0}]}], 
                   LineBox[{{7776000, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {7776000, 0}]}], 
                   LineBox[{{10368000, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {10368000, 0}]}], 
                   LineBox[{{10368000, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {10368000, 0}]}], 
                   LineBox[{{13046400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {13046400, 0}]}], 
                   LineBox[{{13046400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {13046400, 0}]}], 
                   LineBox[{{15638400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {15638400, 0}]}], 
                   LineBox[{{15638400, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {15638400, 0}]}], 
                   LineBox[{{18316800, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {18316800, 0}]}], 
                   LineBox[{{18316800, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {18316800, 0}]}], 
                   LineBox[{{20995200, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {20995200, 0}]}], 
                   LineBox[{{20995200, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {20995200, 0}]}], 
                   LineBox[{{23587200, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {23587200, 0}]}], 
                   LineBox[{{23587200, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {23587200, 0}]}], 
                   LineBox[{{26265600, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {26265600, 0}]}], 
                   LineBox[{{26265600, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {26265600, 0}]}], 
                   LineBox[{{28857600, 0}, 
                    Offset[{-7.347880794884119*^-16, -4.}, {28857600, 0}]}], 
                   LineBox[{{28857600, 0}, 
                    
                    Offset[{-7.347880794884119*^-16, -4.}, {28857600, 
                    0}]}]}}}, 
                StyleBox[{{}, 
                  Directive[], 
                  StyleBox[{
                    InsetBox[
                    FormBox["\"Jan\"", TraditionalForm], 
                    Offset[{0, -2}, {1339200, 0}], {0, 1}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Feb\"", TraditionalForm], 
                    Offset[{0, -2}, {3888000, 0}], {0, 1}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Mar\"", TraditionalForm], 
                    Offset[{0, -2}, {6436800, 0}], {0, 1}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Apr\"", TraditionalForm], 
                    Offset[{0, -2}, {9072000, 0}], {0, 1}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"May\"", TraditionalForm], 
                    Offset[{0, -2}, {11707200, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Jun\"", TraditionalForm], 
                    Offset[{0, -2}, {14342400, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Jul\"", TraditionalForm], 
                    Offset[{0, -2}, {16977600, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Aug\"", TraditionalForm], 
                    Offset[{0, -2}, {19656000, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Sep\"", TraditionalForm], 
                    Offset[{0, -2}, {22291200, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Oct\"", TraditionalForm], 
                    Offset[{0, -2}, {24926400, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Nov\"", TraditionalForm], 
                    Offset[{0, -2}, {27561600, 0}], {0, 1}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["\"Dec\"", TraditionalForm], 
                    Offset[{0, -2}, {30196800, 0}], {0, 1}, Automatic, {1, 
                    0}]}, {}, StripOnInput -> False]}, "GraphicsLabel", 
                 StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
               False]}, "GraphicsAxes", StripOnInput -> False]}}, {
          ImageSize -> Medium, PlotLabel -> 
           FormBox["\"Tweets by month\"", TraditionalForm], AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], 
           Axes -> {False, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {-630720., 0.}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {None, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], PlotRange -> {{0, 31536000}, {All, All}}, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{"\"All 17\"", "\"DS 17\"", "\"All 18\"", "\"DS 18\""},
             "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.9213912, 0.8094486000000001, 0.6447916]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.466987, 0.173327, 0.0693065]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.9186814, 0.6719342, 0.4338004]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.7288318, 0.32176380000000004`, 0.09218586]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.5, 0.5}}}], 
                    "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxDividers -> {
                    "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9213912, 0.8094486000000001, 0.6447916], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6142608, 0.5396324000000001, 0.4298610666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9213912`", ",", "0.8094486000000001`", ",", 
                    "0.6447916`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9213912, 0.8094486000000001, 0.6447916]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9213912, 0.8094486000000001, 0.6447916], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.466987, 0.173327, 0.0693065], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.3113246666666667, 0.11555133333333334`, 
                    0.04620433333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.466987`", ",", "0.173327`", ",", 
                    "0.0693065`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.466987, 0.173327, 0.0693065]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.466987, 0.173327, 0.0693065], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9186814, 0.6719342, 0.4338004], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6124542666666667, 0.4479561333333334, 
                    0.28920026666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9186814`", ",", "0.6719342`", ",", 
                    "0.4338004`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9186814, 0.6719342, 0.4338004]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9186814, 0.6719342, 0.4338004], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7288318, 0.32176380000000004`, 0.09218586], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.4858878666666667, 0.21450920000000004`, 
                    0.061457239999999996`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.7288318`", ",", "0.32176380000000004`", ",", 
                    "0.09218586`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7288318, 0.32176380000000004`, 0.09218586]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7288318, 0.32176380000000004`, 0.09218586], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], ",", 
                    RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], TraditionalForm]},
        "Legended",
        DisplayFunction->(GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ),
        Editable->True,
        InterpretationFunction->(RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]]}, {5,"\<\"Daily Buzz\"\>"->
  PanelBox[
   TemplateBox[{
     GraphicsBox[{
       RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBgB2IJIAaxz/XUmcwxemtfJRE1d47iG/urp9+bzPz40n5U
nDzxHP9bqZw1b+1VEiQPMDx/aR/cGf5PcdGTQefOUfFR8VFxyvO1tCFf57XU
t/YruQ+p1TQ8tQ+o2H8g6fBtnObgUj9aboxMccVPPnKs+17bm7Aq8hu/um8/
27vRPGvZWZqnH1zqSXXPqDh9xEmNd1LLJWrFO6n2jooPbP1FrXjHZT6p4oMt
3EbFqVvv4Epv1Kq/Blu40VocAFHBTS0=
        "], {{0, 0}, {24, 7}}, {0, 1}], {{Antialiasing -> False, 
         GrayLevel[
          NCache[-1 + GoldenRatio, 0.6180339887498949]], 
         LineBox[{{{0, 7}, {24, 7}}, {{0, 6}, {24, 6}}, {{0, 5}, {24, 5}}, {{
          0, 4}, {24, 4}}, {{0, 3}, {24, 3}}, {{0, 2}, {24, 2}}, {{0, 1}, {24,
           1}}, {{0, 0}, {24, 0}}}]}, {Antialiasing -> False, 
         GrayLevel[
          NCache[-1 + GoldenRatio, 0.6180339887498949]], 
         LineBox[{{{0, 0}, {0, 7}}, {{1, 0}, {1, 7}}, {{2, 0}, {2, 7}}, {{3, 
          0}, {3, 7}}, {{4, 0}, {4, 7}}, {{5, 0}, {5, 7}}, {{6, 0}, {6, 
          7}}, {{7, 0}, {7, 7}}, {{8, 0}, {8, 7}}, {{9, 0}, {9, 7}}, {{10, 
          0}, {10, 7}}, {{11, 0}, {11, 7}}, {{12, 0}, {12, 7}}, {{13, 0}, {13,
           7}}, {{14, 0}, {14, 7}}, {{15, 0}, {15, 7}}, {{16, 0}, {16, 7}}, {{
          17, 0}, {17, 7}}, {{18, 0}, {18, 7}}, {{19, 0}, {19, 7}}, {{20, 
          0}, {20, 7}}, {{21, 0}, {21, 7}}, {{22, 0}, {22, 7}}, {{23, 0}, {23,
           7}}, {{24, 0}, {24, 7}}}]}}}, Frame -> True, 
      FrameLabel -> {None, None}, FrameStyle -> Opacity[0], 
      FrameTicks -> {{{{6.5, 
           FormBox["Monday", TraditionalForm]}, {5.5, 
           FormBox["Tuesday", TraditionalForm]}, {4.5, 
           FormBox["Wednesday", TraditionalForm]}, {3.5, 
           FormBox["Thursday", TraditionalForm]}, {2.5, 
           FormBox["Friday", TraditionalForm]}, {1.5, 
           FormBox["Saturday", TraditionalForm]}, {0.5, 
           FormBox["Sunday", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {1.5, 
           FormBox["2", TraditionalForm]}, {2.5, 
           FormBox["3", TraditionalForm]}, {3.5, 
           FormBox["4", TraditionalForm]}, {4.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {6.5, 
           FormBox["7", TraditionalForm]}, {7.5, 
           FormBox["8", TraditionalForm]}, {8.5, 
           FormBox["9", TraditionalForm]}, {9.5, 
           FormBox["10", TraditionalForm]}, {10.5, 
           FormBox["11", TraditionalForm]}, {11.5, 
           FormBox["12", TraditionalForm]}, {12.5, 
           FormBox["13", TraditionalForm]}, {13.5, 
           FormBox["14", TraditionalForm]}, {14.5, 
           FormBox["15", TraditionalForm]}, {15.5, 
           FormBox["16", TraditionalForm]}, {16.5, 
           FormBox["17", TraditionalForm]}, {17.5, 
           FormBox["18", TraditionalForm]}, {18.5, 
           FormBox["19", TraditionalForm]}, {19.5, 
           FormBox["20", TraditionalForm]}, {20.5, 
           FormBox["21", TraditionalForm]}, {21.5, 
           FormBox["22", TraditionalForm]}, {22.5, 
           FormBox["23", TraditionalForm]}, {23.5, 
           FormBox["24", TraditionalForm]}}, None}}, FrameTicksStyle -> 
      Opacity[1], GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Full, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic}, 
      PlotLabel -> FormBox["\"Wolfram Twitter Activity\"", TraditionalForm]], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{{}, {}, 
               RasterBox[CompressedData["
1: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
Ren4H7QhtyU=
                "], {{-180, 
                  Rational[-15, 2]}, {180, 
                  Rational[15, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{180, 
                    Rational[-15, 2]}, {-180, 
                    Rational[-15, 2]}, {-180, 
                    Rational[15, 2]}, {180, 
                    Rational[15, 2]}, {180, 
                    Rational[-15, 2]}}, {{
                   180, -7.5}, {-180, -7.5}, {-180, 7.5}, {180, 7.5}, {
                   180, -7.5}}]]}, {
                CapForm[None], {}}, {Antialiasing -> False, 
                StyleBox[
                 LineBox[{{-180., -7.5}, {180., -7.5}}], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False], 
                StyleBox[
                 StyleBox[{{
                    StyleBox[
                    LineBox[{{{-180., -7.5}, 
                    Offset[{0, -4.}, {-180., -7.5}]}, {{-108., -7.5}, 
                    Offset[{0, -4.}, {-108., -7.5}]}, {{-36., -7.5}, 
                    Offset[{0, -4.}, {-36., -7.5}]}, {{36., -7.5}, 
                    Offset[{0, -4.}, {36., -7.5}]}, {{108., -7.5}, 
                    Offset[{0, -4.}, {108., -7.5}]}, {{180., -7.5}, 
                    Offset[{0, -4.}, {180., -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{-165.60000000000002`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-165.60000000000002`, -7.5}]}, \
{{-151.20000000000002`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-151.20000000000002`, -7.5}]}, {{-136.8, \
-7.5}, 
                    Offset[{0., -2.5}, {-136.8, -7.5}]}, {{-122.4, -7.5}, 
                    Offset[{
                    0., -2.5}, {-122.4, -7.5}]}, {{-93.60000000000001, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-93.60000000000001, -7.5}]}, \
{{-79.20000000000002, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-79.20000000000002, -7.5}]}, {{-64.8, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-64.8, -7.5}]}, {{-50.400000000000006`, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-50.400000000000006`, -7.5}]}, \
{{-21.59999999999998, -7.5}, 
                    
                    Offset[{
                    0., -2.5}, {-21.59999999999998, -7.5}]}, {{-7.2, -7.5}, 
                    Offset[{0., -2.5}, {-7.2, -7.5}]}, {{7.2, -7.5}, 
                    Offset[{0., -2.5}, {7.2, -7.5}]}, {{
                    21.59999999999998, -7.5}, 
                    Offset[{0., -2.5}, {21.59999999999998, -7.5}]}, {{
                    50.400000000000006`, -7.5}, 
                    Offset[{0., -2.5}, {50.400000000000006`, -7.5}]}, {{
                    64.8, -7.5}, 
                    Offset[{0., -2.5}, {64.8, -7.5}]}, {{79.2, -7.5}, 
                    Offset[{0., -2.5}, {79.2, -7.5}]}, {{
                    93.60000000000001, -7.5}, 
                    Offset[{0., -2.5}, {93.60000000000001, -7.5}]}, {{
                    122.4, -7.5}, 
                    Offset[{0., -2.5}, {122.4, -7.5}]}, {{
                    136.80000000000004`, -7.5}, 
                    Offset[{0., -2.5}, {136.80000000000004`, -7.5}]}, {{
                    151.19999999999996`, -7.5}, 
                    Offset[{0., -2.5}, {151.19999999999996`, -7.5}]}, {{
                    165.60000000000002`, -7.5}, 
                    Offset[{0., -2.5}, {165.60000000000002`, -7.5}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{0., -7.}, {-180., -7.5}], {0., 1.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{0., -7.}, {-108., -7.5}], {0., 1.}, Automatic, {1,
                     0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{0., -7.}, {-36., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{0., -7.}, {36., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{0., -7.}, {108., -7.5}], {0., 1.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{0., -7.}, {180., -7.5}], {0., 1.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                  False], 
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{True, False}, {False, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {360, Automatic}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"SiennaTones\"", ",", "\"Reverse\""}], "}"}], 
                    "]"}], "[", "#1", "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"0", ",", "5"}], "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "360"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]]}, {
  6,"\<\"Revisit for Hashtag\"\>"->
  PanelBox[
   PaneBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"Could these tweets possibly have been tagged \
#DataScience? \"\>", "Subsubsection",
         StripOnInput->False]},
       {
        TagBox[GridBox[{
           {
            StyleBox["\<\"Tweet Text\"\>",
             StripOnInput->False,
             FontWeight->Bold], 
            StyleBox["\<\"Hashtag\"\>",
             StripOnInput->False,
             FontWeight->Bold]},
           {"\<\"#GIS, #MachineLearning, #DataViz: Just a few of the ways our \
Technical Services team increased safety &amp; reduced the risk of pipeline \
accidents. We save our customers \:23f0, \|01f4b0 &amp; resources through \
innovative solutions to complex problems. Get started today \
https://t.co/7dRUQiS7oN https://t.co/38pvBuvIVc\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"GIS\"\>", ",", "\<\"MachineLearning\"\>", 
              ",", "\<\"DataViz\"\>"}], "}"}]},
           {"\<\"Increase quality &amp; decrease cost: Two essential benefits \
the oil &amp; gas industry receives from #SystemModeler user &amp; consultant \
Eric S. Make sure to catch his talk at #WolframTechConf! #petrochem \
https://t.co/uiObpIJd4F https://t.co/42fXO7PvD4\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"SystemModeler\"\>", ",", "\<\"WolframTechConf\"\>", 
              ",", "\<\"petrochem\"\>"}], "}"}]},
           {"\<\"Looking for solutions to difficult problems? Wolfram \
Technical Services leverages cross-disciplinary expertise &amp; sophisticated \
computational methods to innovate toward success. Jump start your projects \
today: https://t.co/7dRUQiS7oN https://t.co/5yA9sOYapQ\"\>", 
            RowBox[{"{", "}"}]},
           {"\<\"Computational #SocioEconomics?  Kamar Mack will demonstrate \
how he used #WolfLang to analyze levels of friendships &amp; apply \
computation to a winning election strategy at the #WolframTechConf.  Join us \
for this &amp; more: https://t.co/uiObpIJd4F https://t.co/JKahUWgt8r\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"SocioEconomics\"\>", ",", "\<\"WolfLang\"\>", 
              ",", "\<\"WolframTechConf\"\>"}], "}"}]},
           {"\<\"Who wrote it? #NeuralNetworks trained on writing styles to \
ID authorship in #WolframSummer School project by Jaime B: \
https://t.co/AgiNFLbEwG https://t.co/W9uUXpeSxR\"\>", 
            RowBox[{"{", 
             RowBox[{"\<\"NeuralNetworks\"\>", ",", "\<\"WolframSummer\"\>"}],
              "}"}]},
           {"\<\"Create, run &amp; analyze high-fidelity models &amp; \
#simulations in an easy drag-&amp;-drop environment with Wolfram \
#SystemModeler. Save 15% this semester! https://t.co/ISaI8vzBfu #engineering \
https://t.co/RIOqR5NBH2\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"simulations\"\>", ",", "\<\"SystemModeler\"\>", 
              ",", "\<\"engineering\"\>"}], "}"}]},
           {"\<\"Take advantage of exclusive opportunities to network w/ \
Wolfram #devs &amp; @stephen_wolfram himself at this year's #WolframTechConf! \
You won't want to miss our #LiveCoding competition &amp; direct access to the \
people &amp; knowledge behind the tech. Register today! \
https://t.co/uiObpIJd4F https://t.co/fnLHEe2V08\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"devs\"\>", ",", "\<\"WolframTechConf\"\>", 
              ",", "\<\"LiveCoding\"\>"}], "}"}]},
           {"\<\"#WolfLang is being used to solve business intelligence needs \
through #DataMining &amp; analytics. What's waiting to be discovered in your \
#data? https://t.co/iGQob1Nv0q https://t.co/RfSnQyO5h4\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"WolfLang\"\>", ",", "\<\"DataMining\"\>", 
              ",", "\<\"data\"\>"}], "}"}]},
           {"\<\"Enterprise Private Cloud combines powerful #computation, \
high-level language &amp; interactive deployment, all privately hosted in \
your organization &amp; made possible w/ Wolfram: https://t.co/FVzoj8HvxE \
https://t.co/B213O4PQWV\"\>", 
            RowBox[{"{", "\<\"computation\"\>", "}"}]},
           {"\<\"Stand on the shoulders of advanced developers &amp; see \
what's possible. Curate #AI with the Wolfram Neural Net Repository, housing \
nets configured by #DeepLearning practitioners. https://t.co/usRSNd9p74 \
https://t.co/ga0Ds6Fl87\"\>", 
            RowBox[{"{", 
             RowBox[{"\<\"AI\"\>", ",", "\<\"DeepLearning\"\>"}], "}"}]},
           {"\<\"You'll want to check out this #WolframSummer Camp project \
created (in just two weeks) right meow. Kyle K. analyzes what factors may \
affect the price of @CryptoKitties on the Ethereum #blockchain: \
https://t.co/9gzlBWJnMi https://t.co/4h8vZL4Eu5\"\>", 
            RowBox[{"{", 
             RowBox[{"\<\"WolframSummer\"\>", ",", "\<\"blockchain\"\>"}], 
             "}"}]},
           {"\<\"What can you accomplish by teaming up with the world's \
#computation experts? Wolfram Technical Services creates the #tech \
infrastructure you need to #innovate, disrupt, &amp; scale. Get started now: \
https://t.co/7dRUQiS7oN https://t.co/3fALo1hVmP\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"computation\"\>", ",", "\<\"tech\"\>", 
              ",", "\<\"innovate\"\>"}], "}"}]},
           {"\<\"How time flies! Did you know #WolfLang is turning 30? Join \
us for the festivities at this year's #WolframTechConf! Celebrate &amp; \
register today before it's too late: https://t.co/zJstiPpVK3 \
https://t.co/zxVnTe2yw3\"\>", 
            RowBox[{"{", 
             RowBox[{"\<\"WolfLang\"\>", ",", "\<\"WolframTechConf\"\>"}], 
             "}"}]},
           {"\<\"Andrew Yule, tech manager for Assured Flow Solutions, relies \
on #WolfLang for #petrochem analytics, from quick computations to large-scale \
modeling. Read how he consolidated his team\[CloseCurlyQuote]s algorithms \
&amp; data into 1 system. https://t.co/iUB46kY7Yc #GetItDoneWithWolfram \
https://t.co/lGbD7fM24K\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"WolfLang\"\>", ",", "\<\"petrochem\"\>", 
              ",", "\<\"GetItDoneWithWolfram\"\>"}], "}"}]},
           {"\<\"Learn how #WolframSummer school student Mengyi S created a \
#WolfLang version of @Grammarly using #NeuralNets to correct \
#LanguageProcessing problems: https://t.co/owrfp8RcmF https://t.co/eFxgh3Xtz0\
\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"WolframSummer\"\>", ",", "\<\"WolfLang\"\>", 
              ",", "\<\"NeuralNets\"\>", ",", "\<\"LanguageProcessing\"\>"}], 
             "}"}]},
           {"\<\"For over a decade, #BusinessLaboratory has been performing \
scientific simulations for businesses &amp; governments. At the core of their \
projects lies #datasci with #WolfLang: https://t.co/rcFrT54neG \
https://t.co/XzMZ1DVJXK\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"BusinessLaboratory\"\>", ",", "\<\"datasci\"\>", 
              ",", "\<\"WolfLang\"\>"}], "}"}]},
           {"\<\"What does your business look like when you apply \
#computation everywhere? Introducing #WolframEnterprise Private Cloud: \
https://t.co/yCHjuNK1kd\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"computation\"\>", 
              ",", "\<\"WolframEnterprise\"\>"}], "}"}]},
           {"\<\"New to #NeuralNets? Discover the power of the Wolfram Neural \
Net Repository with  #WolframU. Learn the basics &amp; beyond to train your \
own convolutional Neural Network:  https://t.co/JD2UAFlixZ \
https://t.co/C0IciSCu9F\"\>", 
            RowBox[{"{", 
             RowBox[{"\<\"NeuralNets\"\>", ",", "\<\"WolframU\"\>"}], "}"}]},
           {"\<\"#Gerrymandering, #2018Midterms &amp; #WolfLang: See how HS \
student, Alex C., at the #WolframSummer Camp worked w/ #GraphTheory, FIPS \
codes &amp; data to solve the problem of dividing states into compact &amp; \
contiguous districts in just two weeks: https://t.co/dpHnejV8ZV \
https://t.co/13CX3rpRVb\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"Gerrymandering\"\>", ",", "\<\"2018Midterms\"\>", 
              ",", "\<\"WolfLang\"\>", ",", "\<\"WolframSummer\"\>", 
              ",", "\<\"GraphTheory\"\>"}], "}"}]},
           {"\<\"Say no to #FOMO! Don't miss out on this year's #WolfLang \
coding competition, Innovator Awards &amp; networking opportunities w/ peers \
interested in cutting-edge #tech, knowledge-based programming &amp; precision \
computation. Register today: https://t.co/uiObpIJd4F \
https://t.co/Gn8grBFAD7\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"FOMO\"\>", ",", "\<\"WolfLang\"\>", 
              ",", "\<\"tech\"\>"}], "}"}]},
           {"\<\"#DeepLearning is accessible for application development, \
scientific research, and scalable projects that benefit from #AI with our \
#NeuralNet Repository. Learn more about the R&amp;D &amp; expert curation: \
https://t.co/YiuqGhQEn1 https://t.co/frEth1vadh\"\>", 
            RowBox[{"{", 
             
             RowBox[{"\<\"DeepLearning\"\>", ",", "\<\"AI\"\>", 
              ",", "\<\"NeuralNet\"\>"}], "}"}]}
          },
          AutoDelete->False,
          BaseStyle->"Text",
          FrameStyle->GrayLevel[0.85],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxFrame->{"Columns" -> False, "Rows" -> {{True}}},
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"],
    ImageSize->{800, 500},
    ImageSizeAction->"Scrollable",
    ScrollPosition->{0., 0.},
    Scrollbars->True]]}}, 1,
  Alignment->Center]], "Output",
 CellChangeTimes->{{3.7457775728631697`*^9, 3.745777663546143*^9}, 
   3.745842966885626*^9, 3.745843129092472*^9, 3.7458431807391367`*^9, {
   3.745843212379472*^9, 3.7458432268706903`*^9}, {3.745843334965499*^9, 
   3.745843390806263*^9}, 3.745843454724469*^9, 3.7458435931818953`*^9, 
   3.745843667136972*^9, 3.7458438947647543`*^9, 3.745843975999023*^9, 
   3.7458442166917543`*^9, {3.745844277335231*^9, 3.745844300633872*^9}, 
   3.745844370302382*^9, 3.745844438966021*^9, 3.745844873474475*^9, 
   3.745844955171851*^9, 3.745845420083928*^9, 3.7458454562881823`*^9, 
   3.745845504561922*^9, 3.745845543684493*^9, 3.74584566597358*^9, 
   3.745845705446591*^9},
 CellLabel->
  "Out[1062]=",ExpressionUUID->"e23115fa-2947-4dd6-ad82-6d52330dc8a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f25c863a-34ec-47f5-b795-07c1a3d9c533"],

Cell[CellGroupData[{

Cell["Wolfram Notebooks: An Ideal Environment for the Workflow", "Section",
 CellChangeTimes->{{3.747673751627956*^9, 3.747673801416382*^9}, {
  3.7476739136989822`*^9, 3.747673921330391*^9}, {3.747676878351182*^9, 
  3.747676883613284*^9}, {3.748179826596718*^9, 3.748179827384087*^9}, {
  3.7481798585624657`*^9, 3.7481798621189947`*^9}, {3.748360685547076*^9, 
  3.748360695431498*^9}},ExpressionUUID->"38ed7922-e42c-4f61-921b-\
d0a3156afdeb"],

Cell["Advantages of creating the workflow in a Wolfram Notebook:", "Text",
 CellChangeTimes->{{3.747673809233539*^9, 3.747673819127997*^9}, {
   3.748179804164938*^9, 3.7481798218078613`*^9}, {3.748190304263206*^9, 
   3.7481903047069883`*^9}, 
   3.832154792190709*^9},ExpressionUUID->"444d23d4-2da5-4295-9750-\
ee80efaacef3"],

Cell["Familiar word-processing metaphors", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673836583786*^9}, {
  3.748179902236062*^9, 3.748179904623248*^9}, {3.7485244422622633`*^9, 
  3.748524442262697*^9}},ExpressionUUID->"8e2be67e-fcac-4a1d-8c2e-\
86266ccee0f6"],

Cell["Interactive programming interface", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673836583786*^9}, {
  3.748179902236062*^9, 3.748179904623248*^9}, {3.748524442740711*^9, 
  3.748524448164806*^9}},ExpressionUUID->"d6e4a46f-80ad-47b1-b531-\
2c459477b511"],

Cell["\<\
Access to a large collection of state-of-the-art algorithms through built-in \
functions\
\>", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673840455798*^9}, {
   3.748179975635483*^9, 3.748180002978939*^9}, 
   3.748189015805934*^9},ExpressionUUID->"6c64f7fd-fbf6-4daf-8e76-\
fdf2cf81ea3c"],

Cell["\<\
Access to high-quality curated data through a built-in knowledgebase and \
other Wolfram repositories\
\>", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673840455798*^9}, {
   3.748179975635483*^9, 3.748180019234014*^9}, 
   3.748189019661667*^9},ExpressionUUID->"ef8d8289-a52e-4496-b05e-\
611f121d3e83"],

Cell["Ability to create arbitrary dynamic interfaces", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673845518943*^9}, {
  3.7481800401564693`*^9, 
  3.748180057236063*^9}},ExpressionUUID->"69ef15ac-5f66-4655-b79e-\
8b29b16c9c0a"],

Cell["\<\
REPL (Read-Evaluate-Print Loop) provides ideal environment to try out and \
discard or accept ideas\
\>", "Item",
 CellChangeTimes->{{3.747673824263743*^9, 3.747673845518943*^9}, {
  3.7481800401564693`*^9, 3.748180072747942*^9}, {3.748180133863578*^9, 
  3.748180177628871*^9}, {3.748286370663937*^9, 
  3.748286373867433*^9}},ExpressionUUID->"cc98305c-2b87-4441-9d45-\
6792f34cab47"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e5820e92-7a61-4791-a405-837ae2d5af3d"],

Cell[CellGroupData[{

Cell["How Can the Workflow Help?", "Section",
 CellChangeTimes->{{3.747660941539554*^9, 3.7476609440162582`*^9}, {
  3.74766098857064*^9, 3.747660999253364*^9}, {3.7476764880472116`*^9, 
  3.747676520285368*^9}, {3.748091189005588*^9, 3.748091193773913*^9}, {
  3.7481899004242697`*^9, 3.7481899032321997`*^9}, {3.748523648329762*^9, 
  3.748523648958951*^9}},ExpressionUUID->"cb558676-03f2-4f0b-b454-\
2598f3936063"],

Cell[CellGroupData[{

Cell["Agile Data Science", "Subsection",
 CellChangeTimes->{{3.74767653978156*^9, 3.7476765431093597`*^9}, {
  3.7480911329709253`*^9, 
  3.748091135443364*^9}},ExpressionUUID->"47efe36b-365a-45f9-9bc9-\
782aa98d06ae"],

Cell["Iterative process of tweaking and improving", "Item",
 CellChangeTimes->{{3.747676546565031*^9, 3.747676554020784*^9}, {
  3.748089710659471*^9, 3.748089715054824*^9}, {3.7480911278032303`*^9, 
  3.748091156340481*^9}, {3.748178983000587*^9, 
  3.748179007172123*^9}},ExpressionUUID->"560c0e6d-39c3-4aa4-ad75-\
4477bf8358de"],

Cell["Rapid prototyping ", "Item",
 CellChangeTimes->{{3.747676546565031*^9, 3.747676554020784*^9}, {
   3.748089710659471*^9, 3.748089715054824*^9}, {3.7480911278032303`*^9, 
   3.748091156340481*^9}, {3.748178983000587*^9, 3.748179035440488*^9}, {
   3.7481790816980257`*^9, 3.7481790882023277`*^9}, {3.748286444033608*^9, 
   3.748286446920555*^9}, 
   3.7485244740440273`*^9},ExpressionUUID->"3a5e6f52-c997-4981-b931-\
040bd58d3308"],

Cell["\<\
Experiment with and assemble a broad, flexible computational toolkit into one \
start-to-finish workflow\
\>", "Item",
 CellChangeTimes->{{3.747676546565031*^9, 3.747676554020784*^9}, {
   3.748089710659471*^9, 3.748089715054824*^9}, {3.7480911278032303`*^9, 
   3.748091156340481*^9}, {3.748178983000587*^9, 3.748179035440488*^9}, 
   3.74817908532971*^9, {3.748179237642791*^9, 3.748179253863209*^9}, 
   3.7481886712792683`*^9},ExpressionUUID->"58479f66-1c28-4512-bafa-\
3af54b1f7a5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reproducible Research", "Subsection",
 CellChangeTimes->{{3.68935235313239*^9, 3.6893523608033743`*^9}, {
  3.689352533272853*^9, 
  3.689352549402556*^9}},ExpressionUUID->"bd934836-2673-4427-aecb-\
71a6808ae819"],

Cell["\<\
You can publish your analyses along with the data and code, so that others \
can run similar analyses on different data or a different analysis on the \
same data to:\
\>", "Text",
 CellChangeTimes->{{3.68935235313239*^9, 3.6893523608033743`*^9}, {
   3.689352533272853*^9, 3.689352563359665*^9}, 3.698593479228064*^9, 
   3.698593890867734*^9, 3.716834723514019*^9, 3.7168362092968407`*^9, {
   3.71709546732768*^9, 3.717095560927534*^9}, {3.7481787648557253`*^9, 
   3.7481787792016973`*^9}, {3.748189940145781*^9, 3.748189943415139*^9}, 
   3.748279437627442*^9},ExpressionUUID->"39f7e516-2283-4c82-8ca0-\
b1f7ba57d25e"],

Cell["Verify results (replication == stronger evidence)", "Item",
 CellChangeTimes->{{3.717095573429573*^9, 3.71709562565134*^9}, {
  3.717096033687003*^9, 3.717096043307535*^9}, {3.748189946630632*^9, 
  3.748189949446405*^9}},ExpressionUUID->"4d95c513-b932-4987-8a67-\
ab5d77098593"],

Cell["Build on existing results", "Item",
 CellChangeTimes->{{3.717095573429573*^9, 
  3.717095631951804*^9}},ExpressionUUID->"2dffe1f4-6737-40f4-b938-\
3e3b0ba1f6bc"],

Cell["Combine results for better insight", "Item",
 CellChangeTimes->{{3.717095573429573*^9, 
  3.717095647919127*^9}},ExpressionUUID->"38791dff-fe50-4bea-b9b5-\
25ed5f34416e"],

Cell[TextData[{
 "The ",
 ButtonBox["Wolfram Data Repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://datarepository.wolframcloud.com/"], None},
  ButtonNote->"https://datarepository.wolframcloud.com/"],
 " is built to be a global resource for public data and ",
 ButtonBox["data-backed publication",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.wolfram.com/2017/04/20/launching-the-wolfram-data-\
repository-data-publishing-that-really-works/"], None},
  ButtonNote->
   "http://blog.wolfram.com/2017/04/20/launching-the-wolfram-data-repository-\
data-publishing-that-really-works/"],
 "."
}], "Text",
 CellChangeTimes->{{3.717096126526239*^9, 3.7170961434482822`*^9}, {
   3.7170962778727303`*^9, 3.717096278909338*^9}, {3.717096316193006*^9, 
   3.717096316200406*^9}, 
   3.832154826552326*^9},ExpressionUUID->"a2feef46-153c-4530-8065-\
3773ea9d433c"],

Cell[CellGroupData[{

Cell["Reproducible research checklist", "Subsubsection",
 CellChangeTimes->{{3.717095653601007*^9, 
  3.7170956715970984`*^9}},ExpressionUUID->"3eba4109-8450-4235-ab6d-\
78f4cbe34181"],

Cell["A plan for structured data analysis", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.7170957394261293`*^9, 3.717095739426489*^9}, {3.717096369059375*^9, 
  3.7170963702357616`*^9}, {3.717096523385064*^9, 3.717096529253461*^9}, {
  3.717117716660243*^9, 
  3.717117727801128*^9}},ExpressionUUID->"f31d7829-d589-454c-8df3-\
caf82693e2df"],

Cell[CellGroupData[{

Cell["A modular pipeline for the analysis", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.7170957394261293`*^9, 3.717095739426489*^9}, {3.717096369059375*^9, 
   3.7170963702357616`*^9}, 
   3.717117732328495*^9},ExpressionUUID->"da586021-c800-4497-b00c-\
73e12a601f71"],

Cell["Data wrangling", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
  3.717096386186968*^9}},ExpressionUUID->"50815ac5-fcc7-4c6c-9e0e-\
462db3cf2e8c"],

Cell["Data cleaning", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
  3.717096396533044*^9}},ExpressionUUID->"2065aba2-e53c-429e-ac5c-\
0de04d922c88"],

Cell["Exploratory analysis", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
  3.717096406318412*^9}, {3.748189974199766*^9, 
  3.748189974277742*^9}},ExpressionUUID->"0c150bc1-b1f3-48f3-9d1a-\
b89f36664fd3"],

Cell["Data preprocessing", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
  3.717096410421816*^9}, {3.748189977237687*^9, 
  3.7481899776298122`*^9}},ExpressionUUID->"4ab78420-45a0-4352-9b10-\
d2b3b44e5ab1"],

Cell["Modelling", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
   3.717096412749506*^9}, 
   3.8329383360305157`*^9},ExpressionUUID->"1cd85548-6d9c-4ca3-a5c3-\
c8741b515514"],

Cell["Validation", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
  3.717096423392864*^9}},ExpressionUUID->"3510d8c6-1ee0-40d4-b7e6-\
687239f745ac"],

Cell["Creating visualisations, reports, etc.", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.717095739924214*^9, 3.717095746750764*^9}, {3.71709636154038*^9, 
   3.717096452192935*^9}, {3.717118284801536*^9, 3.717118285702621*^9}, 
   3.748189983765463*^9, {3.832938340430616*^9, 
   3.832938340517918*^9}},ExpressionUUID->"c45f32d5-fdb3-489f-9865-\
1114e808c4a4"]
}, Open  ]],

Cell["\<\
Automate (write code) wherever possible (avoid point and click)\
\>", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.7170957852816353`*^9}, {3.71709646761611*^9, 
  3.717096472420939*^9}, {3.7171177939483023`*^9, 3.717117816087669*^9}, {
  3.7481899881893787`*^9, 
  3.7481899917971983`*^9}},ExpressionUUID->"75a1de29-ade6-4693-81fa-\
003c3a0ca591"],

Cell["Document your code", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.717095739924214*^9, 3.7170957852816353`*^9}, {3.71709646761611*^9, 
   3.717096472420939*^9}, 
   3.7171177939483023`*^9},ExpressionUUID->"f903ad52-5433-4d96-8e9c-\
fcaf01d4f244"],

Cell["Use version control", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 3.7170957852816353`*^9}, {3.717096480178672*^9, 
  3.717096483226371*^9}},ExpressionUUID->"cccaa713-3611-4e5d-9584-\
11205002eac6"],

Cell[CellGroupData[{

Cell["Record and preserve", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 
  3.717095792000575*^9}},ExpressionUUID->"18eb1773-30d0-4714-9d89-\
cf026b321cb9"],

Cell["Sources: raw data, goals, references", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 
  3.7170958047681913`*^9}},ExpressionUUID->"39363f8e-2a85-40ad-a669-\
3be765e63a2c"],

Cell["\<\
Process: explorations, final code, observations and comments (selections and \
rejections)\
\>", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 
  3.717095870838944*^9}},ExpressionUUID->"0e576ebd-afdb-4b2c-bb3f-\
df5c1d99ac65"],

Cell["Output: clean data, graphics, reports", "Subitem",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.717095739924214*^9, 3.717095890204224*^9}, {3.748190003412862*^9, 
   3.74819000813269*^9}, 
   3.7482794670402603`*^9},ExpressionUUID->"f0931eaa-5268-4635-af40-\
33ca18d9a701"]
}, Open  ]],

Cell["\<\
Prepare for obsolescence\[LongDash]things will change; sources will get \
removed\
\>", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
   3.717095739924214*^9, 3.717095902638595*^9}, 3.748188673596521*^9, {
   3.748190010428658*^9, 
   3.748190018932126*^9}},ExpressionUUID->"206c878c-70b5-458a-bf0d-\
2a991c3f22bd"],

Cell["Prepare for portability ", "Item",
 CellChangeTimes->{{3.717095684809986*^9, 3.7170957060823307`*^9}, {
  3.717095739924214*^9, 
  3.7170959273478937`*^9}},ExpressionUUID->"218a6ed7-1af6-4819-86c8-\
2e372d440c23"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"cc3636b9-4d59-4fa2-a5d2-23e7f94faec1"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{
  3.720192656070273*^9},ExpressionUUID->"1e322f69-e855-449b-a9c3-\
24952ea11b2e"],

Cell[TextData[{
 ButtonBox["Multiparadigm Data Science",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mpdatascience.com/"], None},
  ButtonNote->"http://www.mpdatascience.com/"],
 " with the Wolfram Language"
}], "Item",
 CellChangeTimes->{{3.748088140223648*^9, 
  3.748088167162469*^9}},ExpressionUUID->"0debd108-41db-4497-8f79-\
157dbf01dab9"],

Cell[TextData[{
 ButtonBox["Automated Data Science",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/wolfram-u/automated-data-science/"], None},
  ButtonNote->"http://www.wolfram.com/wolfram-u/automated-data-science/"],
 " by Jon McLoone and Etienne Bernard"
}], "Item",
 CellChangeTimes->{{3.748088140223648*^9, 3.7480882231853647`*^9}, {
  3.748088292408073*^9, 3.748088311954453*^9}, {3.748088584497905*^9, 
  3.748088618341559*^9}, {3.748088714009309*^9, 3.748088714011203*^9}, {
  3.748088816571479*^9, 
  3.748088839093404*^9}},ExpressionUUID->"aa0b77ff-9818-44d7-b1a2-\
23f0d9c620ee"],

Cell[TextData[{
 StyleBox[ButtonBox["The Data Science Design Manual",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.springer.com/us/book/9783319554433"], None},
  ButtonNote->"https://www.springer.com/us/book/9783319554433"],
  FontSlant->"Italic"],
 " by Steven S. Skiena"
}], "Item",
 CellChangeTimes->{{3.748088140223648*^9, 3.7480882231853647`*^9}, {
  3.748088292408073*^9, 3.748088311954453*^9}, {3.748088583633912*^9, 
  3.7480885836343517`*^9}},ExpressionUUID->"4ed68118-2674-4d03-b671-\
931b98fe5a4b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1232, 884},
WindowMargins->{{174, Automatic}, {Automatic, 0}},
WindowTitle->"Overview",
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.5, 0.12 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 
             81, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.11 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 81], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {50, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 48], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 70, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               26, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 20, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "Text", MenuSortingValue -> 1400, 
          MenuCommandKey :> "7", FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]]], 
         Cell[
          StyleData["Item", "SlideShow"], 
          CellMargins -> {{
            0.165 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], None]], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{
            0.18 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{65, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]]], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{
            0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{105, 12}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            CurrentValue[{StyleHints, "ColorSet", "Text1"}]]], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{
            0.2 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{81, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.17 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{105, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.195 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
          AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, NumberMarks -> False, 
          CounterIncrements -> "Graphics", 
          ImageMargins -> {{43, Inherited}, {Inherited, 0}}, Arrowheads -> 
          0.04, Dashing -> None, CapForm -> "Square", 
          JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
          1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
          Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
          EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
          BackFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, GraphicsColor -> 
          GrayLevel[0], PointSize -> Absolute[3], Thickness -> Medium, 
          Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Working", StyleDefinitions -> 
           StyleData["Graphics", "SlideShow"]]], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Graphics", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 $CellContext`RGBColorRGBColor[
                 1., 0.592156862745098, 0.10196078431372549`]]]]], None}, {
            None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {7, 8}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{66, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]]}, Closed]]}, 
  Visible -> False, FrontEndVersion -> 
  "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"ef6847af-b749-4e34-ba53-5a6e9afc1e7d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[444, 16, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fee139d7-840a-4bd9-8549-beccede17cb2",
   CellTags->"SlideShowHeader"],
  Cell[16258, 292, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"34ceb8ea-0b72-4bdd-a954-d43616e768f9",
   CellTags->"SlideShowHeader"],
  Cell[66079, 1124, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"eefaf0d0-6bac-4889-9c11-09ee3ec2e0b3",
   CellTags->"SlideShowHeader"],
  Cell[405044, 8014, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f25c863a-34ec-47f5-b795-07c1a3d9c533",
   CellTags->"SlideShowHeader"],
  Cell[407846, 8085, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e5820e92-7a61-4791-a405-837ae2d5af3d",
   CellTags->"SlideShowHeader"],
  Cell[418088, 8344, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cc3636b9-4d59-4fa2-a5d2-23e7f94faec1",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 449831, 9065}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[444, 16, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fee139d7-840a-4bd9-8549-beccede17cb2",
 CellTags->"SlideShowHeader"],
Cell[583, 20, 14970, 250, 68, "WolframULogo",ExpressionUUID->"897521f5-635f-4c39-b436-0d45edba4dce"],
Cell[CellGroupData[{
Cell[15578, 274, 276, 4, 250, "Title",ExpressionUUID->"509e9055-2a11-4f2d-8b06-e137fa40fc7c"],
Cell[15857, 280, 352, 6, 73, "Subtitle",ExpressionUUID->"58ed9063-778b-4a12-b837-9cebc4d7baa8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16258, 292, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"34ceb8ea-0b72-4bdd-a954-d43616e768f9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16405, 298, 165, 3, 115, "Section",ExpressionUUID->"8ac8f043-ebba-449b-8977-3eb8ee2e80ce"],
Cell[16573, 303, 49457, 815, 569, "Input",ExpressionUUID->"46e32939-24c8-4ce0-ba63-5b2a58720b75"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66079, 1124, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"eefaf0d0-6bac-4889-9c11-09ee3ec2e0b3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[66226, 1130, 409, 8, 206, "Section",ExpressionUUID->"ef048d3a-2b48-413c-81ff-6f78c931c672"],
Cell[CellGroupData[{
Cell[66660, 1142, 202, 4, 79, "Subsection",ExpressionUUID->"47f88e88-9aef-4fed-bb51-a77242375580"],
Cell[66865, 1148, 394, 8, 35, "Text",ExpressionUUID->"1e1bbab5-b37d-4354-a147-24af1a5d9244"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67296, 1161, 157, 3, 79, "Subsection",ExpressionUUID->"2fc8dac9-93d1-4c31-b9e3-d2da5659d6ae"],
Cell[67456, 1166, 209, 3, 32, "Item",ExpressionUUID->"546acf5b-4720-45de-9c2a-0028e8f6eae3"],
Cell[67668, 1171, 193, 3, 32, "Item",ExpressionUUID->"e5514657-2948-4037-a5c4-ae015fde3d97"],
Cell[67864, 1176, 202, 3, 32, "Item",ExpressionUUID->"12f4234a-a6a0-4c25-b8e0-4ad47127e97c"],
Cell[68069, 1181, 375, 6, 32, "Item",ExpressionUUID->"1eed49a6-1903-471e-9768-0e7e8600b358"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68481, 1192, 155, 3, 79, "Subsection",ExpressionUUID->"745dc013-c91d-4e93-a1c1-7739ccb40171"],
Cell[68639, 1197, 336344, 6810, 609, "Output",ExpressionUUID->"e23115fa-2947-4dd6-ad82-6d52330dc8a2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[405044, 8014, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f25c863a-34ec-47f5-b795-07c1a3d9c533",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[405191, 8020, 446, 6, 206, "Section",ExpressionUUID->"38ed7922-e42c-4f61-921b-d0a3156afdeb"],
Cell[405640, 8028, 327, 5, 35, "Text",ExpressionUUID->"444d23d4-2da5-4295-9750-ee80efaacef3"],
Cell[405970, 8035, 273, 4, 32, "Item",ExpressionUUID->"8e2be67e-fcac-4a1d-8c2e-86266ccee0f6"],
Cell[406246, 8041, 270, 4, 32, "Item",ExpressionUUID->"d6e4a46f-80ad-47b1-b531-2c459477b511"],
Cell[406519, 8047, 311, 7, 32, "Item",ExpressionUUID->"6c64f7fd-fbf6-4daf-8e76-fdf2cf81ea3c"],
Cell[406833, 8056, 324, 7, 32, "Item",ExpressionUUID->"ef8d8289-a52e-4496-b05e-611f121d3e83"],
Cell[407160, 8065, 239, 4, 32, "Item",ExpressionUUID->"69ef15ac-5f66-4655-b79e-8b29b16c9c0a"],
Cell[407402, 8071, 395, 8, 32, "Item",ExpressionUUID->"cc98305c-2b87-4441-9d45-6792f34cab47"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[407846, 8085, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e5820e92-7a61-4791-a405-837ae2d5af3d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[407993, 8091, 417, 6, 115, "Section",ExpressionUUID->"cb558676-03f2-4f0b-b454-2598f3936063"],
Cell[CellGroupData[{
Cell[408435, 8101, 218, 4, 79, "Subsection",ExpressionUUID->"47efe36b-365a-45f9-9bc9-782aa98d06ae"],
Cell[408656, 8107, 331, 5, 32, "Item",ExpressionUUID->"560c0e6d-39c3-4aa4-ad75-4477bf8358de"],
Cell[408990, 8114, 437, 7, 32, "Item",ExpressionUUID->"3a5e6f52-c997-4981-b931-040bd58d3308"],
Cell[409430, 8123, 498, 9, 32, "Item",ExpressionUUID->"58479f66-1c28-4512-bafa-3af54b1f7a5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409965, 8137, 219, 4, 79, "Subsection",ExpressionUUID->"bd934836-2673-4427-aecb-71a6808ae819"],
Cell[410187, 8143, 633, 11, 35, "Text",ExpressionUUID->"39f7e516-2283-4c82-8ca0-b1f7ba57d25e"],
Cell[410823, 8156, 285, 4, 32, "Item",ExpressionUUID->"4d95c513-b932-4987-8a67-ab5d77098593"],
Cell[411111, 8162, 167, 3, 32, "Item",ExpressionUUID->"2dffe1f4-6737-40f4-b938-3e3b0ba1f6bc"],
Cell[411281, 8167, 176, 3, 32, "Item",ExpressionUUID->"38791dff-fe50-4bea-b9b5-25ed5f34416e"],
Cell[411460, 8172, 893, 22, 35, "Text",ExpressionUUID->"a2feef46-153c-4530-8065-3773ea9d433c"],
Cell[CellGroupData[{
Cell[412378, 8198, 184, 3, 46, "Subsubsection",ExpressionUUID->"3eba4109-8450-4235-ab6d-78f4cbe34181"],
Cell[412565, 8203, 376, 6, 32, "Item",ExpressionUUID->"f31d7829-d589-454c-8df3-caf82693e2df"],
Cell[CellGroupData[{
Cell[412966, 8213, 306, 5, 32, "Item",ExpressionUUID->"da586021-c800-4497-b00c-73e12a601f71"],
Cell[413275, 8220, 255, 4, 27, "Subitem",ExpressionUUID->"50815ac5-fcc7-4c6c-9e0e-462db3cf2e8c"],
Cell[413533, 8226, 254, 4, 27, "Subitem",ExpressionUUID->"2065aba2-e53c-429e-ac5c-0de04d922c88"],
Cell[413790, 8232, 310, 5, 27, "Subitem",ExpressionUUID->"0c150bc1-b1f3-48f3-9d1a-b89f36664fd3"],
Cell[414103, 8239, 310, 5, 27, "Subitem",ExpressionUUID->"4ab78420-45a0-4352-9b10-d2b3b44e5ab1"],
Cell[414416, 8246, 280, 5, 27, "Subitem",ExpressionUUID->"1cd85548-6d9c-4ca3-a5c3-c8741b515514"],
Cell[414699, 8253, 251, 4, 27, "Subitem",ExpressionUUID->"3510d8c6-1ee0-40d4-b7e6-687239f745ac"],
Cell[414953, 8259, 403, 6, 27, "Subitem",ExpressionUUID->"c45f32d5-fdb3-489f-9865-1114e808c4a4"]
}, Open  ]],
Cell[415371, 8268, 415, 8, 32, "Item",ExpressionUUID->"75a1de29-ade6-4693-81fa-003c3a0ca591"],
Cell[415789, 8278, 288, 5, 32, "Item",ExpressionUUID->"f903ad52-5433-4d96-8e9c-fcaf01d4f244"],
Cell[416080, 8285, 260, 4, 32, "Item",ExpressionUUID->"cccaa713-3611-4e5d-9584-11205002eac6"],
Cell[CellGroupData[{
Cell[416365, 8293, 212, 4, 32, "Item",ExpressionUUID->"18eb1773-30d0-4714-9d89-cf026b321cb9"],
Cell[416580, 8299, 234, 4, 27, "Subitem",ExpressionUUID->"39363f8e-2a85-40ad-a669-3be765e63a2c"],
Cell[416817, 8305, 294, 7, 27, "Subitem",ExpressionUUID->"0e576ebd-afdb-4b2c-bb3f-df5c1d99ac65"],
Cell[417114, 8314, 308, 5, 27, "Subitem",ExpressionUUID->"f0931eaa-5268-4635-af40-33ca18d9a701"]
}, Open  ]],
Cell[417437, 8322, 356, 8, 32, "Item",ExpressionUUID->"206c878c-70b5-458a-bf0d-2a991c3f22bd"],
Cell[417796, 8332, 219, 4, 32, "Item",ExpressionUUID->"218a6ed7-1af6-4819-86c8-2e372d440c23"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[418088, 8344, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"cc3636b9-4d59-4fa2-a5d2-23e7f94faec1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[418235, 8350, 131, 3, 115, "Section",ExpressionUUID->"1e322f69-e855-449b-a9c3-24952ea11b2e"],
Cell[418369, 8355, 363, 10, 32, "Item",ExpressionUUID->"0debd108-41db-4497-8f79-157dbf01dab9"],
Cell[418735, 8367, 617, 13, 32, "Item",ExpressionUUID->"aa0b77ff-9818-44d7-b1a2-23f0d9c620ee"],
Cell[419355, 8382, 527, 12, 32, "Item",ExpressionUUID->"4ed68118-2674-4d03-b671-931b98fe5a4b"]
}, Open  ]]
}, Open  ]]
}
]
*)

