(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1625140,      31988]
NotebookOptionsPosition[   1561321,      30800]
NotebookOutlinePosition[   1594485,      31519]
CellTagsIndexPosition[   1594403,      31514]
WindowTitle->Exploratory Data Analysis
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"14604517-6feb-4e13-8f66-de82046873a0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXQfYHUXVhhAIndAOVbj00DuEIiQQurQA0jFAIIiEkoA0hY+qQGjSUSBS
BWnySy8JoAgiGEOVGnoTfwQU+Gn/vM6Z3LnzzezObPnu/ZLzPs+BfLszZ87u
3t13yplzFtvnkKH795lmmmlGz6j+M3TvIwePGrX30Tv0V3/sdPDoH444eL/h
Wxx8+H4j9hs1cJ/p1MHhSh6adppp+k7THtCyG82qZA0luys5Usk5Sn6j5CEl
Lyh5TclHSj5W8q0l3/DxD5VMUvKsknuUXKXkNCWHKtlRyfJKpm/T5QkEAoFA
MBmKj+ZVsh3z1O3MX98GBDz3rpJXlExQ8qSS8Uoe4P8/yMcnsp5/Zuj6Uskz
Sn6r5KdKNlIyc7vvh0AgEAimbCiumUvJbkp+qeR5Dz+9y7z2CyUHKtmSx4YL
KEkeoqo6/ZQ0lKyjZKiSUUouV/Kokn85bX/Fx8dwu/3quAcCgUAgmLqg+GQR
JSOV3M/jMMM7n/K85XE8HpsrR08fJXMrWUzJKkrWVzLIkYFKVlSyqJLZI2xb
iMejY5gDbfs+UXID8/Yc1d0RgUAgEEzpULzRX8kBSv7kjLkeV3KsktWVTOep
Ny/zGcaCZym5hec/31HydcY8Z0i+UPI6c9x1Sk5VMkzJmkpm9bQ/M3My2n7F
mUe9lTlT1hYFAoFA4IXiiJV4zvPf1FzTu595bWGn7Aw8pjtGyc1K3irAc2UE
tmFu9kolP1KygpJpPdeD9cOJVj1w8glKFuzZuysQCASCToXihMGk5zgNV7zG
4z6X+xZXcrCSO5X8p4d5L0Y+4HHjHkrmcWxfTcl51PRT/T8llykZ0LN3WyAQ
CASdAsUBG5D21TQ8gr0N25I150l6PQ9jvic6gOdSBPOwGMuOUNLfuh7s6/ih
kpescmOVLNGepyAQCASCnob65i9Jer3McMZdStaxzmPOE/4l8P38pgM4rax8
TnoP42DrGuG3swvpfYpmfHimzZkCgUAgmLKgvvEzKjmRtP8Jvv3wg1nXOj8P
af/P9zqAu+qSp5QMB9fzNYMPsef/dT7/Pv5u31MSCAQCQR1Q3/a1qLnn720l
uxL7lTD/Ye/Bpx3AUz0l4L2DLT6cibRPzed8HmugC7X3qQkEAoGgLNS3fDrS
Y7yv+Pt+EfHePP7245wb42xqkldJ+9WYPgHmjB/gc4hps1N7n6BAIBAIikJ9
w0nJffxNf1PJEOvc9pQdB62nBPOU/9sBdvxBycp8b6YlHTvA+MQiPs4M7XuS
AoFAICgC9e1+g7/jmOObi4/NTzouZ7t5x8h6Sg7pADsgGDOfQhyTjfSeRDOX
fEt7n6ZAIBAIUsHfb+yF6MN/I+7mBx3AN0auZbv6ko6b3W57jCDe9wC2bTbS
cQUmtPNZCgQCgSAd/E2/lf89qAP4xRZwy0KWrUM6wCZb4DM0H9v2kfCgQCAQ
9D44PLhdB3CLLcewXYiJtg7/+5YOsMuWBtslPCgQCAS9EB3Mgy+T3suI/BPw
yUT8buzjQ+yazzrAPuFBgUAgmALQwTy4Ldt0kXVsXz52UgfYJzwoEAgEUwBq
4kHk9EM8sscK1r+b7VmZWnMxIYbNHKRzJ71RQC/iv/1eycbkzxEsPCgQCART
GWriwQcs/eswL34VWRd5AJclvT/vQc/5s1nvLgn2wJ/lfCVLW3ZVFRegwfqE
BwUCgaAXoiYefN7TDnLWn0H5++HzeC6PJ21BbqgjyImLTXo8WcV1Cg8KBAJB
L0dNPPix0wb25U/P/0ZOI/h/vuCph/jVMfOeoXlTI48o2UlJXy6H/X1zWPYs
LTwoEAgEAqAmHvyWuWx60vmZwG3Yq3+0krm5Lfh+fo+aMd0gw/lcjB+M60eD
cSLy665lXRt8S88mHRsH48dZ+fgGwoMCgUAgAGrkwaWZA89h3WuSzt+HeJyX
KFnWsmFF0rmeUvZF2PsqTlaysKUPPHcz6bEi8mYghipiiZ/L51PWFoUHBQKB
YApGjTy4AeuEj+fW/O/DnDLI7bsZcR4HLnNNQhujrXrg3D2VPGmdBw8O5vNd
aI//PUp4UCAQCARAjTy4C+ucSHof/HdIz03+j6cs8r1vz+UR3zQmvz14Z0mu
M1rJO54yXXx+EHPi5fz36cKDAoFAIABq5MFRrPMu/hs5ixArey7S+Z3c8pgz
Hch1uiL0b8Nl9w+cH096LhRzom/zsVO5zrXCgwKBQCAAauTB01nn5dYxw0Pr
k38/4VtK5iO9TnhHhu6TWc9aSr7wnIff6YKkx593WccP5HoPZOgWHhQIBIKp
CDXyoMmXdKp1DPOdm/LxA5iv3HrjSI8b51Tyiuf83aTHefMqed1z/kUlG3Mb
RznnhvLxqmLJCA+2CdxXQl9neSWrsCyhZKZ22yYQCHoXauTBB1jngc5x+M3M
xufAd1souZp0zBdTZgyfx7fN9h2dRNo/FDx4n6PzXCVrW9cFH1R3zGnmXauK
JVMLDyo9Syo5p4TMVaC9VSyZO7H+9gXtjOYs0n5Q25LeJ/M38s8DGMHe0xtJ
97WSrsVqb8OSz+CIIu0GbNmtpC2psnkNNmBN/jjS+bR3IN1/ma6qe1QGpPNq
27aOqKGNIu/I8lXbwbbMXMCWDStot+x37ZyINorqrosHn2edQz3nljH3xbJ/
Fn7Xbie9VrgTH/8B1/lcyRp87OekefNKvLP2+6T+vRT/f5in3UWo2lgydfHg
oCpsimwLc8fvOfV/kWjvOQXt7B+huz/p9eJ/FGwDfDnW/q1FXtOhJZ9BZXMD
bH+Vv9k86eohGz5RcivpfUwzVHW/UkB6bcW1C9+WWStup8g7cmGVNli27FrA
lkMraLfsd+3biDbK6K+DBz9mnQM951axbH5UycFKyLoWzHnupaQf/32hkn34
34hNs7OSma3yS5H+VmJO9BE+5uNBjCmqjCUDaXB7VfLgGqT9bH0+sCFBzmLM
905QsmBCW6t6dL2UaO8R3C78n77MsfMLfk4oP1uO3t2VfJijD77ImCd4i7LH
iOhb/ZQ4xlDENaHtp0j7WPliFoXkQ34O16fcwxxbsLf2mcTfQxk5LWDDszXa
gDWO3aq6Zwn39sKAPXtW3M4R/AzfTrgn+C1V3j+gbN8LW8z+a7wHu1fQLr5r
E/h9/b+E+4Bv20sU8X1l/fi+fBKh9z9GL/9dFQ/im3QnaU7anHXC78X9Pq3G
5z6yjmEOEz4te5DTFyPP/AnrxRzLnx3d4/n8Qc7xl/n4TKRjro0h7cNaNpdh
w7qWytcHlc5lqHVPpCu4bz/w3aNI/e4aqpGk8ZOlD7GDQvtSLnWfbUAH4hD9
MqDjM9aDfadu3FisGaJPhLh9fwvUH0fp88Zz8+8l63fwsJIVUu9XKkjvP8ra
Y4u5kkERgr7kBdS6HmEkc/6JbfhNhg3w4W5Ygt8wvoFbKzlGyf0U3ht1WdHf
coF72Y/C8Y7vqbHd+TN+365sV3Hb8J/P66t+y7/3pPck0Q7EQBlOmotCNrzJ
73ny74G/BRspedWjF9y+JbXOI+J4ER7E9xffZ6zX/IB/69M6tpiYoj926g7i
4x8FdIP/ESNtK6ODyyNOKMaJ8JUJ9dHv4bLuvNYQ2yZLZ19+R/HtxDqlL+5p
23iQdeNbEuo//bak7nEBvaXmQUj3IW19/82jHFEPa7+3BGy6jdLGuvit/Muj
B7Ylv+MU/vZjzjZ3jrcq8Dvu9v+MDEvUhd/W3x0dF0TUw3P6a8CG3G+3KrNC
Rv2LU66hKFQ73894r8HTC9Xc/viI70up99vT5kjnGn1t/qbKNnPscccrtqxT
gf6VPXo38JSL5UFw6E2kOe27ZM1Lcl3wyeqk/WKwbvcCfx8W4vfWfuaDuI5v
H2G3bwyXxXxmzNjNXIs9zjmLj2G/BsamT5CeD9mT9br8jf4/+guIc3oPhfm6
R3iQ9d8QaP/MEjoR8zzEr3eXtNflsqh+Lekxis+eMe5zitQHf6kPPPowFzB9
voYWXdsEbLsy1a6yID3PVpoHWddK1PpNHBtZ79iADbHPGv3aiQEdW6VeRyqo
dX7Q9x78uOb2RzjtPe6xAd+ryvpY1JoTNsTD21TVXoQ98wRseKXCNp619L4W
KBPDgwd56i2sZEfSuZTwTQmNb8Ej8MXAXIrhE7MHflKgTotw2VViyiq5mct3
8d94zzD/MXtGe5iHx3wu/NlC822XB+o2uEzdPLhboP3bSugMfdch8EuaOV9L
ULc9l4v58lzOyfj9YW4gmQMtvciB6duvekaiHt9aKuRnRW0rCgrHyB1WUJ/9
Tfx1ZB3fGnw0D7KOdQM6/lLkOhLaxdykmVP6OvB+P1WzDe7v/ZDAvdi/ovaW
cvTuF2hv1SraS7Drc48N91Wo3/5t/yFQJoYHwXHrcRnwUWou+EO5rnl3t+O/
o/bxWe3GtDWWy5/E93dF/vuqRJsxZpyL6+6bUa7BZermwTnJPxeMeb8o3w+P
zvNz7kGhfiHpcabNO1dH1IG/sG9+AH4Zc+TVj9D/M49u3M9VEnSEfoNdZe1L
Rca7OqygvlMsHbdG1inNg6znmYCe2tZble7DrXYwP7ttwIbaOMHzDNHP8vXV
H66ovRMsnRgXDgpcc/Q7UZFdvvm2qN9gpH6bB8cHysTwIARjpgFc7ric76cr
Nh9hDW43/veEmPpcNpUH4afs8m+s4PtoxqxbUra/YMN6lrXuoyedu8pnQ7f5
7kh9L+Xch4sK6t3S0bNHRJ1jAjYcWMQGj37sv/D5RET3OzN+g11V2JiCjHd1
WEF9dl+vp3kw5DNSybMPtPm01Q76SNhP5Vt3ObtGG9xniN/XKYF70aigPft9
x7qc8GCzTCwPQtBXWYDLXpJT1hX472F+Ev6EJgfEX2LqctlYHjyPyyO3oZmP
DfmEhWQE61ibsv2ZepoHXX8jI9383CN0Le7oeMyjd1JBO39h6cC60zw55bGf
xedPjns6SxEbAu2E9nCtGVl/SubBzSwdD0TWqYoHR2e9y1WDtF+c3Y6Z67rN
Y8O7VJP/qucZ4ve1TOBeHFuyLXv/GvxF4TcqPNgsk8KDEIzhwGXTBX43WXJm
hn1V8eA5ln6s641LtPEErou5dJ9/hSsN61nWzYPLB2yYWECXHecH89wh37nk
uSlq7Xc+HlE+NCc1NrXtnHbWDrTzq8j6UzIPzkTNeEJRe2aoOh7cO6DnmiLX
EtGevR6A/lcfPr5nwI4ta7KjGw/ycZ8v8N9LtmX7n93Bx4QHm2VSeRByL+k+
POYSHomsY2TjgH1B4bKxPPgzS39o/BQSrJVjDIm+0suRdRrWs6w9vij598NA
Fs6v3aLnd851Y97Q50tyeKLeJZ36J0bUuS5wTTultB3RDvpFvrg0eHb9IupP
sTxY0IaqeHCPgJ4barAZ3y07NsO51jn4r/rmRq+r2g5uL8SDIwP3Y62C7WA/
rt2n35WPCw82y0xuM+Pd8gnW+cAZ8Ht19x+FBL7J51ltYx0J+Qiz4oDE8iD8
ReALsyqXxxzsvQnXA39R7P2Aj8cTCfUa1rPsCR48L2DH8AQdeC/seAsmV6Sv
XxI1R2bpPtipn7kHiH9DoXH3AiltR9r3+0BbgyLqCg+22lAVD4b8Fi+pwWY3
zuMazvmbPHaAG2evwZYQDyKelm+v+7l5OgPtbGXpQNyEmfm48GCzTFEehJzB
9RYjPY8eKod1QKzLeteJSM+zYp3+Lt/z5zK+bxCeKfgYcSq8/XnSOQi6KDyO
gmDfDsa201NrnqZO5MHNA3bcnKBjQ6ve5PU79f8jPXq/TPkGkO5PmLrod2eu
rajzywWu55+xbaaAwrFuuiLqCg+22lAVD4b2IR5Sg832Ws6znvM7BmzZtwZb
vDzI53z5ypGfJ2nPK+uy4z9caR0XHmyWKcODk3+rpH1+7TwOb/E3ZzmrrWmt
f2Psdhe/S3NYx5Gnt4UT+bj5Bn3KzxUx62ey6iGGNtbbEa90tHXczP1j3IHv
P+YA7bEQ1rLm5fNjC1x/g/X3FA9inPtvjx0fx74j1JoL6wnr+AqBaxwaqRdr
TPa8Uu58EoV9eWvZP6b0/jDQXu4+TBIedG2oigdDebGXy6+d1M581NrPPspT
Zibyx6YcX6Ut3FYWD4bW65PiC1D3ud5NrXPCg80yZXkQewp25Pqb8m96ckw4
0msyQ5T8mjh3B3WfO8O8KPo/WKe2ORFzrgfwvxeg7tyH/HOYS/+jow/rXBtw
GcQ6PMv5jWHshzUJ9A2X5GMhf+WO4kFu69aALYMi69t73E91zr3m0RvrR7KZ
U2+viDonBq6l0nhSVnuh8fSkiLrCg602lOZB0v1PXx7RyvZRW22NsvRjHsS7
pk46HpZrD8ovWrE9WTyI+Ju+mIBJMc+cZ4S9uHZMTeHBZpmyPGh4bH1HL+KV
Ydxh9tyfxMfhv5sVa9xwIuKndIvJTE3ue5jC8fHMM5+f3zMTPwm+rocpmc/R
6cY36nQeHB6wZUxEXXLu22Dn/EUevfCpy43nQq37EtAGRdQJjcFzc40VAYV9
btF3yox/SsKDrg1V8OBWnvroW69eg7127PV7M8q5/TkjpfYueNoJ8iCf9+2r
TFqrpFYfibOdc8KDzTJV8CDmQBdhHfCBftQ5j5y52GeB8V1KLBrs3VvGshV5
IrK4z5Xx3C7mWidZxzE3Aq7diPVuSGl5QNrNgwsGbHk6oq7tm4f51Rmc898r
+m5Qq7/Uk5HXElqP7YqpnwrScaVDz3L+nLrCg602lOJB0j7KL3rqH12Dre6z
C8Z24G+Gz9+h1N4FTzt5PPjdwP3dO1I/vhN2DBDXJ0h4sFmmLA9i7L4y1x/l
OY9YWcS/rRT/TcjprBe5MjG2wxzr/Yk6TmMda1J3v1Rwn8lDkRV7vqN4kNsL
+bQuklPPnvO53XM+FFfjmBy97r78kyOvw53TNtJt7aYKkF4LDj3LpXPqCg+2
2lCYB1WZAeTPN3FcTbbacxVY/8uMz6DOnxu4tkJ7FwJt5PEg5rJe9dgwLlK/
HZ/gOc954cFmmTI8CB4xYyqfvwPGXevy+dA6UEgwpoT/JuJqYs0KHAoeBB++
n6hrW7bB5yPxL2r6Kx+WqLedPHhCwJ4RGXXc3PNefzxq9fk04o1Pa9Vx86es
n1XeqheKrVc6/3Wgvf4ZzzLz/afewYOI2Ts+UQrNQVMkD5KOHbsQ3z+sQdxI
3feqvmve06pB3ffPjY2o48tTDzm/QrsyeZDLnOSxAXNi34nQb/czus3pkvCg
XaYMD5p9Z8h36JtXNPE9t6C0+Uzcl8W47s3W8WP42KaJdiKu2hJc1xdvG+tf
i/L5MxN1N6xn2ZM8uGbAnuDvh7rnS/D645F/Hy/mV+bM0G3vy8P9jopFRWEe
HBlTPxWk/Q+mZB4sIuML2hDiwRQB/yFHWm5+5qLw3KvB+bX+W883Z4s4DMl7
FyLt8vHg0oH7dmSObnc/0mKeMsKDzTKT20x8t0ZzHeQ59Pk13cDnFyWddyfl
3TD+pz9yjqMPaWIB/jxRJ/pG8IlG3/Rpz/nnSOcdxJgpK9e2Kw3rWfYkD/Yh
/xoG5nxmCNSxczK+kaHbneM0snOgPLjFjsN6fcJ1hPLJHharIwWUPR5cMaeu
8GCrDWV5EM++Ek7JsdP2r8bcUm4+aK7XFbC7knGr5xl6+Yf8sX+fydFt51f5
Y6CM8GCzzOQ2E96ts7k89uy9ZR3HPKjZEzgTl4Fviy+/ZEgu5nr45vjyUsHH
Gn4vmOv4U6ROjFXhq7Mm68Y+IrPX0C6HtSqsjyH20gORuhvWs+wxHuQ2QzkR
hwTKj7PKXJ6j+zmPXm++WeruXzcs4RpC97krVkcK+DcbepZ5a6u9gQeH9aAN
IR7EMx1rCWJdhOaDas23S9o3z56rOiWhbmgsdlNFtsXyoDseMOLNCUW6L2/v
fzogUE54sFkmlQdv4PsMLkKeX8yXwXflAOJ8fawL4y573zzW9fYhPc/p26cK
eYr02AKxzbJitd3KNjQonEsCY6UrSO85nM2yA7HT+ll/I94MxknGpxr2wadn
Dmr1s+5EHnRjRBk5y1PWzT2/S45u3/ww1mW79aWpex6HTL9Lp25o7F1Lblvq
Hv/Ulhlz6goPttoQtT7IZUO5lfC9rnNO1N2rnOkL5anvm6+Av11wjSBBdywP
gst9cda6vedcfkOrDN75uQLlhAebZVJ4EPpmYMG4e6T9zSMduwB74U3MUPiK
Xko6n8AsVjnUH8LfT5ObAD78y/J53z5WV0Zy2R2sY4jfhrkMrJ31sdrD72gv
JdfzPTexSLGnenqrHHzYjldyEP+NtX3fHt9O4cHZyB+b1ecbtrV1PiYX0kaB
613DU9busyTdA1X+7EA7UXv3U0E6N72vvdw4biQ86NqQwoN4B0PrI3Xm+Hsy
0GZZCfqjJdgWxYNc9nceG1r2xVtlL7XK/C5Dp/Bgs0wsD04kT15w0mtuO5OO
T+vztzeCOU74IcKvsOHoQM4t41e6V+TvEN9/E1Mb83LzOzrxzULcQsydZvno
/JN/NxsHflPLZby/beVBbje0F2VRp9wY69wTIX1Wecw7f+zR+xOn3GLO+aRx
HOl5BJ/996foSWhvt0B73jUUp67wYKsN0TzI5UPPGnNK3fpXFdi3UuS3pIg8
UoF9KTy4U8COzZxyiLtoz5EFc7aQ8KBdJoYHsfd9YaceclliTuvTgr8jxHhZ
zNGJOcuUPRF3e65nPdKcXcQmtI0csos4OtenMMc3uEy7ePCQgF37OuXsnMen
hvQ5dW726B3nlHFj22yQaP/6AftfTdGT0F4opvNFEXWFB1ttSOXBPhTOvQ0/
tr4V23eWpR/zipMKiq8/CInK05hhXwoP9iM/X1zjlNveOod5r+BcPwkP2mVi
eBB71brtVyEdrwDzkoinjThnebnb4aeJ/TCrO3oWsf4dWhN2BX1IM4bEmuKC
lg6MZTC+Q77Nt3L0oO8E3x7Mp2J/x1yObViHxHg1tI7V4HLt4sElAnZdb5WZ
g1rjSsT6je/j0Ytx/cxWGfu+4B4kfctIzyf49tzANzg3J2AqKOxbtHtEXeHB
VhuSeJDrIBdyaH7miAptQ5/a9qe+toSu3et47p5nmLdv51KPDRiHzGqVsfuu
eb5wwoPNMjE8aORtvs/Iz7MBOTEZ+Le3Gun96ljjw7oR5iWRD3cpqxy4BftU
scaIfb8fOufuybEDYufbbfC7Zdpa0tGHdw/7LODXg37nRfwOg99a4maS9v8B
H4IXwY8hP5yO4EFu+3mPXdg3bHJt2LGlu8VSy9C7QOCaN+Hzbu7AGwva/3Cg
nczchQXb8u2ZwW9nvoi6tfAg6fk7M/a4I7JOr+RBrhfymUE/evGKbHPjA25R
Qhd8zHzzXi+7349Evak8GIqztiefx54g218gs79Lnc2D3eb6SuivmgddQZ89
k1esdsCRZoz2pqPnIy6DcQvmThYO3Bsj8OPEPEF/rtfwlIHvKcaeq2XcHx9v
p1x/p/DgmIBtq/F5e69lt1hqObp9fgYmVt3KzvF9Cto/OmB/1XGN3RjjRh6K
rF8XD9q+Xn+KrNObeTDLZ6aS7x/pmDVGJ2IolZpzVfWvCdi7XgmdqTyIfucr
Hhvu4fP7W8fwjc2LG98pPPgPjw2Z8asS9dv7L38fKFOGB30yeZ6RdeI3/+uM
3z3kEy6L78xh/O89AmXR3zHxTK+x6mXZhH72GZY9sfO4vYUHQ7/nw/n8Q9ax
pNym5I+H9xifO9Q5vmCevkAbmF9342xBomJ1J7QTytMRlWM143fWVdKuwy1d
4yPr9Foe5LohnxlI7hx1ju65qXVcVDp3Cek5Ip+tl5TQmcSDXMcXT/Frfoce
tI6dHqGrU3jQ588xqUL99rjrqkCZqnnQyPusc4OY8lzW7J0fwH/f5Cl7NJ+D
/9QXVr0Ym7AW5Rs7lpEG29BOHuxL/vEzYp1hfG3v1xyQqHugRy/W87Ame4N1
bGLJa7gucH+D4/kCbfj2gmENKXPfoFW/Lh680NJ1Z2Sd3s6DWT4zmGufu4Rd
bqzb0jmc+B17z2Mr+v2F1rE9zzCGB5cK3DP499lzHStH6OoUHvR95yG5axUR
ut3vvTeOO5+rgwcnss5QvvEW4bImfsNf+Hc3L7WudT9Ceo879uRjLG3mU9eO
tAl7qPtVeI2QBtvQNh7k9q/32Aab7DiDrxfQ24f88xbrUms/67SS9q9I/jFh
JevlSs8mgecXHceU6uPBe1OvN+NdHVbGlhRQ+bxLWT4zV5Swy+7vdNtLW0Jv
KAdFcG9Cjr5kHuR6eXG0ovqk1Dk8+OOAHT+qQLfrT79xoNzkdy/j3Soid7FO
Xy4mnyCemc3dXVx/G/4b/h1L8TET09nwYOh5urI+l/d914tKg3W2mwf3DNhn
+45fVlC3L66BG0NmUAXXcEHgGr5XUi/Grr44cZiPiV43ohp4kHS/7kNLV5Rf
Y8a7OqyoLamgavLwhnxmIJsXsMndMxi1RyhS93oBO4N71XP0FeXBA3O+SZkx
uC09ncKDAwJ2YC00aq4moBf+TXZfHe+ZN54tn6+DBy9nnadHloevk82D2O+z
Buu4As+e/72vVeZ1PhbLgztzeZ/PYFFpsM528yDWPb/22GfPiX6/oO5dc/R+
HPp9JbaD3+0LnrbQb0mKh2XphG+Bj8fRr1o+UZdvjhjSVcQ21unmYx8bWW/v
gC2l45zEgnQOJZ8N0et7lO0zg3gp8yba5O4t2D79yoK60WfxxW/Ct4oK6NvR
0bN2ZD2sf4byhkflZGI9blxgIwNTr6UsKBxnOHdfb0AfnpU7RxbsE/H5Onjw
VNZ5bWT5/tQ9FwD2OaAvj3U9fM8Qu8Te0zqJ29gmsg2TB+ruCq+zwTrbyoNs
QyinrXk/Cq25kM4B6eNYIzdXeA3LU+v4yP4mrpmoC7+bqz26cC3J30cK723t
StXF+jAH4vbJLoisG8oPdmkRW4qAwvOESXPk5N+nagRzxrH7fOAP7Pq+bVns
6oJthPzYk/MHo46jY6+EurcG7IjK0cs6QjE4Dky9lrIg3ccMzZGjbzNTgi70
E25xdGDPX7d4aFYdlKmDB834LTpvA/lz4pzFerBONd4592Ki3cbff2yF19lg
nZ3Ag8dk2Pl4Sd2hPX6Q4VVdA7eFdaMPPO1g/RDf/0y/VNJry/Cj8uWPQz86
M8Z4QCfWqicFrr+rgD74O/j6Lbm+jaTzYoW+x/AzWynVnoL2h+KsoB+zaL6W
ybrQx83qmyJe8WwReny5Ra8ud6Ut+kNrzBCMaaPGYawL/p1u3jT4P8Ry/g4B
O6LeRfL3wYzgd540Dq8ClJ2rHXGeDyUnJqdTH7/J46n7/ALe+UE5baNcHTw4
lHX69njbgnkGxPjAnBj6725c9W9Yj7tXDfJnPofvgi+HuvedoNbcXGWlwTo7
gQez4ilG55sJ6D46Q3f0+5/QHp5pyJ8Q4znwMtY+MUbDOtV+Sn5C2u80tP6L
d2n9yPaxhxWx4BE7F+/nOxnXj9/4rZGCb/oTKc+J9PoJck/D5wzrDL7xsi3Y
8w3/QcRBwdwX1g1KrfmwDZuxDWdS9v7eb9nGn3N52J7pp0x6LPdGhr43+Pli
/8KM1jPCtYET3P6/LeDY/bkuykfltyDdN0d5zF2fQuE8OUYQuwo+H4hpv4aj
Cz56m/DvCd8fn+8pBLng8JtGHIBg3hbqHkfUfEuzxjwLs17o/2ugfSP4vZ/I
9uI9WDiktyqQ7g+dl2MXBH1k9BkQmxN79OAX5cvFat6FXP8CLlsHDw5knaE+
I34Hx5Mzr06e/AN83OejsKtTF+8q9vSH9gXex+Vcv+oy0mCdbedBtiOUH2PD
knpDHPt0VbZ72sS4Dnvryvo1fca/q9kT2nb3RvaUdHlsqWL+YnzJZ1HWhrER
bYArJiS8c0WfUaw/SleJ653g6HL9ymJkWI59lzjlM+M5lfxNHxpzz6oA6Vj4
oX5CiqCvvGxkmyhfBw8i3+nMvt8H6f57P24TY0D05e/h8nO494DLuTyIa0T/
YQDXRR/MxBFDbDTkFHTj1jzH59316TLSYJ2dwoMXemxEnyhqviVHt6+/PqYK
u3PaxXw5+i4p+ZwhiHuFb1nyeJXax4OHe2yZKniQ20HfB2MQxIN5lfxrRo2S
z2hK4UHXfzUvjk+v4EG2FfODWL8MzQmFBOsCmHfZLL+VlvZQ1/Bg1J73SEGO
QbMfEL9l5M8abLWL+fGTqbWvfxKfs31CfTyIeTGTc+ku6zh8DfG9nJXPId42
fB1NXB2zzyKUgy5VcM/nYZ2dwoOzk57PsaVQnBeP7vk8umvLoRqwAWvg6PMc
oeRi0mtC+N1jTz/m1xFvA/OBjZLt+O5jT0i3MStpn8qyeqNzIwfuR1kbMvNd
ZrQ7LT9zW1ffks8odg2uf0H93d450n3zVB2Z7xY1c5G33JeM8mV+09FzKVWD
9Jw55nMxN4S1kF+Rft/x3iPeHfoYhykZTFYOgMQ2sB4HX5q5+e+xVJ4f3mNd
iN2JdQo77vXqpH34fH6/mL+CTyh8Yib3/bmezYMX87GtA+2Dk84ga62e9L5v
3Lt+/Fyr4MGDrOsENz9W/GkLBAKBoB2gpu/uLfx3aA9XirhzAtjLgbXsLJ9D
IzdzncljNv7b8CDWhudhPnspRxf8C39LnJ/JsqeKmDK3ke6PzULN+NyV+mgL
BAKBoH4wRxl+GsHHViW9z7goR9zJerDWh3gyrybWH8L1r/Lw4Ej++6hEnfAp
whzp9Fy/jO8FrseMn82+3fPb8fwEAoFAUB7qG74o6blE+FmadTfkNQ7ta8wT
rNlhj22en3FIniG9Xo78d3Yuiqf5+EIldMN35ugC3GwEOZ6XZZtMfk7keCoc
/0cgEAgE7Yf6jg/lbzr87ufnY6ljrirlELbhSP4/eHBj/rcvRkhPCNYAN2cb
kEf4M+bjpPhcAoFAIOhMUNNPGPHMzb6G2PigVQvWAeEnZHzDzP/XbSMH7s42
YD/qO3xs6/Y9MYFAIBBUCdJ+HyanHPxA+vKxi9rEPZc69sGPNCsWR50ynG1A
fK2n+NhR7XlSAoFAIKgLpPeyj+PvPPZmTEfx8W6qFqxPrmbZFsonXvc40HAg
/H7Mvs5CcdAFAoFA0Png773Ze34FuJCPH98GHvoj8zBser+H20a8vqGeewI/
1mnb+5QEAoFAUCdIx3CYyN/9m4hjMJCOVxvKfVWXwC+zSFyiMoI4wRvyNWOd
8m98HDmtpmvv0xEIBAJBT4DHQCY3zH3EsXXAD+TPi1OXIN7oVz3YHvZnLM7X
ivg2Zr/+5cKBAoFAMHWB9HqhieH5jMUPiE325x4eo/WEYLw3G1/jIGrut0eu
GZkLFQgEgqkQpONVX0zN+cLB1vEzOoC7qhDsBdzfuuYDSM//Yhx6UPvuvkAg
EAg6BaTzN4IX4EOJuKTGfwb5JUN573qDwAd0Ob6W2ai5Tx97GIe0964LBAKB
oJNAem3wbeaJ+5UsxMeR0+OXHcBpKYK8ScgfbfboI67qi3wO+xSXaO/dFggE
AkEngvRe8juZLxCXdJh17ruk/UzazXF5gjXPpdhmzO8ils6XfA65ovq17QYL
BAKBoONBek/fwaRjc4M7bifO90c6Ds1hPK/Ybr5zBTnKh1rXgTihE/jcW0q2
at9dFQgEAkFvA8ZU1MzbhFxNiM1tchvNSdrPsqf3G/rkQ+bmGSzb4Ptjcmog
/3D/9t5NgUAgEPRG8NhwP+YacAry0m5rnV+EOacdfIh52y7DcaTHqgdRc/8j
cg5v0r67JxAIBIIpBaTzxCMv7dfMMQ8qGWidBx+eR+Vy/MbKu0qOtfgPXL09
NXPHf8rnZR1QIBAIBJVCccuKSu62OOkO4vy+fB4x235COk5M1fz3PI9NTd4o
8N/WSv7K58HRv1KyQPvukEAgEAimBiiuGazkUYuj7rHnINW/ZySdQ2JCQc4z
8g3rBt/1Yd3wAd2DmjFSIcgptVz77ohAIBAIpkYo7tmcmr403zLvIXZ2X6sM
/DYvo6b/aYwg/wTyBC9u6cE++NFK3rDGfzfY41GBQCAQCNoBxUUDSeeuMD6a
r/Ma3fxWmf5KDqRw7NKveZ51J2LfT663HOmcFB9xOcRJu4BkL7xAIBAIOgyk
91pcbI39sH/9RiUbkxXLmrkN4713lDxLOvbLAtb5GZTspmS8M0aEf+g87bk6
gUAgEAjiwGO/kaTzWBgewz73nypZxCo3nVNvFR772bmfwIW72GNEgUAgEAh6
C0jHY7uK5zON78t97OsyC+lYbodSq0/NP5gPB7TbfoFAIBAIqgDp3L/Ief+I
xXf/pmbsT/z/NiVDZewnEAgEgikZiueWVnKqkjdJ738YpWS+dtslEAgEgikH
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{268.015625, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "WolframULogo",ExpressionUUID->"30c15938-\
e485-48e0-892d-5da749eec6a3"],

Cell[CellGroupData[{

Cell["The Multiparadigm Data Science Workflow", "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
  3.726941915180914*^9, 3.726941915962871*^9}, {3.746978317832979*^9, 
  3.74697832889117*^9}},ExpressionUUID->"e8f9c554-cb6f-4173-a8aa-\
b8b2804e79af"],

Cell["Exploratory Data ANALYSIS", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
  3.726941908757318*^9, 3.7269419228992167`*^9}, {3.727530497787223*^9, 
  3.72753049862645*^9}, {3.746978334559821*^9, 3.7469783397495947`*^9}, {
  3.746978389172802*^9, 3.74697839249957*^9}, {3.746978464274922*^9, 
  3.746978477269431*^9}},ExpressionUUID->"4fafb478-a50e-4dcc-ad4b-\
a0a08b8f220e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c47dcd9d-1eba-4d3b-b4fa-25e33f4a9a5f"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 
   3.727461151826571*^9}},ExpressionUUID->"d24997a9-5edb-42ac-981e-\
bd8b0e0496b0"],

Cell["Basic tools of Exploratory Data Analysis (EDA) ", "Item",
 CellChangeTimes->{{3.716125124047575*^9, 3.716125129343844*^9}, {
   3.7161266942828293`*^9, 3.716126695757213*^9}, {3.716212769624947*^9, 
   3.71621277933263*^9}, 
   3.7162518586973*^9},ExpressionUUID->"24dd416c-f5cf-418a-b8d2-4d7c26bceb64"],

Cell[CellGroupData[{

Cell["Statistical exploration", "Item",
 CellChangeTimes->{
  3.69660298083281*^9, {3.71612682177629*^9, 3.7161268381689987`*^9}, 
   3.716126911213827*^9, {3.716251801896097*^9, 3.716251804112582*^9}, {
   3.71625248771049*^9, 3.7162524934195642`*^9}, {3.748276571862138*^9, 
   3.748276571877162*^9}},ExpressionUUID->"4b6b2f27-1c07-40a6-9c34-\
d43170b75c1c"],

Cell["Tukey\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]Five-number summary\
\[CloseCurlyDoubleQuote]: Median, Min, Max, Quartiles ", "Subsubitem",
 CellChangeTimes->{
  3.69660298083281*^9, {3.71612682177629*^9, 3.716126845095758*^9}, {
   3.716126915467779*^9, 3.7161269212201157`*^9}, {3.716212809061015*^9, 
   3.716212818715773*^9}, {3.7162517799073553`*^9, 3.716251799153205*^9}, {
   3.716252496018949*^9, 3.716252509562673*^9}, {3.71630294083208*^9, 
   3.7163029441971197`*^9}, {3.748564995450934*^9, 3.748565024366562*^9}, {
   3.832159441181992*^9, 
   3.8321594414863777`*^9}},ExpressionUUID->"73d04eef-0295-4fb5-9ad1-\
ed1b1349469a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visual exploration", "Item",
 CellChangeTimes->{
  3.69660298083281*^9, {3.716129839702619*^9, 3.716129840460999*^9}, {
   3.716130257715856*^9, 3.716130260857768*^9}, {3.748276575937715*^9, 
   3.7482765763297777`*^9}},ExpressionUUID->"45c9974c-502c-448a-86bf-\
baee58ff9b7b"],

Cell["Basic visualisations", "Subsubitem",
 CellChangeTimes->{
  3.696602982366103*^9, {3.71621285686294*^9, 3.716212859131604*^9}, {
   3.7482765792496443`*^9, 3.748276579337446*^9}, {3.832943632344576*^9, 
   3.8329436325916643`*^9}},ExpressionUUID->"3b929cc9-1931-4a5a-9900-\
57434172b996"],

Cell["Specialized visualisations", "Subsubitem",
 CellChangeTimes->{
  3.716126817552784*^9, {3.716212862011258*^9, 3.7162128641719503`*^9}, {
   3.716224970664318*^9, 3.71622497278198*^9}, {3.748276581441371*^9, 
   3.748276583665449*^9}, {3.832943636223424*^9, 
   3.8329436364644833`*^9}},ExpressionUUID->"704da457-eab3-44a0-bb00-\
503ea3ada3bd"]
}, Open  ]],

Cell["Clustering and outliers", "Item",
 CellChangeTimes->{
  3.69660298083281*^9, {3.71612682177629*^9, 3.71612686326184*^9}, 
   3.7162128702907763`*^9, {3.716251814199998*^9, 
   3.716251837679461*^9}},ExpressionUUID->"88f4d739-da3e-4503-a90e-\
0c0de7b210e3"],

Cell["EDA checklist", "Item",
 CellChangeTimes->{
  3.6966029792966547`*^9, {3.716127761840542*^9, 3.716127761840953*^9}, {
   3.716129003650701*^9, 
   3.716129015185731*^9}},ExpressionUUID->"5a8e8405-691d-4b72-ae80-\
194574dcef49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8405b209-d28b-45b2-931b-4073cba952da"],

Cell[CellGroupData[{

Cell["Why Do Exploratory Analysis?", "Section",
 CellChangeTimes->{{3.695752537115595*^9, 3.69575254318277*^9}, {
   3.695908716157475*^9, 3.6959087187535973`*^9}, {3.6959947553185997`*^9, 
   3.69599476492594*^9}, {3.6962684004026537`*^9, 3.696268401350377*^9}, {
   3.696596962662253*^9, 3.696596977860137*^9}, 3.696597622658765*^9, {
   3.725998974820653*^9, 
   3.7259989838416243`*^9}},ExpressionUUID->"a91452c9-8055-4923-901a-\
48b28c0922d7"],

Cell["\<\
Gain an intuitive understanding of the underlying nature of the dataset\
\>", "Item",
 CellChangeTimes->{{3.6965969979510736`*^9, 3.696597005767782*^9}, {
   3.716126872143138*^9, 3.716126873013665*^9}, {3.716129903690338*^9, 
   3.716129996066369*^9}, {3.716212989195815*^9, 3.7162130174160223`*^9}, {
   3.716213060223722*^9, 3.716213133033592*^9}, {3.7162519953997803`*^9, 
   3.7162520249299593`*^9}, 
   3.725999087821291*^9},ExpressionUUID->"2c4274ee-84a3-431f-b9a6-\
72cca56a1b09"],

Cell["Identify relationships between variables", "Item",
 CellChangeTimes->{{3.6965969979510736`*^9, 3.696597005767782*^9}, {
  3.716126872143138*^9, 3.716126873013665*^9}, {3.716129903690338*^9, 
  3.716129996066369*^9}, {3.716212989195815*^9, 3.7162130174160223`*^9}, {
  3.716213060223722*^9, 3.716213133033592*^9}, {3.7162519953997803`*^9, 
  3.7162520298100977`*^9}},ExpressionUUID->"fbf746dd-333a-40b7-b382-\
00af0afd8773"],

Cell["\<\
Formulate good questions for the actual analysis (as the explorations \
proceed, those questions can change)\
\>", "Item",
 CellChangeTimes->{{3.6965969979510736`*^9, 3.696597005767782*^9}, {
  3.716126872143138*^9, 3.716126873013665*^9}, {3.716129903690338*^9, 
  3.716129996066369*^9}, {3.716212989195815*^9, 3.7162130174160223`*^9}, {
  3.716213060223722*^9, 3.7162131589834557`*^9}, {3.7162520316973343`*^9, 
  3.716252059096393*^9}, {3.7162525259019403`*^9, 3.716252542416753*^9}, {
  3.7163029645593224`*^9, 3.7163029685483227`*^9}, {3.7259990110296917`*^9, 
  3.725999019673767*^9}},ExpressionUUID->"a6110565-071e-423b-8138-\
39fda977caa2"],

Cell[TextData[{
 "Evaluate the quality of the data ",
 StyleBox["(Data QA)",
  FontColor->GrayLevel[0.5]]
}], "Item",
 CellChangeTimes->{{3.6965969979510736`*^9, 3.696597005767782*^9}, {
  3.716126872143138*^9, 3.716126873013665*^9}, {3.716129903690338*^9, 
  3.716129996066369*^9}, {3.716212989195815*^9, 3.7162130174160223`*^9}, {
  3.716213060223722*^9, 3.7162132062130003`*^9}, {3.716302980523848*^9, 
  3.716302998905554*^9}, {3.7259990352189827`*^9, 
  3.725999052759512*^9}},ExpressionUUID->"adf355ad-92bb-4f80-b560-\
d73fb33da7d6"],

Cell[CellGroupData[{

Cell["Questions to Keep in Mind for EDA", "Subsection",
 CellChangeTimes->{{3.716213232435647*^9, 3.7162132447267733`*^9}, {
  3.7482766089364023`*^9, 
  3.7482766119604597`*^9}},ExpressionUUID->"82b8f80b-38b1-48f9-bd36-\
5a4ca16897bd"],

Cell["\<\
Do you have the data as needed for the planned analysis? Is there enough of \
it?\
\>", "Subitem",
 CellChangeTimes->{
  3.696597392725013*^9, {3.7161290901854362`*^9, 3.7161291013320312`*^9}, {
   3.716130010858015*^9, 3.716130031402482*^9}, {3.716213319311139*^9, 
   3.7162133420359793`*^9}, {3.725999123516898*^9, 3.725999129993294*^9}, 
   3.748276282255725*^9},ExpressionUUID->"40ccaf63-a0af-48f8-a5c1-\
1ac68a73ac38"],

Cell["Does the data seem to be accurate? Are there obvious errors?", "Subitem",
 CellChangeTimes->{
  3.696597399166687*^9, {3.7161300640728073`*^9, 
   3.7161300710227947`*^9}},ExpressionUUID->"32fbb47a-fda7-43b4-a27e-\
3c391f98150a"],

Cell["Is the data relevant? Are there outliers?", "Subitem",
 CellChangeTimes->{
  3.696597397079227*^9, {3.716130083134013*^9, 
   3.716130087557973*^9}},ExpressionUUID->"c65394c6-0990-4a06-8426-\
fe06de26c546"],

Cell["Is the data missing something?", "Subitem",
 CellChangeTimes->{
  3.696597395398514*^9},ExpressionUUID->"89502705-dabe-4e6f-849e-\
65a89f5a1820"],

Cell["\<\
Are there some characteristics of the features that attract attention right \
away?\
\>", "Subitem",
 CellChangeTimes->{{3.6965976566560383`*^9, 3.6965976599248667`*^9}, {
  3.716252150680146*^9, 
  3.71625218848971*^9}},ExpressionUUID->"eb370606-3e21-4af9-9b9e-\
dd28e5ff24e5"],

Cell["\<\
The focus at this stage is completely on the data\[LongDash]its structure, \
outliers and possible models, irrespective of the type of analysis planned.\
\>", "Text",
 CellChangeTimes->{{3.71622205510633*^9, 3.71622205747537*^9}, 
   3.7162295366913*^9, {3.716252206196788*^9, 3.7162522485043097`*^9}, 
   3.716252600030305*^9, {3.725999147316894*^9, 3.725999160625198*^9}, {
   3.7482766226718903`*^9, 
   3.748276627217774*^9}},ExpressionUUID->"62cc12d6-a613-4e1a-a718-\
b16876909a01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7b9f193c-d742-4d75-845a-c542f7ee5c4d"],

Cell[CellGroupData[{

Cell["Tools of EDA", "Section",
 CellChangeTimes->{{3.716217004237474*^9, 3.716217011979953*^9}, {
  3.71625242460493*^9, 3.716252436394717*^9}, {3.716252725950636*^9, 
  3.716252731468182*^9}},ExpressionUUID->"987aaf11-193e-408f-9691-\
7315a872558e"],

Cell["\<\
EDA tools can be broadly classified into the following categories: \
\>", "Text",
 CellChangeTimes->{{3.716253996177279*^9, 3.7162540596314373`*^9}, {
  3.71625424813503*^9, 3.71625424854815*^9}, {3.717155222439052*^9, 
  3.717155223236628*^9}},ExpressionUUID->"a1dd3c86-f861-4119-a603-\
5a796061d81f"],

Cell["Non-graphical (statistics) or graphical (visualisations)", "Item",
 CellChangeTimes->{{3.716253996177279*^9, 3.716254108781054*^9}, {
  3.832943671560746*^9, 
  3.8329436718567543`*^9}},ExpressionUUID->"c6184208-268e-4b39-8d69-\
9ea05707bb5c"],

Cell["\<\
Univariate (single variable behaviour) or multivariate (combined behaviour of \
more than one variable\[LongDash]usually two)\
\>", "Item",
 CellChangeTimes->{{3.716253996177279*^9, 3.716254163763946*^9}, {
  3.717185560054833*^9, 3.717185561203718*^9}, {3.7482766380876837`*^9, 
  3.748276640051507*^9}, {3.832943682760203*^9, 
  3.8329436843686743`*^9}},ExpressionUUID->"a1b1c83c-8aff-47c1-880b-\
85fb49bc684c"],

Cell[CellGroupData[{

Cell["Statistical Explorations", "Subsection",
 CellChangeTimes->{{3.716253897321087*^9, 
  3.716253920615059*^9}},ExpressionUUID->"6a2427f4-f388-40f2-b851-\
3cf65f853910"],

Cell["\<\
Find descriptive statistics for the features (independent variables) such as:\
\>", "Text",
 CellChangeTimes->{{3.7162539356395693`*^9, 3.716253985404619*^9}, {
  3.7171553622230453`*^9, 3.717155375859971*^9}, {3.7259992459651947`*^9, 
  3.725999257994381*^9}},ExpressionUUID->"fb31f242-7a4d-41c1-ae29-\
4e3500a2a75c"],

Cell["Minimum & maximum", "Item",
 CellChangeTimes->{{3.7162539356395693`*^9, 3.716253985404619*^9}, {
  3.7171553622230453`*^9, 3.717155370552862*^9}, {3.7171554133601294`*^9, 
  3.7171554401895933`*^9}, {3.717185581670499*^9, 
  3.717185581971635*^9}},ExpressionUUID->"f592bfb9-eff4-47ae-b87c-\
d56dbdffe76b"],

Cell["Median, mean & higher momenta ", "Item",
 CellChangeTimes->{{3.7162539356395693`*^9, 3.716253985404619*^9}, {
  3.7171553622230453`*^9, 3.717155370552862*^9}, {3.7171554133601294`*^9, 
  3.717155433589604*^9}, {3.7171855842355347`*^9, 3.717185584859436*^9}, {
  3.748602885824937*^9, 3.748602887173305*^9}, {3.832159481350856*^9, 
  3.8321594817190933`*^9}},ExpressionUUID->"dd759a1f-53b0-4b54-bc46-\
a53cd31d5016"],

Cell["Quartiles & quantiles", "Item",
 CellChangeTimes->{{3.7162539356395693`*^9, 3.716253985404619*^9}, {
  3.7171553622230453`*^9, 3.717155370552862*^9}, {3.7171554133601294`*^9, 
  3.717155422574196*^9}, {3.717185586523388*^9, 
  3.7171855872114277`*^9}},ExpressionUUID->"a7e2f21e-fbd1-4864-ae5e-\
80dc9b5ce415"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visual Explorations", "Subsection",
 CellChangeTimes->{{3.716253897321087*^9, 3.716253920615059*^9}, {
  3.7162541748137074`*^9, 
  3.716254176683483*^9}},ExpressionUUID->"d5ad80e1-c6b4-4771-ab78-\
8af3083b88ad"],

Cell["\<\
Literally \[OpenCurlyDoubleQuote]look\[CloseCurlyDoubleQuote] at the data\
\[LongDash]examine each feature on its own or in comparison with other \
features with:\
\>", "Text",
 CellChangeTimes->{{3.717155526658091*^9, 3.717155557572905*^9}, {
  3.717185598838663*^9, 3.717185605219204*^9}, {3.725999262445087*^9, 
  3.7259992824699707`*^9}, {3.74827665038496*^9, 
  3.748276656313517*^9}},ExpressionUUID->"c5d690a3-28b9-46df-aa1a-\
52b0c947d499"],

Cell["Scatter plots, histograms, box plots, \[Ellipsis]", "Item",
 CellChangeTimes->{{3.716254181341362*^9, 3.716254198589216*^9}, {
  3.7162542973064613`*^9, 3.716254343106155*^9}, {3.7171555781675653`*^9, 
  3.717155578173134*^9}, {3.725999208659396*^9, 3.72599920906437*^9}, {
  3.748276234745384*^9, 3.748276237757139*^9}, {3.832159502607356*^9, 
  3.832159508351514*^9}},ExpressionUUID->"a7c22ca7-d70a-49ee-bfec-\
39643b27d728"],

Cell["Bar charts, pie charts, \[Ellipsis]", "Item",
 CellChangeTimes->{{3.716254181341362*^9, 3.716254198589216*^9}, {
  3.7162542973064613`*^9, 3.716254343106155*^9}, {3.717155579285681*^9, 
  3.717155582961977*^9}, {3.725999211079296*^9, 3.725999211472109*^9}, {
  3.74827624041292*^9, 3.748276241517486*^9}, {3.8321595132566433`*^9, 
  3.8321595140232573`*^9}},ExpressionUUID->"8bedbe0c-6194-4f4f-9a85-\
000e106db00c"],

Cell["Time series plots ", "Item",
 CellChangeTimes->{{3.716254181341362*^9, 3.716254198589216*^9}, {
   3.7162542973064613`*^9, 3.716254343106155*^9}, {3.717155579285681*^9, 
   3.7171555899104843`*^9}, 
   3.748276244804839*^9},ExpressionUUID->"a8697bfd-e00b-4078-8820-\
89db7d8ed9bf"],

Cell["Cluster visualisations etc. for single or multiple variables", "Item",
 CellChangeTimes->{{3.716254181341362*^9, 3.716254198589216*^9}, {
   3.7162542973064613`*^9, 3.716254343106155*^9}, {3.717155579285681*^9, 
   3.717155591805393*^9}, 3.748276249789069*^9, 3.832159496855226*^9, {
   3.832943700024531*^9, 
   3.8329437003289843`*^9}},ExpressionUUID->"c8a8e245-6ce5-4bda-8611-\
6b0a466b5f8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"30b62db4-213b-4814-a015-bfa5fb79e6c5"],

Cell[CellGroupData[{

Cell["Tools for Statistical Explorations", "Section",
 CellChangeTimes->{{3.716217004237474*^9, 3.716217011979953*^9}, {
  3.71625242460493*^9, 3.716252436394717*^9}, {3.716258175098386*^9, 
  3.716258181278558*^9}},ExpressionUUID->"e94541f6-8b53-4636-a9bf-\
b62c2ca84409"],

Cell[CellGroupData[{

Cell[TextData[{
 "Case Study: Fisher\[CloseCurlyQuote]s ",
 StyleBox["Iris",
  FontSlant->"Italic"],
 " Data"
}], "Subsection",
 CellChangeTimes->{{3.716254373133595*^9, 3.716254406866242*^9}, {
   3.716254593034992*^9, 3.716254596929248*^9}, 3.7171856724420652`*^9, 
   3.7482762847420177`*^9},ExpressionUUID->"13e61e73-6ee3-4a76-b9db-\
2500608640d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<FisherIris\>\""}], "}"}], ",", 
   "\"\<LongDescription\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7162545371278057`*^9, 3.716254540800482*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"ba53f1ce-7638-4910-baa9-77578b47facc"],

Cell[BoxData["\<\"The data set consists of 50 samples from each of three \
species of iris flowers.  Four features were measured from each sample, they \
are the length and the width of sepal and petal. This data set is often used \
to demonstrate classification techniques and discriminant analysis.\"\>"], \
"Output",
 CellChangeTimes->{3.832065086886177*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"d46a189d-bd58-467b-b07d-c99a2eb3b2db"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<FisherIris\>\""}], "}"}], ",", 
   "\"\<ColumnDescriptions\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716254658213553*^9, 
  3.716254660908174*^9}},ExpressionUUID->"a0238c3e-8365-4e81-8eee-\
06f27628b117"],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJycnQd4W+X59mVZEkL+HPtvx8iOYzuWbcmSvEecOAkJo6xmk5AEEjLIXt7x
3itxJgkUuuighVJG6aL9t3TQMkrLXmGEVTaFQmkpo4X7e57nPe/Rkeyk/T6u
6+Zo2ZFknZ/uZ71v7oa6pZvtNputyU3/W7q+9azGxvXtFyfTleW7m7Zt2b1p
44W7mzdt2dQ4Y0M83ZgQZ7Plkhx0eWNjObbUlWH77jLs3knaXoTdO0KorytC
S3MZ2ttL0N5ZjPaeEPb0BtHUV4CGfh8aBvPQOBR92armIT9ahwJoHwygYyhM
xxDaBovROlCM5p4i1LUHsH2PD1sbQrhiVxBrNuVj+bpsLL4sFRcsnYQz5yei
9rxEFM9yIrfCjjPCNkwO2TG50IEzCu3IKIxDVqGNLjsM2dXtATu8+Xak+uKQ
nGND2lT6mQw7UtLtSPbakZRmR2KqHQkpcaLEZDs8CXa43HGG6LLLkDtejk6W
Mx5ulxOJLheS3E6keJyYnOBASqID3hQnMtNcmEbypbvgn+JGgI6iTA9CmW6E
s50I5ziU+HKWh5RIj+XHqMflZbiQM9mJqclOeJMdSKffm5wcj6RJ9JwT45FA
z9PtiTefo9MVF3me1uet5SHRz7rodyTQ70vg10rXE0Q2eu1xFtmVkuhx/G95
HPDQ73XTe8JHvp6Y4LLIKUqi55qc6kAavXav14kp9Foys1zIzqH3I9cNn9+F
/AC9H0EPCkMeFIXdKC52obzEg4rSBJSXuVFVmYDKGqWKGrpe5URNjQszZzgx
q1ZpziwX5sxx4swzXZg71ymaN8+Fc+k2rS/QfbE6d/bpUfrCHA/OPdODc+ac
Ljp3diLOqfXgCzO1JtH1SThrZiLmzvBg3mwP5taeTs/hNMysdaFmphOV9Lwq
ZiqV1yqV0Oe0bLYDpXMdKJ/nlKNWGT2PktkueQxL/YyLft6FMotK6PcWT3eg
uNqFInoPWCV0uWw63VflQrjMhcISB/yldlFBSRzC4TgUFdkRpuvhMgcKy+JR
UB6PPEO5FfHILrNjamkcMktsyCyLw9RyuxzlcqkN2XR+5VSx4pEVo9wqNz3e
TY+lv2uZB95yDyaXuJFa5EIq/f2SQk78T9ilrpP4svW6lx57hnHkn82oSCC5
MaXKg6zpiZhG7/2m5kpsbazAzvoK1O2uQMOuMjTsLkFTfQlaGkvQ0VaCzk7i
UDdxqC+Elj4/mvuJOQN5aBosEDFvmkcCaBr2m2oZDgiD2phDw0G0DxUJg9oG
S0QtvcVo7Aqijn7/juYSbK4LYe22Aly6MRtL13jxxUvScc5iL2Z8QXEoh9+3
onh4i+icD8ULa5hDaX46V0nMHVM+O9KmEYdy6P7M+CgGJabGCYO0klLi5dzj
847Pv8QkFzHJoc5pt4VDTj46iEN0PpIS6fZkup8ZlJbswpTJ9DdKc2IanYf5
wiGlwqwEkhuhHCcpwqAQnafMJr6PxQzKp+vMsawUxR/W5FTiHV0XFhl8MDlE
crvsludqFfHJEycccicye+Kj+DOeQdEcYuYJ9wzx+8JKSNRyivixzCF+jvxc
09Lob5FOzz9D8Sh9qgNTsunznO3ANJ8D+aSCPCcKCxyiYJDON/rMhkvoWOpC
cRmdy6TyUgcq6Fhd6RJNp3NRcek01NL5ykyYM+t0zJ15mkVO0Tw6v03R47X4
vrNmnyZi/vCRGcQ6r5aVLBIGkeYRhzSD+N/SHKqeqRTFoBnxoqKZhmodpkLG
bSHmC6moOl74UmxwhhWudIiCxI1guUPEPGGuKLY4iTnxyC+yy7GgxE6X41DI
Iv4EiTOaP1YG+aoccu4wh4RFfLlCHeUyccjKoFgOxTLoDPrOYAZpaebESjOI
+TM5rI78syxvuUs4NLU6QRi0sbUSW/ZUYkdTNeoaqtHUUIlWOrY1VtOxnBhU
jq6OcnT3EIv6itDRH0TroB97WEN5aB3Ox55Rv6hllFmUj5YRdVvbSLQ0izqG
y9BBHGofKBFP1EA+a9eeImxpCGDDLh9Wb8nB8rW5WHxpNs5blIrZ5If4+6Og
wiEcSvcza+JE6fR5Znnps502LV64481WSptqMxmU7I0zPFBcNIes550hk0H6
/Da8UCyDkjzKnygOKW5MmewQL5SfqfxNYY4HgWw60jnIDArl2tWRmFRIt4dy
XIpB2W74s5QX8nmVH8pKoXOY2MY+S3OI/z2P4YdYHreFRx7l6dT9dguD4k7C
H5v5XiSlaMWbEk+kf05Y5DSl/50Io9Tz00qh3zU5lY70nk/2xhtcos91Jn3u
s+i7OcuOadl25ObEK+XR+5ZPf+OAk7hE511AqTjkMlVGnConTlVVeEguUQ19
nmvo82yKeDWTzpva6R7RnBqnqTNnuIRV82qZPx7FotpJptgDmT7IYBDz52QM
Yj9USb+zfAZ7FWYKMYPOZa0AyV9hqDJe+FJYpjxMYYmS9jT+UodI8SUif5E6
5ofp/SHPweLLzCJWLnkhH/18XpmSj48Gf/h8yat2mhwSGZxhMXu0mEG51Y5x
HMqh95ilOZRRqjhyRqnHZBB7Ie2HrPxJNfijGTS5NJpD7IWm0Xu8obUcm9qq
saNtOur2zEBz0wy0Nc9AZ8sMdDTXoLutAt2dFejpLkFvXzF6+kPoHOD4ipli
sGWUPM9epRaDR3xZ3Z6Htn0BEV/vGAmhayRMIqYNU2w2RN6qvwj1XSHsbA1g
a5MPV9Tn4vKt+bj0Cj8Wr0rHRUvTMPeCRFSTh/bTd0VmII5iLRtSptmQkUuf
bfIVXvq+Zd6wUjOJPxk2kfZASWk2C3/iLOee4YOM88w8f2N9hRHfMINYHoNB
EqMYHJqcRHyk35dFXmgas4QYU5BL/oY4EyDuBOhcK2QG+Yg/9LwLc+nI92W7
hEGaQ+yH8tLdwiJmWjp7CzqfmXMcl+nnyEown2+cuq69C8dgHhvdZoOHGMTX
I37HRq+bYtVUFZtqNjOD+LZkC5O0P9Lvj+a0lU1WficJi5yG4i3+SMVqEq95
6W+Y7hRNIW/KbJqSSbdNVX6JmeSj9yef3zMfvTf0HRMQ7+RC0E+eIUCeifwT
M6qM2WSoPMyiGIlivWo6V2rI+zOPlFzEJIrnpp9mskh4NDMZZ81IltjLyiPF
n0ScSY9haQbVzoqOyarJn1WQPyvnmIn+jSL2M8waS7ykZDdEbAjTMUSvLxgv
x2i5osSPYe7kEpdz6XWzcug15tI5nUsxAcdYLO1zhEEVSgXEkDziio/9DF0X
kQfTYu5EPJBikJbJqXLFoKwql8kgjqk0g5gvqfT8tEzPM5FKPSaDOCZjH5RD
8fea1hJsbKd4rL0Gu9tq0binFq2ttehsnY3u1lno6apBP2mgpxL9faXo6w+j
ezCIboq1Ooc5zsonrvjRsVdxpnWvX8SX+bbWsXy0jRGnxtRjWJ2jQWJQUFjU
uY+8EXFpz2ARGnsCqOvMw47WPGysL8Da7Xm4dH0mlq32YsHFqTj7wmTUnJlI
npViM8775Nngpe/VtIw4TE5X37esFPI8KV6biOOvSB4olkFxlnMu3vREVhap
73vyP8SacfkWErNI8iX0OOaD+CFiRhYxaBr5G18OKdcl5xOrgPyaPqfkvMp1
mixSnsnih9I5vnNIjMdiDikvZBeusLQvsvJGM4O9jycx4nuEKwZz2BdGZLk9
NVopaVYmxUvuR8lglIU/Oi5LtiiJ4jZ9OYV8nZLDVJrhlziGm0xsSqO/H4v5
lE2vfxp9p7ByyTexfBTX5edGxHFdQUE8AhSPK9mVj6J4vYj8gvZOFWXKM2km
iUciHs2dMUkkHCKdMzNFeaDZStoDWWXlEDOouppzWIpBJfTZLCI/Ix6HvUrY
hvyQjbgTR0e7MEW4Qvxk5QedFrnGSbMnh9ib43chm27LLiSFWU5igs3M7TCD
2OvkGvyxMkjLyiDNIcWf+CgGmSyqIN5VKQ5llvO/Z4nJSiOx1kkZFPaYl5lZ
ygN5DAYlIYv+Div3BHF5Wxk2dUzHDoNDzW2z0d4+m2KwuejrqUV/by0Ge6sx
1FeOgf5i9A2GhEHMkU7iTyf5G2HJWND0PHxd3UbsGQuY6hoLibr3hUVdchux
aG8p2oaLiEVBNPX4sXMPcaguF+u2Z+OyDZlYemkqFi5JwfkXpmDWXIrN6D3x
BeMwheItb4biDX+36+/3ZPI9LH1uTcSghBRbzHd/JA5ReRc6hw1JDkbnpy0M
MmOiBO0B4uWcSk9XudmsbJWfzaXYS1hEHqggz6XOHVKIvufDeUqhXOWFOI7j
nBLLZ4jPxyzyRcw3/v2amUmGH2H2MIOsfkfn3SX3nhpn8ngSx6aZSpFcWYRJ
KRYx25lDKTF80u+19T1j/mglJ7lEkrcmDmmZuWzjOvtHzSf5HZPUa1Kekrlr
F6WnxYtnykwnPtFz5pguEtfFS1ynYjvilI/O9Ty7MInzTWHyE6V0LnAenOO4
GfT5n1lJsVpVAmZNTyQWkd+pIeawyBepPNAknDmH5RHNpe8+lr6uWVQzw43p
5IM4j878KS53SE6LczjBUvY5xJ+gUj75dx99d+b640U5+XSeE1vGKd8VET0u
mx7HyqT7WBnErsxCOhJjM4h1rFgGWblzKgZFyyFxm1WaQZIXqtBeyGUyyBvj
hcZ5H3rfJ4eMx1g4xAyaUpUoeekVrX6sag1hbWuZxGTb22agrn0WmjrmoLVz
Hnp7ZguHhvqmY7i/AkODpRigGKp3lDhC6qW4q4eY0y0sCQhzWF2W68yezv1B
g0MUy+0Pi/gy39+9v5h+vpQ4VEw+KSh5oybyRLtaC7ClMQ/rd+RgDXFoxao0
LFmajgsv8srngb9/CoL02eMcNHEoKdXIc6Rq3kwUf0UzyPQHlrhDeyHFIJul
HhVv1qF0Xpj9kWaQ+ADxCnb5TvdmaA65iUMeqRNNIw7lEnuYRZKf9Tkkxigq
cCPs86jYLDMizmtzbCb5avp97K84nuHfn5Jm+KJk9dzH5ZrpeZyeRn6Jzl2P
sCcek6baRcnZStacPYvjWBXLWqU8pmaRKWFWvMU/EU+IJaykZENR/HFR7OpU
0jltg0dRfore++QEJfGXMfGdNeek805pRs7Jm86xnZ1iOzovmUuSAyeP6af3
N+BGMZ0PFcVuitUSyBclSrzGTJpFPFIsIibN4BiMORNhjuaQlUEs8UPEIfZD
5dVO5YW4rlWuOFRo5I39oTj5rOYTg3z5nP+ySw5Mc4d5xJpGnw2rcgKKQVl5
8QZ/nEgnLnEtmBmUWcI1L1X3iuJPNV2uivuPDPJNd0QxiPNHOofEUvxxmV6I
OZQh7HGaDDojJu8Ty6BU8m0szhWN90IJwqAVLQFctqcY69oqsIUYtLO9Fg3k
g1q65qGrcwZ6u2eQD6oRBg0PlWNolDg0VoLe/SXoJ6/Tt59YdCCEngMhkzXM
n266rFnUZfBHM4iPbWNBg0+KQcIiuo9/bxf9G639ZdjdXoydLUFs3UUs2pCD
S1dlYeniDMy/IB1fODdN4nDO22XmKu8T+d6fOPaKViQvEjmH7VEc4u9k/uxz
TUhzSHNHM4hv0wzSsQrzIY3iiXTiyJSpxCKDQ+yJsskT8bkxzUefAfre5pis
xO8RDrEXklx1tgfhnASTRZpB2VxrIk/Ev1sxyJpPjngg8ShpdpM/iaxMxZ/E
nIisOTRhD93PSjfkzTY0lc5veh1pmU4RX+c8XAr5ElGaljOaQzH88bhVXOtJ
cEp9TXsjVWOL/Ewy+yXpDXDR9wD9bIJbHs8/Z+V+5OecUXEiMzONmKTzTNOy
HZJjUsx30PtNsVPQLbmjKorXZnCcVkExWqWK01T9bXwcpsW5IWt+qHqmW/LT
1TMTUE5MKq50CYNKyQsVEyeCFJf5QydnkObQyRgkHKKYjBnE/PGS58ggDmTT
782h359bGu2Bcqs5xoowKE/44hDmTKRYBrF0TjvCIeWFmD9nFDmEQRmlnigO
xTLIW5QgPsjKIM0f9kHMoEva/FhOfuNiOs9XtpZgLXFoY3s1dnbUoK6zFnt6
56GdvFBv3ywMDk7HyDBxaKQUg/uKMXSgFEPEmcEDQfQf8KOP1HMgnzjiF/4w
T5g9zKbeg3TZZFTI4oeCoq6D/Dj1WP45jtM4b9TWE0JTux/1ewLYXufHuk05
WL0uF5esyMT8Bck4b94k+d4qpb8Pe3I+Jzkm4Xp0QrKl7kXnpSfZJr4gkT6f
p9M56SIOec4g3+CNk3NU9w5JjGPEFDq3YuZ9jX4ZLeaQ6YH4Z4ycieQ20p1y
3rLSiSuZxJ8s8kHZvoj4vJD8a2685Kk5JivJd6Mk1yM9RFzb57q91O6NuIxz
3vKd73WOi5GscRJf1vzh+IsZpDgUJ0rMtMntKVO5nkjHbKOfYRrxKMcm/VXp
9LhMuo8Zz0rP5hycup1r7sxWb4bTzMWZ/sx4Lvr9TzLy1ZF4THGJewtML5Tg
jHpv3ZZ8m7DLrAe4TOnH6NoA58rU94bySV6vy5DRuzTVKd8B4kX9nON2iT/i
WK2M/BH3LHG8Nr3Kg5rpCcQVj3ClZlaSRR6LkjC9NlEep8U9TpKfLotXvTuh
eOFPgeSCyGMY+R1hS65dfRflKw5pz5NOjMogVrHY97A4BmP+pBKXWGcQh6YS
PzPCdlE2/XuROnyc8Ii5UzDdKdK8yashxlD8qHLP9gn8ULzxOFXbl9yQZlB5
pC6WQT5S56ZTJ8pB03uaQ/zJDLuFVZkUC08tou/hkgR6fopBGSRm0MV78oRB
l7QU4VKKydgPbWqvxLbOGtR3zEBT1wx09c3GwOAsjIzMxOjeKgzvL8fwQRIx
Y4g0QAzpJ/UdChBvFFO6hCdB4UpPjE/S8dipGNS1l35muByd/SVo7y0nFpVg
Z10IW7YFcMX6AqxamYmlC9Nx0bkpwiH22VxXkXMv0QZXos3MyXLcxXKT9znt
DCVnKjNJyRPLICO/YeZ3OQecoOpQql/PGfX9HcsgPg/lfEznWEd5iCnkGxSH
nCaD2A8Jg4y4TDOoiOIy9kKRmMwtssZkfE7xd33k/I83YyZ9WeIvUYRDOhZj
DnEcxj6I+aNkk94qzSHhDynLp6RZNCXbLgyakuMyapLOiNJVrMjSuSIVPzmj
fJFmkH4/dV+k5o/mi9tSj1RymtK1SpNVRq0wISFOeKTjt+jepXjljXJdKsed
o+oEikeqD6A0rHLZ0q9Enob7J5k1mjnMJStzyqtdUWIGcW6otNSB4mKn5McL
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
mGyRkU/WiuR1Cs24jLWwzj+OQZo7VmnuaC3YrW5bRj/DHFrHexkSh3YTGxr6
y9A5VIn+vbzmB7MngDHiEIsZNHrEJ15o5KgfQ8eIP0fz0Xcs3+yv5l7Gob1h
mWdln6Nq9uXEnjKDP4pD/RSf9fUSf/qDsh4//3vdo4pDzb0FqO/0EYemkh/K
EA4tWZ2CCy724MwFTsw463RU0N9BOFSi1mBgDmkG6bo7c0jLmpNmf1NJ5yV7
o6pQMsVcXlSGp6C8OJ2UhqJAihzV/hoOhCn+4nVdeRY+PycFviyKayge8E1J
Rjbnfegc5j0m1q1ejr+//x7eeO11TElPjqyJk5Zo5EBcUhPj3LPO83I+l+OQ
2toaYdCr9LPWtTLMXIllZorjsUjsEVkfmznE4rkE9kYsjtNy/Ykivsxi/8js
yc6j15GXKP3XMjvM66m44rCt/S5875aPcN2x93DtwJu4qv0EjnU9jSt7X8JQ
y8vYtupudG16Etf2vY1jfW9h355XcKjjDYy2PI/GTQ9i98bj2LPzBVw5+k+0
1R+nv0szxWgpcJ6u1s+cwp6C6+oUhyUSR1zCIuJIsgdTT0uL7g9KMbwOx22G
99H8kfx8lupX4JkMfu1c32PfI+zxG72Ykv+1KKR4JHOouk/6JAxKNNdeiHBI
9n0z1jWQtWX0epcWFp2sj1r3LUYxyOAQx2Pm/HGZmqu3Mihf6vMekzk6FzTO
C2kOVan8kuyJWKX2c46aHzsFgxZyDke4o8TX1W2FUfyxMsgae/0nBs3f5RcO
LdxFP0v3ryCuXU4c2tRZjO29FWjpm46O4XL0HwhLfX7fUWLRsbBwR/sgvjxy
Ffmhq/KEQ4pHqo4/eIAu7wsaHCpVueluVTNTKhaPxAxiHzQ4EsbgPl6LX+0N
wnsTtQ3koaErV3FoJ/mhjWlYvHoSLlp+Gs66KBG155yO8hkOtZ9uOF5m8GXP
mKBHeg3F03BdjHxOZTC6PlYZpNisZLL0IP7vj7+Pl59/Fk89+jC+eu1hvP/X
V4kE/8b7776Nr1xzFIW+ZOlZzEq3yfzpPXf/GvjsE3rMv/Dan1+gxxwRr9PS
sg2ffPIhPvv3Z8Dn9JB/f4K33npF/NDcOTV46slH6fZP6ec+kdzPrbfeLP4n
wcirzplTi88++wyvvfZa1NqqUflaPU+eEpmNSjNm4azr6/DcP68pLWv2U6yW
S6yJEnmnadleTJuWBW9OssQtvG6Tk/690sozsW/wBK7e/wpG257BWPMJHN7z
Mga3PYWx+hP4xt4P8K39f0HH5sfRuuFxHGl7AYdbT2Cg7kXsXv0EerYfx76O
E+hpeBhNW+7DcNdr6Gh8F1esfhJLFn6TeFNLMRrFopOcEpOlpaWpWhbnvtzE
FOJ1VL+QwSDmDiuqPmjhj7X/J8NSA5d1SksiyrasJ8A9O8KD/PgIgzKc0XFY
1BowkT0KZC7aG2+u88Rz1SpHZPTxW2bKYnsZT80gOpaptYByqvSa9krcrxis
9RgsOjWDpG/aYJDuz+CeRZ4dszIolkOaQQt2+0zuTCTJN1sZU29VeByHrAzi
y/N35RsiFu2k30e3rWwKYm17CTZ2l0ueunmwDF3MBZ6zPxKW+tgwcWboaI7M
dIwSl5hBw8eIQcd8wiFmkIhz1sSh/r10mTjU3xdUvqc7JOrvKpLrIorHZB0i
8kC8Jj+zi2O67r1+7BnwYXdnNra1ZGP9LvJDm1LID52GCy9OxtkXnY4Z8xwo
mx6PcIlan1yvY8W9z8yNcuJNWTBRya/yysyf8sJkVFHsdcePv4PP/vUhIecz
/P2Df+DHt38fYfJAzS31ePfdd/HpJ//ChstXSX8hz3e8+cYLuP0HNyOdYpaV
K5birTffwL//9THxZ5fKb9DtH330EV555RW5rGYwnHjt9T/jnXfexqzZ0yW2
ePrpp4VDg4P9wiBm0dy5c+S2V1999T8ySM23GrUfnjlNj6z1pc9LM07j9WWz
3JI7ys1NEvn4ss8j54wrwwYnnUP2SQ5igxvF0y9A+84/4kDf8zgy+Cr2bH0I
O1ffg20rfovubY/iK0Nv4nDTCXRuPYGdlz6FltUPoeOKB7FnyzPEoKcwvOtp
fG30SXzryucx2vEg1iz/Ea5YSz9LXqp+x1PYtP5BfGHht5CWtVDqapkU13g9
5I3+ZzJxZQpcKbao2rzO+Zi9z7x2UKbqIZDXxmuz+VwmezILXePyXznGGgK6
Psi3cV08mkHOcQzSa6lY1+S0Su8ZpedoIhyKrHmp54ys8626bzqWQSxmkJo5
VWtxWBmkOWTtnQ7EzG1E1ciqVTym+sQUg/TaHLpv+gxjDw5rnUwxqEB0SgbV
F5jeh/2QenxQGHQyH6TzQeqxxtFgE+eyuXbP6xFt6SrBjt4iNA0VoZ29yQHy
MUeKhS9DV03D3mPFwiDth5hNWhKTCYfyyQ/lUVxGnmiIrvcGDAYVoa8zZPKo
t4f4NBjAIPkf4c8+ejzFc71jap/GlgGKy7rzsH1PDjYQhy7dmCz5oQXLNYfU
HlK8T4teD2/8HIZbcso8b8Es4plT9kBF5JMOHRySGOjRhx9BwJ8mfspHHLr+
hm9Ineree+5Gfn4abv/hd/Haqy8RAyZLfw+z4dvf/rY85p57f2ecKx58+M8P
iEEvynWu/fB3/N/+9i4eeeQhyX8wc27/4Y/k544ePaLWtjDyQZ999u8oBk00
w6kZJLXotMicqd67mWtmk41+Rj2LyuJzlvPYnEualG2DPZnYkzYZqXllSM2d
Re/lVmzYsA9XbDiMK9bcgfot96N1+5No3fIUsYeZ87x4nZGm59C/7W70bn0K
ezYdR8OGB9G85WE0b34APbv/iB3Lf4yBHY9hpP4ptG97hO57DJvW/Am7Nj6M
9rrjaNz6KL50NbBr993ExQuk9sZxWVZmunpdk5OiavM6BtO8Fa9n8sejeiv9
LmMdAUMT1ATNPk3OjZSq3hzOywsL/Kp2ZjLI3H8kLopBUp+cFNmPJNHYw0nW
idHrXsostU3WN4hdA8Q6Sz+OQaYXcht55GgGxa63GMug/JjaPV8v4Dp9hZrT
4dfPDGYGyZoe3DtN10/FIBVrjefPIs0f3Y9IjOHHs6fRDFpSXyRaXBcWLdod
lLiLj3JZfpeK5SQ/RF5oIXmvi+n3Lm8sxIb2ADZ2FmBHn1841DFWjr6DpapP
8Wof9l1TjpFjYZnlkNzQMQuLeC2iq4IqPjuSh5GD+Rjemyf1Mo6/+o28kPQz
GvFY34CqqQ3vIxaNUTy31yfxXN8B3nda7Tld3xXA9uZcXLE7E6s2ZAiHuF52
1gWTMH3OabJfAsdkzCHZD92n5t5DPr2vvJrrKjLWAuI90nlGvqFps/iPxx57
BAV++qzmc60oDnPPKVcx2Xvvynn73LOPUCz1LxVn4Z9y37857pI88ktISnXL
3kUff/oh+Z6Xpf7OvkStzUHcSPTgsstW4Zd3/pxY87n83K233iq3M4fYBykG
cX+Q5+QcsuybavYOWfZpZiVb1q/QsYv0P6e5ZH/IuNRpOGtBJzZuuxP1Dc9g
186nKf76C64Z+wcGGl8XTuxYexcaNv4e9evvw+Yld6Px0gfRSzzpXP8nHO0n
X7PlXjSt/wNWLPsN5l/wO6ye/wtcPfAUtq/8JbYu+S36dz2Hyxf8HttXP4Zt
lz+KtUt/j86dj6J5w+/R3/4YDu59HVu2/gmFFV2wuRLgOsMmfVRTPV55nbo3
Ucdf1pgzMztRebwclfPieiDn2lVPgsvsB5fLFR6TP3pNCyuDpF854IxiUGQv
7fjoPbMteyGN45A3sheBWgcrzpitjszZ/78xyC3rcMT6IFbA2jNUE80g3Udd
UOOJZhCxeKrBG80grtd7yxIia9sXqXlVyUkbrLDW1a09PovqfIYUOyK5nkKD
Nf4oWeOwWE8k13f7ovqIVraU4dLWEqwjVmwdKMbu0SCax4LoOVRKzKkgDgUM
zqi+xaGrKFbjI8djRs5aJLOvfrXX2WhI1vxQs/b0u3r9JF7/I6Bm8IeYQ37x
QbwnyNABYhbxq/9QHrr356FlcBrqOnKxoyVH4jKZ7bg0AxcsTsPc8wwOVbrE
BxX44pBL3/VqL3SXrDevJev5yL6GvMdqgsRRnNt59JEH4CtINvqPVUzz0cf/
wHvvvUfnbop4mxPPPy35Y/7M8f5Eet2xFKPfkPMX//zwb8SRP0sNR885MF9O
nDhB8d1f8Itf3iHs+fzzz/ADiuu4Hs056rnzauW2iWIxLd2fl5aQBK/sWRin
zpc0xSPOSyWRv/Gm2NSaXnROcJ2d81jcK2B3eejzuACN2+/C0aG/4Kr+v2B/
wys42PwchsjDDNadQN/OlzFU9zJaNx8nH/M42rY9g4u/eCdx5lbiyb0Y3f0C
1l1yNy4850Ysn/9zjLU/ii9f8w5WXvobzDr/B1i99FfY+MV7sPK83+HiRb/H
1ovvRueO32LD+XeivflVXLTg51i77KdYu+ZnWL/5D2jqOIHC8nbEOem1SV8S
xYjeBOKnYg+zUzHUbaz7bZe1ESTnHlA5Zjl39bptpWqvLD7n1LmnakNyLnJM
Uq7Oc/4Z5g/X6iVuynaaa9rp/Ves6wOPX9NAz6w4LDGZMVus91PhNQ5y1FpN
Zl7Ibx9XGzP3tShSPk5ix1IjPx0zzyo1d2O+Pna2PjJj7zH9kblnkGUdF+ZP
7BpnXCvTeyPyWlMLdvoN5Ue0K9fCigiDhEMxDLLmn63SeaJYRpksM8SP4fmO
1R0l2NhbQhwKoWGY96kPU4xVofqlj6qYi2Mv5s/I1UEjP6S8EfNImGTkhvr2
Uiw2GDDWHQoIf0T9ai0ivq9/OCA5JN4fjX1Q/4E8YRDP7Xfsy0dzfx7qunzY
0uQ16mWZWLwqHecvSsa885NRc6ba876gQO11znufc68y19BZPDcxzdhXj/d6
5l7ChoZt4m+efOIR+X7lz47K5ybinx/9Hc899yy86cnCn3/842/CE71eI9fW
Va+PQ76zmQ8f08+wl1H1LhfOOnsWsecdYUtycqLMVt12223ivW666XsyF8a5
I66LaQZF5hjcE65lkcb160SHMDAlzeirod8ts1VJas7Cy7FMcpLEaDzvarPH
IxRchr1Dz+DKwReJN0+hc9P96Fz3GAYp1urb/CS6NhxHz1aKo654HAMb/4T6
FX/AjpV3Y9uye8j/PIVtS35G1/8Xo30vYMdlT2DmjOvQQTHXs3/+BG/+A9g3
/BJKz7wVXzj7u1h0wc3YvPIh7FjzGPZs+yNx52E0bH0SP/rJW1i59HosOedm
DDQfx8HhF9G55xWcOfso7HHkhcinZaUlwzspGYXTCjA5MUG8H+8HlZpDXi5v
slqTLN9l5n4k70PnlsRdhnzSE56g2FOl+mViGaTWMFFrofw3DIpdPyCaQQ6z
j0jvWWBdg1fHY96YNc+iOGTmhDwWBqk9EtX69y6TQbE5of8XBpkzrFH8id7z
8Ivb80Xzd/hEX9yea17WcZP2LNrXyO3/BYNOKguH5hPvOOZjDnF+aAP5oW3k
XRpHQsKhoSPlai3GoypPPXJVfoQ/xCaVu86XeEzWZuS9XokhasbVLwzq7guK
FIPU3EbPELGJ/RD3Ge3Plxl9XteRfwev68gc2jOUh91dXmxrzpA+Rpm5X5mq
5jrO9cjevlyn5/0wZK1EnpOY7JJZCZY31S5rm/F6zlOIT22tjcKD48efIi6l
GHMKblz9pcMUdn2KW2/7nsQDt952I13/l/QQHj12WHI4XE+eTOzh+Ip5wbMJ
H/3z73jjjTeECzyHoXqgQdy5nbxSgtx2yy23yG23336bzIfx3slnnTVXckTa
B/HjNIN4fixqVtPSGyznA8VuKUnJdB/32LAns0nuiXsAkyjOi3PYyGtcjuGu
V3DdvvdwuPU1DO3gvM5j6Nr4KHo2P4b29Q+i7pL7iTv3YOvKe7D54t9j2/L7
sGv1w+jY8Qy2b7gf5134Q1TO/g4O9r2MO+74HJvWPQj7zK+gb9uf8Je/AHf+
4X0s23Yc5Wd/HYGqr2PLygfxq18AN3zjPawmhg10PYzjj36K6699EefWfhmH
hl9BV8sTaNn5AEZ6nsD6y4+KH7LT87U5bdLjyOx0TcpGSkYQqdPyKa7xqt6D
gFoHSfOHxczJq0o2jkavsNGvx3EJH5lBujZmZZCs92/MqOg9ac09NZMcUeyx
ztLofeyse1qnxHBI1coiHNL9Q+M4FLbm060Mcpgz9eq16Lz0eP6cjEGRNT0U
fzLLPBH2FKk9NZg/IvJkzJxYaQYJh7QnsvDH5NMpGKQ5dFI2aQ7VqboZ54t4
VvYy3r+jtww7OC8zUoTe/Vy3L5W9glQuOk+k6vNBOereIe5hlDlXWf8sH11D
dLmfGeQ3GcTqYg0ESPnKM+1X64T0HvLRz09Dz5E8mZPt2OdDy1AW6rumYkvD
VFy+Vc25fnHZJJzNNfu5p6GkMlnWL+e5KmaNdZ9hnpvQe+lxr05Lc73UxPk/
ntli/7N6zQpiwYt47sRxS83JLfUtzgexX2FusTiHc/Mt35M1jjl2evfdt/DW
W28Jn371659jYLBHfv9zzz1P/14i6ht24plnnpF/7wc/uJXYdAvxxoljx66U
2z788EPMmTUdU9JTjHmreDMOk15jS72ae63ZbzEH+d/nx6UZc/Z8HvHMhM1m
x6LFbRgbOIFr9v4FvdueQPcVD2Jwx+NSz9pJPqfh8vvRtPaP2HHJn7DzYrrt
sgewfhldvuyPaLn0cfRtOY6bbngXR7/2BmovugM5s6/Cz258Dfcf/xzTL/op
/s+cb6Jx8X0Ybn8G99JbdMudb6Dk/FtQWXs1br/1TXz/hheIS7dhVx39u013
4evXPUyx2/dw+8/o+Qw/hHPP/SG2bX8c7d1voeycr8KVeg5Cc6/AzBXtWN93
E77+k+fx07teQEXVTPJ2Nsn/SA8m94KXG+uS0PmVV5UI//RkFFQnCHOU1Pkq
DCImxTKI12HimtqpGeSakEHWmT69l6YZl2kWWfZnEg7FeKJ069zGOAapNcKZ
QSy9Hgu/Jv26Jl7v7OQMUvWxBGHQVPE9ikGZxp4/7IH4aPU/SvlRivAmwh/N
KX37qXyQ9kvWx0blhwwGfXEnz5sV45LmEqzmtRl7irG5L4RmXouM91o9GFbM
kT4hVkjlhY5F9y+Kj+G8zli+4hBxprPfL+rS/DEZRPEaxWSKQ/RzB3wGh5Qn
0nFZC8Vlu9vysLEuB6s3p2PZmnQsWJaOL1yYhpo5KQiXumWt/BSv2hNRz2hJ
rSPRZqwl5kZd/Q4wgp566ikcf/oJosDHkh+65967ZH5T1qRmT02fzXO/MBcP
PfQIPf5fwp+3335LvAzniFxOu3Dg9tuVx2EW1dVvF790//33m3no237wfTQ3
Nxv55z+jqbmOPNZNwjW+jb0Qx4YN9TtlxlPngLQX4s8999bo84F79TjXzN6H
GcuxV7I3DXabjf5tFxavvAqH9r2NQ62PYV/dH7F73X1ovPQetG34A1rW30+e
5y5csfx3uHzJ77Bq/i+waeXvsHXJnWjYeC92bCAftPY+bFlxN6675lU8+Rzw
ndtfR/z0a1Az69v4x0cf48nj/0TZkjvgKR7A2NgTwui/0/vZcvhl2Mt60NP4
OB564GP0H3wYi9f9Br//+T/wv/e9hbb+P+JHP3sJt/7kRew9dhzHvvsivnvH
X3Hrr/6Kb//6Pfzw3g/x+8f/jUdOfIb3PgQefupFnJaRDNdUh+r/Dqu6u8Rb
xhpJzBj/dOJQjUdkPU91flblq6MZxOsrSiyWoXLfek+WkzEoNk8Xta+4sCiy
Z5Na3zwSl3F+yMqgKA6ZawsZuekyLcUita5HhEFWFum4TMVm7igGSa+QhUHZ
FYnCoYkYpGVl0IXbfBMoJ8obTeSXonJJBmsi+aBgFIdiuaXrbNI/tCsstTae
dV3VGpJ9hLhu3zBcjPb9xKHDJeg/Go7khY4ZfUQWqZjMr9bK358nXqhjwEfK
i3CI2MNrEfHsmMRrBodk3UbiUL+xriOvZ8R7DnVynrw3IPNlG+unYs0WrpVl
YP6SNMw7PwXV3E9aFC85Zs7LMoc8vEf9JLvUjvi85c8L+xL+74EHHiDmJKv9
6Lne7XUbaxI7kJCqevM9k3jPhhTJD+n1DlUfEOeDkoy4ySkxkawHmKL8C+8l
wXOZvK+WMMTtMh/Da4DxY9S6OhxvJco8OTONYzGr/9GxGPse5p6sp5PC+Sib
fNbTs+i50Plhs5EPKF2AltZf4prDb+FLA2/jSMdLONZ7HAfbj6N1HfmbtXdj
qP4pDLY8hu1rf401y36JZQt+imWLfoN+esz3v/J3DO95Bl9ccAfOWfwLLL70
l/j1nX/jciDuvOcD2OZ8Bdd2/Ubc4I//9Dpslfvxs+++hM8/+1Q4dPTGV2Gr
OozW7cfxzJOf4xd3vY8rb3wUP/nRCTz2/Lt45V3gyec/wrOvvY8X3voAj734
AZ5580O8/P7H+OAj4LV3P8WLb3+GJ//8Id6m62NXfQm2eBt8fo/whz2QrEPC
7DHWq2D/wwwKzEwwOKQZ5DE8kNErVBq9lqSs4cZrLaYb+/CeikGJnnEMsq4h
Ir7I4ofYU0028tSRveJUzSy2bq/XfdV+iJ+nym8p/6YZpHLTEcWu/2q+bus6
r9V6PbtE5FQlmV7oZAyyehsrey7Ymm9I3a580cTxmpVD4/1RYZRiecX5cN1L
rXuVmF/LG4O4rKUEm3qIQwMlaBwtQ+tYOboPlsj69zxDZu0XEgYZHonzRLJG
9UHyNnvJEw0TfwbzTA4JizSHKFbjefruwXzpVeReIY7N+g8EMXAgJDzjNfaZ
Qy0U0+1qyyY/xL1DaViyKgUXLkrBvPM8qKbvA54n43Vek43ZH4+xHyv3D3JM
09i0Wxj0yCMPqH2QM1SdNTM3wZyX5npNEomvM4e474c/oypXqdbvYk7oPbk4
l8O1ZZ4X53oZf0b1njZ6HUG+HG9Xs+M8W675pde4UGuaeqL2+YrUxtzyO/jf
0LFlEsVftrh42OxpWHZxG668+s+46up3cLTvGXx95DWKgZ7Gns0P4nAT+aHG
J9C37Y8YrT+Obx96G18/+Aa+fPht7Bt+FkuX/BRLLvwZNq+/D3WbHkNP/bO4
4Xuvo2PwAaxadAce/+Xrwph7HiQOVY3ipq/cK53f3YMPoWDGVTj+MFHpX5/i
kZf+DmfRANZcegseuPcD/OCnr+DmXz2Fg1fdi+tveAS/vv8V3PvEW3j0pTfx
5jvA3whvb73/CR5/4V18/9YHcde9r+IPD7yFJ5/9AH/9B3DF1h2wOWzI9aeY
PUAqDlNrVeSZsZfb8EDuiB8iNrFf0jUzUdhtrKltrEuu92JJjeR2Ij0Q/wWD
EiLrJ1l7GLUnMjnEvYzZNpND5v5BxpqMVg6JFypNNDkUmWWN5KatDFJ+z+KN
zDXOohmURfEqeyE9N5ZZ4jZYFGFQdIyl4i/FoQKTQZpDikUn90AT+6QC4czJ
c9hhg0P50rO9wMg9XVxXhBUNJVjTFZS4bNug4pD4oYNBmaUfOZYfzaGr8zGs
a2ZGrV7qZPs4N6S8UEefT9bv4GMnxVics+7qVdclf7SP1ykKii/ifabN/YeI
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
1ogOevPhPSa4dib/q6kwqMdEE/SYpE+c+qKFKnNI5u0Tf7ieaJB9c2GQkpuv
3EtWHhuyV3pteQaj7LT3Ik0yp5HMguV5Hy5+DYlDDUgPNRAG+QT9DB9/Y/gs
UPYA8UxX5hD7Y1yrKDMWXU3g7GpMRvwhFtmXc2iquz4muuvC1oM5VK6FfBtW
cMiG552RT2btYg4reyMMm6Yvfa0DRtDn7KuHDp100KJ1bTQyp2PdqJr4ZBrk
N3Dt8oZ1Z5CRDJw+WoTDuwslN3983zPyuV5ihV+CaKED2wtJy8Riydxo8sdy
iEOPsSYwAQvd7mFLUDaWeSdiltUVLHGNx86l+dixPBfek29jjl2IXOf40Mag
HKwNSsXWDUlIoD+1vf0cqFetUT7XrJb4NDw/iBnE/pmpptLbyvUl/D7PnjuN
N2/eIC6Nfj67FJkPHotGyS14LAzKzyN9XER+08PXePjwlTAoP+czYsPJ9zpS
hqPbnuDqyb9w8dg7HNz6UGoNDuzIwM3LpH9i6PUy2IqQma0wKDO7TPL+BSUP
ZS7Rvcg4qddm34BjPpz34R2y7H/IDkfSGab1NKWGp/43XOHcGD9WeTbJtxz6
Yb34PzCI2aJikHElBn2b66/sk/0nDPp2XtG3HKo8/0hVk83G/NGtNBOfGaTS
QbyvU9FCVWTOWeWdHMIgrp3+pbbk60UHVVeX2qSKmu3qVaVPjXWyecM6aNVe
D517kkYY2hZ3wi9h38EtePSkUKLORU8fYs+5ZeQrtMMoF1NiTDucun4IZe/e
io/2F/3LyIrCvBUzpcbRhvy5FD4QiDc3gs/h9Z8f8RddLyorwu4zGzDGs7PM
PrNy7ob7yfdEU3H90BV67or1AfSar+X/XrLCD5dvnFP6CYVyf9Jjb7B4jRd6
jrNAv8mNSRPpSI+ZxIfK9ZCKRTIvrbx/o7+9RSVTtJFiPKuRHp9lqswpmqXU
PPJsfO6tGz+nISb5KTOpHf2JRYGmcF9CWmgJ+WR06UNc8ppvAs+5BnD3JSNt
w31jru7mpIEakAZqAGcPc+GQIzHJgWymawNMcSP9Q/qI64KYO+yDKTqILsUv
4xibOUbPNsSIGTqwtNZD/xE/ofcQDXTr+xPa/FZL9tjzjiDJU5Ae4n0Y7dsO
QUryB1y//IqOyULs3VSA/ZvzcWr/E2xfnYOlC+JxYGsx6YYCrF2SQBy6j4Pb
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
36JCD7Ff5hHUQOZ+eAXwbjFjeBCH3Ofwrg1l54aLp5FcshZiTTTLzVji03Z0
ezIxihlkW8EfY4ypZGOJV+NdFRvN54EpBpIj6z+irvSTdeqhg1a/adHfS0MY
xN8Jrp3lHNmBvVeQnQrSOFnku7zFznUPsGJhOnauKYW/ZyL5UcnYs75YcmH+
3tE4tqdEfLX5xBWPiSFwHXcL8+zCsdI7ifyvLKz3y4bL+OuYPeYqgtwSyR+L
JM0UjoNbimQu7F3ykRbM2UUMUpe4D8couJ+Te+X5+8saiL9/VatXw7Xg23hQ
+kx2rjKD4pNzkJici4IHzyQPlk/syScN9KCgDKUP/0BxATEo6RMirn/EoU2P
cXTrS4ScBw5vLyENlIZNy7NkRltMRAkSE/ORlFSg+GHZJQqD8lgPlSAjrxhP
3/yBxNQM1KtXT+qA+H1yDIu1UOX5P8xNFYMq+2T/jj3fq2H8Xp69cm+qKs9l
UL67TXwsTdWeJIUzqvvFn9X+wqBvOVRZC1Wwpfwx1kris2nVlEvV7lyVfcsg
1Z7oCr9L74v9iEGshTgexP0bOg1rCId4zplqniv//RXto/BH4ZHSq8barJ42
zywmv0yT9Cnpet5H3LqjBjoP0EWPEQYYYGOAIVONMGyWscxd5Plno3lGtfvP
GEXH0WhvI5kL6xY4BB8+P8Wnz8qIqA94i+DoGxju3ZT401SZvcg9+94WMgvE
kq4P9WotO6W5Rof328t8DTr2uYa7P891JT+kz7RWxJXm6GJtJn2sfaeSTppk
Lr5aL+KRij8q435Xzt8rPbHG0ovPc0GYazyL8YspeXxlt5BZRQ2j1A3Naiw9
vlw3xbMGxnmRHprTXOYOqTjkGGCssIjM07++7PRxm2cAN1+Dcg4pDJKZHvQ7
cyAO2UueXmHQxHItxPxhY/1TwSHy21gHiRYiTTZyhhGGTGKfTJe0kC669dNB
u65aaP6rBiyaa8HIpLbU33A/e+tWPZAY+5z0TQl2rH2Ak/tfYV1gNlYTS/as
eYwA9wTiTTg2Lc3G8gWppIUSsX9zMRa7RsNx3HU4jb0Bn6n3sG5uBrYuzsEm
/xw4jr5Cdg3r5mdh/qwohUFbH2KlXzQO7Cggfy6JjmlzifPy7lXurZVjm86j
rIn4fY21tkFOQRFik7OQnFmIlOwi8pUeSuw4r+AJih6UoYB8MtZCBXlleJD/
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
o3ofxSLnSOwIysEG+rlJQ07DdcItrJ2XIf1krhOvIcg7RuYNbVuXhiN7C3D+
VBYambYVBkkMs3yuDseiJ0+dgqKSJ9KvHpmYSYx4gPRc9sWKkJVdiCy6zToo
j2PTD94QO98iI/4jIm+9wlHSahvnF+DU1rc4ueMpNgZmYPm8dOxcl4GQ6w8Q
E5lNOihLXiM7lzRQlsKdmJQs8vuIRalZeP7+A85fuyFz+TXou8113azVNNnv
+A6DdMpNtzw29C2HKrPon3LzX2mO78SPNcoZVPEc1kaquLGuwhgVg1R5+sox
o+8xqLIfxjGmHzFIargqzSMxkPhdTdTXry317Wwq/vyQQcZfM0gVE5J6xfJe
1sq9an/rFZHbNSr6Sr6u164qZmZeCy1a81yt+ug5lHyacY0xYBJxaGZjOl5a
YIR3I9I/5pKHH+vN+XklTjScNMAwuk/m5HN/voeFxIKYWdZu7fD7tf1S+xOR
cJNepxOGe7XBEFdilDv5TK4W4pdZ2jdW8ut2xCG7lqJlekzTRY+p3D/fmHRR
U/w2VdFHvUkjdLXWR6dJxsIn7sUfNJaYNfkndLT9LzQfWwVNraugzRQDdJjR
Gb0chqKnQz9iWidiXDfiU3OJJXEcvO/0ZpL770bc6jdTBz2d1dDHVR2WzsYY
72VKfpkFJvvqw967DWYu1ldiQ4tJCy0k7sxvCCffn+HhZwqnOeZw5l0/Xkai
hdgnkx4yT6VW0dr9Z8nRW3NMiNgz1vnnCj+MdzRazSYuOZoq5mAMy+nkj03S
p/OBHnpY6knMrk03DdnJ0fJXHemt5/MW1+ZwzVC7XzsiKe4PRN37SLohHyvm
52DNwmwEuXOtTwxpm1vwn50Kz5kRWDwvETs3PUSQVxImDzwPr8l3sJKO9WU+
KZhhdZkYFEwMysSM4RdJF13AluWZkv9fExCDk4cLEXHnHXp0Gy1z6yW2ynVt
5TNGVq1eJ3U6UfEpiCMGpWY+IM3yiPywR6SByFcibjCDColBhfnPUZTzB7Ji
/8TtM8+wmfizf8VjnN/9BgfXFGLTokysmBOHs4eJM2E5xJ9cxMVmIT1TiS9x
vCkiLo3+n2wkk2/GsSDOhwUuW6nUKPG+M9nZWKe8PrrWV8etKpaius26oJ5O
DZmfXZErK9c2fKkyvs39HlyfWY/O5bLnUVuXtJce+Xxa0KxbW5iszH1V9sRJ
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
i1X2mXAfFIqNs3OxxaMYgZNTMI/00ejOZzG0+wnyq/7CRu9CuZ/9sEnDQshf
2QWrwZdw7chLXLmSjTuhpI2jXmHO1BCokf/hMjkGyel/4s2Ltyh7+QrFTz7J
3j+1X5djx54cnDgcg8DVGch6/Acy8p/j6ZtPyC58iZz8D4iIL4Cj03ncuZ2H
wKVnSRdk0sd4C595e3D891gk0HETsPyIPD8msQB7jx6G2+KemB1gAJ9V7eAa
+BtcAtrCwa8l7OZZyH5onvUx2sWAfnc6GOpQF4Ps9NB/ip7MDeg5RhddR9B3
YjB9l/pooXlXDbToWEM0Mc+DatRIW/rIlPyzLkzrm0ierL6hmfhk3Pd+cGc2
Lp4oRWossGsdac+1d7E86CZaN/bAgDYBGNlpNXq3WYQOTT3garsLt88+h8+s
DejTsRN6d2mHvdsP4eL5G7h46SrOXQjGtfN3cP7oLfJJQhByLQZht+MRGZKC
pJAixJ4rxqVNuTjsl4blE8OxePRd7HQjv3lGGBz7nyAtew6bfO7i/N4whF6O
RNidFNy7l4zgUGJZFPedEXviU3E3OhFh0UnihxUUl6JP3/4SB2L/S2YX8q4z
XW3REvWNtVGtWjWoqxtg0vjFuH0T5Cv+Kfks3nm93CcGixyjsT0gGzvoe8Z7
jlZ6p8isbY/JIdgSmIedK4plxu3mgHxs8s+X+w6se4ztSx9gpW8GNiwqwI6l
D7FjeTH2b3yOrcuLsGZRFtYHZuPI9me4dPwtju4pwPXzZQi59QyZuX/hLO8G
oPNBPWM1tGxZH81/MVTY0UwHFk206e+niYbNNdG4RR0xrr3gfgXunWpBpuJI
u3ZaaNNeC21/Iw3SUQvtu+h8ZR276aBTd12xzj30ZC4wW+deul+sO93XrS46
dtUSvnQl69ZFDz06E1e66qFvT3307aOP/v30MWCQPgbSeW+gpSEGDzfA0JEG
sBxjgOHj6Ds63lDs/w8G/buYdEVcqJZizCDuL+OePM4x6Ohy7r6mzNpq14s4
OqQuuo/WIZ/CVPLOY5zropdrNTis24j9Z+jcsSkDe5bT32rlAxxenYnTa57j
zpls4tBHfCQ9sW9tIXYufokD/o+x0eEhXIdHYr1bIQ4HPsdG1xx4kg82q+dV
zBkRiQWj47Fscg7WuhfAeghxqOcBjB94DjOH3ob3mAQsmpgB5/ExaNvnBEy7
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
IOt6XA/fJtj8IZE2Ler96hHWjwk2ayFAvx6/ww+FKc2EmXTgZ9gh7eRt/A49
4P27n9T5F5Ocm7BYU06gTi+her04bWnCbVsziWY9XIgBx8P32b74itQpYZPF
M/asKUFzTiZ/mp7EyOnJzJtXwtaVRQzWTMUjoFPtb1JuwHjc+Yqj+8+wZslJ
cpN66X32o/rY7RuPSctqxMoml3//y24+G3wII5Msrl6uRmvObtwc4+X5z+l5
Vk5Xxw3aW67yoOoCNlbaBPubU//wOumJwZgcX0fpuQSK8pPVPhgTSyOu3yoi
Lj6a4uLLPHrcLplNPJT4lqb6VmqEIQ3VXTTWPKKxvp3m5taB+ZiVNdpbutT5
mZta5LHmTnUO+cqqeqnv1VRI+aC2RdW96kbuVtVy594DKZV5CBvVa03Xyu+L
t6vj6q1mysVT5RVexD/KhSPHN7FY/M7KqcdJCbhKkINyfWwiU4aN4W+f/I7R
Q/7B93//EhcreyJ8QoU5IQTa+ONr6kOkfQTRrtHkBmeT55VHgnE2QXtzsFuR
it7MKHZPDkRvbgwH54WyQ9ObLaN9MF4RT5zdaQpiSshLOENRXql6r2vxhZuc
PV9GyeW7nLso2xflM21oIikrkb+P+4QpK5V1gacyYs4gZi77K2H+5Vw6BanB
jzi0vhCDbRex2ndDnf/IcPs5gm3r1bE/yrxsltqlxLh1khX8Ah+TepU/Nvsr
cTz4UL0fKEK8T4Bli3otTLnuFefTSYJ/B6dSX1OU9VzlTukZKCl4T0F6P2nR
HaREtpCX3MXpnJfcvS7Z/fZH7tx8SU3NR/U6RUv3CwLlezZ1/CvWwg5HH00c
vMdj6yVM8BiPvb9wwWsMdl4T5JiwQ2Tjo4Gtr5zjq6HKxmcc1nLMymeMKmvf
cf+PbHxGY+c9TqShyt5nvPo37OU1FTl4T1JLO+X15W9auWtg4TEBM3dhkZsG
huJhDIR7+sK/Y06jVL+jZC0957EcEgbpCDd1hT8HHIej7TScfc6KRrJXjina
L+fucR1CQsos8fBTiU6YTlzaXOGQ+BtReOoclTfh6bN+9i3TCU6eSkCSJkEp
UwhOm05Qqvie1MmiSapC0zRVKQxSnheRLnlMuBaRprzePLWMlGOKlP1QYVFi
vHigxEGE5zmSld8t39kr0mIlV3ve52RQFyej++W7l+zk2U2sYxf+xnW4HrxL
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
lpsd3Kl5ymvlAtdPb9UM1vzoPTfvPia/qILgyGIO6yfwxfD9bNeLICanmejs
JyQmd5BbUK9e5z4rf6TwTDJ1Dwt50XOJ54/O8OppGs+fZlB6OYxzReepr5V8
1flU7fNp75S89bhHvNBjdb3RFslYar+y7Dc3y3aTeJjGHlXNyto3IoUpv6he
fE193TPZfq6WymsrahC/r6iu+ql4nsc8vK/ktC4eVojudnHvRgsV15p4eKuN
amX/puSy643cKa3l9pUayi8/5OrZSvFu18iILiQzpkgtlXGGBnuPMuHrwSyd
MIbhv/kX1k2fg+keXSz3HMRh/xHJzYfx0THBc7ch3ruN8Nxgif70I+wepcfW
0QasGnaYld/rsXGsAYu/0VF5tEfTEpuNPsTZpogXTiHQLFAyejCJPmlkxOeR
mXGS/PxiThfe4MatcnabLmL2/kEsOzaIgzYbSE9vJMa/g73LQ1kzyR2dZYn4
WN0iOUzqx+GrrJsZy+ENReqYn2CLFvE9FRxbfxXjHbfUsT7u+nVY7L0t2auT
BC/x337P1L7njPB+8mPekBf9Ql1PzdO8Ei+LapICejmV/J4zaT9xOuNHzuf8
xNnMd5xM7Vf7oJUMdulsP6Ulz7h58wmV5f2Sd9up7/zIFaknnv4biYrTIDp2
LrHRy0RLiYpaQlT0IiKitf6HQ3HiF+LlWJwWYbIdEj/rnwqOm0lIjHinyKkE
/n8UEDEFf8l3vhHieRRPJH5L9URSeqhc0vxnZvslk7n6a4jEE0kec/TWwMFr
HPZKn7ir8MhpNFaOwiL7sZjZjMbUWjhkMQx908EYmAzluLKWp8lgdV29g8aD
2W/8jTrWYI9sa8vxWIU/krXiciaIJ5ogmWqCypzY9Okqj6LUjCYeKWM60ZLb
lFLNbT9L8UOKL4rNltfIlNdQfJPih+TcpIx5wriJJGQKf7KmkpS5jOT0wSIt
8k82cOqK5OVTr9XrE/nRXaR5NZDg+JhEt6fyXXfhY12rjvvxOiwMWXsVg5XX
MFpdrspiU6WUN9FedJ7j665hsfk29jvv47mvHq/d9XjsqMNzez0mW+9hvq0a
pz2S1Q51Eny4G7MNNRzacB2dbRVEOLzmSja4GNbj4lJN/wfl0vt73rxRLqn9
pFxW+2efz/uffpTNt3z86Sd1vOIr5SLYB6XD570yQFs974Ns1jV0cqW0ndhY
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
OPSjCqKPymCejy9FfTxtr6am6SZNzTcpv5VLakYcdu5FmEn+DBGvHhHTI9wW
boS1Eh3RRlREi3iZJuLjxNskdQl7hDExrcTGSI6Ll8yU3ENa6lP5Pp7Le3pN
XuorcpJfkx73nPTYfrISXpOd+JacxHdkJ/xIVtwbsmPfkBH1ipTwfhKDe0kI
6iExUHjk10WUt7DKtY0QJ2XOrWYCxReF2DQSLOzxPn4PH4MqPPXu4aZbgeeh
Clz23cJ2+xVstl3CevslbHeVik86j+HaExxemsGR5ensnR3Dpok+bJxgz8qR
hqwas5rNU2exfdZwNkwcxqrvx7LoKw1m/HY4U/57ODM+n8qkzyYy7jcajP8v
TSb99xRm/2EW60eu5vA8bfne9fHYZ479TkO8jtgRaOlNuHso/i4BnEg/hYu1
E2sXLmLP2jWsmbmYddM2M+w3s9mxxAaLg1HsXxrC/FGWzB5uidY4HzYtyGTt
7Ez1XtK8BPHd0X2khz5S54M23Fouuf0+ZtvKOLa2RF3rwG7ffRx07xPp8Egd
C61cHzPfc0fyWC2OB6twPlyl5jllDqEo4X6kz2OSwnopkO/nVIbkuexXFOX2
kJfSzO0bz6i+/47q6g/Ut76Q9u4l2jYHWaj9OdtNvmCLgTLn5Qj1mrWO+SiO
WU7jqPUkjllN4rj1RAysx2MkjDKV37i5zUQsbcdjZSe/eXtNHIRLzs6auLhM
xsN9Gp4ewgzPaapPcXfTlGOT8XL7WeJfvN0m4eMuTPHQxNdjktrXEij7QeK9
Aj2FT8IZP5GPp5wnvPEVLimlsu8ljyvP85DXcXUaIx5onJrF7G0VjRcOiR+y
HTMgq7EDPLIYi63lOGzNxeMZj8VMvJHJsREYHh7Oyazl5KQvJStrGTk5y8k/
sYr8glXkFAl/Ti8lt3AJOScWkZmhJVyaR4awKSdtEfnZyzmZu5Lsgvlk5Cwh
I2sx2dlLiE+apF7vT8xap14T8xf+hOcGk5DVTUZKh/itDvGuj8n07ybVTX5j
TpK9fXqJsJN23rJevR/MW68aq03lUvdqsN1Uibswx/eQcp29AquNd9Tr87Zb
7wmTKjFbdU1yQLl6jcxuu3JeB857mrDcVoPR5mqMtt3HZmsDLrs6cdLuwnJX
E4EGfTjrdbBi3kX+oFXArKX5zFiYxq+nZPP1yvMsWFPK+tWnWLbqLJ8syOXT
RZkM0oxi0IRoxm/JJSrxLkaG0Yyc5Y2PWz75ubc4WVBKdv5pImPT8Q1MkjYp
ir0H9DisfUTaEjd0DuxFe/d6LI6vx97EiNjIU/IZ3yGvoF3YVC+8byErs4vU
5Mekp/bK9/FCvNAzcqXMznpJZma/WmZlvFQZlJ7wjJToHhLC+ogO7JY2pEOV
6oO8W9R77YLdG+W3Kp7TqQZfB/Ez9gPytpOcaS1ssajA2fgWbmZ3cDO5g4tB
OW4Gd3E4VCa/xRIsd1/BdMsVDNaXCGeK0V95hqPLTnFkaQG68rloz8ti35x0
URJ7ZseyY2Y4u+fI735+jOSuYDZP8WS9pjXLRq9Ba8g3zPvqj8z/+3dM+923
jP63L5j0h2/54T+GMuzX3zDi338QDo1j0m/GovW3KeycuAL9xduw3qyLwapd
GK/bL97qIHbaxvIe7UkMSiDcO4IZo6cyf9JslmhqMWv4bOZ8vwJr3UAcDGJZ
OlWfUX/dy9xxVqxfEIiXQwkZSRWkJdzk+iWpc/7XsNhfLu1QPRZ77rF34RkO
rizh2JrrOOvWkuL+nLTA55KznnA+HQpTPhDt2U2kWxcRzp1qP1C8u/hJz17S
gp6RFtZPcpicH9pHQepbCjNec+HkW+5e+8itq/3cu/Oa2rqXNCjj17vfEpFa
yIz9n7HW6HO2mn3H2mPCaeOhbDL7ii3Gg9lhOIx9pmNVaZuJRzIbi57ZOHWe
DAPL8RhaTRQeTcRcOGUhTLKxFY9kO0n8iOQ3e+GDg2Q5yTEODpNUKccc7cWz
OEwQbkzA1XGS6mHcnSfg7TwJP2FYoPirALdpAxKOKSz6RYHeA/sKr3zdxuPj
qoGHswZujhq42P3cJ2Sn9FFr4Cj5zEFkL9t2Dr9ogvr+rIWn5uZjMZX/y9hg
rOQk8TZp84hPnEdM1FyigmZInRaFiMcJmUxM+GRSYueSnriYVMlZyXFa0kbP
Jz1dvFHmYnJS55GeN4+4jLnyWvOkzRZfJL4pOWUpSVH/QnSmFQWXn6lzASWE
Vkvue0S65Ihk1xq1nbXeXyZZW7YNq7HdcxOPQ/eJkdzlf6QZx+33cN5dK5nq
OacCINGunyizHsJMugmXjBVq3EWgTith+k/wkPzle+QJ4cYv8dR+JLmhFW9d
Ocf0I94HunDc18hB4dnRHQ/R33SfAxuq2LC5EQv9Buwsbkt2lgwi2aai8ide
ipV58dNbnr97Km2VtFntH9VrFzWtz+l9pdid97x69Ix98xwZ9OlwPvl8Pd9o
GDN1oQ06x4OwsA8nLjWdU8Wp/5exNwHLae3b/xN6bB6bJ9qx27HZ5nm2zfM8
ZWpGCZWIosk8RzJmlinznIyZKYWUBmkeNagIme3N5/9dV3i87/u87//nOM7j
Wve6h2611uc6z2td6/py+cJJ8ZL+3L8bSErsZXITLpIavY6r56Zy98Yubt9L
58qtVK7ezOXmLcmhwcKaEy84cvi5+J5iAvYWij/KVflry/o0Nvgmqbpeq5fH
sHpJNGuXCVOWPWa9t6ZHrFsRI8dPjPj/OLati5eslkTAtlQO+mcIszI5sqtU
R3dnKR3amcFJ8VmnAwo4sStPvO4T9q9LZ8fyBHX9evOCRDbPTcDP4zFrZkaz
fPI95o8LkSx2RfHIcWCQeJ+jWP25W7zPJkzbbRTv483Apl4Ma+uFSTs5/zuI
H2oxhq7V69C8vB5N9KrT+CcjGletxR96xqLfafJTY9r8szl//tycYXU7M7nz
QKb1HYptjwHisUxxH2vDYjtnFk1xZclUD3au3MzQPwfxazl9rAaNZUyPMYzt
Yc1i53W42KykQz0LujWzwcnanzWLgzi+P1wUKf18uLpny8frEXajzjOhn3je
PldxGHqbOePDWebwkHWumZzc+Imz28RT7nzFxf1vCTkDIWfhgnj1I1tfckDy
7YH1BWq+4j6NS6tz2bwsk3WLU/H5uk6QVifj0okiYu5+ISn+M8nJn0lMLyGj
4CPn70QyYmoPTNwqYD2vNuazGqg6w+aSX8zn1sXc8w8s3IRDHo2VbD2aCIua
iz8SDmnr9MwrXTdD80au4otmiz9yl3PbSx57yeO5ovkLNT61/q55XzVfXqtx
QNMi5VmEH+JfVi1sx2phxLrFksXEW20Qhm2UvLdRvJWftJt8uoqEQys74re8
ndJayYa+wrLVGtOWlGay5cKlpZLRlq1qxzLhlaal4rGWrtLGtzqxcHkH5gsT
tbEvL/F427a0FK41lj6xLkuda7HcqQ7r3Frgv6gL+1f0Yt+qbhxcI4xZ051t
3m3ZtKoFO/zasdu/m7oPbO+mHopT2nW6lcubK37uWmMifUwd6Q8mcu3GRy7J
+XXl4hOunvrAtbPvCJG+/dKuQo76v+H09tcc3VjMAZ9CDvmIZ/V7x7nN2njP
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
WBZO1PrVKJbaxLJkfCyzTMJVDcIFVtHMNY9kvmUsi8cnMNcsTnLAQxbJ9uIJ
CXLspzB1eChWg29iO/oeVvK+sUNCGCMaMegG48fIeexdgr/ve1a4leBqm4Wt
9HnDTENpbBKGz7piEuLeUCAIuh9VwvLlUeLf7zJs9DF0O/lSrv1mxlhdljyU
Tnp2CV++vCM+Jod7kc9IeZLPnqP3mbfsGIEX7/D+SwF3758k8Jg/CVGXyE8P
pDDjItmPDnDhwHxO7N1AWHgMofffEXThIzv9k/DzSxCWxyjW7N+bzvHDWRw7
nMFRYc0RaU8eTyXwZBpBp1K4fD6D29eeEHIzi9u3Mrl9O5374dlKkRGSI7X7
KmIKeBxbyOO4AuJjn/JIFBudR8zDPGJj5HFMoewvkv/DM6W4h4XEanOSIkUR
wqe7BTy4IwwLzSfidr7wKFOUTUiw9OdnM8UfpUo2SSZ4XyoXdiRxXDgZsOIB
Ozxus2XmTXxsgvEYehSnXjvUmj+jmrjT8zdr4c9gGlbqQs2y9TAsr4+hnp7w
R5fqwqLaepVpXKES7apWpl9dY4Y3qSeqg0nzeoxs107Jtv9Apo81w7RnL3UP
WucGjfn9p8o0/cWYdrWbiweyZqathxwHkxnVcxKOpksw7TWHsd19xfdsZFi7
VYzo4Iet8Md52AU8xt5g8yzpi2ZlscYpFT9hz55FBRzyLmbv0pdsn1vI7kXF
7FpYxO4l2jod4rVnJeE9I5FlUxPwdU3l6DptDtAXdT/GyX2Fij3nT7wS/rzk
UmCBeM0XJMTmExPzirQnn7gcnoH17MkMmqGL5fxqkrU6lnoe4YSNsMbSXTyR
eBOr+c0ZN0+4IwxRHPJsqDTRs5lS6RhRG+w8WouaKU0UztgKZyYIYzSNc22C
1cxGjJspvxvnplg6NcJ8amPMHBth6dBUrQeryXpyqcZp7aRGam36CRMbYSfb
U2Tf9CnNmeEgnslJmDRdMt4MYYlLe5bOKpXv/K6KSesX/cmGJR0km7UVP9Qa
7xWlc6iXrGwpGUxa4dJC4c2CZaWaK6+bs7QNXqJDRwdJBujL0QDR/n4cPNhX
rbnhLzlrxzbJfNuasmFLIzZsborf1lZs3NSGNWtb4uvTgjXCOF/t+uCapqzy
bao82aJFOsxdLawKzuJ04FP270mTvqGQ6+efc0O80I39JWrt+NXzYtg4M05d
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
a59I/5XLkY2FHFybx/bFaewU/7N76VMO+8rfyyubuZYRLLaJZZ1zBivEDy2S
rLXSMY29S0o44vsJ/4UlrJ6eq8Z95o1Pw80qTfyRMGhilmLQavs8yWOZeFjH
42gSgYOwy3lsNGMGhVB/8AV0hl1m1OREYjK1nPVBjfN8+PiWjfPvsnRuHCsP
huN/LJEJYwPxXZfM3dhCMnM/qzUStUtfH7/8xbPnRZw+eQWToXPQqWdJ2dpO
THU5TLhkp0/q9g3t+pp89jPx5jdTOBOcy8adSWzxT2f37kxOHC3g0sVirlwv
Et+TT+TDHMlaT4iKLiA957XyQXfuphAVlURR0Ue1LnRK8hNSUrIUfxRbxOsk
JacrD6RlsZTkfMWlqChhQ2S6WpdV80KJj3MVXzRp298eJyfmk5L0VD5T8tlj
jUGS4R5p4xep0uaodc0ShUkpybmKQY9iMngYkabWMgu/Ec+9m0lKV87e5/LJ
O4Sef8iV43e4ePAWp7af4/i6Yxxatod9rutZOMaZToaNhDnlKFdGhwrlyvKL
ZLDa/zBUc4Ma/qMZrSv3oEu1IXTXH043fRP61rRi+B/2jK7vzLjmnkxqvZhp
f67CpbsvC0ZuZrfbaa5vu8/dU+HcOX2fG6KbwQ+5dStK1QVJSNbWX3pHetF7
IhILOHntBu4+DvSw1KPrGB3meVtz+swF7lz/m1sXIPCA8Gh7Lqd2PmOlSxpO
oyOYbx8juT2DC/vfcu8Skjvh2klY4R6j7rXb5VvCFu9HHNmVLVz+QmTEO8LF
/2TlvSc7/x1bdu+h/4S6DJ5kwNjpjRhh35xhE7X6kQ0YLr5o2ERjBtvUYoht
bYZO0MZpaqnspI3XaG0/C2NVK3WIcGbQKHnORCS+Rqv33m+gMKdfDVUrvluf
mnTpaUin7oa076xP2z+r06ajeMu2VWne2lD8THUaNRXmNK6q6pHW+aOKqi+r
1SetUUOP6obl0Dcoq+qdanVLtfqlFb5Kr7L8vX7WoWJVHfV8jZq68l5d+ayy
tBSf1KljZXp1q8aAPgaKRyOHVcN0rCHWVjWxsRUe2f+Bk1MDZro0wdW9GW5e
zfEQ7njOa6ukzfu2mf4vJVvnX7CbWZPJrr9hLz7IfpZ4LNea2Lv+ojg1VbLZ
VA8jpkk2m+bxm2KT5pPc3IR1rtWY7KDD8oUunAn9yMET6ZwPzOLM3jwObsnF
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
KX1l0I/S9mkM+r16FcWg7z7oq//5vWYph/7/GKTx4z9dc/9R37zNf+LP/6X/
i0Hf9n3/rK/+R2OP8j81yqvsVaOWdg+I3ncZNSiPcUM9JaMG5ajxhzCoXln6
W1f7KuHPOGHRuJ+VBonfGawxaII+Q2yFQROFPXb63zVykgGjJtek/wQdJs93
4HjIR04eSmf3DslbyyRHuIbivSRB1XYI2PiM/WuKOLyhhJPbPuHjnoGHzUNW
OUsfpd2T4Zgi2xmsc8tlrk08kwfdZqZppPBE9rvkSe7Kkgz3Eg+7JGbbJLBv
zd9ybH1h68JXLJ2Qh5tFKtMt4hk/KoKRA28y2ToG1ykpOIl/WuyaL/1zCYNG
huK7pJBXcv5Gx5VwxL8ED/t4Rlun4qzdG7vjCSm54sWfvyYi8hleXqns2v0J
y6HH0elxjO3bhEmhxQReK1Dj21qdjdTELMr/uYEJE4RNHz6XzpEWWKxYcBzd
znvV/SDPxU+9k91v/vqIm+0udJosRrfNOpasCiH7qbgjOeCvX4qgST9vwu9L
9vS/hpn9dnX/WtKjVIaZbuB2RK66iX/m7B30HLmVN2pu0Cs2bVtK36F69BxU
Vq29MHRcPbqNrqqY02lMOdqP1BUOiR8aXUap6xhd8Tu6tB9WVnyNcGrwP2g3
pCJtBv2DZn3K06KfPB6oT4teVTFqKT67ng6dBvVi5pxlbN8XJr5Nvuv1L9wN
+4vDe7OYbH6ZMUMCGNl/C9vXhjFr0ioaVqmPad++9GjyO7/rSf80uCve7lY4
Wnahe9M6WA23xm36QmzGTUFXV75jmzqcDTxJTGQcodcjuBciuetuEvduxKm5
j6EX4wm9FEdceDppMeKDHuaQGJlLsvA7JbKIR3cKeXS7mEfXPxJ68o146xcc
XVvEhtmpLJ3yiMWTH3JwteR8vyLWzklg56pUbp59zqO7xaTGPCflcZH8HYVD
yQXq+mCmdr0wp4gPf6HGh+r83kg4pItxLUNq1KysuKKd//pVtcylL/v0v3NJ
+Z2v/qdU2ljOvx9/y2XaPo07dYU7peM/pdzRVMeospLmNbXxoF8Ny/+fWexH
Zvw47+c/Za8fGfTN//yo/zJv6L+NMf3Io//Csirl1Pep/vX7KfYYlXofozrC
0QYac+T/2Fi2G+kpGTcplVGjsupxP4uqSv0thT1W/85lWhYbIp5okI3Gn2o/
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
zVqQe0ezL2ujJXmzdhoiR+QVriFfC19rTcb/wqFfmVQ7L624VXixHzWLv/JI
q6aGsTaDvMMlDrlRuPKtnEO/MugHf4x/YpB7W9Oax47tTESI/JD8OeaQpIf0
BYccFLmhAG0RrIVEfwhiEPsxrp+28tSvxSHdH/loUa+oJ7RQE/r+eI7NMVhN
5P99o+oSh1QkLdRdCS05LxQrQ+s+SiIv1Ka/1GeR+y56tlcV9YregfXQqpMy
QvvXR/+p/thyIBlx+9OxauUZTJ1wArv3HcHbygqUvyrHqImrsHXnYeDPCmze
EIcRY1YjI+Mi+saMQemDPLyvLsLbd7dxMGErfFt2xMtK8kf3b8HBqRuOJR7H
p49PUVl+g37fdbyruoe/vlfhRNJh2FpG4MrV6+TDvmHlpkOoo90e4d2XiN5B
3/CF9NVz7N6dAb+gxVA3HYO+Y3bhUcVXkbN+9/4NPrz/gmfP3iI5/T6Gjz0L
Y7eNsPPbghE92EddxYBOGSJ6tU1F18AkdGuViF7BJzEoLA2T+17G7N9vYFzX
TEzqeR6LRuRh4fCrmNjjLEZHp2By7/OYP+QCZg4gPdTlNMZFHcPCcZmiD4u5
RajoMajgTm32CB5pSaFPUZtBnAdytdAVOsfPxkDOHyO0djFGsEtDBDkborVj
I+IQvdaUGGSlLWqQeL5f9FwxluaQeF6JWWTRjPcn0hL5ImtXbbkmkmo+FL0V
a3PonxikmGNTzJ0pOKQYHxU1QYp5+dp5IKGF5Pzh2jVFXXYTL4k/fE7/lHtS
+DquMeLXKcw91ElHyUR9ETOJ2WRFOon7ofO+AhYO9LdsZWLNrIUl/V46Jjwv
Zt5EU54/0hb1i9bWWmKNrb2LpIVEz1v6nK50nrsEaUgcIgZ5hkoM4n7T3p1+
1S7/vL6s9uNf5+f/jUF/55DGLwxq8K8M4lpEDgWDfrDH+G8Mcm0jBd9XMIiD
HysYJGkhA8EhhRZijSj6hfor6jc05DlGPRHCl7lLazh+6CHij6O+mC/j78va
h2tEVEVdFvsxBYN8mEMxyvDvpUoc+sEg7nHm31kNXqGqwo/5tNFAYJQN2vc3
Qq/J7ki/fhMbt2WT30jEwnkpuJBzDe+rqpCenobQ6JEoKHqIvz69wNyZ6zB3
4T4UFd1FWPc/sG3XLjwrK8DH6lJczTmHQL8+SD59hhjyDf2GjELLVl3IP1Xj
21/FqHhehNKSfPz1Zxk99wGRsVMRGDoaH7+yLfsL57OK4OQ2Deq/DcDRc49E
fohz1bzPyPb9BdA2HgMH9wVYujQbpaUf6NX3KH35HFX0+tNnX5GW9BSjY9Ph
67MH7UOOYER0FuYMLsCUPtcxuWcexkRfwMRuORjSPhWDgk+hX+ApjIggz9Yp
jfROFnGIPNmo61j5xx2snXwPaybexPzBuVg14RbWT8rDvNgMHNj0CvMX/X/S
3jqsqrQN+2ZQGUcPRg6UF5ABxE5CBOlukEY6FEEFxe7uFrsDuwsbC9uxRp0x
RjFHHRO7dc7vuu6119oLZJ7ned/vj/NYawebvZX12+cV93WfED1D1apW+s77
cM+5zCDjGlKfItflZQZxDMbxl08LiT++LSUGBTmYCQW0NIcf+6EmRnBuXAP6
+pWk2hu9hrx3mZkmDuG1omLuYRMDNLbmfUI08YhDDTEzmuVI1709Xf/cD8b7
Ptu5S0xSckP0Pcjr0cWadN4nnGu2bnqacz009aom1NCrquhpq+deVUhZC+tO
f4se1TTr9GsIibUiHtJj/Brlxf0pTVwrS3KT/pYbuVRReaSyXolnacn+iHNH
HKuxF2QGixwS327Ca/wN0cK2lvTZXauL/VJ4NjTPrufZrNzTInmh77lTlh3a
NfL/3RvpQd1/pL5f9FFH6Yr1nWJ9FTFPsE8zP1bMkCVxvxLvH8gxGbPIPswQ
9qF0Hm6CVm2MRa3dPtRMicOYLzJj5PN/VZCVhlOa/FCAMVr6G0n9rl6Gyt9B
E6VPnvwQeWquf9RT9QupJdfM+LEW5IVa+leBU3hl8kK68IjXERzi/LRXShX4
a/qmmUEB7X+CVwIxKLIS3IhbHmEGYg+AsPaW6D8jEYd/K8HB4yUYPmwtJoxc
h6+fX9J1/QzhaRMwe/YKvHr9N8Vlz+AZ2R9zZ6wTfEpOHYoRw2fh1sNT+Pim
hDzRNfLncZiav5acyjucv3IBTeyScfzwIWLJMxw9fBqP/rqIj9+uUVz3FZev
3oFeDS9Mn19Mrucf8TNPyXf5Bo5HpV86YdO6i3j+/im+fvtCP/MFh4qvwNZl
DvQs8xAWvxqnz77As0//4O9Xj/Do5Tu8+vQNF86VonP2WfiEFiLUfx3So/ah
cwSxJ/kcpva8jjmDbmNQ6inkhRWjV9ReDE05isEpvG71BIa2Oy5y0XOHXMHy
ibcwsdsFjM07g4WjS8Q+o3P7n8PcYb/izJFPiE2YKDhkQJyppf8D9PX0ULV6
NVStqQc9ZhGxg5nEDOKaGOejuRbG8xE9m5nAv7k5QlpZIdShLsIcrEgWQiEO
lsQhC8EozlMLzhHP9GtURg0DaT6I2L+Me2ks9ESMZtVAmq3B66l4fXtz22rC
D9iSN3Jwrq7s8yP2HfMkef8s5UtIXENjyedSLruqENeYuJ+khQ+9f5/qQo28
iS30PF4nwuJ11LyOUdzmXiVvuY9bup/znxVJ7lPh72FFSs5cOw9SjgUbOVQV
+a8G9Nk4DuV6GHOX97DiPlvuF2pmbSDWtlpTDCFmJHlIn7Ulfd/b+/+s6aWW
4jFtHatahR5GXif/f8sgSdoamUNUJcEfmUHSDGt9MVufpWWQxKFW4TUVBjF/
ZAa1DDFVPJCWMWb/E4M4XpNjslaBJoJB0jpEQ20Nw7OGZnZxVYVBDR1rqXLT
2pw0+yCpf1HyubzvD9fpXYi3rnE6cE2QOMT9Qtre6crCB3EvIzPIOawKvOgz
R6VZIoi80oAZHXHu2lNs3n4WfXovwu17z8mVfEKvXvPgE9IL7798xKdPD3Hl
8g3y4F1RuH4/3r17i8SkEZgwbh5efyrBp3d38ful89A18kZK2giKv97gC71K
jx75iG6bg/cf3+L82XN48vg6mZ57ePH8Pj58Jl81YRn0DL1w694rfCPOfP36
FY9efENj55HQMYzAnOlH8PbLN3z89Aqv6D09fgb07rsT+nVzUdNpFlYtvozn
FJ+9fP8Nj14/wb5TN9El/QK6tf0DXSOLEe+zFRHeGxDlvQXd437FtK53MCW3
BGOz/hB7W80bUIJlox6I45hO9Pnj96FX2z3Ii9xG3CrCyE6HMbX/Wczo/xsm
5/2KcV1PYNmMm1iyoARVfmopZpzyGgN9vUrQ06uCqjUMUKWqjvBDagY1NdNX
GMQ+yK+ZWRkGtXG0FAp1tBIM8rWpDdfmRvSauqgi9AP0quoSj4hthpWk2dVm
kifi/hpeD1G/iR4aN68q1rfLDHJ00Rd70It9ob0NpH22eEZ74M9CPLfdMdBQ
iM9Z3NemVTUxO489vDU9vzn5CWt6LtdZ5DwnHyUZ020j8Zgk7evIdWH1bc5L
lOld8akhcqXyNSFqeZo+FhbnuTjWbNKK4geuzdDn43W0XJtvZivxh48t6Lpp
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
8ToaCi+Sf3oRg8SwnrJ3UMf9PMSk/uq3iWevojLraWzovUYZ6xplk1fRRblt
qOOa1KwHybftHH0gWW9Dxyfkf27J/K/ukovyc6c6rmPfui9wYupbHCZfM1L7
NvHwEuWx+zix8YHcTrao9RFfpNz18r7fiwc6MnIHB4ZuSg576cD3Mkf+wtwP
+PTG/4FXX/49nF2j4eblIHWfyEC1dwbvJ88+iDkUEkj8CfBAoI+bcIi9Eu+t
oTOI1xPifkXuE5J1PCiPtRQTe0ri0VGaaHCopSDS2HuH9/zivb+ayA8xf9qJ
RR2Uz9rJJ7X1+6F9JUsxqWUlMah/oRpJ9fQYVl2/0ooBu2u95H+6fEWNxKoG
uhUeabd17co7VbUtNXJcOfGJa0l/WX5KzCbNIzG7dBkMqvb6VQaJJ9L4w7Uj
rmFzjZqZYj+ellq6xPA7LOZOiuaB+LEsHmNLLHOlfOWu7c+j6kE6fxb7HebL
4nVedQ+0kEFexvob+pwumR+7aM0O+0z2l7S45/px9y32Pov1uN5t4+v1fPi4
n7OIRfZj+sKifMpmlDsTim217ETNHy1mEPdHGHU5jUWZxb6iDMrKJmLQ8Lot
eProP2Jq5T0c2/S32D/2reSY2bXfEoM+wVT7p7LP1jbyHEdGfqLzu5jp+4Le
759T5npN+pVXEYPWcX3a+iL6697HMNeFc1+TWtBE+ycYKLkk/Tq89iHPd2cG
8XyK6b576Kv/gDzVC+ggn9JsfQWVOS/JeV/FRTQXktfKfwGtJZTdWimP0TVm
EI/1t1e8LvWiKcpSm7k3sfUmdg9/iVG6r4MYtq7xmvT/cB47NPolntn5N5if
Yua8h/UN7+DE5H2cp2vMnS2d17Cr/2M8Nf0d3jhCLNr/C/2uN2V+6kuHf8Qz
+7/H08e/x+1b/xc2b34Fzk4uSAyjv3FIgKr3RJJvj/BR9SBvH2KPJ0y+riQP
YRBzSa8Lydr2PD6WGCwM4jF6zmNNBeSByhLRWZakcShevFHlEPdKq/XIeA9C
ZlDLKsWfrlVmtU88eSVmkc4jZlQzP46Y1UyPZfHXNdBjWU3EtIY1Si1DIWhe
Y5bres5r7g+SnNesHbPvYh/Fea6G8l415b3KdiWuM+nHFcSmcmYTqbRNqarV
hIqWAFQ1+aGi0Vf8U3m9h012DCqp8jAymc4gPZNxDpPadZWXjOenVy4RT8O3
4m/K3EQ6a3gcX6RnsFJXYU9CqVJsqZsmteZFrCbmD+9vaOOK/ViZ54Lr9mP5
toymrQerMWjBHHz7upD2/n5cb/Viruh1a93z6DlrcQ1oMX/U/cH/Ie8eyXmP
qakbvojr7rxOotUfsVoPJ3MosThYvBAzKKFAX1dR9UMkFKmeCR635HFMrt1l
FCmF5zigtqUGJw/+jfiJE9O/w2THTWwk3kx1forB2o9wYO13mFv/E3aRTzo+
+jcYqbuBXWse0GPuYIWVfEkJ+Z7yqxhpuoZGy/PElo8w0XYbPdY3iBdvSU/y
YPEl8h+3MUS+pTr/WenxWUv5jOe9r266Kmv58Hz2gZpLaKt4R2rOKyvflO81
NfAJytPmUZd3DpMDN6V3caj5qvRDNhaex6qG96SePd17D9tX38Pm3pvCoDH6
2t10PlJ7iXzddeLQ55QzH4g2tl3C1q6rOL35AZ7Z/iP2D93G2srXKIPdxNsn
/oj3z/wJrxz4CWdn7uPMtvt45tCXuPLuv+Him/8Kn4B0eLs5IY08T1ywmdji
g4hQYo3JBeH+PsQgk3DI5OMkDAr0Vwzi/eZlfelwtbaiJT5Q+oS4X9HwQoXx
ksdYXKduzI9B80gIGoYDUTdoUgwifjSvCUTbUCDah03oGPRB9xpfUddq8kKr
fdG6OgDNQ8Qg+jp9X2f+GuPaWmLMMD/GT13nfedZq5lv5JtW+YnqSQ0DvnLM
Pqp2pS9q6JZVRaok/yRroFEGZJURm0o6fGxjcO2B5JeCyC8FGn6Icxp7IT2/
6TVqlj2Lyok1rGJiTCEpn3hjqXQjD7QEmVVLkEFKp2upVUq8Tw4roUKJ+cTS
z1mxxKCYUhfihRPdOtO5C2ULTcVuJHfEFnkY/dMyLl+iehp5Dx97GT2O+UpG
L2T+wjXw9TVbbXNA7HOW+VfXGlqeQyzKNj02V0XayX4sPiRb70kMpsebRcb3
4zmzdvpL64nYnlOAMQ5n749s9SIzlpeYpY+Sz+ML2QcFIIWYlFboS77Hx+iN
sO8flTllxWr8IDOPe4scsGnTNeye+iM2rryL9c2Uabq/wuq6S9IzeGb677Ct
5wvs7P8S+4bJG1VfxUz3Xcpo70ueGqh6H93F76Cn5F3i0TsYaflYxvWbyAfx
9bUN16Vfhxm1suIttOW/QjnrkjxmVc1lbOi6gRXZF9BZ/hqmB29jDTGlnTJe
ewF7mQ8w0vo++aHnUZI6j7GeDzDc9p6s/zPR+RF9v3dkfskGymYbez7G9qG7
OLvnt8Qu9mQvYUv/bRwY+Yqe9z1s7b2B0zM/4PzuhziynvfcuIzj4/ckZ52c
pvtXXsVE63uY33wf7z39j7j09N/hrflv8dTeb3DxmT/h9o1/R3PPMTg4uiAp
knJVoLfkr0hiUGiQNwIDyfuYPOBP3PH1cYe/txsCKIsF+nsiJIA8vYm8UrC3
+CBeW5rXdS1MCRAvxD6Ix+i5V6iF/BCLfRHXiWQd13UBxCHyJGsD0bIuiBhC
mWuEPM+ILzrXBqBrnUnUS2zpXKvY1LbOLFK8UfzRGaSfN64JkD3nW0htg4Ei
nUPNqxWLOKcxfzi71RJvqui8RvhD/obnx/b5iYRB3X7CoOI24oym4hbe35d+
1yYfUYFWqy5Y4aFq1vVaPVurU5fWkheqWWKouPoJYxyfGZRZpZRRTZ6n2hUp
xJakcspWmnTe6J4njrKXLsUfZ/ItTnLL58yf2GI6LnAhudk4o++nofEnku57
rPQ9WLXHLz7Xx84Ui/wX1ISEA9aARxgUrnGCGbTY3/B5hJ34fFmWj8ieQbqM
8f9Fsv2sQE2L8tpj1mLTa0b2dWuZY6LVjDijJRYFCoeSCwPUevfcC1pg69Ni
/uhrUTOHLLy2bpYDGlqnsGvzb2Sce5zy0hbKNqu5h2bgPuY3/i229nyOXQNf
kZ/4TBi0lTzHWP1Hkrl4LgTPMesqeluYM9l9R8a4WsgHMWOYUbxnxdCKD+V7
ct149YrL2D3yQLzKeOfHksP6at7ESPuHWN9xhc5fRauVchZxg8/by15GZeYZ
4s8lbOz/SGpFYy1XiTVX0ULfb3P/Lcyu/4I4dB37x7/BzqF7wjqel8p16SPr
v8YOeszmjqs4sI783MRXxJzr2N53Gy/sf4g35/+Ap3Z+S/nzFg6MfYqz27/C
O2d/g4vnfsFLR+/j5vV/x5nzP8PJKRSJIfR5FkCv7YhA8UDhxCK9/uPv5wZf
X5KXkr+XEwIpk4X5uxljY0mhnsiK8oQlzkvWVuRexbocymJ5ij9txYnkgeKF
QeyD2tcTa8b80DZKeWssUPY5bB8nZoz7iTromPd77iZWsXpGQ9A1YkYnsap9
hJg0Ql6JuNShs2lIeajWNSbxPi2D9P2JQe2Uy7oGlTjfMYuYQ41SS1L18DrK
eHp/kmKQSfjDXkhYxGuFdPmiiHJZUauPiPuxrS0+yGteCmuTUh7lMV1W4lCh
veqIN7VLRDzmll/zhCi3hjxQlQsyKp1t/KHzFGGNi/ga5W1cRcKWAifD5whn
Cp0eUSzziB4Xmu+AMKsTccXV4Eu4VbvNVwqzuj4ifsxi8T7R+t4/9n3Wj3DI
GmCsybG4NhP2iMex8SZMEzMoOMP7VxkUkh1oMCY6l7yKJj5WGS3YjkFKj/dD
dj5pUUaLzec5IyYRMyiBvJCSP+LzVS7jMXuWWnva1269Mx9kli5FTJ4TSpqy
sW/HN9i8+kscmfoOOwbvytqmu1cRdyhzbe25i7nJh9JvPNF8EzsHvsGGplvE
q0+winuVK94jvnwodeAN7bcw2vwx+souyfwJ3SsN11/BmhXvobf8DeLKR9i5
9j4Gqt9DD+W1rpLXyOu8iJ6qN8T3sA/qLiGvQxlqZvUtDNS/hcLE46iznMPK
uosYarpE/KLv1/yejJ+NkH+ZJW8zO3oP08Sag+P3MdV9A+saLmPnah7ju0xe
6DMc2/A1Ztfcxunpb3Fi01f0u1zD/rV38caJP+Dt038kP/Sl9AIdn7qN5w98
g7cu/AZvvPBHvHn5z8irGseTrrxONH3OhvgiNCRAfBBziLOWziAfH1fij4so
wNsJy3ycEW5yld7pBMpsqZHuSI9xQ1a8hzCIexVrssLRYIkWBjF/OJMxf1bk
RxNjAhRnNpi0/Q6VOiaeRNsEcYSuM5MUixSHukYDhUHCnnXklUaIVeSl+Lxt
KEBjkJ6/6PqgSdRF3OnWGCReaMBPakQs9kC1fYGo6lPsKSfesO8p6vEVFffS
LfGnsJM8Xjvxpc0D1tYlyG31QnYz76X+hNzmNXsIj3RZVrgZyuXbOldRXq0r
8uvoWo2LKFPjT2qFkyiJlFDmgARiSzx5GmFJieZvChVXYvKdjOPl+Y6PipgT
Uego/AmxkvIciSv0/8p3Eb6E2LEmJM9lgZZZnEVheW4LFGJVYg6ZhWMetj19
7Di0uIdoQc1o0ZyLX2MQixlk45C/xiEbg2SuWLZSNOU71nJNfJ8t85k0BgU/
lkMLrtnVtWTden0PDTqO53o1MYjFTOJ1pZlH7I3sx+4NP8TrQJJvTKbPkT2z
F/H08T9hftdDqetOtt6UvdXXkpfZs+YrPLPr77Gp7TZmyAsdGP4BE423sHbF
FXTmv4GuwotSR+I5WJy5pld+Jh5I1mkmzrBf4nmwq2vfRV/F65S/PsKGzpty
H9eAeMxrRe5zkrM29d+QPNZX/ibG2q5iauXHxKlXyRecJ/68Tu/VZ7Cq7m3y
T1fRT2yaHCAv1n4JWwZv4OzuX7Br6DPMbfpBnvvq6rewfeAW+aAvcXLTt8Sg
L2V/wuOTX+CVo3/A7PCn2Nj+Ps5u+xbXX/gzXjr8E/HnjvQCXdj/Pa6++id8
/j0wuut1mRefHe6OlCD6Gy4LoPxlG49n/rD/8SHeeC91ktsAHxeEBrohwuwu
4/epMb7ISiDvmeyLvHSWN0oyglGeHSJ16bqcCMlj9gyqs0Yp9pB4z2fee17t
+6xxaEOgcKh9Q4D4JWZN1zo/yWWc0TqG/cj7eKF9aCkd+9CtL9rW+KF1UNWM
2P+0rfJR6vfV5IeWlb5oXOmD+j5fGb+v7PERVfRQ5iLOsNcpJtbkd5Cv6STe
dBBvSHntzBzKTC1PiLKb3eQ2q8kV6fWuyGxwE+XU61qCzDoXZK1wVaol1tQ4
I8tOmdVOyKhyQnq5E5LLHJFY6iBKKHFAfLGDeB2W7muYLZHEkyiro6HleQ6I
tCjx8XL63I20OIrC6VxEx8ygELpvmcVJ+LKYN/YKznEShee4ikIsSsvylJhD
wfk2NukskrmwdvsE2eab2Tik9+7I/NP/gEHLFmghg3QORWQpLc8KFkVmK0lW
y7bJxiA7n/Qrc0L0uWi8r2GsPYOsgeKNdMVr3kjPaJLP7DxRanmgcCgo1YE+
A/vx8oW/w/HdPwsXDlBWemb3bzBafxmH13+LuamHmCIftI1y2L6hB1hPWWy8
6bposvUGNvfcwWANz7u/gZm+z2T95o7C1yWDDdZ9IAwaab6MtoIXMdLyoWSw
UfIh4x3XMdF9DRUZZ7Gq4W3yPZ9gY+9H4pe4RjTaRrku/wLWtVzC1jWfYKD2
Ivpr3sBEH/Gu6zJm1t7E9pFbmOz9APs33MPRKcqPm78nvtwlHl7CjlU3cfHE
P+L1Y39PnudT7F93G0c3fI7Xjv8B5w98j0OTd3Bs4z08tes+3jrzEE/to+P9
9/HOhX/Fl7f/H5x56Xt4hcQjNsAR2WH+iDEFIi40AFHEltBAD5hN7jCZ3BAQ
4AJ/kwtMQfQ5yD1CEZR/YwOQmhSMrDQzrDkhKMkLR3lBOCoLI1BRQBmsIEwp
PxT11gg05asx+hYti9URkxR/yJ9MBslt54YnDS51jpvVOfGna5TYM+KLnrVK
3UN+wpyONV42DRKHVi8l5nhJ7Vrq1wNLlVZ6oaVvKZp6l2JFrxexZ6mosscL
5cSZMmJMWRfdEnuKOigztXsov0PcEfa0PYGcVjdD2S2uorwW4hAxKKveWcTM
yajlPEVsqSbmkNcR1bjKeVqVs/BGV2qZUkop8YeYk1BIDCLPk0D+Jb6AGETM
idG0nPwM80dnTUzeQv4oORqKyHaScRlWJPEkjBSSTRzKdnpEy7KUFl8LI0Vk
kx/KURI+aVrGDCMu2Tik1488bXPz7ea8qv3IFIOWEX+W/ScYZF8P0hnE3LEX
8ycyU0nnEF/j++wZtNxiXsAhPg7L45p08CP9kHpm1BnE/NHFHNJZpPaZDzZY
xJ4o2Ri/9xYu8dq+SeQHo7M9sXvfqzh9/GdsXHkbczM/4cD6r6TH5vjkj9i+
8nNsbOHx6q+xa+Aexil3beu7K/MfmEMbmj+SdeR5TsR076eU0d6T+s9A1SVh
0GjzFWFQS95zxJgbmOq7jbGWaxhqfB99lMFW5D1Leew58jhvEm8uk0d6Wxi0
oee63D/SfAkzAzcwPfCRrPe4quFNbF1LebDnQxyZ/go71t3EjuFP8Pzh3+KZ
vQ8xO/Ip1rdexv6Rz8X7vLDvb2V/5omWd7CDvNNTO7/HO8/+Fmdnv8apHV/R
7X28ff63eP3Zn3H54p9w77P/gSMn7iLYNxo+bg5IjgtEUogJacvDxffEhhKD
iENmymZmOjZHeCB0uQei4sknpQYiPcuMTGKOxRqOwrJolFdFo7Y2BvV10Wis
VWqri0E73baWR6KpMAyNBcShwmjxQKxaK2exvybv89fo3uiNrg1/RdzxQPd6
L8pc/qKeUbo+spS444Me8jvdxJquQeLNag+0D3qgbeAJtK9aIuJjVmu/m6Gm
PqXG3idQ37MEdZ1uqOl8ApUdS4g9SiXtbihqdUFR+xPEnidQ0OYmzGFZW58Q
zuQ2u4p09mQ1u4hyG12Qs8IJWXVK7HPE11Q4KsZQpmLu8K3OHOZNuqZk8jvJ
lLF07rCSC5QSiDfx7IPyNdZYlfg42qIUZXe8PIflqIm8ULZNEVmUyTKcDC1L
V1LHjgtk/7iwdE3MI2IQs4n9UZAm3R/Z5zW9bsQ84jFuHutWe0R7i0L+AwaF
UvZiPY5BikOBdGsSRdDrUESe215hmUo6f4RThh9SLJLaUp7i0OPG+MM1/xNj
MCjwEcUTv4RHWk5TmSxgAYPire6wlEfI37O8tQa7Z6/i4NbvJdfM9H+MnWvu
4vTMQ5n/Odn8CQ6ue4Dd/Xcx0/4xDo89kPlXa8rfxfrGq1hV9g7W1b4v4rla
Uz2fUCa7JGIGrW18F8255yVHcV8zzw+R3EWM4Ty1pvkddJW+jJXVFzHa8j6G
iEWTfR+LF1pHnmb7mtvYNXIHqxvfQl/Nq9g+fFu80Ylt5H12fou96++Qt3mI
Z/b/jPntD7Cx60OcmPqGcth9nNn6LS7s/QWHxj7FgdFbeOHgL/jwlX/BxXO/
xbkDX+G1M7/gjfN/wK3r/4Zbd/4L1oydhctfRSDG2xUFUcTtCPY/3sQeN0TH
eIvPiYqmz7FYb0Qn+CImzR9J9P9Lt4Ygl5hTUBmPwvo4lDfFo7YtES1dyejs
TUJvTzJWkvq6kzDQmYRVHYnoa0pEd00M2kqjhEE8HsYeqDovivKWBzGIuDNF
txNu6FrvQuxxJfb8lbCne5juG1qC7sEnyMsuQccqYk6/4kzLSlfyNfZyRmOP
0wLVduhyRk27C70GnFBKEuaInGBtckBukyPymp2IM87ka4glpCw6Z4+T3cAe
x8lQ5gql1BWOlKUciDk2pVeQKEvxeGy6eBsnYYyulCKb0u3u0xmUTMzRlZTP
1yiDWRdmLc5f7IGYO3yffqzkJPwxlO1C70niSZqjJsUU5o85TTHHnOawQPYc
CqMMwV/H3yNM80lBdtKzm57rpI6t1bi53r3c4iMS9uR4iZZZvP5TDAq1q0fb
M4jZY84MEOmsCUsLXKDQdCXFKFte0zOanuNCck2ix9WK1HibziGToVgL8YYe
z4rS2MQcsq9XS22IxONn+tzjzMpQuMU4oG/wMF5++p/offxQ1tphBp3d9rdq
3if5oCNj32PPwGfYST7mwLpvMLvmC4wTf7Z03yYfdAlT7Tfkdqz+Cjb13pR5
E9K3TKyZJqY1WZ5Fg+W8ZLDxtmtY26R80FDLu9i8+mP0Vb4qe16Mt1/BGGW0
vRNf4/CmB+SL3sRE5xVs6PoA04MfoW/Fq7Ln/cGJrzC/7QEuHPoN9ozdwuHN
9/Dc4Yd4ae732L/+c2zuukLP/zucmmYOPcDL5JPOz/6IZ/b8gAvHf0fe5w94
8SR5oOd/h/ff/DPefutf0Dd8Eg5uIYiLcEBmbAjywsJhjabsmkweJ9kLcTFu
iM8IQUZOuHid7KIo4jhxpzoRpfWpqG7NRn17Hur60tEwkIGuoUz0r8vE0Gg2
1o5kYHRdBsbWZmN0Dd2uzsS63gwMtqSgpzZe+hQ5h60gH8QM6t3grumvRF1j
f4WOEfI0a5Va1ixB6xr2OcQg4k4ncael10V4s4IYs6LTUZM9b5xQ3alU3m5T
MamojZjTwrxxgKXZUTyMhTIUc4a5klHniDS6ZaXWKc6k1TogjViTKXIU1vB5
Wq3jI/zJKFMM0jmUXOJCfHHWZMtYrEQSc8aeObr081irTfHEmljiTCyxxV7x
Fhck5brJHElWUpYrYokXMVkOih3sd4g95hTiBsmU5Cj1CRavN2qI7jOn2sSP
Nac4GOLvwTzSORWm5Tf2R+H0HIIps7H0ehErPIe8UbYud8p1XhqLiCnZ3opD
dtLH5NkDhab7qscsYJDyP2biCysoU90yb8LSAhDBSid/k6keZzBKEzMpLDsE
oXTLso2XBRveiPsGhD1Wk+wrb88fPtfF5/bzPWxj+MQjYhLnL2FSAc/pC0FK
cbj8zcubi/DKy3/Aqbk/YWP7O9gzfBPndj7EVBev8fou9o99g62UxQ6tv0c+
6D42d3ws2jHwKbb03pK1ebimPUjeh9f/GV5Bmaz6XUx1f4z1bR+Kn2kreI6y
1bvY0HZFxGscTnZel3UON/XcIL90CV3FrxCzruHM7h/J39zFWBvXrt/DFt5j
cPJzzI7dRk/Fiziw4Uuc2fUbzFN23NRHX7/6Ci7M/QYvn/sHzM8+wLZ113Fo
6q6MvXPt+UXKac/vI6+0+2ec2vk1XjrzPV44/R2uv//fcO2T/06ZuQMeni7I
i3RDZpIPLORvctMDkEP/Mwt9NuSQT83OM8NSGI7c8ngU1KWhqDENZe0ZqOzL
RN3qbLQMWdA5akX7uBW9U/kYnMnD2DYLNu3MxdZdpB0WzMxkY+tUJqbGMoVD
w90pWN2eiJX1lNHKItCQHyb70XeNuhjqHHEl7pC/GXJB8xryNYMuqB9wIc4R
c1Y6o7nXCU0ad6o7HVBBKu9QKmvX1OZIPsfBUHGLUhExx8rSPI+lwQE59Q6G
p2H2pNY4IKHSprgKdZtYTiwhtqTSLecoqd1w7bicjum6IS1b2Xsd9jG69FyV
YLUpnvJTgsURSXlOmhwNJRBvEog9ojxnUTz5nAQ7JdG1ZMo/abnuSMkiBmUS
gzJdEJ9JDCJWRGe4yDo2EanOCCXOBCU6yfp+TyY4iEwJzrLmKIvvYzGPglLo
ehKdJzkYWpbqKN5J2EXfm31SULqDwaEw8lzLclSNKJiZRLLxRzFoGUm8ULan
KDhHiVmj16h1BkkWy7HPY8oHiQfSGMScCaXXr8GfNHXM15ToMWkmQ8IqYtEy
TWq8TPU72mrYikMyJp9ry2D2LNKvG2sB2M35kFq1MChYuCNrGRQH0+dTvIyX
Ree4Yt3ETpx/9k84PPUFZZtfsHf0DlaVvyVrXexacwOjDe9SnvlC5n3ymheT
zdewlXzRdPcnwqEJ8jiTnR9hpOGKcGik8QNZQ5XrQRs6uEb9lvBkvI280cqP
pG4z3vqhcG7Lqk+wbfAW+aa3MNx1GdtHP8PmNTdlzthG0vahmzg+8w1x53u6
/xKGOy5h78ZvsIs8z8yajzG/+z4x6CFeOfsHqQsdnfoSc9u+xtP7fsCpHd/g
qT3f4/lDD4ltD/D83M9495W/l33vn3njT8ir2gCTtzvyEj2QlxaMvAx/5NP/
sDAnEIXEneKicJRURKO8Lg7VzSkob8lCTbcFtf1WNAwXonm8BO2TpejdVIaB
LZUY3F2HdfvqMHGoGjNHK7DzaBn2Ha/C/sPl2HugBLPEoh3TFmwey8H4YAbW
daVgVXM8uqtiZM4Yr3HWs9YJncNO6BhyJs/jhObVTqhfRb5mwAk1A46oWkm+
po/U64i6LgdUaswppuNCYlAeHedrshJ/rMQdVl6LYk5BI90SaywrbMoiZdaR
ZyF/w9xJ025TyNskVij2sGKJOTGlPEZOWYlvSzSekKdhxRo1HDvWFDgbXoaZ
scDDaL4lJpuyVDYfOwsrksg7JOfwrZPc2osZs1gpuTalEX/Sc1nuSCP+pGQQ
h9JckUg+JiaFMhqxJDrJFVGJboiIJz7EuiIoivgS5SgKjOFjJ1FgDDEl1knj
kqZEBxGvCcheyPBPkuOcFoqYFJJF/CImiR/KcREu8bXgbFdDzKFg4iUrKNtD
pHPIkFYL0v2RziBzhq+Rw1QWUwwKTfWn3KjEHOJz1rKUAJE5VUnnkC5jjI28
kX1u4zH9qEU1oMcxKMZ+XQCNQzqDEkQRag20Yn8ZO8umPBGW4SDzzKa3voIX
5v+M47vuYkPnJQxWvYndvM/f6psYb7qI6a5bODjyNQ6NfoOpjo9EvB4YrxHP
OYzXjt/Q9pH0PDKP2N8M1rwrfYTMIc5lMyuv4dDEPanbrGt8F1vpe28dvIE9
o7dxZNOXdJ2y2Mg9zE3/gG2rbmM7/fxNPVcxO3IbT5M/mh79GEM9lzAz9il2
EWv2TX+BMwe+w7lD3+NF4tCF+d8Ja+am7+LZfT/i6UM/y/2vnPobvHT0G1x+
659w5/P/ian9N+AXmw+TyRVl2dEoIv5b6XVRXhiE6jLyI5VRqK2JRF1DHOpb
E9HYnYbWgRw0DuWjbX0pOqeq0Lu1GquIOav3NmDNgQasPdyMtSeaMD7fhKmT
ddhysgq7T1XgwMlyHJovx8FjJTi834L9u3OxazqXOJSN8YFkDJMXGqhLRG9l
Ehqtkegm7nQMOqGNuNOyivjT74C6fmIP3VauJK/TQ8zppuMujT0ab5g9ucSg
XMpXrBziT24LexxN9Up5xJocUlatphrKTzUqS6VWKe7oSqpQnof9jS7mDPfn
xBdqY+T5Trbxcu7PyXM0FGt1tvMrLsIYxRwnRNP7MjpdaTllmmjiBCue/Ikh
us5iH5NCviGNPi+T6X2si89ZijluyGD+0Hs6nR6bRe/nLOJPRhpdS3VFairl
M/Ix8cSdOOJOFOXryGjKRsspI0UQhyKIOWFOCAh31uSktJx55Ew8chH5xTjA
P9ZBvJPulzjLSZ6jrLYs1clgk84lsybFHnvZOBSU5QIT8ckkHHLTGLSIQ4uY
xH1CwiBdwiB/5XuEN74Gh1ihdK4ziBWaanqUQVo+WyjiidFvFPBI/rKXfV+2
vqe1PYNi6bOdx814fcv4Qld6bYQgrTiUfrYDskuz8DS9h4/u/B7rO9/BdO+7
wp895FO2kh/Z0ntX9qY/suE+ZofuYXPXDVkTdf/IV7JnO3Nouvc2JjtuSL/g
xi7m0VXsXPMp5bH3MEbeZ/vgx9g3RtmtVdWbubYz1XuVmPe+1Hh4bY2d/Xfw
0sF/oPx3W3qHRjs/wNTqjzC76R62jdzEJB1PDBK7xu/i0I77OHngezx95Ee8
cub3mDv6Jc6ffIhj277EyZ1f4sVj3+L07G1cOHYf77/8r7h6+//Fxj2vwdnD
DbHBTrLnTpElGIUFJlSWBKCiLAgr6sLQ1BiN1vY4tPUko2sgDT3rsrFyQz76
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
Qf8GGpGQYQ==
     "], {{0, 267}, {289, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{151.60677083333312`, Automatic},
   ImageSizeRaw->{289, 267},
   PlotRange->{{0, 289}, {0, 267}}],
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.math.umd.edu/~petersd/666/html/iris_pca.html"], None},
  ButtonNote->
   "https://www.math.umd.edu/~petersd/666/html/iris_pca.html"]], "Input",
 CellChangeTimes->{{3.71715573106017*^9, 
  3.717155750882842*^9}},ExpressionUUID->"35e26714-4c6a-4823-88b2-\
6452212b1d7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Descriptive Statistics", "Subsection",
 CellChangeTimes->{{3.717185722428204*^9, 
  3.717185730181706*^9}},ExpressionUUID->"39eb4690-0ecd-489c-86be-\
b2e7c75e2f6b"],

Cell[CellGroupData[{

Cell["Single variable: Sepal length", "Subsubsection",
 CellChangeTimes->{{3.71623033210839*^9, 3.716230337657154*^9}, {
  3.7162544850259523`*^9, 3.7162544885522547`*^9}, {3.716254741041656*^9, 
  3.7162547468100777`*^9}, {3.716255028470089*^9, 3.71625506388671*^9}, {
  3.716255155926005*^9, 3.716255187047106*^9}, {3.7482766712881393`*^9, 
  3.7482766755899897`*^9}, {3.832160360895945*^9, 
  3.832160361320718*^9}},ExpressionUUID->"ba8cd748-8dce-4a11-9bc1-\
9669c16ea37f"],

Cell[TextData[{
 "This dataset has three classes of flowers. Look at the descriptive \
statistics (",
 StyleBox[ButtonBox["Mean",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Mean"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["StandardDeviation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/StandardDeviation"],
  FontWeight->"Bold"],
 ") for a single variable (sepal length) for the ",
 StyleBox["setosa",
  FontSlant->"Italic"],
 " class: "
}], "Text",
 CellChangeTimes->{{3.725999420604783*^9, 3.725999452149589*^9}, {
   3.7259995216076117`*^9, 3.725999553490559*^9}, {3.725999591024961*^9, 
   3.725999604080166*^9}, 3.725999846998818*^9, 3.748276678541883*^9, {
   3.748278483043056*^9, 
   3.748278487384338*^9}},ExpressionUUID->"c8faffad-57bf-4ae1-8a56-\
71e03c5e3dbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setosaSampleSepalLengths", " ", "=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Statistics\>\"", ",", "\"\<FisherIris\>\""}], "}"}], "]"}],
     ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s_", ",", "__", ",", "\"\<setosa\>\""}], "}"}], 
     "\[RuleDelayed]", " ", "s"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725999556715783*^9, 3.725999577171155*^9}, {
   3.7259996220908737`*^9, 3.725999625031377*^9}, {3.72599968617236*^9, 
   3.725999700968186*^9}, 3.747577306161618*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"075a3c9f-2f13-42d3-8a48-cd1ec771f44e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.1`", ",", "4.9`", ",", "4.7`", ",", "4.6`", ",", "5.`", ",", "5.4`", ",",
    "4.6`", ",", "5.`", ",", "4.4`", ",", "4.9`", ",", "5.4`", ",", "4.8`", 
   ",", "4.8`", ",", "4.3`", ",", "5.8`", ",", "5.7`", ",", "5.4`", ",", 
   "5.1`", ",", "5.7`", ",", "5.1`", ",", "5.4`", ",", "5.1`", ",", "4.6`", 
   ",", "5.1`", ",", "4.8`", ",", "5.`", ",", "5.`", ",", "5.2`", ",", "5.2`",
    ",", "4.7`", ",", "4.8`", ",", "5.4`", ",", "5.2`", ",", "5.5`", ",", 
   "4.9`", ",", "5.`", ",", "5.5`", ",", "4.9`", ",", "4.4`", ",", "5.1`", 
   ",", "5.`", ",", "4.5`", ",", "4.4`", ",", "5.`", ",", "5.1`", ",", "4.8`",
    ",", "5.1`", ",", "4.6`", ",", "5.3`", ",", "5.`"}], "}"}]], "Output",
 CellChangeTimes->{3.8320651247188272`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"639094d9-32d2-4d3d-a35b-089e6dce89db"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Mean", "[", "setosaSampleSepalLengths", "]"}]], "Input",
 CellChangeTimes->{{3.725999709434556*^9, 
  3.725999714034802*^9}},ExpressionUUID->"66bf9e4e-1e4c-4bf5-a4ed-\
64032b09f71f"],

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "setosaSampleSepalLengths", "]"}]], "Input",
 CellChangeTimes->{{3.725999719929191*^9, 
  3.725999721969689*^9}},ExpressionUUID->"ed12545a-d604-4903-af5c-\
7fcc2934d3d1"],

Cell[TextData[{
 "The following table visualises the ",
 StyleBox["five-number summary",
  FontSlant->"Italic"],
 " (promoted by John Tukey) of the sepal lengths for all three classes:"
}], "Text",
 CellChangeTimes->{{3.71623033210839*^9, 3.716230337657154*^9}, {
  3.7162544850259523`*^9, 3.7162544885522547`*^9}, {3.716254741041656*^9, 
  3.7162547468100777`*^9}, {3.716255028470089*^9, 3.71625506388671*^9}, {
  3.716255155926005*^9, 3.716255187047106*^9}, {3.7259997645597267`*^9, 
  3.725999829020378*^9}, {3.748017615444613*^9, 3.7480176789029293`*^9}, {
  3.748018067626148*^9, 3.748018073309198*^9}, {3.748276820257374*^9, 
  3.7482768207295017`*^9}, {3.832159535791849*^9, 3.832159536032167*^9}, {
  3.832943715352324*^9, 
  3.8329437156083517`*^9}},ExpressionUUID->"5bb1d23c-85dd-43ec-ab27-\
a9d46d1fd924"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"irisData", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Statistics\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "sepalLengthSetosa", ",", " ", "sepalLengthVirginica", ",", " ", 
     "sepalLengthVersicolor"}], "}"}], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"irisData", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", "#"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<setosa\>\"", ",", "\"\<virginica\>\"", ",", "\"\<versicolor\>\""}], 
     "}"}]}]}], ";", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Min\>\"", ",", "\"\<Lower Quartile\>\"", ",", 
            "\"\<Median\>\"", ",", "\"\<Upper Quartile\>\"", ",", 
            "\"\<Max\>\""}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", "#", "]"}], ",", 
              RowBox[{"Quartiles", "[", "#", "]"}], ",", 
              RowBox[{"Max", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "sepalLengthSetosa", ",", " ", "sepalLengthVirginica", ",", " ", 
            "sepalLengthVersicolor"}], "}"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Species\>\"", ",", "\"\<Text\>\"", ",", "Gray"}], "]"}],
         ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Setosa\>\"", ",", "\"\<Text\>\"", ",", "Red"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Virginica\>\"", ",", "\"\<Text\>\"", ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Versicolor\>\"", ",", "\"\<Text\>\"", ",", "Blue"}], 
         "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.497705451758217*^9, 3.4977055348265643`*^9}, {
   3.4977059668543096`*^9, 3.4977060106380816`*^9}, {3.4977093769134393`*^9, 
   3.4977093830386744`*^9}, {3.716159746044012*^9, 3.716159752041964*^9}, {
   3.716229680483911*^9, 3.716229702026031*^9}, {3.7162297481815853`*^9, 
   3.716229969786051*^9}, {3.716230001390691*^9, 3.716230017683791*^9}, 
   3.716230369718412*^9, {3.716254550744516*^9, 3.716254551206881*^9}, {
   3.716254611311247*^9, 3.716254722596366*^9}, 3.716254758472414*^9, {
   3.716254792251926*^9, 3.716254824205106*^9}, {3.7162548548581123`*^9, 
   3.71625491552068*^9}, {3.716255131719851*^9, 3.716255142197742*^9}, {
   3.716255200543194*^9, 3.7162553744275084`*^9}, {3.716255462696937*^9, 
   3.7162554670582123`*^9}, 3.71625552211835*^9, {3.7162555718241653`*^9, 
   3.716255580056451*^9}, {3.716255613667755*^9, 3.71625593633549*^9}, {
   3.7162578664263363`*^9, 3.716257885671649*^9}, {3.7171558154905777`*^9, 
   3.717155818838937*^9}, {3.725999352499216*^9, 3.725999362188943*^9}, {
   3.748017808482985*^9, 3.7480178803136463`*^9}, {3.748017939200824*^9, 
   3.748017948595874*^9}, {3.7480179915644083`*^9, 3.748018016619253*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"5dfdcb68-bce0-44dc-ac99-a661330b17d8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Species\"\>", "Text",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     StyleBox["\<\"Setosa\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Virginica\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[0, 
        Rational[2, 3], 0],
      FrontFaceColor->RGBColor[0, 
        Rational[2, 3], 0],
      BackFaceColor->RGBColor[0, 
        Rational[2, 3], 0],
      GraphicsColor->RGBColor[0, 
        Rational[2, 3], 0],
      FontColor->RGBColor[0, 
        Rational[2, 3], 0]], 
     StyleBox["\<\"Versicolor\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]},
    {"\<\"Min\"\>", "4.3`", "4.9`", "4.9`"},
    {"\<\"Lower Quartile\"\>", "4.8`", "6.2`", "5.6`"},
    {"\<\"Median\"\>", "5.`", "6.5`", "5.9`"},
    {"\<\"Upper Quartile\"\>", "5.2`", "6.9`", "6.3`"},
    {"\<\"Max\"\>", "5.8`", "7.9`", "7.`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.716255467931473*^9, 3.716255583791582*^9, {3.716255656960166*^9, 
   3.71625567275078*^9}, {3.716255712993271*^9, 3.716255749698504*^9}, {
   3.716255789334381*^9, 3.716255817005641*^9}, 3.716255908238782*^9, 
   3.7162568810908947`*^9, 3.716257891863315*^9, 3.7171558272891273`*^9, 
   3.725999470813189*^9, 3.725999832616631*^9, 3.7480178935832043`*^9, 
   3.748017951528455*^9, 3.7480180178213778`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"c9851df6-61db-4f04-a30b-3a90d49619a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Multivariate data: {sepal length, sepal width, petal length, petal width}\
\>", "Subsubsection",
 CellChangeTimes->{{3.7162303482612467`*^9, 3.716230354992969*^9}, {
  3.716255020615223*^9, 3.716255020980544*^9}, {3.716255066399035*^9, 
  3.716255076786612*^9}, {3.74827682552929*^9, 
  3.748276834353249*^9}},ExpressionUUID->"a4183b54-017e-4f20-8ced-\
c8d0f134c96d"],

Cell["\<\
The descriptive statistics (mean and standard deviation) can be computed for \
more than one variable (sepal length, sepal width, petal length, petal \
width): \
\>", "Text",
 CellChangeTimes->{{3.725999856840088*^9, 3.725999901702317*^9}, {
  3.748276838600463*^9, 
  3.7482768533605213`*^9}},ExpressionUUID->"b53de5bc-8adb-46fd-947c-\
85d1c1ece66e"],

Cell[BoxData[
 RowBox[{"setosaSampleMultivariate", " ", "=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"irisData", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m___", ",", "\"\<setosa\>\""}], "}"}], "\[RuleDelayed]", " ", 
     RowBox[{"{", "m", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725999916701268*^9, 
  3.725999951707821*^9}},ExpressionUUID->"2e32c074-f777-4a8c-b956-\
1597b4c634bd"],

Cell[BoxData[
 RowBox[{"Mean", "[", "setosaSampleMultivariate", "]"}]], "Input",
 CellChangeTimes->{{3.725999963542275*^9, 
  3.725999968476185*^9}},ExpressionUUID->"39cb8d4c-9f82-4301-b5da-\
f237ecfc4424"],

Cell[BoxData[
 RowBox[{"Variance", "[", "setosaSampleMultivariate", "]"}]], "Input",
 CellChangeTimes->{{3.725999975964179*^9, 
  3.725999981723895*^9}},ExpressionUUID->"7abc4fed-8f14-4c8d-a492-\
8b8215788063"],

Cell[TextData[{
 "The following table visualises the ",
 StyleBox["five-number summary",
  FontSlant->"Italic"],
 " for all four features for each of the three classes:"
}], "Text",
 CellChangeTimes->{{3.725999994670067*^9, 3.726000004306644*^9}, {
  3.748018121267824*^9, 3.74801815016317*^9}, {3.7480189573984222`*^9, 
  3.7480189595775537`*^9}, {3.748276858656342*^9, 3.748276859392714*^9}, {
  3.8321595483678102`*^9, 3.8321595486401253`*^9}, {3.8329437270650177`*^9, 
  3.832943727296567*^9}},ExpressionUUID->"73ad8cda-79b8-4554-bc7e-\
92072a4f4caa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "multivariateSetosa", ",", "mutivariateVirginica", ",", 
     "multivariateVersicolor"}], "}"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"irisData", ",", 
        RowBox[{"{", 
         RowBox[{"___", ",", "#"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "&"}], " ", "/@", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<setosa\>\"", ",", "\"\<virginica\>\"", ",", "\"\<versicolor\>\""}], 
     "}"}]}]}], ";", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Min\>\"", ",", "\"\<Lower Quartile\>\"", ",", 
            "\"\<Median\>\"", ",", "\"\<Upper Quartile\>\"", ",", 
            "\"\<Max\>\""}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Column", " ", "/@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", " ", "/@", 
               RowBox[{"Transpose", "[", "#", "]"}]}], ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Quartiles", "[", "#", "]"}]}]}], ",", 
              RowBox[{"Max", "/@", 
               RowBox[{"Transpose", "[", "#", "]"}]}]}], "}"}]}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{
           "multivariateSetosa", ",", "mutivariateVirginica", ",", 
            "multivariateVersicolor"}], "}"}]}]}], " ", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\< \>\"", ",", "\"\<Text\>\"", ",", "Gray"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Setosa\>\"", ",", "\"\<Text\>\"", ",", "Red"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Virginica\>\"", ",", "\"\<Text\>\"", ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Versicolor\>\"", ",", "\"\<Text\>\"", ",", "Blue"}], 
         "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Center", ",", "Center", ",", "Center"}], "}"}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.716255960299006*^9, 3.716255991295917*^9}, {
   3.716256027669907*^9, 3.716256042924081*^9}, {3.7162560826382837`*^9, 
   3.716256242349607*^9}, {3.716256297828867*^9, 3.7162563157339*^9}, {
   3.7162563661670837`*^9, 3.7162564305702963`*^9}, {3.71625647205278*^9, 
   3.716256503665772*^9}, {3.716256573408786*^9, 3.716256875813661*^9}, {
   3.71715583763206*^9, 3.7171558449256496`*^9}, 3.72599938798376*^9, {
   3.726000126255413*^9, 3.726000134237006*^9}, {3.726000175046584*^9, 
   3.726000209163116*^9}, {3.748018173732544*^9, 3.748018245822545*^9}, {
   3.748018679288877*^9, 3.7480186986617813`*^9}, {3.7480188507593193`*^9, 
   3.748018864807744*^9}, 3.748018900697953*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"6bfa0129-3397-42ae-af69-61e0ff74af3f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\" \"\>", "Text",
      StripOnInput->False,
      LineColor->GrayLevel[0.5],
      FrontFaceColor->GrayLevel[0.5],
      BackFaceColor->GrayLevel[0.5],
      GraphicsColor->GrayLevel[0.5],
      FontColor->GrayLevel[0.5]], 
     StyleBox["\<\"Setosa\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\<\"Virginica\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[0, 
        Rational[2, 3], 0],
      FrontFaceColor->RGBColor[0, 
        Rational[2, 3], 0],
      BackFaceColor->RGBColor[0, 
        Rational[2, 3], 0],
      GraphicsColor->RGBColor[0, 
        Rational[2, 3], 0],
      FontColor->RGBColor[0, 
        Rational[2, 3], 0]], 
     StyleBox["\<\"Versicolor\"\>", "Text",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]},
    {"\<\"Min\"\>", 
     TagBox[GridBox[{
        {"4.3`"},
        {"2.3`"},
        {"1.`"},
        {"0.1`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"4.9`"},
        {"2.2`"},
        {"4.5`"},
        {"1.4`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"4.9`"},
        {"2.`"},
        {"3.`"},
        {"1.`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {"\<\"Lower Quartile\"\>", 
     TagBox[GridBox[{
        {"4.8`"},
        {"3.2`"},
        {"1.4`"},
        {"0.2`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"6.2`"},
        {"2.8`"},
        {"5.1`"},
        {"1.8`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"5.6`"},
        {"2.5`"},
        {"4.`"},
        {"1.2`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {"\<\"Median\"\>", 
     TagBox[GridBox[{
        {"5.`"},
        {"3.4`"},
        {"1.5`"},
        {"0.2`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"6.5`"},
        {"3.`"},
        {"5.55`"},
        {"2.`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"5.9`"},
        {"2.8`"},
        {"4.35`"},
        {"1.3`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {"\<\"Upper Quartile\"\>", 
     TagBox[GridBox[{
        {"5.2`"},
        {"3.7`"},
        {"1.6`"},
        {"0.3`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"6.9`"},
        {"3.2`"},
        {"5.9`"},
        {"2.3`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"6.3`"},
        {"3.`"},
        {"4.6`"},
        {"1.5`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {"\<\"Max\"\>", 
     TagBox[GridBox[{
        {"5.8`"},
        {"4.4`"},
        {"1.9`"},
        {"0.6`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"7.9`"},
        {"3.8`"},
        {"6.9`"},
        {"2.5`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"7.`"},
        {"3.4`"},
        {"5.1`"},
        {"1.8`"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Center, Center, Center}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.726000210241782*^9, 3.748018249142191*^9, 
  3.748018867741366*^9, 3.74801890171312*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"e08a99a8-0cb9-4db7-97f2-2583278e69ed"]
}, Open  ]],

Cell["Can use a resource function instead:", "Text",
 CellChangeTimes->{{3.8320650250201*^9, 3.8320650349168415`*^9}, 
   3.832159555472952*^9},ExpressionUUID->"ac1f2ad4-4317-407c-ad5d-\
5fe40bffa328"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<StatisticsSummary\>\"", "]"}], "[", 
  "setosaSampleSepalLengths", "]"}]], "Input",
 CellChangeTimes->{{3.8320650039940333`*^9, 3.8320650039969645`*^9}, {
  3.8320651314303136`*^9, 3.832065136837269*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"a039650f-70a1-42f2-8440-8350940010ab"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Count" -> Association["Column 1" -> 50], "NonNumeric" -> 
       Association["Column 1" -> 0], "Mean" -> 
       Association["Column 1" -> 5.005999999999999], "StandardDeviation" -> 
       Association["Column 1" -> 0.3524896872134513], "Min" -> 
       Association["Column 1" -> 4.3], "25%" -> 
       Association["Column 1" -> 4.8], "Median" -> 
       Association["Column 1" -> 5.], "75%" -> Association["Column 1" -> 5.2],
        "Max" -> Association["Column 1" -> 5.8]], "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Column 1"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[96.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["Column 1" -> TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Column 1"}, {
         TypeSystem`Atom[Real]}], 9], "Meta" -> Association[], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Column 1"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[96.00000000000001], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`RowShape[
            Association["Column 1" -> TypeSystem`PackageScope`AtomShape[60]]], 
           DirectedInfinity[1], 1, {All}]]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"Column 1"}, {
         TypeSystem`Atom[Real]}], 9], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     9, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Column 1", 
                  Style[
                  "Column 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Column 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Column 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Count", 
                  Style[
                  "Count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Count"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Count"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["50"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Count"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["NonNumeric", 
                  Style[
                  "NonNumeric", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["NonNumeric"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["NonNumeric"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["NonNumeric"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Mean"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.35249"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["StandardDeviation"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Min"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["25%", 
                  Style[
                  "25%", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["25%"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["25%"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["25%"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Median"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["75%", 
                  Style[
                  "75%", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["75%"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["75%"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["75%"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{96.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Max"], 
                 Key["Column 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{209., {140.634033203125, 146.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{209., {140.634033203125, 146.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8320651434998417`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"cdb7b23e-ead9-4f20-941c-475e20c13129"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"00d42450-93eb-42ff-a02a-5b00cbcd3c59"],

Cell[CellGroupData[{

Cell["Tools for Statistical Explorations", "Section",
 CellChangeTimes->{{3.716217004237474*^9, 3.716217011979953*^9}, {
  3.71625242460493*^9, 3.716252436394717*^9}, {3.716258175098386*^9, 
  3.716258181278558*^9}},ExpressionUUID->"d18cb9d0-209b-4029-9afb-\
7b8f9b4beaa6"],

Cell["\<\
There are a few other numbers that can be useful in understanding the data:\
\>", "Text",
 CellChangeTimes->{{3.726000273762748*^9, 3.726000316350897*^9}, {
  3.748276876947624*^9, 3.748276877576263*^9}, {3.7482817676485786`*^9, 
  3.748281767833149*^9}},ExpressionUUID->"bfc05010-d308-4f28-b54e-\
db5aafe8d3b9"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"irisData", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7171558628539963`*^9, 3.717155904562297*^9}, {
  3.725999392928303*^9, 3.7259993961113462`*^9}, {3.726000246441704*^9, 
  3.726000247502396*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"066c168a-7c7a-44bd-ade1-75c6466614c5"],

Cell[CellGroupData[{

Cell["Frequency Counts ", "Subsection",
 CellChangeTimes->{{3.716230418224886*^9, 
  3.716230428956088*^9}},ExpressionUUID->"955de123-592c-4957-8743-\
672d479a0e8b"],

Cell["\<\
List the number of samples with similar values of sepal lengths:\
\>", "Text",
 CellChangeTimes->{{3.716257806152882*^9, 3.716257819243216*^9}, {
  3.716257911989211*^9, 3.7162579157978067`*^9}, {3.72600041155827*^9, 
  3.726000427947002*^9}},ExpressionUUID->"2579d0db-6218-4c91-b7fa-\
028f9da09cab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Counts", "[", 
   RowBox[{"Round", "[", 
    RowBox[{"irisData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "//", 
  "Sort"}]], "Input",
 CellChangeTimes->{{3.716230490151376*^9, 3.7162305377073708`*^9}, {
   3.7162569613360453`*^9, 3.716256963549513*^9}, {3.716257057381567*^9, 
   3.716257058290387*^9}, {3.7162577704458723`*^9, 3.716257792952962*^9}, {
   3.716257929138522*^9, 3.716257967615102*^9}, {3.7162581149490223`*^9, 
   3.716258122825159*^9}, 3.725999399387949*^9, {3.726000451869011*^9, 
   3.726000467116843*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"2b6be051-c450-404c-9650-1f3fe57389b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tally", "[", 
   RowBox[{"Round", "[", 
    RowBox[{"irisData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "//", 
  "Sort"}]], "Input",
 CellChangeTimes->{{3.717155929410083*^9, 3.717155929414693*^9}, 
   3.725999401096301*^9, {3.7260004748747377`*^9, 3.726000475817081*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"537d3e3c-4b36-489c-bf74-7c38c5bb57cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correlation", "Subsection",
 CellChangeTimes->{{3.7162304327921247`*^9, 
  3.716230436684218*^9}},ExpressionUUID->"6bf99995-031f-40e0-9d8b-\
df29180bed24"],

Cell["\<\
Examine the correlation between sepal lengths and petal lengths:\
\>", "Text",
 CellChangeTimes->{{3.7162580683118553`*^9, 3.71625808814789*^9}, {
  3.726000487621501*^9, 
  3.7260004938413877`*^9}},ExpressionUUID->"ee94c91d-7323-4e6a-8c83-\
6196b810c0e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Correlation", "[", 
   RowBox[{"irisData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4977077101400537`*^9, 3.497707759408201*^9}, {
   3.4977078357714853`*^9, 3.4977078750391207`*^9}, {3.497708546692758*^9, 
   3.497708585957629*^9}, {3.4977087833009667`*^9, 3.4977087850197496`*^9}, 
   3.4977088280674515`*^9, 3.716160112884182*^9, {3.716257707912931*^9, 
   3.716257752016076*^9}, 
   3.725999402147189*^9},ExpressionUUID->"b107a59a-b9b4-4d25-b56d-\
f1e291ad02a7"],

Cell["Correlation between all pairs of variables:", "Text",
 CellChangeTimes->{{3.716258090658926*^9, 3.716258106635009*^9}, 
   3.717156021811985*^9, 
   3.7482768872574673`*^9},ExpressionUUID->"9dac2bf2-1d9c-4770-839c-\
e876a50c2e7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Correlation", "[", 
   RowBox[{"irisData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7162306073832083`*^9, 3.716230632641245*^9}, {
   3.7162306851629343`*^9, 3.716230764516603*^9}, 3.716257690346921*^9, 
   3.7259994031422253`*^9},ExpressionUUID->"bf132707-f694-4853-afab-\
b8b3fa4be016"],

Cell["\<\
It seems that features 3 and 4 are strongly correlated, while features 1 and \
2 do not show much correlation.\
\>", "Text",
 CellChangeTimes->{{3.717156041050811*^9, 3.717156084671865*^9}, {
   3.726000551060082*^9, 3.72600056991728*^9}, 
   3.7482768922567043`*^9},ExpressionUUID->"e4103daf-1198-4c67-883d-\
820ec1effaa7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4ca85288-d769-4534-8808-f33da23acf90"],

Cell[CellGroupData[{

Cell["Tools for Visual Explorations: Scatter Plots", "Section",
 CellChangeTimes->{{3.716217004237474*^9, 3.716217011979953*^9}, {
  3.71625242460493*^9, 3.716252436394717*^9}, {3.716258175098386*^9, 
  3.716258181278558*^9}, {3.7162582148722363`*^9, 3.716258217493637*^9}, {
  3.7162584040809507`*^9, 3.71625842022826*^9}, {3.717186009846998*^9, 
  3.717186012675461*^9}},ExpressionUUID->"e78ae0fe-9b27-4489-9bec-\
a397b81bb977"],

Cell["\<\
Graphics communicate a lot more than columns of numbers, since humans are \
highly visual. Human pattern-recognition abilities are therefore better put \
to use through visual explorations to quickly to check for trends, shapes of \
distributions, gaps and outliers.\
\>", "Text",
 CellChangeTimes->{{3.716130140030877*^9, 3.716130153238043*^9}, 
   3.716130484581649*^9, {3.716230459586268*^9, 3.716230460143544*^9}, {
   3.716258224032776*^9, 3.7162583357427483`*^9}, {3.717185831222899*^9, 
   3.7171858319555283`*^9}, {3.748276901190975*^9, 3.7482769024072857`*^9}, {
   3.748281788407673*^9, 3.748281799167602*^9}, {3.8321596433646603`*^9, 
   3.8321596440340157`*^9}},ExpressionUUID->"ad2598b2-a0f3-43b7-98e6-\
c166155cc454"],

Cell[CellGroupData[{

Cell["\<\
Scatter plot: Relationship between two variables\[LongDash]sepal length and \
sepal width\
\>", "Subsubsection",
 CellChangeTimes->{
  3.7161305946828413`*^9, {3.71613198036889*^9, 3.716131987943221*^9}, 
   3.7161322292534027`*^9, {3.7162583690249357`*^9, 3.716258376774087*^9}, 
   3.748276287295169*^9, {3.748276916589999*^9, 3.748276925125906*^9}, {
   3.8321596535138683`*^9, 3.832159655491269*^9}, {3.832160372663176*^9, 
   3.8321603730471973`*^9}},ExpressionUUID->"53186095-fb2d-4548-8143-\
f667641e9a27"],

Cell[TextData[{
 "The correlation between two variables can be visually seen in a scatter \
plot. Plot the sepal length versus the sepal width for s",
 StyleBox["etosa",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.726000591770873*^9, 3.726000641089394*^9}, {
  3.748276927909975*^9, 3.748276933942354*^9}, {3.748281810775236*^9, 
  3.7482818140631104`*^9}},ExpressionUUID->"8fb9cf79-54b4-44cd-a59c-\
324572157c63"],

Cell[BoxData[
 RowBox[{"setosaSampleSepalLengthsSepalWidths", " ", "=", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{"irisData", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sl_", ",", "sw_", ",", "___", ",", "\"\<setosa\>\""}], "}"}], 
     "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"sl", ",", "sw"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726000690425291*^9, 
  3.726000718286792*^9}},ExpressionUUID->"4e13150a-4bf3-4ebe-b2a0-\
633daea6149e"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"setosaSampleSepalLengthsSepalWidths", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<sepal length\>\"", ",", "\"\<sepal width\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.726000726057198*^9, 
  3.726000765569869*^9}},ExpressionUUID->"50838178-f192-4c76-afc8-\
be851d706c97"],

Cell["\<\
The following graphic visualises the relationship between sepal length and \
sepal width for all three classes:\
\>", "Text",
 CellChangeTimes->{{3.726000771018443*^9, 3.726000815055969*^9}, {
  3.748276941549665*^9, 3.7482769425019283`*^9}, {3.832943785564273*^9, 
  3.8329437857216167`*^9}},ExpressionUUID->"5216a60d-807c-448c-b40d-\
3be119e2edd9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"irisData", " ", "=", " ", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
     ",", "\"\<Data\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"class1", ",", "class2", ",", "class3"}], "}"}], " ", "=", 
   RowBox[{"Keys", " ", "/@", " ", 
    RowBox[{"GatherBy", "[", 
     RowBox[{"irisData", ",", "Values"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"names", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], " ", "/@", " ", 
    RowBox[{"GatherBy", "[", 
     RowBox[{"irisData", ",", "Values"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"headers", " ", "=", " ", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<FisherIris\>\""}], "}"}], 
      ",", "\"\<VariableDescriptions\>\""}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"features", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"#", ",", 
       RowBox[{"-", "7"}]}], "]"}], "&"}], "/@", 
    RowBox[{"headers", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "4"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scatter", "[", 
   RowBox[{"i_", ",", "j_", ",", 
    RowBox[{"legends_", ":", "None"}], ",", 
    RowBox[{"labels_", ":", "None"}], ",", 
    RowBox[{"ticks_", ":", "None"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "pairsOfFeatures", "}"}], ",", 
    RowBox[{
     RowBox[{"pairsOfFeatures", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "j"}], "}"}]}], "]"}], "]"}], "&"}], "/@", " ", 
       RowBox[{"{", 
        RowBox[{"class1", ",", "class2", ",", "class3"}], "}"}]}]}], " ", ";",
      "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"pairsOfFeatures", ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", "6"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "6"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", "ticks"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", "legends"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", "labels"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"scatter", "[", 
  RowBox[{"1", ",", "2", ",", "names", ",", 
   RowBox[{"headers", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], ",", "True"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7161319936641903`*^9, 3.716132004864149*^9}, 
   3.7162105289339113`*^9, {3.716210878975586*^9, 3.716210888767724*^9}, {
   3.7162135443022757`*^9, 3.716213569917198*^9}, {3.71621368259344*^9, 
   3.716213817575165*^9}, {3.716213877874852*^9, 3.7162139457092113`*^9}, {
   3.716213987223962*^9, 3.716214091765881*^9}, {3.7162141262888803`*^9, 
   3.716214183468905*^9}, {3.716214230571168*^9, 3.7162142811633863`*^9}, {
   3.716251560982422*^9, 3.7162516381699457`*^9}, {3.726000821121048*^9, 
   3.7260008222484417`*^9}},ExpressionUUID->"242476b4-d07c-48de-90f7-\
6cb76d95fa9c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 6, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1:eJxtUkESgjAMrHgQBBUK4tkv6Af6Bp/gjF59j75J/ySQ3XQayEyns8lmmyY5
31+3x9o5dxnOajjZcJ6TdcFNVoXPe7QWOA+/72ge/iII38Ofg9cBM/8YrpMd
lC+4VD6x8Bvgjb5PferJvQOv1Xxi1iu4MfgEXEO313eX6439IF/8e40Tp/ml
xllv2q/K5G9n/2F/WL/tl+jY+mw8zov6tp9WT+qpodvDX8/mwXqoT77dn3Qf
4jz4/+X/Vrg9eJmZUzHj23nYfbBxziPtT9wv6nM+f1NO+8E=
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
             FontSize -> 6, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1:eJx1UtsNwjAMTF88Pwlpm/LDCrBAZmAEJPhlHpgJdqJt7oziCEuRdY5zts85
Xh+XW2WMOY2nGE9paIfwek62hu8VHsLnPdkqxHwX7rOVwB54gTwn+DxbD7wB
3w7xCnEPvMR7i7wG/BbeIN4Cs58O8QJ8nfBF7BS/l3l4T76Y10r9mKf5mV9L
P9SL9fX8zNf31Dvt16t+BqWvz+ZP53PwteyLemus5031bOD3f+ptMz3TfZeZ
vqxPPYjZL/XR+0jnsRl/uq9fPeJUH/0/rPSj/+8XLFT5EQ==
         "]]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 6, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1:eJxtUm0OgjAMHYoIavxjAgMGxivoBXYGj2Cifz2Pnknv5KDtMys0aZqufa8f
6+n2vN6Xxphz0CToIuhllNo/Rtl48iv/fg2y4nfnzSi5l3yya35vEKf8Hj7x
HNhPGdcB//0M0iBOvmO7Az/xFGxr9Ec8LeoRrlT1Ku4rU/hi0j/he87fwyeb
cp5lfMK2BR/hStSL+TLsT/qX+WX/Mr/wkW+BJ2vVfmtVz6l4p+Y/Yj6Nj+/h
X0/ml3nm72ELPsrLsa+4nxZxmV98Hdf3KP8d70fvr5n0J/cw/99W9V8h/gPP
IBfb
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {4.2437499999999995`, 0}, 
     PlotRange -> {{4.3, 7.9}, {0, 4.4}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {4.2437499999999995`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Sepal width in cm.\"", TraditionalForm], None}, {
        FormBox["\"Sepal length in cm.\"", TraditionalForm], None}}, 
     FrameTicks -> {{True, True}, {True, True}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{4.3, 7.9}, {0, 4.4}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"setosa\"", "\"versicolor\"", "\"virginica\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 6, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.10666666666666666`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 6, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.10666666666666666`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 6, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.10666666666666666`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "6"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", "6"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "6"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.716213801163609*^9, 3.7162139189272537`*^9, 3.71621396585708*^9, 
   3.716214184811027*^9, {3.7162142706134653`*^9, 3.716214282032835*^9}, {
   3.716251605735361*^9, 3.716251638952063*^9}, 3.7260008515292892`*^9, 
   3.726189553230707*^9},ExpressionUUID->"0da46074-afb6-4f99-bc47-\
d91eb944149f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Scatter plot matrix: Relationships between pairs of variables\
\>", "Subsubsection",
 CellChangeTimes->{
  3.696597314596211*^9, {3.7161306000642557`*^9, 3.716130603904645*^9}, {
   3.716132055516755*^9, 3.716132088657815*^9}, {3.74827695050916*^9, 
   3.748276955524795*^9}, {3.832159674562501*^9, 3.83215967705859*^9}, {
   3.8321603774392*^9, 
   3.832160378015316*^9}},ExpressionUUID->"e5a9c3be-6085-4bb5-b592-\
a4c9dcfbf442"],

Cell["\<\
A scatter plot matrix shows the pairwise relationship between multiple \
variables:\
\>", "Text",
 CellChangeTimes->{{3.726000922863549*^9, 3.726000952970202*^9}, {
  3.748276959756706*^9, 
  3.748276963828788*^9}},ExpressionUUID->"136aa0ed-5fff-4222-8e4b-\
2af592078b34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"variable", " ", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Sepal length\>\"", ",", "\"\<Sepal width\>\"", ",", 
     "\"\<Petal length\>\"", ",", "\"\<Petal width\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.726001023640765*^9, 
  3.7260010340486097`*^9}},ExpressionUUID->"c168a254-b198-444e-8545-\
e9964ba4727f"],

Cell["\<\
Visualise at a glance how the sepal length corresponds to each of sepal \
width, petal length and petal width:\
\>", "Text",
 CellChangeTimes->{{3.726001180115211*^9, 3.726001212201089*^9}, {
  3.748276968684379*^9, 3.748276969052437*^9}, {3.8329437946576014`*^9, 
  3.832943794792975*^9}},ExpressionUUID->"fbc7a220-8f65-4b98-a119-\
51c114d1df38"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"setosaSampleMultivariate", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "#"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"variable", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"variable", "[", 
         RowBox[{"[", "#", "]"}], "]"}]}], "}"}]}]}], "]"}], "&"}], " ", "/@", 
  RowBox[{"{", 
   RowBox[{"2", ",", "3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.726001149784753*^9, 3.726001163695606*^9}, {
  3.7260012245482883`*^9, 3.726001277809279*^9}, {3.7260013124297867`*^9, 
  3.7260013131070147`*^9}},ExpressionUUID->"60e4df93-d7dc-4839-b893-\
7592d68bf06c"],

Cell["\<\
The preceding comparison repeatedly done for each variable in turn gives the \
scatter plot matrix:\
\>", "Text",
 CellChangeTimes->{{3.726001391607297*^9, 3.726001426576169*^9}, {
   3.748276386580276*^9, 3.748276389064268*^9}, {3.748276973556335*^9, 
   3.748276973916461*^9}, 
   3.748281839182301*^9},ExpressionUUID->"97c538d3-ce54-4513-b641-\
a37ceb548907"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "j"}], ",", 
      RowBox[{"variable", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"setosaSampleMultivariate", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "j"}], "}"}]}], "]"}], "]"}], "]"}]}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "4"}], "}"}]}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.726000966947351*^9, 3.7260009917529078`*^9}, {
  3.726001038656789*^9, 
  3.726001103233642*^9}},ExpressionUUID->"040fbd65-1fe8-454b-9418-\
5db45626c5c3"],

Cell["\<\
The scatter plot matrix following shows the relationships between pairs of \
variables for all the three classes:\
\>", "Text",
 CellChangeTimes->{{3.726001454899046*^9, 3.726001494891012*^9}, {
  3.7482764162651167`*^9, 3.7482764175834427`*^9}, {3.748276981755975*^9, 
  3.748276982116085*^9}},ExpressionUUID->"d6e81fcc-633b-4e2b-b5f1-\
6fe9aae65ea8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "\[Equal]", "j"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"features", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "14"}], "]"}], "]"}], ",", 
       RowBox[{"scatter", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716210556158594*^9, 3.716210690089674*^9}, {
  3.716214377946039*^9, 
  3.7162144090582523`*^9}},ExpressionUUID->"001b0630-27b4-491e-8edf-\
af049051d132"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Sepal length\"\>",
          StripOnInput->False,
          FontSize->14], TextForm]], "InlineText",ExpressionUUID->
        "01fa2067-9f4e-45b2-99b6-bf2ac322f647"],
       Text[
        Style["Sepal length", 14]]], {194.4, -138.70935555973466}, {
      Center, Center}, {360.00000000000006, 256.86917696247156}], InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUkESgjAMrHgQBBUK4tkv6Af6Bp/gjF59j75J/ySQ3XQayEyns8lmmyY5
31+3x9o5dxnOajjZcJ6TdcFNVoXPe7QWOA+/72ge/iII38Ofg9cBM/8YrpMd
lC+4VD6x8Bvgjb5PferJvQOv1Xxi1iu4MfgEXEO313eX6439IF/8e40Tp/ml
xllv2q/K5G9n/2F/WL/tl+jY+mw8zov6tp9WT+qpodvDX8/mwXqoT77dn3Qf
4jz4/+X/Vrg9eJmZUzHj23nYfbBxziPtT9wv6nM+f1NO+8E=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTF88Pwlpm/LDCrBAZmAEJPhlHpgJdqJt7oziCEuRdY5zts85
Xh+XW2WMOY2nGE9paIfwek62hu8VHsLnPdkqxHwX7rOVwB54gTwn+DxbD7wB
3w7xCnEPvMR7i7wG/BbeIN4Cs58O8QJ8nfBF7BS/l3l4T76Y10r9mKf5mV9L
P9SL9fX8zNf31Dvt16t+BqWvz+ZP53PwteyLemus5031bOD3f+ptMz3TfZeZ
vqxPPYjZL/XR+0jnsRl/uq9fPeJUH/0/rPSj/+8XLFT5EQ==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUm0OgjAMHYoIavxjAgMGxivoBXYGj2Cifz2Pnknv5KDtMys0aZqufa8f
6+n2vN6Xxphz0CToIuhllNo/Rtl48iv/fg2y4nfnzSi5l3yya35vEKf8Hj7x
HNhPGdcB//0M0iBOvmO7Az/xFGxr9Ec8LeoRrlT1Ku4rU/hi0j/he87fwyeb
cp5lfMK2BR/hStSL+TLsT/qX+WX/Mr/wkW+BJ2vVfmtVz6l4p+Y/Yj6Nj+/h
X0/ml3nm72ELPsrLsa+4nxZxmV98Hdf3KP8d70fvr5n0J/cw/99W9V8h/gPP
IBfb
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{4.2437499999999995`, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{4.3, 7.9}, {0, 4.4}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -138.70935555973466}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247156}], 
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtENAiEMRZ0A7sBvV9ABYAZHMNFf59GZdBeNxmhMLnJXHoRHbEKax2tL
+8pqd9zuF0qpdTyzeObxHCbrg/iXP59G6zK+XkYzQfzTy70JarK3F8/5Nmwm
++Z48IhHvsTr5v2atxlL3S7I/Sdj5AvWib8nvEz9PNI8rqlfz9fT/I7m4f55
3sLXet0yj/i6/yHrg/kYSz+lPjDvi/UBZj25nnj3dx/oB3oiHvrx/8F+WV+u
B16woXqa+KJHva+h+Q/g63hD/8U2/YD/ARqSKuc=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx9UtsNwjAMDPCDUIE+Qpq2/LACLJAZGAEJfpkHZoKdaOvzVQkIS5Fl93I5
X3243M/XhTHm2J9Zf+ZGYx/eryHK8HwM0QTpa90hV+g75By5DbcxSvA43j+N
0ST8FfAr5PS+xb0teCxyhvs1cPq+px7h8XxPaoc6Q27BU/B7rLdGPwfe87vi
VZ/qkbri+6pH54/n9l9+C66gH6pP+h35VX/sy6Qv9j/j/xLeDWvhX3Pe2G8P
vAVuR/7f77WcJ5538lf9/L0/LsF77oPqi/E22R/HfdD5/9c+8Vt9XBKvej91
5P61
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtktsNwjAMAANsQNPSN2IFWCAzMAIS/DIPzAQ70dY+oxgsRZYTn585XO7n
6yaEcJzOajrr6ZwWaVJYpE5i79Jtkai6T8/HLLuEv9xXyrWOG1W3yhXqt1W/
weK8X7N8ebF75WuLTz0Sr1H/UnWnfpXy1BV/+vE88XN+tLqwhSNPbfG5Jy9z
oW8fj77z99Z4+ieP2OylsLnA0w954elb3gfH7Y3zfL7faFwef7R7/x+Ixzzz
f1XYvESX1n/Od5bf74998x//zw87Wn3si33zznyph7jk+wBIGiVr
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{4.2437499999999995`, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{4.3, 7.9}, {0, 6.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -138.70935555973466}, 
      ImageScaled[{0.5, 0.5}], {360., 256.86917696247156}], InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4jQwEHGYNRMETtpDaGE4/+wZEBCC8yHqEXwG
MEDXLwrl34SrNwaDyzjUC+KwfyeaeSftIeYI4+DvhPIF0fjiaP4Rg7sPu3tF
4O6FqYfx0eXR3YcanjcxwgsmDwmHBxj+QQ8fVP5NqHtE0PyDzhfCGV7o/kXV
vxNqnxjO9IDdfbjU78SIX/T0BjMPNX0IoYWvIA71jzHCG+Zf9PjClX4h6kRx
+g8Aac9WAA==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUsENwjAMDDACoU1bPqwAAzQzMAISfJkHZoJdQCAEggdtL+coTi1Fke3z
5WxntTtu9zNjzLo7k+5MDW3pD4O92vOpt8oj/g5+Iz7uwl8vvT2DX0se8Zjf
DFZ58HwC3zzgby3erQWP24oe4KzgUV8qPU7xOanHXSj+OsuTD3pL4QPeSZ54
6LiLHuB+8r7uP613HvGHzJt4zoP6gGvEp37Ev6r/OH/q576olz7z7Jd6yJfu
a5HNm3nqSeen+9H/Jff5vt7fuL74H8b3G/n0f+Q+U31W5qPxf/6SMmM=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UlsKwjAQTFtvINh3xSvoAZIzeARBfz2PnkmvIy2KmHYyW7LFhTBMdmdf
ye50PZ4zY8zen8Sf1J/DZKUzk60ceO4uk30tsHHPx2jGMR78Y6Gr3P02WhJ0
ncTjfh10bwtsRQ+sFG+kH+YHMl8p/SFfLfWAG4nnPMBM6VPJH9fvZB7yOL4I
2FvE1eIHzvWpj/sp/8zP+Eb5C+HIP3POo/W4H4K/lX2Bbxf75Lzxf+ilHvBl
9T4Yr/cb/w/dr36vSulrlT9fvDf91PO/kOv+qNf/iftlPOrn0u8Pg41H0g==

           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{4.2437499999999995`, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{4.3, 7.9}, {0, 2.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -138.70935555973466},
       ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247156}]}, {
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMDOWDFkJJ+uKbFWCBzMAISPDLPHQm2Im29rmK01qKrJPP9sX2
5fG+P7fGmOvwNsPLDMyG12RNIJyH/jNazb4Iv+9oFfuc+cCW85pwm+zEeS3j
g/CBY/6O+V7qx/2PST3ytehdxp6xY3xWfbpEr54H+VL4wIhDD/KhF3HMB/8n
v0/ytf54PvO8oI/qznHgtX2hvtZLOpzkk3fcp1vZR5HoiflW+PE9eXUPOh/z
zhhX0g/5y/wyuV/8V8dRD/vAvojfyn5Q/w/vp/vB
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTGlLW/iklD74YQVYIDMwAhL8Mg/MBDvR1neOYsBSZF18ts9O
Dpf7+Zo6547jScazGM/zMVnl3Wx7Tyy+8+/XZCXw4G+zLcBvgJfAvWLJY3zl
T7N18CnqbYAL8Hrc58ivUdfBE1PPDj7BfWvqWdzoPOJ7rcc4+0teqC/8FvzM
8CvVw/nZn3zOb+PUx33HesI+hTdonPqZz/nlPtP9c998L4t/z5trvXjfW/DW
pl/Qw//Bee1+uQ/2p17imB/mob74/9WqN65fmvmLP9i+Z/31fz+nnfkR
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTKGF8hA/SDR9BbECLJAZGAEJfpkHZoKdSONHlUO1FFmOfWf7
ktPteb3PjTHncLJwZuE8oq39JVrt36/BCo4rb6KVnuo6vl9qveTJN1DvOM6Z
dw/4XvPfz2AN+y37jnEr5Zf5yI/9ia8FvgPPsdB9hA/xwk/1O8Y79rnGhMu4
3gJfq/3Ij/1TfKH6if6yv/DJ/inegr5W87gP4inf634UH//wqV617i/9Un7H
dRuoLyf0tZBvNU7ff8zjfxR95L1Rv3Q+ifPJ/yrzo77Up/I/kxEX2w==
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1.9625, 4.12},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{2., 4.4}, {4.3, 7.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -416.12806667920404}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.8691769624716}], 
     InsetBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Sepal width\"\>",
          StripOnInput->False,
          FontSize->14], TextForm]], "InlineText",ExpressionUUID->
        "29845536-3f98-4992-9478-7936603efb95"],
       Text[
        Style["Sepal width", 14]]], {583.2, -416.12806667920404}, {
      Center, Center}, {360.00000000000006, 256.8691769624716}], InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJyFUsENwjAMDOVBSwoNI7ACDNDMwAhI8GUemAl2ARUhKiREW+dc9aIKS1V0
tc85n7Pen3aHqTFm03yT5ksMIvfHLl6l4FTx5dxG5m/XNp6lnKmXunfAPX/b
ReHl/ARsKW+VL3imee4v9y+o3nr5X0d6gSX/CNgFPVXot6J+hc7Hfsi51HmA
WQ/yrBf+CL4H/nzEny/pr0fmzaP7eV+oh5/cD3zhOdLr/uwjUz+hZ/g+4veE
PN/PfOElivn9oR7zYB/sH+8P9eg39KvfF/aD/A+Oqx50
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtERgjAMLVARFbUWFnAFXYAZHME7/XUemUl3spC8eEk1d73cK+nLyyPH
6+Nyq5xzp3SKdMp0xucUq+H9miIOwG6OyPcN33fDfY6SvwfGNecoGO8Jr4X/
PEcl94SX8p76LPh+zzyOc8u5Yb7A9YXoAZ/uB9yaeQ7CB73oT3osf+TsRR/8
ItyZ+YPUa//qTB/lrx7oQz34td5e3uv/5cUv7fdOMPFvM7/1/H3mD9Vtsv3A
PNgP6y/8hB/wB3p/19t5gvBjf6AX+2D3Q///8Mdvb/rWovcDTXzuIA==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTKFAWxAf9F2+WAEWyAyMgER/mQdmgp1ocz6jusJSZNmXs89x
TrfH9b50zp2HEw1nMZw+WOZdsMa/nqOtPPKF5BPJ1/4SbCN4pTjytcbAO4lj
8Qflw7eKk/95j7YTPvWkqof6cL/UfvCV6VcIb2346V8+7u1FRyc+Ft5RfKT1
WQ/3Ku2HfK4x61H/FM+Uz3rcB/nQm5t95Ga++T6meKPzgd/O+Pa9OL+tz3ro
s1Uc9+0+EtVPHP1LjS3f7tvuj//Rvh/7Ieb//f0Hi1M/9UznK/wXy6T93A==

           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1.9625, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{2., 4.4}, {0, 6.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -416.12806667920404}, 
      ImageScaled[{0.5, 0.5}], {360., 256.8691769624716}], InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGZigAEeh1kzQeCkPYTPAedDaE44/+wZEOBA4yP0
G4MBP5R/E8rndoDQl+F8VPXsOMzfCbWfF009Nw737sTBF0DzjyCa+xDuhYUH
zL1pYMCHk4/uHlT33sQIH4h+LgeIPQ8I+Afdvwj34QoPQvGFbh7EPQLw8IKo
F8CpH918dPeg+hc9PnDFH3p4M8H5uOyDyD+Gxwdq+HBgxBcu96OnL1j8wPgA
3ehJjQ==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJyFUtsNwjAMTJ+8pmAFGCCZgRGQ4Jd5YCbYpQiEiuCDNM65ygWEpahyfL6c
z11uD5tdZYxZ+VP4U/pzOg4xc/sQD4vchOjt5TzEVHPBlU7u7zFvqd5Sfe6E
92nXIaqI72I+UbzgGtUjOKN4+Y56BF9kfOhnfsyT8jNfo3wpfx/xdZznqn4J
7zubH3j2R3TdMn3QA33As17pe2l/ui+816nf0Mv+Y17oQY59sT+CW2j93/+B
fvYj3Uet7/P8XAc/6+f3fvn73e9xn7y/D9YqIc4=
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJyFUu0NgkAMLXAionEHV9ABrjM4gon+dR6dSdcxGIjxuF5LWo/YpCH9fu9x
u9P1eK4AYB+8CF4Gv0RrEaI5vN9GWyDlP57yDT4fowEeoi1TPEid5gq0/byX
5nqfn3cS03dj8KxSDH/x8Rz3U1+d7leyj/KlwTt4ym+FD+Wd9Guenbf7+J69
b/Hre63g5326Xv/ona+D8KE9b6mzXszP4mNeGm/nNf+X3Ge+pOta9KX+Zhav
roP023mt9/S/83pP79fi47x9L8yf8c+9hy8HJiBS
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1.9625, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{2., 4.4}, {0, 2.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -416.12806667920404},
       ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.8691769624716}]}, {
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMDDBB0wffrAADNDMwAhL8Mg/MBLuAQIgKCdHGOVe+UEtRdPE5
8V282h23+4Vzbt2vWb/m/TrEeLWyVwH4fBqiDNfLEM9Wdh9cjHfie+XLeRU2
MT6pvg72/rEefPteoXm8b3EdZO9aeafUemDJ3xMuUj+PhJd6n+hpVN//fkc9
4Fv9uV7OC76pfvCt31/qv1N/GNv+R/+Awcd/sV/s59R9ct4Qv1Q/0Q/8A39q
fvh/od/WM/ZZPfsB/3h+2U/O8zwKv87m+QcvwSrn
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxlUtsNwjAMDPCDqgLpg/TFDyvAApmBEZDgl3lgJtiJtr5zVddSZDmxz3eO
z/fX7bFxzl36s+rPuj+/72B5dKOd4PP4eQ/WwBfwHd49fIjP0Vjfar3ghkj8
62gN8hPFZb34FnkH1JXAS+FL3HvUV4ZPrf0Ej3GKOKAuw/3El+/iPXhURk+t
/JgvcbHgw/7USf2Wn9xnZt6ZmQfrOzOHiT/1c16cv+Ds9b8Ef6cx9VCv5JcG
j/twXPSjHvIh//l/e52X3R/m233ifJg/55cs9oH4jOf7N8WcN/9TcLaqm3yZ
/wceXP61
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMDLABTduUpkWsAAtkBkZAgl/mgZlgpz585youWKos2+ezfc3p
9rzed8658/htxm/raCFdZmvSYzaPuE7v12Q18hG+UjxxwnNAnb5Hfg+ewvR1
2v/9TMa+gDjqPuQXfAm+Bnnu0yL26K9W9/zrJz/3EN8D12pMfurGOcTxTur0
m2/Rgf3E5bwRuAJxMPxB5/CeXM+oOKl3ihN/XPXnejVaz+cFvce+B+qZ71Po
XZIvVS+rE+fn9fV75P+2+on3Rk9v9F7eE/ehvvn8Og14iyVr
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 4.12},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 6.9}, {4.3, 7.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -693.5467777986732}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUsENwjAMDOVBoQXKCKwAAyQzMAISfJkHZoJdQCBEhIRocz2j2FiKootz
F/uc5faw2Q2dc6t2DdpVtGuf4uldijrkuAyXcxcPfzp2MQ44f3mcl3IfuA7r
FG+PfS554Er4xHl+ZPSJ8f40YI+Gz3qRvwnGvXuPG6W3kP50vfSD/eB8Jnzi
vN/K1At8Nf6AP+nf+wif/eX9RKOv56X5nBex9lPrQadR8/z5RT79pD790/Ww
3zxv39d8YugU5v/l/tTiH+fx/z9Ek9f/mfNinvP5AgeBHnQ=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUtsNwjAMTB9AKQXStAuwAiyQGRgBCX6ZB2aCnWhr31VxsRRZ1zjn89Wn
2/N6L5xz5+Fkw8mH8/2MEeL7NcY2uilmLLmLUlfpvY+PKXLNQfOa74HBL7hm
vkxR8L3gjeaj9l0pX6PZKZ9XPOuR+oz9wCe4IZa61swTyCd6vOkfyA998r1U
3Bn/POeHf6hP/Vjr+3ahD3rAn/rbm/nneeGX9Cn13YF+C/+e2Pot9f1i/v/9
dpwHfkJ/uh/L/wU/0v9Rch9sfXpfkx/7AL12P4DT/WqNXxX1QC/8/gF6nO4g

           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UlsOgjAQLIoIavyQgoBfXkEv0DN4BBP99Tx6Jr2TwO5s0kE3aTbbmdlX
e7w+Lre5c+7Un6Q/Mwdrwn20lXofXs/BFur3QXi54nU4j7ZUz3hnsfid+lT5
7R99qvomfN6DbaifQvmV9Se6mup5yufVZ6QvJnqp2yl/q7yD3qeWX+4Tva8t
n/jS6sX5MsPRP/TYP94jnrec6Pk94vn4PRrStzYf63lfwDE/8v3+D2vbp/Bz
6x98qV8ZHufPrT7H/B+xH96fxN7q8X9gHP2gf9QD/gU4M/3c
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 6.9}, {0, 4.4}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -693.5467777986732}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
     InsetBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Petal length\"\>",
          StripOnInput->False,
          FontSize->14], TextForm]], "InlineText",ExpressionUUID->
        "3e3ac501-4bb2-469b-a770-cf1641328a83"],
       Text[
        Style["Petal length", 14]]], {972., -693.5467777986732}, {
      Center, Center}, {360., 256.86917696247167}], InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4jQw+GY/ayYInLRH5589AwJf4HwGMPiBU70x
GPyG8m/C5SHilwnqR5XfiaEeQv/EoX8nlP4I50Ps/YzD/Jto/sN0L8w/6O5H
l8dlPoT/ASN8IOIPoPb9w+k/VP5NguGHXz8u9yHCG398nMQIT/T0gR4fhNIP
TB4Wnrj46P6ByD9GCz/M+MOfXginZwAeAnik
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UsENwjAMDPBBqECSdgFWgAGSGRgBCb7MAzPBLiAQAsGDNhc7itNaiiLX
vuv54tXuuN1PlFLr9ozaM27P9dKF9YcQL6dCWI/77c6nLmrOcWsP3NMBZ0Xd
cp34wfOJ/bPYf2M89W9CLIWeivvRpws9eT3Ng7xifugwg/Pie+KTddIHnnvM
68j/K/yR/pE+4B4Rbwb1EX+ut4n4b6FP+gXcgvXinnOd5iE96G/4vfr503vS
PPm+GLEfyY9+f4z4v9xHLeppf2gf8n1L/bIu/QbPlP2Rev9M6Sdy
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UtsNwjAMTFMmgDZ98MUKMEAyAyMgwS/zwEywDgJRIdra5ygOWIosx3e2
c87mcN4fS2PMdjzFeKyBtYH8Ipxmq9h//PUyWRPut8kM3zuOB7+brQmEKzjf
C57qLgPh3ozvMj5i4ufz8KBcp5b56NqpfhEPPvFKxbch5Q+efC/vIb9WeNR/
Mt5JnvAr6Y96iJFP++n5W6VPxGt+ug/og328RM90n53Sx6n9xfchT/6h6lnh
Q1+t5+/56+w/gZ/+P/v3PyIP/fBfKK6yfYGPfLqPOuuHeb/skS3i
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 6.9}, {0, 2.5}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {1360.8000000000002, -693.5467777986732},
       ImageScaled[{0.5, 0.5}], {359.9999999999998, 256.86917696247167}]}, {
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4lkzQeCkfRoYiDjA+BBaGM4/ewYEhBxQ1SP4
DGAA038Tql/UwRgMLhNQD7NPEMrfiWE/zDwYH2KuMFw9dr4gmnpxuPsg/hEj
4F4ROB+mHl0eu/tuYsjD/A/x9wMMeVT3Y4YnenhB3EOIL4TD/Jto7t2JoR9i
nxjO9IDuHlT1uOJPEC08EOELMw+VL4ShHyL/GCN80M1DD09c8YEaPqIY/gMA
19VWAA==
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UsENwjAMDDACpQ0tH1aAAZoZGAEJvswDM8EuRSAEggdtL2eUq7AUWY7P
l7Od5faw2U2cc6v2jNozbs++t0ftelsE+Gd9OnY2l7gKl3Nn94jPLQ9fWh4+
D6h71eveyNdEvqnhoaMM1IP7zPDwmegpJO+tHt4Lfy78pfExTz7oLSwPvI/9
XA2P+4/pSd/zVs/+4W8DfZx3qv83D9RVsf490M/+qT+d/1X21VhMPeyX+0r5
OO/Z3zz1sB/2q/PX/8P3Gev+VJ/+B+Unnv3rf0xj3Wc2wH8BRCAyYw==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxtUtsNgkAQPB4dmMDxNLagBdzWYAkm+ms9WpO2YzASIrA3S25hE0JmmZnb
We5wuZ+viTHmOD7R+MQGldJproJucw2OcU7v11TG92uPewf+8zFVROxTKn7r
fX+OeTulbwTzuyTMw7j22Ig/5mO/Qs5jv0r43M98PyHkYX1Mob538Ece7rfC
B2Ze5/lW+S3ncz9T87Sr/WF+5A/3UStsBbO/FT3y8Psr+nBfjczDeC95oUe+
8D585Dy9j3C/yz6396vnrUSP/Hqf+j7ie/i/05U+xIPk2b5P4Fs1f05/x0VH
0g==
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 4.12},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 2.5}, {4.3, 7.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {194.4, -970.9654889181427}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4lkzQeCkPQMY8Dig8jngfAjNCeefPQMCHGh8
mP6b9sZgwO8AoS9D+dxw9dj57FD+TgzzITQvDv070dyLzof5RwDuPggtiNO9
sPCA8dPAgA+Dj909NzHcCwsfiLkPoPq5cIYHqvtv4pDnwakff3yhm7cT6h4B
NPXofNzpAdU9O9HSA2Z6gtmPP7yZMOyDyD9Gs+8mRvyg24ceX+juR48vWPwA
AK+VSY0=
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJyFUsENwjAMTNu0FJiCFWCAZAZGQIIv88BMsAsIhIrgQZvLuYpLwVJknXy+
nJ0sNvv1tjDGLNuTtSdvzy7Ewx0PXUy9CdEM8PnURe2R7w59udSBK1WvPHSe
Ec8i/+JWIQrhA0986qcUPrKR+5BrqYOfST/1xvQ5z2+9UurUR75Gvo36b9mX
nj/Vtx4+boN9aX/0Q0w+eC/lt5F++oeuFb/ct94//XBevpeen/exjr753/9B
zP4U9/ugXz2/rtO/1qdf8vV9Y//h+3v27/cBoGAhzg==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJyFUtsNwjAMdBMo4aHuwAowQDIDIyDBL/PATLAOAoEQbe1LZLcIS5Fl3Tl3
drLen3YHT0Sb9lTtcYSYpGMfC8mfeDl3MU23axeUmBekfsdtH7PEvMrghc+8
V4SO7UcNXPNWUpPozP/6Ax/3sI6Xvlqyy/dp/ZDnYV6T+cyDv0fUvHIf9KFn
a+hZ/9i/xos/22/3DZz7nhnHvsb9NGbeOs+n93WPmB/z6vf1kpfZH+fw0y9w
9KPW+w6D9x7ft/2/xR/69f8ig7uBf+Bfhu0gUg==
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 2.5}, {0, 4.4}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {583.2, -970.9654889181427}, 
      ImageScaled[{0.5, 0.5}], {360.00000000000006, 256.86917696247167}], 
     InsetBox[
      GraphicsBox[{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwAmJGIGYC4lkzQeCkfRoYfLPHxT97BgS+wPkMYPADh/qb
9sZg8BtKX8YwD7/+nRjy6HwI/ROuHl0/hP4IVw9xx2e4+1DNuwn3H7p7YXx0
/6C7ByaP3XyY+z9A6Qdo6mH+/4fDfzfR+ITCD10/pnmo+jHDm1B8oYYnevpA
jw/c6QcWnujhj64eVf4xhn9g4YcrvaGHB7HpEQB22Xik
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 1, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 1, 0],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1UsENwjAMDPBBqEBaWIAVYIBmBkZAgi/zwEywC6gIgeBB2ssZxVYtRVFy
9uV88Wp33O5Hzrl1XIO4hnEdunjW10sbVXBdvGrs//P51MYiIO+RcC84eCqF
VwF1b8V/S/kTyWc99Wy6mEs+9kLeQ51XuA+6H/JjLwSHrrKnX+rzBkfdXfSB
95vO/f7QP+Q1Rh/uS6Mv94P1n8S/7NVPv6gXPDPBcT8VPeyH/4V8y09cz4fu
h/rz//XGH76v++U8EM/9tPPDecj99QbXftMf8I6N3h/p8Cdy
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsolutePointSize[6], 
          AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 DefaultBaseStyle->"ColorSwatchGraphics",
                 Frame->True,
                 FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[0, 0, 1]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0, 0, 1],
              Editable->False,
              Selectable->False],
             StripOnInput->False,
             FontSize->6], {0., 0.}], CompressedData["
1:eJx1Uu0NgkAMPcAJ9IADf7mCDnCdwRFM9K/z6Ey6jtFIjED7SnqEJpdLP97r
5+50PZ4L59y+f1n/cgdZEf+BLqP8Iv+eno9BHN1vg9Sid+KvxJ7RYZRa49nf
iv0bmX+teLY3iV4T6mF8EB18Xuvj+FLzcVil8fx5yV8k+JwsvovAox+2txrP
9q3wviP44ef4KT/Hb1QHH/LBj/qBt/WEZD6bRbzdx0fnafcZkvoa7Rd49Gfn
9dJ9o1/w2fmm9VcL9SN/OcNbfj+7R7uP6V4wP7uPCY992X2kfGVy357+/9gt
4g==
           "]]}, {}}, {}, {}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{None, None}, {None, None}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{0, 2.5}, {0, 6.9}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {972., -970.9654889181427}, 
      ImageScaled[{0.5, 0.5}], {360., 256.86917696247167}], InsetBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"Petal width\"\>",
          StripOnInput->False,
          FontSize->14], TextForm]], "InlineText",ExpressionUUID->
        "4dd3422a-7b87-40c6-9ad0-43a05417484f"],
       Text[
        Style[
        "Petal width", 14]]], {1360.8000000000002, -970.9654889181427}, {
      Center, Center}, {359.9999999999998, 256.86917696247167}]}}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.716210601902054*^9, {3.71621064497586*^9, 3.7162106910396357`*^9}, 
   3.7162108682255373`*^9, 3.716212229236601*^9, {3.716214388425523*^9, 
   3.716214410134988*^9}},ExpressionUUID->"d5fd9c06-798c-409e-8169-\
b39272c4f9ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"5c953a07-9018-4765-8425-b27589ffabda"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Bar Charts and Pie Charts", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.71613227049654*^9, 
   3.7161322765756683`*^9}, {3.717186017703929*^9, 
   3.7171860212833853`*^9}},ExpressionUUID->"8f24224d-00aa-4434-a333-\
47e9991d8aeb"],

Cell[CellGroupData[{

Cell["Case Study: Old Faithful Eruptions", "Subsection",
 CellChangeTimes->{{3.716258432945158*^9, 3.716258471701733*^9}, 
   3.832159699818766*^9},ExpressionUUID->"6dcaaa2d-b5dc-4edc-9a0f-\
11bf66af4634"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<OldFaithful\>\""}], "}"}], ",", 
   "\"\<LongDescription\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.71625847630029*^9, 
  3.716258512788583*^9}},ExpressionUUID->"4b344e5d-f1b0-4ed5-a2cb-\
2fb1e437c9b7"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<OldFaithful\>\""}], "}"}], ",", 
   "\"\<ColumnHeadings\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716258519502253*^9, 3.716258526063635*^9}, {
  3.7162585570190496`*^9, 3.7162585576267242`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"bbdbacd9-64ea-4890-9062-679cb39e393c"],

Cell[CellGroupData[{

Cell["Bar charts and pie charts", "Subsubsection",
 CellChangeTimes->{
  3.696597314596211*^9, {3.7161306000642557`*^9, 3.716130603479912*^9}, 
   3.716132286584674*^9, {3.7161603121644373`*^9, 3.71616032196449*^9}, {
   3.748276997827539*^9, 
   3.748277002955475*^9}},ExpressionUUID->"8d0d306b-63bb-42d5-9d3b-\
2d3bac20d358"],

Cell["Focus on the durations of the eruptions.", "Text",
 CellChangeTimes->{{3.726001704050825*^9, 3.7260017183383713`*^9}, {
  3.748277005251268*^9, 
  3.748277005883066*^9}},ExpressionUUID->"e3c168ce-23fb-48f9-8c85-\
0782b6966638"],

Cell["\<\
The duration of eruptions can be grouped and visualised in a bar chart or a \
pie chart:\
\>", "Text",
 CellChangeTimes->{{3.434987627934633*^9, 3.4349876422478657`*^9}, {
  3.4977076442773066`*^9, 3.497707664497092*^9}, {3.69669946654698*^9, 
  3.696699471719496*^9}, {3.716160325213003*^9, 3.716160335249689*^9}, {
  3.7162585915706997`*^9, 3.716258623886215*^9}, {3.72600153677743*^9, 
  3.7260015736456537`*^9}, {3.748277009051111*^9, 3.748277012883121*^9}, {
  3.8329438198019457`*^9, 
  3.832943820064033*^9}},ExpressionUUID->"45573c5e-8ec2-4518-b5bc-\
b298f1194313"],

Cell[BoxData[
 RowBox[{"ofData", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Statistics\>\"", ",", "\"\<OldFaithful\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6966994792563763`*^9, 3.696699480270941*^9}, {
   3.716160204085421*^9, 3.7161602267121277`*^9}, {3.716214678624942*^9, 
   3.716214678975657*^9}, {3.7162147572630033`*^9, 3.7162147740614157`*^9}, 
   3.71621515713303*^9, {3.7260016090885773`*^9, 3.7260016112692347`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"25d6c74b-59d1-47ee-9090-fd3c0164d45a"],

Cell[BoxData[
 RowBox[{"ofData", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.72600163750823*^9, 3.7260016667409487`*^9}, 
   3.72600172025255*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"b68db777-9c51-4abd-9b84-3358fb62d9be"],

Cell["\<\
Group them into specific bins (less than 2s, more than 2s but less than 3s, \
etc.):\
\>", "Text",
 CellChangeTimes->{{3.726001724818179*^9, 3.726001732376644*^9}, {
  3.726001807107551*^9, 3.7260018263300962`*^9}, {3.748277016874941*^9, 
  3.748277017386978*^9}},ExpressionUUID->"0bac6be0-4ce4-4268-bb00-\
50ab1f6099a3"],

Cell[BoxData[
 RowBox[{"BinCounts", "[", 
  RowBox[{
   RowBox[{"ofData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2", ",", "3", ",", "4", ",", "10"}], "}"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.726001743428152*^9},ExpressionUUID->"6ece4d8c-f808-462e-86d1-\
16468e28c2f7"],

Cell["Visualise the information in a bar chart or pie chart:", "Text",
 CellChangeTimes->{{3.726001832443404*^9, 3.726001848234009*^9}, {
  3.7482770237544518`*^9, 3.748277024898569*^9}, {3.832943826114019*^9, 
  3.832943826328339*^9}},ExpressionUUID->"7b9e4cfc-ebd3-4cac-b1d3-\
e68cdc4f49fa"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"BinCounts", "[", 
   RowBox[{
    RowBox[{"ofData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "3", ",", "4", ",", "10"}], "}"}], "}"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.726001852266571*^9, 
  3.72600186361961*^9}},ExpressionUUID->"c5d35395-d148-45ed-8842-\
7207dde8ed5c"],

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{"BinCounts", "[", 
   RowBox[{
    RowBox[{"ofData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "3", ",", "4", ",", "10"}], "}"}], "}"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7260018674423847`*^9, 
  3.72600187107336*^9}},ExpressionUUID->"10821996-033c-4485-b83c-\
b6b9e424ced5"],

Cell["\<\
Here, the same information is visualised with some labels for ease of use:\
\>", "Text",
 CellChangeTimes->{{3.726001881560687*^9, 3.72600191114287*^9}, {
  3.748276424984783*^9, 3.7482764254310303`*^9}, {3.748277028988285*^9, 
  3.7482770313543053`*^9}, {3.8329438307538958`*^9, 
  3.832943831049262*^9}},ExpressionUUID->"a9362ca1-0cb4-4e28-a1a0-\
01120d9b83bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dur", ",", "wait"}], "}"}], "=", " ", 
   RowBox[{"Transpose", "[", "ofData", "]"}]}], ";", 
  RowBox[{"headers", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Statistics\>\"", ",", "\"\<OldFaithful\>\""}], "}"}], ",", 
     "\"\<ColumnHeadings\>\""}], "]"}]}], ";", 
  RowBox[{"bc", "=", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"dur", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2", ",", "3", ",", "4", ",", "10"}], "}"}], "}"}]}],
     "]"}]}], ";", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"bc", ",", 
        RowBox[{"ChartLabels", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<t < 2\>\"", ",", "\"\<2 \[LessEqual] t < 3\>\"", ",", 
           "\"\<3 \[LessEqual] t < 4\>\"", ",", 
           "\"\<t \[GreaterEqual] 4\>\""}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{"BarChart", ",", "PieChart"}], "}"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6966994792563763`*^9, 3.696699480270941*^9}, {
   3.716160204085421*^9, 3.7161602267121277`*^9}, {3.716214678624942*^9, 
   3.716214678975657*^9}, {3.7162147572630033`*^9, 3.7162147740614157`*^9}, 
   3.71621515713303*^9, {3.7260016090885773`*^9, 3.726001641018175*^9}, 
   3.726001877946618*^9},ExpressionUUID->"b88cdfd4-b496-4489-a499-\
731f14478b2f"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6719999999999999], Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                51.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{47.074646375564335`, 
               93.31231854593867}, {-96.18425511720703, -39.93040544088166}}],
             StatusArea[#, 51]& ,
             TagBoxNote->"51"],
            StyleBox["51", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[51, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                46.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{97.75892715839237, 
               143.9965993287667}, {-90.71819142344964, -39.93040544088166}}],
             StatusArea[#, 46]& ,
             TagBoxNote->"46"],
            StyleBox["46", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[46, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                37.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{148.4432079412204, 
               194.68088011159475`}, {-80.87927677468633, \
-39.93040544088166}}],
             StatusArea[#, 37]& ,
             TagBoxNote->"37"],
            StyleBox["37", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[37, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.6719999999999999], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                138.}, "RoundingRadius" -> 0]},
              
              ImageSizeCache->{{199.12748872404848`, 
               245.3651608944228}, {-191.2937633885856, -39.93040544088166}}],
             StatusArea[#, 138]& ,
             TagBoxNote->"138"],
            StyleBox["138", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[138, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], 
          LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0.5487982520029133, 0.}, 
              Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
               0.}]}], 
            LineBox[{{4.451201747997087, 0.}, 
              Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
               0.}]}], {{}, {}, {}, {}, {
              LineBox[{{1.4512017479970867`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
                 0.}]}], 
              LineBox[{{1.5487982520029133`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
                 0.}]}], 
              LineBox[{{2.4512017479970867`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
                 0.}]}], 
              LineBox[{{2.5487982520029133`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
                 0.}]}], 
              LineBox[{{3.4512017479970867`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
                 0.}]}], 
              LineBox[{{3.5487982520029133`, 0.}, 
                Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
                 0.}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"t < 2\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"2 \[LessEqual] t < 3\"\>", 
              Offset[{0., -2.}, {2., 0.}], {0, 1}, Automatic, {1, 0}], 
             InsetBox["\<\"3 \[LessEqual] t < 4\"\>", 
              Offset[{0., -2.}, {3., 0.}], {0, 1}, Automatic, {1, 0}], 
             InsetBox["\<\"t \[GreaterEqual] 4\"\>", 
              Offset[{0., -2.}, {4., 0.}], {0, 1}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, True},
      AxesLabel->{None, None},
      AxesOrigin->{0.0195484340859432, 0.},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
           FormBox["\"t < 2\"", TraditionalForm], 0}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
           FormBox["\"2 \[LessEqual] t < 3\"", TraditionalForm], 0}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
           FormBox["\"3 \[LessEqual] t < 4\"", TraditionalForm], 0}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
           FormBox["\"t \[GreaterEqual] 4\"", TraditionalForm], 0}}, {{1., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{None, Automatic}], {192., -152.90421193686507}, 
     ImageScaled[{0.5, 0.5}], {360., 291.2461179749811}], InsetBox[
     GraphicsBox[{{}, {}, 
       DynamicModuleBox[{DynamicChart`click$44806$44881 = False, 
        DynamicChart`click$44811$44881 = False, 
        DynamicChart`click$44816$44881 = False, 
        DynamicChart`click$44821$44881 = False}, {
         {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
          0.5]}], {{{}, {
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.9634954084936207`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{45.787182338779616`, 
                    140.52711678817963`}, {-198.78467113536703`, \
-111.041083591112}}], {}},
                   StatusArea[#, 51]& ,
                   TagBoxNote->"51"],
                  StyleBox["51", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[51, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$44806$44881, 
                    FEPrivate`Not[DynamicChart`click$44806$44881]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$44806$44881, {{{1., 0}, {
                   0, 1.}}, {-0.16629392246050909`, 0.11111404660392044`}}, {{
                 1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$44806$44881}]]}, 
             {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.9008978933088376, 
                    1.9634954084936207`}]},
                    
                    ImageSizeCache->{{102.52567856658581`, 
                    197.59555751158314`}, {-205.78101804051198`, \
-111.041083591112}}], {}},
                   StatusArea[#, 46]& ,
                   TagBoxNote->"46"],
                  StyleBox["46", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[46, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$44811$44881, 
                    FEPrivate`Not[DynamicChart`click$44811$44881]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$44811$44881, {{{1., 0}, {0, 1.}}, {
                  0.02763127099037646, 0.19808208617504106`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$44811$44881}]]}, 
             {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
              EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
              GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.046199891964556095`, 
                    0.9008978933088376}]},
                    ImageSizeCache->{{137.6986896634334, 
                    232.34055221856605`}, {-185.91753811487354`, \
-111.041083591112}}], {}},
                   StatusArea[#, 37]& ,
                   TagBoxNote->"37"],
                  StyleBox["37", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[37, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$44816$44881, 
                    FEPrivate`Not[DynamicChart`click$44816$44881]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$44816$44881, {{{1., 0}, {0, 1.}}, {
                  0.17799108645624234`, 0.09120950138075787}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$44816$44881}]]}, 
             {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
              Opacity[0.5]}], GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    0.046199891964556095`}]},
                    
                    ImageSizeCache->{{45.787182338779616`, 
                    232.4386241128334}, {-118.11430201345398`, \
-19.1295762664582}}], {}},
                   StatusArea[#, 138]& ,
                   TagBoxNote->"138"],
                  StyleBox["138", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[138, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$44821$44881, 
                    FEPrivate`Not[DynamicChart`click$44821$44881]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               If[DynamicChart`click$44821$44881, {{{1., 0}, {0, 1.}}, {
                  0.004619578330600263, -0.19994664162232745`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {
                 DynamicChart`click$44821$44881}]]}}}, {}}, {}}, {{{
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {{}, 
                   InsetBox["\<\"t < 2\"\>", \
{-0.5543130748683636, 0.37038015534640145}]}},
                 StatusArea[#, 51]& ,
                 TagBoxNote->"51"],
                StyleBox["51", {}, StripOnInput -> False]],
               Annotation[#, 
                Style[51, {}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$44806$44881, 
                  FEPrivate`Not[DynamicChart`click$44806$44881]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$44806$44881, {{{1., 0}, {
                 0, 1.}}, {-0.16629392246050909`, 0.11111404660392044`}}, {{1,
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$44806$44881}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {{}, 
                   InsetBox["\<\"2 \[LessEqual] t < 3\"\>", \
{0.0921042366345882, 0.6602736205834701}]}},
                 StatusArea[#, 46]& ,
                 TagBoxNote->"46"],
                StyleBox["46", {}, StripOnInput -> False]],
               Annotation[#, 
                Style[46, {}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$44811$44881, 
                  FEPrivate`Not[DynamicChart`click$44811$44881]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$44811$44881, {{{1., 0}, {0, 1.}}, {
                0.02763127099037646, 0.19808208617504106`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$44811$44881}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {{}, 
                   InsetBox["\<\"3 \[LessEqual] t < 4\"\>", \
{0.5933036215208077, 0.30403167126919284}]}},
                 StatusArea[#, 37]& ,
                 TagBoxNote->"37"],
                StyleBox["37", {}, StripOnInput -> False]],
               Annotation[#, 
                Style[37, {}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$44816$44881, 
                  FEPrivate`Not[DynamicChart`click$44816$44881]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$44816$44881, {{{1., 0}, {0, 1.}}, {
                0.17799108645624234`, 0.09120950138075787}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$44816$44881}]], 
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {{}, 
                   InsetBox["\<\"t \[GreaterEqual] 4\"\>", \
{0.01539859443533421, -0.6664888054077581}]}},
                 StatusArea[#, 138]& ,
                 TagBoxNote->"138"],
                StyleBox["138", {}, StripOnInput -> False]],
               Annotation[#, 
                Style[138, {}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$44821$44881, 
                  FEPrivate`Not[DynamicChart`click$44821$44881]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             If[DynamicChart`click$44821$44881, {{{1., 0}, {0, 1.}}, {
                0.004619578330600263, -0.19994664162232745`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {
               DynamicChart`click$44821$44881}]]}, {}}, {}}, {}, {}},
        DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
      ContentSelectable->False,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{-1., 1.}, {-1., 1.}},
      PlotRangePadding->Scaled[0.09166666666666669]], {576., -152.90421193686507},
      ImageScaled[{0.5, 0.5}], {360., 291.2461179749811}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.716160213096177*^9, 3.7161602274599524`*^9}, 
   3.7162147134920893`*^9, {3.716214748162261*^9, 3.716214774908828*^9}, 
   3.716215168843446*^9, 3.716304351580332*^9, 3.717156525271138*^9, 
   3.717185864095324*^9, 
   3.726002232272119*^9},ExpressionUUID->"6352d9da-3682-478f-9803-\
8700eba799dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Box plots, violin plots and quantile plots", "Subsubsection",
 CellChangeTimes->{
  3.696597314596211*^9, {3.7161306000642557`*^9, 3.716130603479912*^9}, 
   3.716132286584674*^9, {3.7161603121644373`*^9, 3.71616032196449*^9}, {
   3.716258683173935*^9, 3.716258702675106*^9}, {3.716258796107195*^9, 
   3.716258821194027*^9}, {3.748277036587892*^9, 
   3.748277044873816*^9}},ExpressionUUID->"91f33095-e5b0-4164-a7ba-\
14908ac933ed"],

Cell["\<\
Some other visualisations that can be helpful in exploring the data:\
\>", "Text",
 CellChangeTimes->{{3.716258964440514*^9, 3.716258972866641*^9}, {
  3.726001928722314*^9, 3.726001941854555*^9}, {3.74827704717774*^9, 
  3.7482770476497993`*^9}, {3.832943837057371*^9, 
  3.8329438371532183`*^9}},ExpressionUUID->"0a366906-f987-4b35-950c-\
913f8cc9b7a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"ofData", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"ToString", "[", "f", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", 
        RowBox[{"{", 
         RowBox[{
         "BoxWhiskerChart", ",", "DistributionChart", ",", "QuantilePlot"}], 
         "}"}]}], "}"}]}], "]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716159789905979*^9, 3.716159798690439*^9}, {
   3.716159885271504*^9, 3.716159944304406*^9}, {3.716209071345193*^9, 
   3.716209074640418*^9}, {3.716209146547172*^9, 3.71620915092581*^9}, {
   3.716209187859099*^9, 3.716209194914526*^9}, {3.71620937731507*^9, 
   3.716209411348877*^9}, {3.71620957163627*^9, 3.716209656899173*^9}, {
   3.716209687258778*^9, 3.716209698066724*^9}, {3.7162147956043043`*^9, 
   3.716214811145639*^9}, {3.716258835497428*^9, 3.716258853668523*^9}, {
   3.7162588851534977`*^9, 3.716258938709774*^9}, 3.74757757622941*^9},
 CellLabel->
  "In[265]:=",ExpressionUUID->"47dad401-0d68-4138-b71b-ee1fb04424db"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.5, 1.425}, {1.8921138686126808`, 
         5.2749999999999995`}}]}, 
       {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], 
          TagBox[
           TooltipBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GraphicsGroupBox[{Antialiasing -> False, 
                
                PolygonBox[{{0.5, 4.4585}, {0.8921138686126808, 4.4585}, {
                 0.8921138686126808, 2.1585}, {0.5, 
                 2.1585}}], {}, {{}, {}}, {}, {
                 GrayLevel[0], 
                 GrayLevel[1], 
                 LineBox[{{0.8921138686126808, 4.}, {0.5, 4.}}]}, {}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{0.6960569343063404, 2.1585}, {0.6960569343063404, 
                  1.6}}, {{0.6960569343063404, 4.4585}, {0.6960569343063404, 
                  5.1}}}]}, {
                 GrayLevel[0], 
                 GrayLevel[0.5], 
                 
                 LineBox[{{{0.7940854014595107, 1.6}, {0.5980284671531702, 
                  1.6}}, {{0.7940854014595107, 5.1}, {0.5980284671531702, 
                  5.1}}}]}, {}}]},
             
             ImageSizeCache->{{82.58578643762691, 
              107.4142135623731}, {-87.41421356237309, -10.585786437626911`}}],
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], "5.1`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], 
                 "4.4585`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], "4.`"}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], 
                 "2.1585`"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], "1.6`"}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 5.1}, {
                Style["75%", Bold], 4.4585}, {
                Style["median", Bold], 4.}, {
                Style["25%", Bold], 2.1585}, {
                Style["min", Bold], 1.6}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.48039430656936594`, 1.425},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{0.6960569343063404, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          0.8921138686126808, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
          0.6960569343063404, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          0.8921138686126808, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"BoxWhiskerChart\"", TraditionalForm],
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{0.6960569343063404, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         0.8921138686126808, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
        Automatic}], {193.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{
       {Opacity[0], 
        PointBox[{{-0.5, 1.425}, {1.8921138686126808`, 
         5.2749999999999995`}}]}, 
       {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], {}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.7]], 
          TagBox[
           TooltipBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              GeometricTransformationBox[
               PolygonBox[CompressedData["
1:eJxlmndYzn3490tbe4qE27qRjBBu44wo2aPsmZSRZITMZCQlQqKkVFQkRZN0
fioSFa2rNO0920v6+T33ed7PcTyPPzgcV+O6vt/v5zzf4/WX7Zb56zpJSUmV
//nrf//lP20Wnm/kdL/iggMeGumyLmDWVjYxz/0rxpj2uj593S44dmtQwLmf
X3FDN5NDKtJ7IHft3oZlK7+h7+BNkQGV+0BLP3dun9xvuHPZNeOMXwdhcW73
6M9jv+PivcXdp9w5BJfcNivcjviOsfrWgb6nDsPrkWm2rro/8KbWBLlffkdh
wCe1NLPDPzBmUae38x97gFPQqq6KNT/wn+i2V66DT0D5gMV3HYb+RGMtm+r1
Gd7Q7i61fob9T3QdcOLIQJ9T0LMqUndo0P++7jZlo5UvTB49L1Or+CfWPzaf
8ujTGVjn2+Lc2LkGbSoip2REnYPjX670KJ9Ug/6tK9XqT5yHG1On597fXYMT
Xg7wbfC5AE+Da12v3KpBl5n+51ckBcDPloC/j76vQakhMe1pckGgbW0uWW9Y
iyaDhv8K2xsMpjFf3Gda12LoKUNnC9UrsETx3LBhXrUY0v1tbePWUNhnO75a
O6MWLQY2zPP7GgbBqW+9mpprMcvnQNTj/VchXe/k2IqhdThszejmYf0j4K3z
qA9p9nX4LiVSadn7SFDIqToXGlSH1W216dlp12FQv2OTjxXX4ecVvd99uhUN
sw4O+blBuR7Pmu/tZ3g3BpzLSoJmTa7HxxcNV5Y4xcKZEQdnDHetR9OjHwPs
T8ZBwsm/W3Ri61Fua8S7vOTb8PzDs2vN7+txlrG6vVrNHWibtNu60rABOzeM
UDM0TYAel3p1EtYN+KnE+v1Lj0SY1Jh9K8yrAfVC9jmYvE+CtXO3rvDIaEDn
x0M+lM9NgWPXuypvamnANyHT9M49ugtRshnJs4c14mzR97HC9FTIXbnR3sSh
EVPNvH4/Lb0PP5K1dPQuN6KLy5fJ25wRtLTvpbcUN6Ks06iH8Z4CRm5eu6VK
uQntnbbUq65Oh0WPlA3TJzehYm/H1z/+yYA9f8U/CXdtwnNf7Tzau2ZC0N7l
u4/HNuHr+RE5Bb8yQUhk+zt+aEK1SLeMjtcP4M3Qm0VzejRjTpRsg1buQ5A7
YXNohE0znr58MfVUUhYMeNs+pIt3M56PUL5ZF/4IZky8Vtma0Ywp3qiaeDYb
nC7MPlHd0owm5dvXTDv8GHxrG0dnDGvBleYlbXrbn0D8zOB3Vx1aELcqh3va
5kDJNcuznpdb8Mikv8xl5+VCi9RPs82SFrTZDUEfJuRB92UXvs9VaUWFh1Y6
ZwY8BUgwuzTSvBX1k34HrNZ4Brbqn6z097Rits28obfqn8HRDb5NbbGtaNPp
eYHjxnyIzBx79cWHVuwibenZ43k+PDF8PT+zRxvmFtcbdzcvgG+7TkhF2LTh
2ZJnC/VuFIBGoUnMCe82jDs7ax+qF8KIwRXLnDLb0GfJu7G5zoWw8Nhhpfmt
bfgo+fzVurxCcH1plDRq+C/0sfZ7+KN/EQT+U2zXdf0vdN94QffA3iJIO7dP
q/3yL1wpfW7/qpwiePW9r3gp+YVLmjr0l+gVg6xV3uYHKu3od/LjzJHLi+Hv
MBeDSPN2NIw8q4yXimF6u+Fjrz3tmLQj8XNOaTE4LsrauSWuHU2CzXNMVCVw
Ks6p74KP7Wi651BM/ngJ3FbuUmja8zdOqNspddxeApJ1eLDbwt/Y8bkjxOyE
BJrRwfi392+c2r/w6YcICRh006h4lfkbb7s3fnJGCUzckXz8YetvLDR52704
XwKrn642jRregS9Tpt9Vr5TAkQFKb73Xd6BTX+H29ysJXHOP83UO7sBH4Qan
+76UQHblErAu6cAo16XWumUS2GlwqDFQXkpUB8g7quZKwGOaTZ5qbynx2T1k
Vr8UCVx0GRh+cIKUKMqaZb4nRALXQ9v31Cz+87qtMBniLoF7zwrmrd0hJRZV
zh3osFICeb+uDpCckhK5SUvM5oySQPXAPR0WN6TEFf2w5ToKEvi5cHZJcpaU
0DdY++BDUTFIH+l9c9BrKbHmm1N2e2AxaMc1Hr7ULiUWT01JPbmqGPpWP1mq
1lVafLI32FLQoxhGKQcPdxspLfLUXL/LlheB5ZjtirVzpMXiJovadb5FsHid
5Yu1m6TFBaOJcSOmFsHGMwaJkmPSoiC46F5MQyHsxR/elqHSQtF7S6Z+WCF4
f81cm3JfWoydPLH8zqxCuNz1wj9GZdJixw3rkxkNBXDLwlEzqF5aHNo93Mcj
sADSt5t9VNPoJBxyld9PgQIoDNFBN6NOYkkn/czxr/Lhbd5Hv1qLTuKCG06O
PZQPDa2pjna2ncTh6MwrL3rlg/wAX/OS/Z1E0JKlzdoHnoG+zbpu0y7++f5G
d8eK5Kcw0H1sTUp8J9HP08XHuzYPxt1SzTbK7yS+fXSJDzLKg5mVry4Hfekk
9AwUPNzscmGFUqKLuoKMCG/oWREalANbTE/MPNRbRlz8sPqZU+kTcFu7sk/d
BBmx3eJG/+laT+DMaZNWuyUyYsfKl65+sx9D2H35gpIdMuLoyTS/m97ZkPC5
PGLaaRkRUyLn+zn3EWR1uXXg7g0ZMWfz6IRg9UdQOuWwzeBHMsLbKuyOgU0W
fNq6aPDl1zJCQ3xUiQx6CK2XjWQ0fsuIZw/fBHt+egAquR1lh7rKimi/Fa5S
Yx+AYUtRbN1IWWGo2jRnmncmDO0f6bFurqzYPXbMU/83GWC2YN/K0k2y4mi0
6fW/IAPmuc0dZeUhK0Jm7AvUDk6HtTf7qtwLlRXDC7bo+8ukw47y5teD02TF
z15+kwscBRxTyEu5XCYrapY1fclKQPAfeeW0RoOsyPn7l2xJYBpErnFxcNeQ
E1N3jWnr5H0f7vpYTaw3khNPs08q7TmWCjn3DHXtLeWE1YWuC9Z43YOqjzVf
Sm3lRIt099iSgLvwXTcrw+qAnAgYtKS1Nj4FpMwDLt67KCcCv6gbPC5LBk1n
J2fjBDlxUv3aU3ulZOgdNNkyOP/Pz9vYZCMxT4KRT/R6aH6VE1tvR7zp6pkI
U5s+17sryIsVrju3jChLgEV9Mae+t7yYU2VS0mNkAqyfdzbUfqK8GP/RoIfk
Yjy4HnBwfb5EXsSVGXWa2TkevG6MmzvdRV7ss7i8b+fRO3DpufrfqaflxY7W
nvUWyncgRu5tu3G0vAi+uL4lKvA2oElycfAjebG8IS/Y2/Q2FKzyvqH5Rl58
uzdlVEVFHLz2Xu1++Le8KBu3cuABrzioSxm5pKGrgig2e+K3amocyH1QHOYw
SkFY18icc1CKAz2dKvmyuQqiAxz27y+NhQGT4qqmOyqIFYbHTxy/FQtjnY7G
p3ooiGPKdp+dfGNheuASryFhCkIzMOig/v5YWJ5tbBuSpiA2t78/uGlbLGxu
kB6rVa4gDukrmc/ZGgsHe5eoH2lQEM8bEvbdcI2F03Ouv2/QUBTyYwwXO3jF
Qui+A/cdBiuKNetTVDdfi4U7UfPPlVkqij3DUneGPYmFByX9N81Yqyhme6VY
1zfFQolM26T7BxSF96m0XtOHxMGHYc/0hwYoCiONTXhqcxy0rAj7EZKgKEIG
rPKLTYiDzl67srQKFMWjOe8bLsjfBoPkGUFHviqKtYuL5pmuvg3G73ruaFRQ
EspnbeN3ZtyGiVr109f3URIdZrtnWxrfgbmQ/Vf5RCWROSH3pX/IHVjjeKl5
xlIlsW+Uz6DF3eNh+0XnZ/ddlMSoK4Ylu0Pi4UjWlGtDfZVEY0fk4C+DE8Cv
Tn//lWglIV+n63QlPQEien1boJ2tJCyv2PX3WZkIybPSBx19oySsYq5khMkk
wZM9ftJNv5VE+KdFjiWxSVARseH5+m6dhfVWV7lu9snwtXjCrfJRnUXcry/R
tn1S4Le01rGZ8zoLm65HFl/9mALqQ98vT3PsLMoU1TuXJtyFv5bfHTHseGcR
6H9F8duJe2Di6dM5NKyz0JczWlvpkApTEm1faWNncWbpCr+AmffB5o1p8tHy
zsIrPzet+9g0sNdQPtXU0Fms0Uw/ssgYYfeEF+s2aCoL5RtzyoJ1BHhuvDO+
YrCy2F9vd8zuvIBAfw/tWdOUhYvxu8Jag3SIfrDsc9paZZHrnBg49Wo6pNUM
TR92UFkcHeB0wdokA571kL0QGqAssqdLS+tnZsDLGc+ddBKVRd2FtvkeizKh
dnf01GMFymLI60lRF39kgsw1t+7NX/+8fvue6xSvB6BbZF23QVFFXJv21nH/
oIfQX2rgk4o+KkJTb4DemLyHMNq4PWQWqIglb1d42G/PAqulBbtwqYpw+J00
oa37I1jqcXX28J0qwnbsApv3jx+BY7xrvzBfFbG86/wY3T3ZsP/VrF86N1XE
nFSduTuNH8Mptd5Fx7JVhH3gwZt1bx5DyLjGqOY3KkL3nsLKXUFPIG79E7eN
HSrCY6lD7sclOZDpd3lRZTdVcfpkeaFx11woztg2ZLapquhbuK3foIpceP/D
Qk7MUxU7q6rGY3AeNHU3qBy+WVUk7Dzll2v/FBSn/7gddlxVzDJZtWfosGfQ
bVemp264qtBe/zI1o+0ZGIX7r/ZAVeGTWbnqll0+TCjYNLqlXFXcTx6Z55ib
D7N/g9qmRlXR+GKXt8yoAlhtpPOuUlNNfFYa5bD8cgFsXfzx3mxjtT/3P0Rt
lWIhuB9NPSOmqYnjH/If1GwrhHO3T28wsVMTl8/sj22pKoSrL+zMwg+qiXWp
Be+WWhVBksrYLnqBf74+9/Ds5vgiyB6r+t0jUU2s2jix9E6vYiizf/WgpUBN
vL1ww9TJuxi+nE0I3PRNTWxaUTVAobkYfgnPbVWK6uJJfz//FWsloPZ9hdWc
vuriSnCO6ZynEuhpYNIrHdTF3VpDrZQxJTB8mnyTyTJ1ceyU9JxdoSUw2aU8
L3ynutgeUTx7nXIpWIfGhOudUReBFVHJK7aXgt0z973Hb6qLF106XfqnvBR2
/lo4vzVbXdSPnLJbAs/h+ECjgY5v1cWqkwumK4Q/h4CFHR1VHepCqVY2OlK+
DCTpG75EqGqIT7Vh5b4OZbDyeVHJagMNcSjoa1lAVhl8+D4ho+tADWF0K/1A
YJ9y2CIXebPQVEPMmTnh0KYD5dBsoHXRa4qG2LKqIOR1STkcMtl3ZMp8DVEw
Vjvh+eAKULJ6v6V9lYYYtL36XT+3Cjizau6yxM0aouvojsWh+RVgsPOuxZa9
GmKYx9fE/j0qIdy7r8kATw1xuG9HN+/1lTA4zMfw1XkNsWFY5uDoW5WQkNKs
GBCuIXK2eSxfU1cJE/Nt6+ff/vP6d0ncsRFVkPU+94Xyn23/0vh7r+YtVTCn
3TTnQZ6GsLHXP3cmsgqea19J3F/x5/sXacuPrKqCNYOUQ00/aQjFWwmX7qlW
wyczl5M/GjXEJsWETKV/qmHbohe7I2U1hfYMd0sp22po22xlt0ZLUyTa33d0
P1oNh4/cmdOtl6aI1XJUdgmvBpVAw3FFxpriygjZ1LS0avCL8+jvPU5TfL32
/ZtlcTX0yK7RnGqlKSyiQ3Jb31bDtepl7e0LNUVm4j/+mT+rYWjDw4+Jdpoi
VMMh/HRTNSQrDyvesk1TVBst3jO/pRrMegfgADdNsXda0bu2hmp4PEb2xquT
mqJfRQ8N92/VMH+O0/mAQE1h//r62coX1VCx7vmhBVGawuv4tFNyedWwdt/k
zSpJmsJYJyupJb4avp6JXvzwgabIsXrgkOxfDS5RelMOFGqKsqPm4eYu1dCO
bkNHv9QUpbeDLUNmVcOxks/dfn7TFC9u+X2X9KoG9W/W8lFtmiKiR0Lj9+9V
4C+DNWuUtESPF98Dm5OqoFe3gVXdumiJH1mffnbaVwVRw85mF/XVEhvlhj7v
Na4KTCzb73ibaIm+V2VU1zdUwt0VDsFTzbTEs6mG3WquV4L5joITv2dpCbm7
fZeVLquE3BPjdiYt0xKnHBLvjlGsBOsrV9c4b9ASqk3bK0fFVkBVkvqsgbu0
ROCijsaaBRVg/9R1zOsjWkLUWaWdqSuHH2/f9Ak8oyWWW/2cbnaqHHa1zVK3
DtES1/Pjf/f9uxyktJJbVWK0REiWif3me2XgOaD3+4f3tMSTpvddps0sA03w
LjjwWEvM7XT79LuyP+fJpjF1dKmWmBX6S3W33XPo47g68udbLXEE5JeN+FoK
0e5PzkbVagnPHbm5M7eWwsiLIw/aSmmLA2eiv7TWlcD9W5c3Gqhpi4zZH2a4
7CgBiyzFhcUG2uLSxSnO9bUSeFq5bdLJgdpCc4nFmbgtElhUVznYYrS2OD/q
9Nb3n4vhpZKlfscUbaGUl947z64Y1veKk0mery1ev1SoDq4qghpTgx/Oq7XF
u+tReRdsimDPrKPlA520BXiXVtbkFoKM3Y+Hr/dqi/mPO469NS8Erz1L4gI9
tcWD5q8RUXcLQMc385K1v7b4e/zPma7DCyAowvi46lVtsc5ykceJyHzol+a/
Peu2tsiP3WSm/cc/xBRLrzootMVHRccep//M89FfNk0f81Rb/LLZ1Su591MQ
0iWjaiq0xeY8yQHpLnkwTd/sr+uftMVO91CPHNVcKBhyXWVtk7bodAlqtirk
wNKpOs0Gcjqiy/Nu52fKPoHXyw68KdbSEf2HmkfHyD6GTds+Pj3ZS0coeMbL
fFDMhvrj8+9aDNERzte2djfTfAT7g1OvdozTEVISa7sOwyyQS+zvm2ylI9Q8
e+xaN/Qh+OSe3rd1kY4obTPoHjP1AXR50+owaJ2OSNzzQVFjTSYEt9gteLNN
R5w+f8s/9VAGDNB4NvGSm44Ytu3I/pcR6RDXf+wgGx8d8Sp78qvQIgH/TAjT
VbukI87Vxb7pJycgY4Gq9KMoHfFh4tKFqq5pMGPjrq8Hk/68Ps907b26VCh2
e1U65qGO2D7aQHbfnnuw3H9GZk2hjnDLuGLsqHoX3t1MiLn+UkfM9dS1Do5O
BqcHPQPWftcROy3PyfVanASN5Z5Hu//SEYvuDI7/qZ4IB2vqnCVKuuKsxY4d
SsXxoKi4crlPF10xa+uUwyvC74Bvj2xLy366omJ7x3eJ223oOspkhNQIXWEq
F6pvsyEOQmdc6pFipitGrYjOSVwRC0a28p23zdYVjbLdGkPuxcCd3c4Ng5br
itn2hzXeFEbD+FPlL99s0BW5I34lZ0vdgIdXp+Re2qUrXsQtM6qcEgWzU2OS
bI7qikiTj30uX46AkkL9MLWzusKh8fii46rXYNUnd59HIbpinUN1o4pvOHzs
+OrqFqMrbFZEuvsPCANnvUXrxqbqioh7HuE+RVegZXD63NrHuqLIQ93AxjcE
3M2Nxt8o1RUWTq1NpzMug/JSv7/t3umKm+GfZI4fvQRnnTu0DOt0hX/na30m
bQyA7h4bfkuk9IRiUv1Lpy0X4GpQ0ScfNT1xoiQuLuPseTCOnyCx7K4nEl7n
N36RnIPEJxFCapCe+D3E6cWFkWcBXmlGp4zWE6HjJp86EOMLj5r2+m+bqifO
rIo6tWDyaZir9t7daIGesFhtWxhedRLK+s51ertaT1TdT8w9vM4LbMfdXRLk
pCfihkz7K6erJ3ye13fqwn164sbbhbMNm4/B9vU+w9RP6InnlgUTB/0+Ar8O
NBtk++uJv9rGGt8eeBiO+NkqHLqqJ7o7LPy8c/chUI3OrR17R0+o+SjE/8w/
COczTKtrhZ7YqJ2bOfrHPuhZFvL4xlM94bxjU2yV5R6I+NE5wa5ST9R59Rzf
p3QXDJN3CTH8rCc2L1ba73DRBVK6v/AqadITnF9PGmG165Rcl//v//T1yF9P
Pw/559HvQ/599H6Q3w+9X+T3S58H+fPQ50X+vHQ9kK8HXS/k60XXE/l60vVG
vt50P5DvB90v5PtF9xP5ftL9Rr7f9DwgPw/0vCA/L/Q8IT9P9LwhP2/0PCI/
j/S8Ij+v9DwjP8/0vCM/73QekM8DnRfk80LnCfk80XlDPm90HpHPI51X5PNK
5xn5PNN5Rz7vNA+Q5wHNC+R5QfMEeZ7QvEGeNzSPkOcRzSvkeUXzDHme0bxD
nnc0D5HnIc1L5HlJ8xR5ntK8xf/m7b/zGHke07xGntc0z5HnOc175HlP+wB5
H9C+QN4XtE+Q9wntG+R9Q/sIeR/RvkLeV7TPkPcZ7TvkfUf7EHkf0r5E3pe0
T5H3Ke1b5H1L+xh5H9O+Rt7XtM+R9znte+R9T3oAWQ+QXkDWC6QnkPUE6Q1k
vUF6BFmPkF5B1iukZ5D1DOkdZL1DeghZD5FeQtZLpKeQ9RTpLWS9RXoMWY+R
XkPWa6TnkPUc6T1kvUd6EFkPkl5E1oukJ5H1JOlNZL1JehRZj5JeRdarpGeR
9SzpXWS9S3oYWQ+TXkbWy6SnkfU06W1kvU16HFmPk15H1uuk55H1POl9ZL1P
fgDZD5BfQPYL5CeQ/QT5DWS/QX4E2Y+QX0H2K+RnkP0M+R1kv0N+CNkPkV9C
9kvkp5D9FPktZL9FfgzZj5FfQ/Zr5OeQ/Rz5PWS/R34Q2Q+SX0T2i+Qnkf0k
+U1kv0l+FNmPkl9F9qvkZ/E/P/uv30X2u+SHkf0w+WVkv0x+GtlPk99G9tvk
x5H9OPl1ZL9Ofh7Zz5PfR/b7lAcg5wGUFyDnBZQnIOcJlDcg5w2URyDnEZRX
IOcVlGcg5xmUdyDnHZSHIOchlJcg5yWUpyDnKZS3IOctlMcg5zGU1yDnNZTn
IOc5lPcg5z2UByHnQZQXIedFlCch50mUNyHnTZRHIedRlFch51WUZyHnWZR3
IeddlIch52GUlyHnZZSnIedplLch522UxyHncZTXIed1lOch53mU9yHnfZQH
IueBlBci54WUJyLniZQ3IueNlEci55GUVyLnlZRnIueZlHci552UhyLnoZSX
4n956b95KnKeSnkrct5KeSxyHkt5LXJeS3kucp5LeS9y3kt5MHIeTHkxcl5M
eTJynkx5M3LeTHk0ch5NeTVyXk15NnKeTXk3ct5NeThyHk55OXJeTnk6cp5O
eTty3k55PHIeT3k9cl5PeT5ynk95P3LeT30Ach9AfQFyX0B9AnKfQH0Dct9A
fQRyH0F9BXJfQX0Gcp9BfQdy30F9CHIfQn0Jcl9CfQpyn0J9C3LfQn0Mch9D
fQ1yX0N9DnKfQ30Pct9DfRByH0R9EXJfRH0Scp9EfRNy30R9FHIfRX0Vcl9F
fRZyn0V9F3LfRX0Ych9GfRlyX0Z9GnKfRn0bct9GfRxyH0d9HXJfR30ecp9H
fR9y30d9IHIfSH0hcl9IfSJyn0h9I3LfSH0kch9JfSVyX0l9JnKfSX0nct9J
fShyH0p9KXJfSn0qcp9KfSty30p9LHIfS30tcl9LfS5yn0t9L3LfS30wch9M
fTFyX0x9MnKfTH0zct9MfTRyH019NXJfTX02cp9NfTdy3019OHIfTn05cl9O
fTpyn059O3LfTn08ch9PfT1yX099PnKfT30/ct9PPAAyD0C8ADIvQDwBMk9A
vAEyb0A8AjKPQLwCMq9APAMyz0C8AzLvQDwEMg9BvAQyL0E8BTJPQbwFMm9B
PAYyj0G8BjKvQTwHMs9BvAcy70E8CDIPQrwIMi9CPAkyT0K8CTJvQjwKMo9C
vAr+x6v8y7Mg8yzEuyDzLsTDIPMwxMsg8zLE0yDzNMTbIPM2xOMg8zjE6yDz
OsTzIPM8xPsg8z7EAyHzQMQLIfNCxBMh80TEGyHzRsQjIfNIxCsh80rEMyHz
TMQ7IfNOxEMh81DESyHzUsRT4X881b+8FTJvRTwWMo9FvBYyr0U8FzLPRbwX
Mu9FPBgyD0a8GDIvRjwZMk9GvBkyb0Y8GjKPRrwaMq9GPBsyz0a8GzLvRjwc
Mg9HvBwyL0c8HTJPR7wdMm9HPB4yj0e8HjKvRzwfMs9HvB8y70c8IDIPSLwg
Mi9IPCEyT0i8ITJvSDwiMo9IvCIyr0g8IzLPSLwjMu9IPCQyD0m8JDIvSTwl
Mk9JvCUyb0k8JjKPSbwmMq9JPCcyz0m8JzLvSTwoMg9KvCgyL0o8KTJPSrwp
Mm9KPCoyj0q8KjKvSjwrMs9KvCsy70o8LDIPS7wsMi9LPC0yT0u8LTJvSzwu
Mo9LvC4yr0s8LzLPS7wvMu9LPDD+Xx74//DCyLww8cTIPDHxxsi8MfHIyDwy
8crIvDLxzMg8M/HOyLwz8dDIPDTx0si8NPHUyDw18dbIvPX/y2P/DyqBpFc=

                "]], {{{0.4051035812429855, 0.}, {0., -1.}}, {
                0.6960569343063404, 0.}}]},
             
             ImageSizeCache->{{80.49589935794627, 
              
              110.54378318173632`}, {-92.59214880203939, \
-4.5198849612864525`}}],
            StyleBox[
             TagBox[
              GridBox[{{
                 StyleBox["\"max\"", Bold, StripOnInput -> False], "5.1`"}, {
                 StyleBox["\"75%\"", Bold, StripOnInput -> False], "4.45`"}, {
                 StyleBox["\"median\"", Bold, StripOnInput -> False], "4.`"}, {
                 StyleBox["\"25%\"", Bold, StripOnInput -> False], "2.15`"}, {
                 StyleBox["\"min\"", Bold, StripOnInput -> False], "1.6`"}}, 
               GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
               AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}, "Rows" -> {
                   Directive[
                    GrayLevel[0.3]], {
                    Directive[
                    GrayLevel[0.3]]}, 
                   Directive[
                    GrayLevel[0.3]]}}, 
               GridBoxFrame -> {
                "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> Directive[
                 AbsoluteThickness[1], 
                 Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[
             Grid[{{
                Style["max", Bold], 5.1}, {
                Style["75%", Bold], 4.45}, {
                Style["median", Bold], 4.}, {
                Style["25%", Bold], 2.15}, {
                Style["min", Bold], 1.6}}, Dividers -> {{
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}, {
                 Directive[
                  GrayLevel[0.3]], {
                  Directive[
                   GrayLevel[0.3]]}, 
                 Directive[
                  GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, 
              Frame -> GrayLevel[0], BaseStyle -> Directive[
                AbsoluteThickness[1], 
                Dashing[{}]]], {}], 
            "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0.5, 1.6},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {{{0.6960569343063404, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          0.8921138686126808, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{
          0.6960569343063404, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
          0.8921138686126808, 
           FormBox[
            TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"DistributionChart\"", TraditionalForm],
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{{{0.6960569343063404, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {0.5, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
         0.8921138686126808, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
        Automatic}], {580.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], Dashing[Small], 
          LineBox[{{-0.2999225405681716, 0.}, {1.2808009361064756`, 0.}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], Dashing[Small], 
          LineBox[{{4.682828735972571, 5.1}, {20.026930907707264`, 
           5.1}}]}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], Dashing[{0, Small}], 
          LineBox[{{1.2808009361064756`, 0.}, {4.682828735972571, 
           5.1}}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6], 
          PointBox[CompressedData["
1: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

           "]]}, {}, {}}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{{}, 
        StyleBox[
         LineBox[{{-0.2999225405681716, -2.36967191489676}, {
          20.026930907707264`, 28.10243433605307}}], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}]], StripOnInput -> False]},
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"QuantilePlot\"", TraditionalForm],
      PlotRange->{{0, 6.675643635902421}, {0, 5.1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.71615980008433*^9, {3.716159896456835*^9, 3.7161599151492767`*^9}, 
   3.716159945334778*^9, 3.7162090766623573`*^9, {3.716209395284601*^9, 
   3.7162094128188553`*^9}, 3.7162096585478573`*^9, 3.71620969898739*^9, {
   3.716214799051578*^9, 3.716214826934059*^9}, {3.7162588902689037`*^9, 
   3.716258939784854*^9}, 3.7475775800648108`*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"3c363d65-c8c6-4cc8-b38f-2b46358ab4e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8e826b6e-a9ce-446d-a3de-0cf675f13b00"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Histograms", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716159393274618*^9, 
   3.7161593982561893`*^9}, {3.717186028998444*^9, 
   3.7171860308665667`*^9}},ExpressionUUID->"452dbdfd-b8df-4f2c-9ecb-\
47673c69eb9e"],

Cell[CellGroupData[{

Cell["Single-Variable Histograms", "Subsection",
 CellChangeTimes->{{3.717186041493479*^9, 3.7171860662410383`*^9}, {
  3.74827705585756*^9, 3.748277056113667*^9}, {3.74828187421286*^9, 
  3.748281876764909*^9}},ExpressionUUID->"b6a40ec6-5f5b-4428-b9af-\
dc2a84b79425"],

Cell["\<\
Histograms are very useful for exploring quantitative variables. They can \
provide an idea about the shape of distribution for the variable.\
\>", "Text",
 CellChangeTimes->{{3.716214574300503*^9, 3.7162145998365726`*^9}, 
   3.716214874818095*^9, {3.726001949328177*^9, 
   3.726002006594906*^9}},ExpressionUUID->"25b73370-fb40-4d0f-be85-\
aadbae92ef03"],

Cell[TextData[{
 "For the duration of the eruptions, the ",
 StyleBox[ButtonBox["Histogram",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Histogram"],
  FontWeight->"Bold"],
 " shows two distinct groups:"
}], "Text",
 CellChangeTimes->{{3.726002134402198*^9, 3.726002161781039*^9}, {
  3.726002327867297*^9, 3.726002336528154*^9}, {3.748277067046179*^9, 
  3.748277069753914*^9}},ExpressionUUID->"2c12efa5-5aed-4d06-b0d4-\
17ac8a8dc3bd"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"ofData", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.726002023124004*^9, 
  3.726002026689836*^9}},ExpressionUUID->"8da5c06d-69e2-4ebc-81fa-\
f34ee9cbc7eb"],

Cell["\<\
The following histograms are shown for the probability density function (PDF) \
for each variable\[LongDash]duration and wait times:\
\>", "Text",
 CellChangeTimes->{{3.726002252298686*^9, 3.7260023001094923`*^9}, {
  3.748277074441009*^9, 
  3.74827707991297*^9}},ExpressionUUID->"6b8008f4-e7e6-47b1-87c7-\
206db10b2c68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"ofData", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "12", ",", 
       "\"\<PDF\>\"", ",", 
       RowBox[{
       "ChartElementFunction", "\[Rule]", " ", 
        "\"\<EdgeFadingRectangle\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Duration\>\"", ",", "\"\<Text\>\""}], "]"}]}]}], "]"}], 
     ",", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"ofData", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "12", ",", 
       "\"\<PDF\>\"", ",", 
       RowBox[{
       "ChartElementFunction", "\[Rule]", " ", 
        "\"\<EdgeFadingRectangle\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", " ", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Waiting Time\>\"", ",", "\"\<Text\>\""}], "]"}]}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.57270460139821*^9, 3.5727046137086563`*^9}, {
   3.572865424853466*^9, 3.572865450932177*^9}, {3.572865604304847*^9, 
   3.572865605703475*^9}, {3.572865645377921*^9, 3.5728657295522823`*^9}, {
   3.572886598707556*^9, 3.572886605314865*^9}, 3.572939830320445*^9, {
   3.572939880073053*^9, 3.57293990389017*^9}, {3.572939986955023*^9, 
   3.572940007607007*^9}, {3.572941845153023*^9, 3.572941906562386*^9}, {
   3.716159197024109*^9, 3.716159199527508*^9}, {3.747577626644103*^9, 
   3.747577631449596*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"4c0ba876-f2a7-4617-b3e8-6070e1eb36a2"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {1.6, 0}], 
                    Offset[{-1, 1}, {1.8, 0}], 
                    Offset[{-1, -1}, {1.8, 0.22058823529411764`}], 
                    Offset[{1, -1}, {1.6, 0.22058823529411764`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{1.6, 0}, {1.8, 0}, {1.8, 0.22058823529411764`}, {
                    1.6, 0.22058823529411764`}, {1.6, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{1.6, 0}, {1.8, 0.22058823529411764`}]}}},
             
             ImageSizeCache->{{35.760693309010094`, 
              55.09286114716909}, {-59.33772862908191, -12.760693309010094`}}],
            StatusArea[#, 0.22058823529411764`]& ,
            TagBoxNote->"0.22058823529411764"],
           StyleBox["0.22058823529411764`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.22058823529411764`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {1.8, 0}], 
                    Offset[{-1, 1}, {2., 0}], 
                    Offset[{-1, -1}, {2., 0.7169117647058824}], 
                    Offset[{1, -1}, {1.8, 0.7169117647058824}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{1.8, 0}, {2., 0}, {2., 0.7169117647058824}, {1.8,
                     0.7169117647058824}, {1.8, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{1.8, 0}, {2., 0.7169117647058824}]}}},
             
             ImageSizeCache->{{47.760693309010094`, 
              67.02034772470606}, {-148.32843909229365`, \
-12.760693309010094`}}],
            StatusArea[#, 0.7169117647058824]& ,
            TagBoxNote->"0.7169117647058824"],
           StyleBox["0.7169117647058824`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.7169117647058824, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {2., 0}], 
                    Offset[{-1, 1}, {2.2, 0}], 
                    Offset[{-1, -1}, {2.2, 0.36764705882352944`}], 
                    Offset[{1, -1}, {2., 0.36764705882352944`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{2., 0}, {2.2, 0}, {2.2, 0.36764705882352944`}, {
                    2., 0.36764705882352944`}, {2., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{2., 0}, {2.2, 0.36764705882352944`}]}}},
             
             ImageSizeCache->{{59.760693309010094`, 
              78.94783430224302}, {-85.70534654410761, -12.760693309010094`}}],
            StatusArea[#, 0.36764705882352944`]& ,
            TagBoxNote->"0.36764705882352944"],
           StyleBox["0.36764705882352944`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.36764705882352944`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {2.2, 0}], 
                    Offset[{-1, 1}, {2.4, 0}], 
                    Offset[{-1, -1}, {2.4, 0.29411764705882354`}], 
                    Offset[{1, -1}, {2.2, 0.29411764705882354`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{2.2, 0}, {2.4, 0}, {2.4, 0.29411764705882354`}, {
                    2.2, 0.29411764705882354`}, {2.2, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{2.2, 0}, {2.4, 0.29411764705882354`}]}}},
             
             ImageSizeCache->{{71.7606933090101, 
              90.87532087977999}, {-72.52153758659476, -12.760693309010094`}}],
            StatusArea[#, 0.29411764705882354`]& ,
            TagBoxNote->"0.29411764705882354"],
           StyleBox["0.29411764705882354`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.29411764705882354`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {2.4, 0}], 
                    Offset[{-1, 1}, {2.6, 0}], 
                    Offset[{-1, -1}, {2.6, 0.09191176470588236}], 
                    Offset[{1, -1}, {2.4, 0.09191176470588236}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{2.4, 0}, {2.6, 0}, {2.6, 0.09191176470588236}, {
                    2.4, 0.09191176470588236}, {2.4, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{2.4, 0}, {2.6, 0.09191176470588236}]}}},
             
             ImageSizeCache->{{83.7606933090101, 
              102.80280745731696`}, {-36.26606295343443, \
-12.760693309010094`}}],
            StatusArea[#, 0.09191176470588236]& ,
            TagBoxNote->"0.09191176470588236"],
           StyleBox["0.09191176470588236`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.09191176470588236, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {2.6, 0}], 
                    Offset[{-1, 1}, {2.8, 0}], 
                    Offset[{-1, -1}, {2.8, 0.03676470588235294}], 
                    Offset[{1, -1}, {2.6, 0.03676470588235294}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{2.6, 0}, {2.8, 0}, {2.8, 0.03676470588235294}, {
                    2.6, 0.03676470588235294}, {2.6, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{2.6, 0}, {2.8, 0.03676470588235294}]}}},
             
             ImageSizeCache->{{95.7606933090101, 
              114.7302940348539}, {-26.378206235299785`, \
-12.760693309010094`}}],
            StatusArea[#, 0.03676470588235294]& ,
            TagBoxNote->"0.03676470588235294"],
           StyleBox["0.03676470588235294`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.03676470588235294, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {2.8, 0}], 
                    Offset[{-1, 1}, {3., 0}], 
                    Offset[{-1, -1}, {3., 0.05514705882352941}], 
                    Offset[{1, -1}, {2.8, 0.05514705882352941}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{2.8, 0}, {3., 0}, {3., 0.05514705882352941}, {
                    2.8, 0.05514705882352941}, {2.8, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{2.8, 0}, {3., 0.05514705882352941}]}}},
             
             ImageSizeCache->{{107.7606933090101, 
              126.65778061239087`}, {-29.674158474677995`, \
-12.760693309010094`}}],
            StatusArea[#, 0.05514705882352941]& ,
            TagBoxNote->"0.05514705882352941"],
           StyleBox["0.05514705882352941`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.05514705882352941, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {3., 0}], 
                    Offset[{-1, 1}, {3.2, 0}], 
                    Offset[{-1, -1}, {3.2, 0.01838235294117647}], 
                    Offset[{1, -1}, {3., 0.01838235294117647}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{3., 0}, {3.2, 0}, {3.2, 0.01838235294117647}, {
                    3., 0.01838235294117647}, {3., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{3., 0}, {3.2, 0.01838235294117647}]}}},
             
             ImageSizeCache->{{119.7606933090101, 
              138.58526718992786`}, {-23.239306690989903`, \
-12.760693309010094`}}],
            StatusArea[#, 0.01838235294117647]& ,
            TagBoxNote->"0.01838235294117647"],
           StyleBox["0.01838235294117647`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.01838235294117647, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {3.2, 0}], 
                    Offset[{-1, 1}, {3.4, 0}], 
                    Offset[{-1, -1}, {3.4, 0.07352941176470588}], 
                    Offset[{1, -1}, {3.2, 0.07352941176470588}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{3.2, 0}, {3.4, 0}, {3.4, 0.07352941176470588}, {
                    3.2, 0.07352941176470588}, {3.2, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{3.2, 0}, {3.4, 0.07352941176470588}]}}},
             
             ImageSizeCache->{{131.7606933090101, 
              150.5127537674648}, {-33.239306690989906`, \
-12.760693309010094`}}],
            StatusArea[#, 0.07352941176470588]& ,
            TagBoxNote->"0.07352941176470588"],
           StyleBox["0.07352941176470588`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.07352941176470588, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {3.4, 0}], 
                    Offset[{-1, 1}, {3.6, 0}], 
                    Offset[{-1, -1}, {3.6, 0.11029411764705882`}], 
                    Offset[{1, -1}, {3.4, 0.11029411764705882`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{3.4, 0}, {3.6, 0}, {3.6, 0.11029411764705882`}, {
                    3.4, 0.11029411764705882`}, {3.4, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{3.4, 0}, {3.6, 0.11029411764705882`}]}}},
             
             ImageSizeCache->{{143.7606933090101, 
              162.44024034500177`}, {-39.56201519281264, \
-12.760693309010094`}}],
            StatusArea[#, 0.11029411764705882`]& ,
            TagBoxNote->"0.11029411764705882"],
           StyleBox["0.11029411764705882`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.11029411764705882`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {3.6, 0}], 
                    Offset[{-1, 1}, {3.8, 0}], 
                    Offset[{-1, -1}, {3.8, 0.18382352941176472`}], 
                    Offset[{1, -1}, {3.6, 0.18382352941176472`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{3.6, 0}, {3.8, 0}, {3.8, 0.18382352941176472`}, {
                    3.6, 0.18382352941176472`}, {3.6, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{3.6, 0}, {3.8, 0.18382352941176472`}]}}},
             
             ImageSizeCache->{{155.7606933090101, 
              174.36772692253874`}, {-52.74582415032549, \
-12.760693309010094`}}],
            StatusArea[#, 0.18382352941176472`]& ,
            TagBoxNote->"0.18382352941176472"],
           StyleBox["0.18382352941176472`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.18382352941176472`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {3.8, 0}], 
                    Offset[{-1, 1}, {4., 0}], 
                    Offset[{-1, -1}, {4., 0.29411764705882354`}], 
                    Offset[{1, -1}, {3.8, 0.29411764705882354`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{3.8, 0}, {4., 0}, {4., 0.29411764705882354`}, {
                    3.8, 0.29411764705882354`}, {3.8, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{3.8, 0}, {4., 0.29411764705882354`}]}}},
             
             ImageSizeCache->{{167.7606933090101, 
              186.2952135000757}, {-72.52153758659476, -12.760693309010094`}}],
            StatusArea[#, 0.29411764705882354`]& ,
            TagBoxNote->"0.29411764705882354"],
           StyleBox["0.29411764705882354`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.29411764705882354`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {4., 0}], 
                    Offset[{-1, 1}, {4.2, 0}], 
                    Offset[{-1, -1}, {4.2, 0.5698529411764706}], 
                    Offset[{1, -1}, {4., 0.5698529411764706}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{4., 0}, {4.2, 0}, {4.2, 0.5698529411764706}, {4.,
                     0.5698529411764706}, {4., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{4., 0}, {4.2, 0.5698529411764706}]}}},
             
             ImageSizeCache->{{179.7606933090101, 
              198.2393066909899}, {-122.23930669098989`, \
-12.760693309010094`}}],
            StatusArea[#, 0.5698529411764706]& ,
            TagBoxNote->"0.5698529411764706"],
           StyleBox["0.5698529411764706`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5698529411764706, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {4.2, 0}], 
                    Offset[{-1, 1}, {4.4, 0}], 
                    Offset[{-1, -1}, {4.4, 0.5330882352941176}], 
                    Offset[{1, -1}, {4.2, 0.5330882352941176}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   LineBox[{{4.2, 0}, {4.4, 0}, {4.4, 0.5330882352941176}, {
                    4.2, 0.5330882352941176}, {4.2, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{4.2, 0}, {4.4, 0.5330882352941176}]}}},
             
             ImageSizeCache->{{190.7606933090101, 
              210.15018665514964`}, {-115.36891669851151`, \
-12.760693309010094`}}],
            StatusArea[#, 0.5330882352941176]& ,
            TagBoxNote->"0.5330882352941176"],
           StyleBox["0.5330882352941176`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.5330882352941176, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {4.4, 0}], 
                    Offset[{-1, 1}, {4.6, 0}], 
                    Offset[{-1, -1}, {4.6, 0.6433823529411765}], 
                    Offset[{1, -1}, {4.4, 0.6433823529411765}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{4.4, 0}, {4.6, 0}, {4.6, 0.6433823529411765}, {
                    4.4, 0.6433823529411765}, {4.4, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{4.4, 0}, {4.6, 0.6433823529411765}]}}},
             
             ImageSizeCache->{{202.7606933090101, 
              
              222.07767323268655`}, {-135.2393066909899, \
-12.760693309010094`}}],
            StatusArea[#, 0.6433823529411765]& ,
            TagBoxNote->"0.6433823529411765"],
           StyleBox["0.6433823529411765`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.6433823529411765, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {4.6, 0}], 
                    Offset[{-1, 1}, {4.8, 0}], 
                    Offset[{-1, -1}, {4.8, 0.40441176470588236`}], 
                    Offset[{1, -1}, {4.6, 0.40441176470588236`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{4.6, 0}, {4.8, 0}, {4.8, 0.40441176470588236`}, {
                    4.6, 0.40441176470588236`}, {4.6, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{4.6, 0}, {4.8, 0.40441176470588236`}]}}},
             
             ImageSizeCache->{{214.7606933090101, 
              234.00515981022357`}, {-92.29725102286403, \
-12.760693309010094`}}],
            StatusArea[#, 0.40441176470588236`]& ,
            TagBoxNote->"0.40441176470588236"],
           StyleBox["0.40441176470588236`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.40441176470588236`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {4.8, 0}], 
                    Offset[{-1, 1}, {5., 0}], 
                    Offset[{-1, -1}, {5., 0.3125}], 
                    Offset[{1, -1}, {4.8, 0.3125}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{4.8, 0}, {5., 0}, {5., 0.3125}, {4.8, 0.3125}, {
                    4.8, 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{4.8, 0}, {5., 0.3125}]}}},
             
             ImageSizeCache->{{226.7606933090101, 
              245.93264638776054`}, {-76.2393066909899, \
-12.760693309010094`}}],
            StatusArea[#, 0.3125]& ,
            TagBoxNote->"0.3125"],
           StyleBox["0.3125`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.3125, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {5., 0}], 
                    Offset[{-1, 1}, {5.2, 0}], 
                    Offset[{-1, -1}, {5.2, 0.07352941176470588}], 
                    Offset[{1, -1}, {5., 0.07352941176470588}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{5., 0}, {5.2, 0}, {5.2, 0.07352941176470588}, {
                    5., 0.07352941176470588}, {5., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{5., 0}, {5.2, 0.07352941176470588}]}}},
             
             ImageSizeCache->{{238.7606933090101, 
              257.8601329652975}, {-33.239306690989906`, \
-12.760693309010094`}}],
            StatusArea[#, 0.07352941176470588]& ,
            TagBoxNote->"0.07352941176470588"],
           StyleBox["0.07352941176470588`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.07352941176470588, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{1.528, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox[
        StyleBox["\"Duration\"", "Text", StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{1.6, 5.2}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.602], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {40., 0}], 
                    Offset[{-1, 1}, {45., 0}], 
                    Offset[{-1, -1}, {45., 0.0007352941176470588}], 
                    Offset[{1, -1}, {40., 0.0007352941176470588}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{40., 0}, {45., 0}, {45., 
                    0.0007352941176470588}, {40., 0.0007352941176470588}, {
                    40., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{40., 0}, {45., 0.0007352941176470588}]}}},
             ImageSizeCache->{{36.760693309010094`, 
              61.79300816922583}, {-22.239306690989903`, \
-12.760693309010094`}}],
            StatusArea[#, 0.0007352941176470588]& ,
            TagBoxNote->"0.0007352941176470588"],
           StyleBox["0.0007352941176470588`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.0007352941176470588, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {45., 0}], 
                    Offset[{-1, 1}, {50., 0}], 
                    Offset[{-1, -1}, {50., 0.014705882352941176`}], 
                    Offset[{1, -1}, {45., 0.014705882352941176`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{45., 0}, {50., 0}, {50., 
                    0.014705882352941176`}, {45., 0.014705882352941176`}, {
                    45., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{45., 0}, {50., 0.014705882352941176`}]}}},
             
             ImageSizeCache->{{54.760693309010094`, 
              79.68423803553125}, {-65.2393066909899, -12.760693309010094`}}],
            StatusArea[#, 0.014705882352941176`]& ,
            TagBoxNote->"0.014705882352941176"],
           StyleBox["0.014705882352941176`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.014705882352941176`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {50., 0}], 
                    Offset[{-1, 1}, {55., 0}], 
                    Offset[{-1, -1}, {55., 0.023529411764705882`}], 
                    Offset[{1, -1}, {50., 0.023529411764705882`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{50., 0}, {55., 0}, {55., 
                    0.023529411764705882`}, {50., 0.023529411764705882`}, {
                    50., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{50., 0}, {55., 0.023529411764705882`}]}}},
             
             ImageSizeCache->{{72.7606933090101, 
              97.57546790183667}, {-92.23930669098989, -12.760693309010094`}}],
            StatusArea[#, 0.023529411764705882`]& ,
            TagBoxNote->"0.023529411764705882"],
           StyleBox["0.023529411764705882`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.023529411764705882`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {55., 0}], 
                    Offset[{-1, 1}, {60., 0}], 
                    Offset[{-1, -1}, {60., 0.01764705882352941}], 
                    Offset[{1, -1}, {55., 0.01764705882352941}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{55., 0}, {60., 0}, {60., 0.01764705882352941}, {
                    55., 0.01764705882352941}, {55., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{55., 0}, {60., 0.01764705882352941}]}}},
             
             ImageSizeCache->{{90.7606933090101, 
              115.46669776814215`}, {-74.2393066909899, \
-12.760693309010094`}}],
            StatusArea[#, 0.01764705882352941]& ,
            TagBoxNote->"0.01764705882352941"],
           StyleBox["0.01764705882352941`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.01764705882352941, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {60., 0}], 
                    Offset[{-1, 1}, {65., 0}], 
                    Offset[{-1, -1}, {65., 0.0125}], 
                    Offset[{1, -1}, {60., 0.0125}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{60., 0}, {65., 0}, {65., 0.0125}, {60., 
                    0.0125}, {60., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{60., 0}, {65., 0.0125}]}}},
             
             ImageSizeCache->{{108.7606933090101, 
              133.35792763444763`}, {-58.23930669098991, \
-12.760693309010094`}}],
            StatusArea[#, 0.0125]& ,
            TagBoxNote->"0.0125"],
           StyleBox["0.0125`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.0125, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {65., 0}], 
                    Offset[{-1, 1}, {70., 0}], 
                    Offset[{-1, -1}, {70., 0.006617647058823529}], 
                    Offset[{1, -1}, {65., 0.006617647058823529}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{65., 0}, {70., 0}, {70., 0.006617647058823529}, {
                    65., 0.006617647058823529}, {65., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{65., 0}, {70., 0.006617647058823529}]}}},
             
             ImageSizeCache->{{126.7606933090101, 
              151.24915750075306`}, {-40.23930669098991, \
-12.760693309010094`}}],
            StatusArea[#, 0.006617647058823529]& ,
            TagBoxNote->"0.006617647058823529"],
           StyleBox["0.006617647058823529`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.006617647058823529, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {70., 0}], 
                    Offset[{-1, 1}, {75., 0}], 
                    Offset[{-1, -1}, {75., 0.016911764705882352`}], 
                    Offset[{1, -1}, {70., 0.016911764705882352`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{70., 0}, {75., 0}, {75., 
                    0.016911764705882352`}, {70., 0.016911764705882352`}, {
                    70., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{70., 0}, {75., 0.016911764705882352`}]}}},
             
             ImageSizeCache->{{144.7606933090101, 
              169.2393066909899}, {-71.65418173412681, -12.760693309010094`}}],
            StatusArea[#, 0.016911764705882352`]& ,
            TagBoxNote->"0.016911764705882352"],
           StyleBox["0.016911764705882352`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.016911764705882352`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {75., 0}], 
                    Offset[{-1, 1}, {80., 0}], 
                    Offset[{-1, -1}, {80., 0.039705882352941174`}], 
                    Offset[{1, -1}, {75., 0.039705882352941174`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{75., 0}, {80., 0}, {80., 
                    0.039705882352941174`}, {75., 0.039705882352941174`}, {
                    75., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{75., 0}, {80., 0.039705882352941174`}]}}},
             
             ImageSizeCache->{{161.7606933090101, 
              187.03161723336396`}, {-141.56306344304363`, \
-12.760693309010094`}}],
            StatusArea[#, 0.039705882352941174`]& ,
            TagBoxNote->"0.039705882352941174"],
           StyleBox["0.039705882352941174`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.039705882352941174`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {80., 0}], 
                    Offset[{-1, 1}, {85., 0}], 
                    Offset[{-1, -1}, {85., 0.04191176470588235}], 
                    Offset[{1, -1}, {80., 0.04191176470588235}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{80., 0}, {85., 0}, {85., 0.04191176470588235}, {
                    80., 0.04191176470588235}, {80., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{80., 0}, {85., 0.04191176470588235}]}}},
             
             ImageSizeCache->{{179.7606933090101, 
              204.92284709966944`}, {-148.32843909229365`, \
-12.760693309010094`}}],
            StatusArea[#, 0.04191176470588235]& ,
            TagBoxNote->"0.04191176470588235"],
           StyleBox["0.04191176470588235`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.04191176470588235, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {85., 0}], 
                    Offset[{-1, 1}, {90., 0}], 
                    Offset[{-1, -1}, {90., 0.016911764705882352`}], 
                    Offset[{1, -1}, {85., 0.016911764705882352`}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{85., 0}, {90., 0}, {90., 
                    0.016911764705882352`}, {85., 0.016911764705882352`}, {
                    85., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{85., 0}, {90., 0.016911764705882352`}]}}},
             
             ImageSizeCache->{{197.7606933090101, 
              222.81407696597486`}, {-71.65418173412681, \
-12.760693309010094`}}],
            StatusArea[#, 0.016911764705882352`]& ,
            TagBoxNote->"0.016911764705882352"],
           StyleBox["0.016911764705882352`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.016911764705882352`, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {90., 0}], 
                    Offset[{-1, 1}, {95., 0}], 
                    Offset[{-1, -1}, {95., 0.008088235294117648}], 
                    Offset[{1, -1}, {90., 0.008088235294117648}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{90., 0}, {95., 0}, {95., 0.008088235294117648}, {
                    90., 0.008088235294117648}, {90., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{90., 0}, {95., 0.008088235294117648}]}}},
             
             ImageSizeCache->{{215.7606933090101, 
              240.7053068322803}, {-44.592679137126765`, \
-12.760693309010094`}}],
            StatusArea[#, 0.008088235294117648]& ,
            TagBoxNote->"0.008088235294117648"],
           StyleBox["0.008088235294117648`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.008088235294117648, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], {{
                EdgeForm[], {{
                  EdgeForm[], 
                  PolygonBox[{
                    Offset[{1, 1}, {95., 0}], 
                    Offset[{-1, 1}, {100., 0}], 
                    Offset[{-1, -1}, {100., 0.0007352941176470588}], 
                    Offset[{1, -1}, {95., 0.0007352941176470588}]}, 
                   VertexColors -> {{0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.987148, 0.8073604000000001, 
                    0.49470040000000004`}, {0.6580986666666667, 
                    0.5382402666666668, 0.32980026666666673`}, {
                    0.6580986666666667, 0.5382402666666668, 
                    0.32980026666666673`}}]}, {
                  AbsoluteThickness[2], {
                   RGBColor[
                   0.987148, 0.8073604000000001, 0.49470040000000004`], 
                   
                   LineBox[{{95., 0}, {100., 0}, {100., 
                    0.0007352941176470588}, {95., 0.0007352941176470588}, {
                    95., 0}}]}}}}, {
                FaceForm[], 
                RectangleBox[{95., 0}, {100., 0.0007352941176470588}]}}},
             
             ImageSizeCache->{{233.7606933090101, 
              258.59653669858574`}, {-22.239306690989903`, \
-12.760693309010094`}}],
            StatusArea[#, 0.0007352941176470588]& ,
            TagBoxNote->"0.0007352941176470588"],
           StyleBox["0.0007352941176470588`", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[0.0007352941176470588, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{38.8, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox[
        StyleBox["\"Waiting Time\"", "Text", StripOnInput -> False], 
        TraditionalForm],
      PlotRange->{{40., 100.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.716159200776874*^9, 3.7171859426246233`*^9, 
  3.726002240282217*^9, 3.747577637951455*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"8120bb14-da46-498a-9c53-3a6602be9b42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paired Histograms", "Subsection",
 CellChangeTimes->{{3.716159414104569*^9, 3.716159421002822*^9}, {
  3.717186069956724*^9, 3.717186070313035*^9}, {3.7482770880406218`*^9, 
  3.7482770885364523`*^9}},ExpressionUUID->"9e02dc2c-394f-4971-9e70-\
108a2668522d"],

Cell["\<\
Paired histograms can help compare the distribution of values for both \
variables. For example, here are two sets of random numbers from two normal \
distributions, with different means and standard deviations:\
\>", "Text",
 CellChangeTimes->{{3.726002361321105*^9, 3.7260023758317537`*^9}, {
  3.7260024133827467`*^9, 3.72600250301588*^9}, {3.748277095568226*^9, 
  3.748277107496204*^9}},ExpressionUUID->"6c074e69-a8eb-4f0e-b7b3-\
1c556fcd6238"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rn1", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"0", ",", "1"}], "]"}], ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rn2", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1", ",", 
       RowBox[{"1", "/", "2"}]}], "]"}], ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PairedHistogram", "[", 
  RowBox[{"rn1", ",", "rn2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.72601421559006*^9, 
  3.726014321113308*^9}},ExpressionUUID->"aca0325d-6694-4299-8e47-\
cf46b3802b3f"],

Cell["\<\
To create a similar paired histogram for the Old Faithful data, you need to \
scale the duration values to be in the same range as the waiting times. The \
following code creates a paired histogram with scaled durations and unscaled \
waiting times:\
\>", "Text",
 CellChangeTimes->{{3.7260143740093393`*^9, 3.726014397134555*^9}, {
  3.7260146654952374`*^9, 3.726014776030136*^9}, {3.7482764329449577`*^9, 
  3.748276471245619*^9}, {3.748277118784906*^9, 
  3.748277138343144*^9}},ExpressionUUID->"bc41a0ee-3b79-43ce-a6d0-\
15ae59866f8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dur", " ", "=", 
   RowBox[{"ofData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wait", " ", "=", " ", 
   RowBox[{"ofData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaledData", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dat1", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "[", "dur", 
         "]"}]}], ",", 
       RowBox[{"dat2", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", "#", "]"}], ",", 
            RowBox[{"Max", "[", "#", "]"}]}], "}"}], "&"}], "[", "wait", 
         "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Rescale", "[", 
        RowBox[{"#", ",", "dat1", ",", "dat2"}], "]"}], "&"}], "/@", 
      "dur"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PairedHistogram", "[", 
  RowBox[{"scaledData", ",", "wait", ",", "12", ",", "\"\<PDF\>\"", ",", 
   RowBox[{"ChartLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Scaled Duration\>\"", ",", "\"\<Text\>\""}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Waiting Time\>\"", ",", "\"\<Text\>\""}], "]"}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.57286588770431*^9, 3.572865914390294*^9}, {
   3.57286596005704*^9, 3.572865962935485*^9}, {3.716159449740847*^9, 
   3.7161594500099373`*^9}, 3.716159910618207*^9, {3.7162150868800793`*^9, 
   3.716215094175043*^9}, 3.726014340555854*^9, {3.74757766375681*^9, 
   3.747577676517846*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"4c8e7842-d209-430c-b447-88f83c1c9272"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5319999999999999], Thickness[Small]}], {{{}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5319999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.007151991231275119, 40.}], 
             Offset[{0, 0}, {-0.004946108878333942, 45.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{154.20097744360902`, 162.4268253968254}, {
            74.24936156896982, 90.88566716614889}}],
          StatusArea[#, 0.0022058823529411764`]& ,
          TagBoxNote->"0.0022058823529411764"],
         StyleBox["0.0022058823529411764`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0022058823529411764`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.046857873584216295`, 45.}], 
             Offset[{0, 0}, {-0.004946108878333942, 50.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{15.135714285714329`, 162.4268253968254}, {
            58.11305597179074, 74.74936156896982}}],
          StatusArea[#, 0.04191176470588235]& ,
          TagBoxNote->"0.04191176470588235"],
         StyleBox["0.04191176470588235`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.04191176470588235, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.024799050054804532`, 50.}], 
             Offset[{0, 0}, {-0.004946108878333942, 55.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{92.39419381787803, 162.4268253968254}, {
            41.97675037461167, 58.61305597179074}}],
          StatusArea[#, 0.01985294117647059]& ,
          TagBoxNote->"0.01985294117647059"],
         StyleBox["0.01985294117647059`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01985294117647059, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.010093167701863354`, 55.}], 
             Offset[{0, 0}, {-0.004946108878333942, 60.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{143.89984683932053`, 162.4268253968254}, {
            25.840444777432623`, 42.47675037461167}}],
          StatusArea[#, 0.005147058823529412]& ,
          TagBoxNote->"0.005147058823529412"],
         StyleBox["0.005147058823529412`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.005147058823529412, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.007151991231275119, 60.}], 
             Offset[{0, 0}, {-0.004946108878333942, 65.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{154.20097744360902`, 162.4268253968254}, {
            9.704139180253549, 26.340444777432623`}}],
          StatusArea[#, 0.0022058823529411764`]& ,
          TagBoxNote->"0.0022058823529411764"],
         StyleBox["0.0022058823529411764`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0022058823529411764`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.008622579466569236, 65.}], 
             Offset[{0, 0}, {-0.004946108878333942, 70.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{149.0504121414648, 
            162.4268253968254}, {-6.432166416925526, 10.204139180253549`}}],
          StatusArea[#, 0.003676470588235294]& ,
          TagBoxNote->"0.003676470588235294"],
         StyleBox["0.003676470588235294`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.003676470588235294, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.013034344172451588`, 70.}], 
             Offset[{0, 0}, {-0.004946108878333942, 75.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{133.59871623503204`, 
            162.4268253968254}, {-22.5684720141046, -5.932166416925526}}],
          StatusArea[#, 0.008088235294117646]& ,
          TagBoxNote->"0.008088235294117646"],
         StyleBox["0.008088235294117646`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.008088235294117646, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.026269638290098648`, 75.}], 
             Offset[{0, 0}, {-0.004946108878333942, 80.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{87.24362851573379, 
            162.4268253968254}, {-38.704777611283646`, -22.0684720141046}}],
          StatusArea[#, 0.021323529411764706`]& ,
          TagBoxNote->"0.021323529411764706"],
         StyleBox["0.021323529411764706`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.021323529411764706`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.042446108878333944`, 80.}], 
             Offset[{0, 0}, {-0.004946108878333942, 85.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{30.587410192147047`, 
            162.4268253968254}, {-54.84108320846275, -38.204777611283646`}}],
          StatusArea[#, 0.0375]& ,
          TagBoxNote->"0.0375"],
         StyleBox["0.0375`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0375, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.04391669711362806, 85.}], 
             Offset[{0, 0}, {-0.004946108878333942, 90.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{25.43684489000279, 
            162.4268253968254}, {-70.9773888056418, -54.34108320846275}}],
          StatusArea[#, 0.03897058823529412]& ,
          TagBoxNote->"0.03897058823529412"],
         StyleBox["0.03897058823529412`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.03897058823529412, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.022593167701863353`, 90.}], 
             Offset[{0, 0}, {-0.004946108878333942, 95.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{100.12004177109442`, 
            162.4268253968254}, {-87.11369440282084, -70.4773888056418}}],
          StatusArea[#, 0.01764705882352941]& ,
          TagBoxNote->"0.01764705882352941"],
         StyleBox["0.01764705882352941`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01764705882352941, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-0.00641669711362806, 95.}], 
             Offset[{0, 0}, {-0.004946108878333942, 100.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{156.77626009468116`, 
            162.4268253968254}, {-103.24999999999994`, -86.61369440282084}}],
          StatusArea[#, 0.0014705882352941176`]& ,
          TagBoxNote->"0.0014705882352941176"],
         StyleBox["0.0014705882352941176`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0014705882352941176`, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5319999999999999], Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.005681402995981001, 40.}], 
             Offset[{0, 0}, {0.004946108878333942, 45.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 199.64845725424672`}, {
            74.24936156896982, 90.88566716614889}}],
          StatusArea[#, 0.0007352941176470588]& ,
          TagBoxNote->"0.0007352941176470588"],
         StyleBox["0.0007352941176470588`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0007352941176470588, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.019651991231275118`, 45.}], 
             Offset[{0, 0}, {0.004946108878333942, 50.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 248.57882762461708`}, {
            58.11305597179074, 74.74936156896982}}],
          StatusArea[#, 0.014705882352941176`]& ,
          TagBoxNote->"0.014705882352941176"],
         StyleBox["0.014705882352941176`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.014705882352941176`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.028475520643039823`, 50.}], 
             Offset[{0, 0}, {0.004946108878333942, 55.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 279.48221943748257`}, {
            41.97675037461167, 58.61305597179074}}],
          StatusArea[#, 0.023529411764705882`]& ,
          TagBoxNote->"0.023529411764705882"],
         StyleBox["0.023529411764705882`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.023529411764705882`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.022593167701863353`, 55.}], 
             Offset[{0, 0}, {0.004946108878333942, 60.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 258.8799582289056}, {
            25.840444777432623`, 42.47675037461167}}],
          StatusArea[#, 0.01764705882352941]& ,
          TagBoxNote->"0.01764705882352941"],
         StyleBox["0.01764705882352941`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.01764705882352941, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.017446108878333942`, 60.}], 
             Offset[{0, 0}, {0.004946108878333942, 65.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 240.8529796714007}, {
            9.704139180253549, 26.340444777432623`}}],
          StatusArea[#, 0.0125]& ,
          TagBoxNote->"0.0125"],
         StyleBox["0.0125`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0125, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.011563755937157472`, 65.}], 
             Offset[{0, 0}, {0.004946108878333942, 70.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            220.25071846282373`}, {-6.432166416925526, 10.204139180253549`}}],
          StatusArea[#, 0.006617647058823529]& ,
          TagBoxNote->"0.006617647058823529"],
         StyleBox["0.006617647058823529`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.006617647058823529, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.021857873584216297`, 70.}], 
             Offset[{0, 0}, {0.004946108878333942, 75.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            256.30467557783345`}, {-22.5684720141046, -5.932166416925526}}],
          StatusArea[#, 0.016911764705882355`]& ,
          TagBoxNote->"0.016911764705882355"],
         StyleBox["0.016911764705882355`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.016911764705882355`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.04465199123127512, 75.}], 
             Offset[{0, 0}, {0.004946108878333942, 80.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            336.1384377610693}, {-38.704777611283646`, -22.0684720141046}}],
          StatusArea[#, 0.039705882352941174`]& ,
          TagBoxNote->"0.039705882352941174"],
         StyleBox["0.039705882352941174`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.039705882352941174`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.046857873584216295`, 80.}], 
             Offset[{0, 0}, {0.004946108878333942, 85.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            343.86428571428564`}, {-54.84108320846275, -38.204777611283646`}}],
          StatusArea[#, 0.04191176470588235]& ,
          TagBoxNote->"0.04191176470588235"],
         StyleBox["0.04191176470588235`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.04191176470588235, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.021857873584216297`, 85.}], 
             Offset[{0, 0}, {0.004946108878333942, 90.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            256.30467557783345`}, {-70.9773888056418, -54.34108320846275}}],
          StatusArea[#, 0.016911764705882355`]& ,
          TagBoxNote->"0.016911764705882355"],
         StyleBox["0.016911764705882355`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.016911764705882355`, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.013034344172451588`, 90.}], 
             Offset[{0, 0}, {0.004946108878333942, 95.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            225.40128376496796`}, {-87.11369440282084, -70.4773888056418}}],
          StatusArea[#, 0.008088235294117646]& ,
          TagBoxNote->"0.008088235294117646"],
         StyleBox["0.008088235294117646`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.008088235294117646, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {0.005681402995981001, 95.}], 
             Offset[{0, 0}, {0.004946108878333942, 100.}], "RoundingRadius" -> 
             0]},
           
           ImageSizeCache->{{196.5731746031746, 
            199.64845725424672`}, {-103.24999999999994`, -86.61369440282084}}],
          StatusArea[#, 0.0007352941176470588]& ,
          TagBoxNote->"0.0007352941176470588"],
         StyleBox["0.0007352941176470588`", {}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.0007352941176470588, {}], 
         "Tooltip"]& ]}, {}, {}}}, {}}, {{{{{{{{{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}}, {}}, InsetBox[
         StyleBox["\<\"Scaled Duration\"\>", "Text",
          StripOnInput->False], Offset[{0, 4}, {-0.02590199123127512, 100.}], 
         ImageScaled[{0.5, 0}]]}, {}}, {{{{{{}, {}}, {{}, {}}, {{}, {}}, {{}, \
{}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, {{}, {}}, \
{{}, {}}}, {}}, InsetBox[
         StyleBox["\<\"Waiting Time\"\>", "Text",
          StripOnInput->False], Offset[{0, 4}, {0.02590199123127512, 100.}], 
         ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}}, 
   StyleBox[{
     TagBox[{
       StyleBox[{
         LineBox[{
          Offset[{0, 0}, {-0.004946108878333943, 37.}], 
           Offset[{0, 0}, {-0.04920076726342711, 37.}]}], 
         StyleBox[{{
            LineBox[{{
              Offset[{0, 0}, {-0.004946108878333943, 37.}], 
               Offset[{0, -4.}, {-0.004946108878333943, 37.}]}, {
              Offset[{0, 0}, {-0.024946108878333945`, 37.}], 
               Offset[{0, -4.}, {-0.024946108878333945`, 37.}]}, {
              Offset[{0, 0}, {-0.044946108878333946`, 37.}], 
               Offset[{0, -4.}, {-0.044946108878333946`, 37.}]}}], 
            LineBox[{{
              Offset[{0, 0}, {-0.009946108878333942, 37.}], 
               Offset[{0., -2.5}, {-0.009946108878333942, 37.}]}, {
              Offset[{0, 0}, {-0.014946108878333943`, 37.}], 
               Offset[{0., -2.5}, {-0.014946108878333943`, 37.}]}, {
              Offset[{0, 0}, {-0.019946108878333944`, 37.}], 
               Offset[{0., -2.5}, {-0.019946108878333944`, 37.}]}, {
              Offset[{0, 0}, {-0.02994610887833395, 37.}], 
               Offset[{0., -2.5}, {-0.02994610887833395, 37.}]}, {
              Offset[{0, 0}, {-0.034946108878333944`, 37.}], 
               Offset[{0., -2.5}, {-0.034946108878333944`, 37.}]}, {
              Offset[{0, 0}, {-0.039946108878333955`, 37.}], 
               Offset[{0., -2.5}, {-0.039946108878333955`, 37.}]}}]}, 
           
           StyleBox[{{{
               InsetBox["0", 
                Offset[{0., -7.}, {-0.004946108878333943, 37.}], {0., 1.}, 
                Automatic, {1, 0}], InsetBox[
                TagBox[
                 InterpretationBox["\<\"0.02\"\>",
                  0.02,
                  AutoDelete->True],
                 NumberForm[#, {
                   DirectedInfinity[1], 2}]& ], 
                Offset[{0., -7.}, {-0.024946108878333945, 37.}], {0., 1.}, 
                Automatic, {1, 0}], InsetBox[
                TagBox[
                 InterpretationBox["\<\"0.04\"\>",
                  0.04,
                  AutoDelete->True],
                 NumberForm[#, {
                   DirectedInfinity[1], 2}]& ], 
                Offset[{0., -7.}, {-0.044946108878333946, 37.}], {0., 1.}, 
                Automatic, {1, 0}]}, {{}, {}, {}, {}, {}, {}}}, {}}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]},
        Antialiasing->False], 
       StyleBox[{
         LineBox[{
          Offset[{0, 0}, {0.004946108878333943, 37.}], 
           Offset[{0, 0}, {0.04920076726342711, 37.}]}], 
         StyleBox[{{
            LineBox[{{
              Offset[{0, 0}, {0.004946108878333943, 37.}], 
               Offset[{0, -4.}, {0.004946108878333943, 37.}]}, {
              Offset[{0, 0}, {0.024946108878333945`, 37.}], 
               Offset[{0, -4.}, {0.024946108878333945`, 37.}]}, {
              Offset[{0, 0}, {0.044946108878333946`, 37.}], 
               Offset[{0, -4.}, {0.044946108878333946`, 37.}]}}], 
            LineBox[{{
              Offset[{0, 0}, {0.009946108878333942, 37.}], 
               Offset[{0., -2.5}, {0.009946108878333942, 37.}]}, {
              Offset[{0, 0}, {0.014946108878333943`, 37.}], 
               Offset[{0., -2.5}, {0.014946108878333943`, 37.}]}, {
              Offset[{0, 0}, {0.019946108878333944`, 37.}], 
               Offset[{0., -2.5}, {0.019946108878333944`, 37.}]}, {
              Offset[{0, 0}, {0.02994610887833395, 37.}], 
               Offset[{0., -2.5}, {0.02994610887833395, 37.}]}, {
              Offset[{0, 0}, {0.034946108878333944`, 37.}], 
               Offset[{0., -2.5}, {0.034946108878333944`, 37.}]}, {
              Offset[{0, 0}, {0.039946108878333955`, 37.}], 
               Offset[{0., -2.5}, {0.039946108878333955`, 37.}]}}]}, 
           
           StyleBox[{{{
               InsetBox["0", Offset[{0., -7.}, {0.004946108878333943, 37.}], {0., 1.},
                 Automatic, {1, 0}], InsetBox[
                TagBox[
                 InterpretationBox["\<\"0.02\"\>",
                  0.02,
                  AutoDelete->True],
                 NumberForm[#, {
                   DirectedInfinity[1], 2}]& ], 
                Offset[{0., -7.}, {0.024946108878333945, 37.}], {0., 1.}, 
                Automatic, {1, 0}], InsetBox[
                TagBox[
                 InterpretationBox["\<\"0.04\"\>",
                  0.04,
                  AutoDelete->True],
                 NumberForm[#, {
                   DirectedInfinity[1], 2}]& ], 
                Offset[{0., -7.}, {0.044946108878333946, 37.}], {0., 1.}, 
                Automatic, {1, 0}]}, {{}, {}, {}, {}, {}, {}}}, {}}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]},
        Antialiasing->False]},
      Deploy,
      DefaultBaseStyle->"Deploy"], {
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {-0.004946108878333942, 37.}], 
          Offset[{0, 0}, {-0.004946108878333942, 103.}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {-0.004946108878333942, 40.}], 
              Offset[{4., 0}, {-0.004946108878333942, 40.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 60.}], 
              Offset[{4., 0}, {-0.004946108878333942, 60.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 80.}], 
              Offset[{4., 0}, {-0.004946108878333942, 80.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 100.}], 
              Offset[{4., 0}, {-0.004946108878333942, 100.}]}}], 
           LineBox[{{
             Offset[{0, 0}, {-0.004946108878333942, 45.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 45.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 50.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 50.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 55.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 55.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 65.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 65.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 70.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 70.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 75.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 75.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 85.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 85.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 90.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 90.}]}, {
             Offset[{0, 0}, {-0.004946108878333942, 95.}], 
              Offset[{2.5, 0.}, {-0.004946108878333942, 95.}]}}]}, 
          
          StyleBox[{{{{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]},
       Antialiasing->False], 
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {0.004946108878333942, 37.}], 
          Offset[{0, 0}, {0.004946108878333942, 103.}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {0.004946108878333942, 40.}], 
              Offset[{-4., 0}, {0.004946108878333942, 40.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 60.}], 
              Offset[{-4., 0}, {0.004946108878333942, 60.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 80.}], 
              Offset[{-4., 0}, {0.004946108878333942, 80.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 100.}], 
              Offset[{-4., 0}, {0.004946108878333942, 100.}]}}], 
           LineBox[{{
             Offset[{0, 0}, {0.004946108878333942, 45.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 45.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 50.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 50.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 55.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 55.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 65.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 65.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 70.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 70.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 75.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 75.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 85.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 85.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 90.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 90.}]}, {
             Offset[{0, 0}, {0.004946108878333942, 95.}], 
              Offset[{-2.5, 0.}, {0.004946108878333942, 95.}]}}]}, 
          
          StyleBox[{{{{}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]},
       Antialiasing->False], {
       StyleBox[InsetBox[
         PaneBox["40"], {0, 40.}, {0, 0}], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["60"], {0, 60.}, {0, 0}], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["80"], {0, 80.}, {0, 0}], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["100"], {0, 100.}, {0, 0}], "GraphicsLabel",
        StripOnInput->False]}, {}}},
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{-0.004946108878333942, 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.014946108878333943`, 
       FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.024946108878333942`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.034946108878333944`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.044946108878333946`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.006946108878333942, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.008946108878333942, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.010946108878333943`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.012946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.01694610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.018946108878333943`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.020946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.02294610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.02694610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.028946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03094610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03294610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.036946108878333946`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03894610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04094610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.042946108878333944`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04694610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04894610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.050946108878333944`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.052946108878333946`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.05494610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.004946108878333942, 
       FormBox["0", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.014946108878333943`, 
       FormBox["0.01`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.024946108878333942`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.02\"", 0.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.034946108878333944`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.03\"", 0.03, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.044946108878333946`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.04\"", 0.04, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.006946108878333942, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.008946108878333942, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.010946108878333943`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.012946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.01694610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.018946108878333943`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.020946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.02294610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.02694610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.028946108878333942`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03094610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03294610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.036946108878333946`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03894610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04094610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.042946108878333944`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04694610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04894610887833394, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.050946108878333944`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.052946108878333946`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05494610887833395, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-0.004946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.014946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.024946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.034946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.044946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.006946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.008946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.010946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.012946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.01694610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.018946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.020946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.02294610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.02694610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.028946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03094610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03294610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.036946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03894610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04094610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.042946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04694610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.04894610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.050946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.052946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.05494610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.004946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.014946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.024946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.034946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.044946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.006946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.008946108878333942, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.010946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.012946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.01694610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.018946108878333943`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.020946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.02294610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.02694610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.028946108878333942`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03094610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03294610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.036946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03894610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04094610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.042946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04694610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04894610887833394, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.050946108878333944`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.052946108878333946`, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05494610887833395, 
       FormBox["\"\"", TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{3.71615945108945*^9, 3.7161599120879183`*^9, 
  3.716215115212222*^9, 3.717185950673727*^9, 3.726014341750518*^9, 
  3.747577683068387*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"780f44d2-3fb7-4f89-a4b1-6555617dcd1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"fbd35e63-67b0-4d51-b5d9-4cf2f4e6deec"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Overlaying Graphics", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.716259009253413*^9, 3.716259014514001*^9}, {
   3.717186089795821*^9, 
   3.71718609451995*^9}},ExpressionUUID->"f27fb5a2-4148-4026-827e-\
a3a30c810a4b"],

Cell["\<\
Overlaying plots is useful for comparing a fit with the original data, since \
humans are better at recognizing deviations from straight lines:\
\>", "Text",
 CellChangeTimes->{{3.717156797894752*^9, 3.717156840786021*^9}, {
  3.7260147940729103`*^9, 3.726014795157744*^9}, {3.74827714724619*^9, 
  3.748277147775034*^9}},ExpressionUUID->"de4ce1ba-0311-4a58-a662-\
ff25b69f5cee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dist", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataDist", " ", "=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"dist", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"dataDist", ",", "10", ",", "PDF"}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"dist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.726014918736437*^9, 3.72601495171796*^9}, {
  3.726015150939213*^9, 
  3.726015151284049*^9}},ExpressionUUID->"d3f33e2e-8975-446b-b571-\
bc21eab4ae1d"],

Cell["\<\
The following code compares the histogram to an estimated distribution of the \
wait times:\
\>", "Text",
 CellChangeTimes->{
  3.69659732904837*^9, {3.69660384883356*^9, 3.6966038609857197`*^9}, {
   3.716207239717205*^9, 3.716207254988525*^9}, {3.71625902259377*^9, 
   3.716259055078176*^9}, {3.7260151734982233`*^9, 3.726015195858288*^9}, {
   3.7482764385522223`*^9, 3.748276439710639*^9}, {3.748277151169733*^9, 
   3.748277154360105*^9}},ExpressionUUID->"4640cb8e-1cad-4e27-b11a-\
741169e3dd78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ofDist", "=", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"wait", ",", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"m1", ",", "s1"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"m2", ",", "s2"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{"wait", ",", "25", ",", "\"\<PDF\>\""}], "]"}], ",", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"PDF", "[", 
       RowBox[{"ofDist", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "34", ",", "100"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.572706084011676*^9, 3.5727060872142153`*^9}, {
   3.5727061247365713`*^9, 3.572706247145879*^9}, {3.572706280308176*^9, 
   3.572706284466569*^9}, {3.572706462343397*^9, 3.572706465606978*^9}, 
   3.572706506665064*^9, {3.572706553355239*^9, 3.572706571496331*^9}, {
   3.572706940175898*^9, 3.5727070283364887`*^9}, {3.572707071274151*^9, 
   3.57270708481876*^9}, {3.572707183061532*^9, 3.5727071899410267`*^9}, {
   3.5727072541983624`*^9, 3.572707264598392*^9}, {3.572710306888473*^9, 
   3.572710315692893*^9}, {3.5728661081863832`*^9, 3.572866130553196*^9}, {
   3.572866163130505*^9, 3.572866198795138*^9}, 3.716207217750969*^9, {
   3.716215201259012*^9, 
   3.716215209264491*^9}},ExpressionUUID->"81feb77b-ee49-46ad-8d6b-\
083c05212b4a"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.48999999999999994`], Thickness[Small]}], 
      RectangleBox[{42., 0}, {44., 0.001838235294117647},
       RoundingRadius->0], RectangleBox[{44., 0}, {46., 0.0055147058823529415},
       RoundingRadius->0], RectangleBox[{46., 0}, {48., 0.016544117647058824},
       RoundingRadius->0], RectangleBox[{48., 0}, {50., 0.014705882352941176},
       RoundingRadius->0], RectangleBox[{50., 0}, {52., 0.02022058823529412},
       RoundingRadius->0], RectangleBox[{52., 0}, {54., 0.022058823529411766},
       RoundingRadius->0], RectangleBox[{54., 0}, {56., 0.027573529411764705},
       RoundingRadius->0], RectangleBox[{56., 0}, {58., 0.012867647058823529},
       RoundingRadius->0], RectangleBox[{58., 0}, {60., 0.02022058823529412},
       RoundingRadius->0], RectangleBox[{60., 0}, {62., 0.011029411764705883},
       RoundingRadius->0], RectangleBox[{62., 0}, {64., 0.012867647058823529},
       RoundingRadius->0], RectangleBox[{64., 0}, {66., 0.012867647058823529},
       RoundingRadius->0], RectangleBox[{66., 0}, {68., 0.0055147058823529415},
       RoundingRadius->0], RectangleBox[{68., 0}, {70., 0.0055147058823529415},
       RoundingRadius->0], RectangleBox[{70., 0}, {72., 0.016544117647058824},
       RoundingRadius->0], RectangleBox[{72., 0}, {74., 0.014705882352941176},
       RoundingRadius->0], RectangleBox[{74., 0}, {76., 0.025735294117647058},
       RoundingRadius->0], RectangleBox[{76., 0}, {78., 0.03860294117647059},
       RoundingRadius->0], RectangleBox[{78., 0}, {80., 0.04595588235294118},
       RoundingRadius->0], RectangleBox[{80., 0}, {82., 0.03860294117647059},
       RoundingRadius->0], RectangleBox[{82., 0}, {84., 0.04779411764705882},
       RoundingRadius->0], RectangleBox[{84., 0}, {86., 0.029411764705882353},
       RoundingRadius->0], RectangleBox[{86., 0}, {88., 0.014705882352941176},
       RoundingRadius->0], RectangleBox[{88., 0}, {90., 0.016544117647058824},
       RoundingRadius->0], RectangleBox[{90., 0}, {92., 0.012867647058823529},
       RoundingRadius->0], RectangleBox[{92., 0}, {94., 0.0055147058823529415},
       RoundingRadius->0], RectangleBox[{94., 0}, {96., 0.001838235294117647},
       RoundingRadius->0], RectangleBox[{96., 0}, {98., 0.001838235294117647},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
GQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$52563#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{40.88, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{42., 98.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716215210737639*^9, 3.717156534268724*^9, 
  3.717185970600441*^9, 
  3.726015072334076*^9},ExpressionUUID->"f00683f7-076e-46ca-bbb1-\
43cda824d6d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"98c2fd85-de8f-4e9d-b1d6-a42128fcc3fd"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Correlation Plots", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.716259118483897*^9, 3.716259125112417*^9}, 
   3.717186108530224*^9},ExpressionUUID->"4e7f29eb-01db-4701-93b5-\
f2ecb99a8e17"],

Cell["\<\
It is possible to visualise the multivariate data in 3D through density \
projections and histograms based on binning or kernel density estimation:\
\>", "Text",
 CellChangeTimes->{
  3.5316667938565235`*^9, 3.537701511898324*^9, {3.716259143468067*^9, 
   3.716259174862097*^9}, {3.748277743334641*^9, 3.748277744090582*^9}, {
   3.832943873523233*^9, 
   3.832943873818459*^9}},ExpressionUUID->"efcc0f47-ce6a-447c-ac45-\
b036a4aca2e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DensityHistogram", "[", 
       RowBox[{"ofData", ",", "20", ",", "\"\<PDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<DensityHistogram\>\""}]}], "]"}],
       ",", 
      RowBox[{"Histogram3D", "[", 
       RowBox[{"ofData", ",", "20", ",", "\"\<PDF\>\"", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Histogram3D\>\""}]}], "]"}], ",", 
      RowBox[{"SmoothHistogram3D", "[", 
       RowBox[{"ofData", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<SmoothHistogram3D\>\""}]}], 
       "]"}]}], "}"}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5316662700631495`*^9, 3.5316662717293158`*^9}, {
  3.716160168270623*^9, 3.716160176064003*^9}, {3.7162072924726458`*^9, 
  3.716207305700568*^9}, {3.716207553254115*^9, 3.716207614342477*^9}, {
  3.716215449904159*^9, 3.7162154615351133`*^9}, {3.7162156603963337`*^9, 
  3.716215671327989*^9}},ExpressionUUID->"c35ff38f-75c2-4e3f-a0ee-\
71232e16b47a"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{
         {RGBColor[0.148, 0.33, 0.54], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 48.}, {1.8, 50.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-43.73376623376626, -38.8031168831169}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 62.}, {1.8, 64.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-78.2483116883117, -73.31766233766234}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 64.}, {1.8, 66.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-83.17896103896106, -78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 42.}, {2., 44.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-28.941818181818206`, \
-24.011168831168845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 60.}, {2., 62.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-73.31766233766234, \
-68.38701298701301}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 46.}, {2.2, 48.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-38.8031168831169, \
-33.87246753246754}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 50.}, {2.2, 52.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-48.66441558441559, \
-43.73376623376626}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 64.}, {2.2, 66.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-83.17896103896106, \
-78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 66.}, {2.2, 68.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-88.1096103896104, \
-83.17896103896106}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 44.}, {2.4, 46.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-33.87246753246754, \
-28.941818181818206`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 46.}, {2.4, 48.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-38.8031168831169, -33.87246753246754}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 64.}, {2.4, 66.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-83.17896103896106, -78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 70.}, {2.4, 72.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-97.97090909090909, \
-93.04025974025976}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.4, 50.}, {2.6, 52.}]},
               
               ImageSizeCache->{{66.47987012987011, 
                74.1497691197691}, {-48.66441558441559, -43.73376623376626}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.4, 52.}, {2.6, 54.}]},
               
               ImageSizeCache->{{66.47987012987011, 
                74.1497691197691}, {-53.595064935064954`, \
-48.66441558441559}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.4, 54.}, {2.6, 56.}]},
               
               ImageSizeCache->{{66.47987012987011, 
                74.1497691197691}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.4, 62.}, {2.6, 64.}]},
               ImageSizeCache->{{66.47987012987011, 
                74.1497691197691}, {-78.2483116883117, -73.31766233766234}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.4, 64.}, {2.6, 66.}]},
               
               ImageSizeCache->{{66.47987012987011, 
                74.1497691197691}, {-83.17896103896106, -78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.6, 52.}, {2.8, 54.}]},
               
               ImageSizeCache->{{74.1497691197691, 
                81.81966810966809}, {-53.595064935064954`, \
-48.66441558441559}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.6, 64.}, {2.8, 66.}]},
               
               ImageSizeCache->{{74.1497691197691, 
                81.81966810966809}, {-83.17896103896106, -78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.8, 54.}, {3., 56.}]},
               
               ImageSizeCache->{{81.81966810966809, 
                89.48956709956708}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.8, 56.}, {3., 58.}]},
               
               ImageSizeCache->{{81.81966810966809, 
                89.48956709956708}, {-63.45636363636365, \
-58.525714285714315`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.8, 62.}, {3., 64.}]},
               
               ImageSizeCache->{{81.81966810966809, 
                89.48956709956708}, {-78.2483116883117, -73.31766233766234}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3., 68.}, {3.2, 70.}]},
               
               ImageSizeCache->{{89.48956709956708, 
                97.15946608946608}, {-93.04025974025976, -88.1096103896104}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.2, 66.}, {3.4, 68.}]},
               
               ImageSizeCache->{{97.15946608946608, 
                104.82936507936505`}, {-88.1096103896104, \
-83.17896103896106}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.2, 68.}, {3.4, 70.}]},
               
               ImageSizeCache->{{97.15946608946608, 
                104.82936507936505`}, {-93.04025974025976, \
-88.1096103896104}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.2, 74.}, {3.4, 76.}]},
               
               ImageSizeCache->{{97.15946608946608, 
                104.82936507936505`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.2, 82.}, {3.4, 84.}]},
               
               ImageSizeCache->{{97.15946608946608, 
                104.82936507936505`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 64.}, {3.6, 66.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                112.49926406926407`}, {-83.17896103896106, \
-78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 66.}, {3.6, 68.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                112.49926406926407`}, {-88.1096103896104, \
-83.17896103896106}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 70.}, {3.6, 72.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                112.49926406926407`}, {-97.97090909090909, \
-93.04025974025976}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 72.}, {3.6, 74.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                112.49926406926407`}, {-102.90155844155845`, \
-97.97090909090909}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 78.}, {3.6, 80.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                112.49926406926407`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.4, 86.}, {3.6, 88.}]},
               
               ImageSizeCache->{{104.82936507936505`, 
                
                112.49926406926407`}, {-137.41610389610392`, \
-132.48545454545456`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 70.}, {3.8, 72.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-97.97090909090909, \
-93.04025974025976}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 74.}, {3.8, 76.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 84.}, {3.8, 86.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 64.}, {4., 66.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-83.17896103896106, \
-78.2483116883117}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 80.}, {4., 82.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 82.}, {4., 84.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 88.}, {4., 90.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 68.}, {4.2, 70.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-93.04025974025976, \
-88.1096103896104}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 72.}, {4.2, 74.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-102.90155844155845`, \
-97.97090909090909}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 88.}, {4.2, 90.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 90.}, {4.2, 92.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-147.2774025974026, \
-142.34675324675325`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 92.}, {4.2, 94.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-152.20805194805195`, \
-147.2774025974026}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 74.}, {4.4, 76.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 84.}, {4.4, 86.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 90.}, {4.4, 92.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-147.2774025974026, \
-142.34675324675325`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 86.}, {4.6, 88.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-137.41610389610392`, \
-132.48545454545456`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 92.}, {4.6, 94.}]},
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-152.20805194805195`, \
-147.2774025974026}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 72.}, {4.8, 74.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-102.90155844155845`, \
-97.97090909090909}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 92.}, {4.8, 94.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-152.20805194805195`, \
-147.2774025974026}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 74.}, {5., 76.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 78.}, {5., 80.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 84.}, {5., 86.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 94.}, {5., 96.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-157.1387012987013, \
-152.20805194805195`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{5., 88.}, {5.2, 90.}]},
               
               ImageSizeCache->{{166.18855699855698`, 
                173.858455988456}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{5., 96.}, {5.2, 98.}]},
               
               ImageSizeCache->{{166.18855699855698`, 
                173.858455988456}, {-162.06935064935067`, \
-157.1387012987013}}]},
             StatusArea[#, 
              Rational[5, 544]]& ,
             TagBoxNote->"5/544"],
            "0.009191176470588236`",
            TooltipStyle->{}],
           Annotation[#, 0.009191176470588236, "Tooltip"]& ]}, 
         {RGBColor[
          0.3783333333333333, 0.43666666666666665`, 0.5966666666666667], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 52.}, {1.8, 54.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-53.595064935064954`, \
-48.66441558441559}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 54.}, {1.8, 56.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 58.}, {1.8, 60.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-68.38701298701301, \
-63.45636363636365}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 44.}, {2., 46.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-33.87246753246754, \
-28.941818181818206`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 62.}, {2., 64.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-78.2483116883117, -73.31766233766234}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 54.}, {2.2, 56.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 58.}, {2.2, 60.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-68.38701298701301, \
-63.45636363636365}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 60.}, {2.2, 62.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-73.31766233766234, \
-68.38701298701301}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 54.}, {2.4, 56.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 58.}, {2.4, 60.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-68.38701298701301, \
-63.45636363636365}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 62.}, {2.4, 64.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-78.2483116883117, -73.31766233766234}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 78.}, {3.8, 80.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 80.}, {3.8, 82.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 70.}, {4., 72.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-97.97090909090909, \
-93.04025974025976}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 74.}, {4., 76.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 84.}, {4., 86.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 82.}, {4.2, 84.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 72.}, {4.4, 74.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-102.90155844155845`, \
-97.97090909090909}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 88.}, {4.4, 90.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 80.}, {4.6, 82.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 90.}, {4.6, 92.}]},
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-147.2774025974026, \
-142.34675324675325`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 74.}, {4.8, 76.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 82.}, {4.8, 84.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 88.}, {4.8, 90.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 76.}, {5., 78.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-112.76285714285714`, \
-107.83220779220781`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 88.}, {5., 90.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-142.34675324675325`, \
-137.41610389610392`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{5., 76.}, {5.2, 78.}]},
               
               ImageSizeCache->{{166.18855699855698`, 
                173.858455988456}, {-112.76285714285714`, \
-107.83220779220781`}}]},
             StatusArea[#, 
              Rational[5, 272]]& ,
             TagBoxNote->"5/272"],
            "0.01838235294117647`",
            TooltipStyle->{}],
           Annotation[#, 0.01838235294117647, "Tooltip"]& ]}, 
         {RGBColor[
          0.6391666666666667, 0.5283333333333333, 0.44333333333333336`], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.6, 46.}, {1.8, 48.}]},
               
               ImageSizeCache->{{35.80027417027415, 
                43.47017316017315}, {-38.8031168831169, -33.87246753246754}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 56.}, {2., 58.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-63.45636363636365, \
-58.525714285714315`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 48.}, {2.2, 50.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-43.73376623376626, \
-38.8031168831169}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 56.}, {2.2, 58.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-63.45636363636365, \
-58.525714285714315`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 50.}, {2.4, 52.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-48.66441558441559, \
-43.73376623376626}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2.2, 60.}, {2.4, 62.}]},
               
               ImageSizeCache->{{58.809971139971125`, 
                66.47987012987011}, {-73.31766233766234, \
-68.38701298701301}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.6, 82.}, {3.8, 84.}]},
               
               ImageSizeCache->{{112.49926406926407`, 
                120.16916305916304`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 76.}, {4., 78.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-112.76285714285714`, \
-107.83220779220781`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{3.8, 78.}, {4., 80.}]},
               
               ImageSizeCache->{{120.16916305916304`, 
                127.83906204906204`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 74.}, {4.2, 76.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                
                135.50896103896105`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 76.}, {4.2, 78.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-112.76285714285714`, \
-107.83220779220781`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 84.}, {4.2, 86.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 86.}, {4.2, 88.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-137.41610389610392`, \
-132.48545454545456`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 72.}, {4.6, 74.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-102.90155844155845`, \
-97.97090909090909}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 74.}, {4.6, 76.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-107.83220779220781`, \
-102.90155844155845`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 84.}, {4.8, 86.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-132.48545454545456`, \
-127.5548051948052}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 90.}, {4.8, 92.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-147.2774025974026, \
-142.34675324675325`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 80.}, {5., 82.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 82.}, {5., 84.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.8, 86.}, {5., 88.}]},
               
               ImageSizeCache->{{158.518658008658, 
                166.18855699855698`}, {-137.41610389610392`, \
-132.48545454545456`}}]},
             StatusArea[#, 
              Rational[15, 544]]& ,
             TagBoxNote->"15/544"],
            "0.027573529411764705`",
            TooltipStyle->{}],
           Annotation[#, 0.027573529411764705`, "Tooltip"]& ]}, 
         {RGBColor[0.9, 0.62, 0.29], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 46.}, {2., 48.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-38.8031168831169, -33.87246753246754}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 48.}, {2., 50.}]},
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-43.73376623376626, -38.8031168831169}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 52.}, {2., 54.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-53.595064935064954`, \
-48.66441558441559}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{2., 52.}, {2.2, 54.}]},
               
               ImageSizeCache->{{51.14007215007213, 
                58.809971139971125`}, {-53.595064935064954`, \
-48.66441558441559}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 70.}, {4.2, 72.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-97.97090909090909, \
-93.04025974025976}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 78.}, {4.2, 80.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4., 80.}, {4.2, 82.}]},
               
               ImageSizeCache->{{127.83906204906204`, 
                135.50896103896105`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 78.}, {4.4, 80.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 78.}, {4.8, 80.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-117.6935064935065, \
-112.76285714285714`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.6, 80.}, {4.8, 82.}]},
               
               ImageSizeCache->{{150.84875901875898`, 
                158.518658008658}, {-122.62415584415587`, \
-117.6935064935065}}]},
             StatusArea[#, 
              Rational[5, 136]]& ,
             TagBoxNote->"5/136"],
            "0.03676470588235294`",
            TooltipStyle->{}],
           Annotation[#, 0.03676470588235294, "Tooltip"]& ]}, 
         {RGBColor[
          0.9416666666666667, 0.7241666666666666, 0.4191666666666666], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 58.}, {2., 60.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-68.38701298701301, \
-63.45636363636365}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 80.}, {4.4, 82.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-122.62415584415587`, \
-117.6935064935065}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 76.}, {4.6, 78.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-112.76285714285714`, \
-107.83220779220781`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 84.}, {4.6, 86.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-132.48545454545456`, \
-127.5548051948052}}]},
             StatusArea[#, 
              Rational[25, 544]]& ,
             TagBoxNote->"25/544"],
            "0.04595588235294118`",
            TooltipStyle->{}],
           Annotation[#, 0.04595588235294118, "Tooltip"]& ]}, 
         {RGBColor[
          0.9833333333333334, 0.8283333333333334, 0.5483333333333333], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 50.}, {2., 52.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-48.66441558441559, \
-43.73376623376626}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 76.}, {4.4, 78.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-112.76285714285714`, \
-107.83220779220781`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 78.}, {4.6, 80.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                
                150.84875901875898`}, {-117.6935064935065, \
-112.76285714285714`}}]},
             StatusArea[#, 
              Rational[15, 272]]& ,
             TagBoxNote->"15/272"],
            "0.05514705882352941`",
            TooltipStyle->{}],
           Annotation[#, 0.05514705882352941, "Tooltip"]& ]}, 
         {RGBColor[1, 0.95, 0.75], 
          TagBox[
           TooltipBox[
            TagBox[{
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{1.8, 54.}, {2., 56.}]},
               
               ImageSizeCache->{{43.47017316017315, 
                51.14007215007213}, {-58.525714285714315`, \
-53.595064935064954`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.2, 82.}, {4.4, 84.}]},
               
               ImageSizeCache->{{135.50896103896105`, 
                143.17886002886002`}, {-127.5548051948052, \
-122.62415584415587`}}], 
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{4.4, 82.}, {4.6, 84.}]},
               
               ImageSizeCache->{{143.17886002886002`, 
                150.84875901875898`}, {-127.5548051948052, \
-122.62415584415587`}}]},
             StatusArea[#, 
              Rational[35, 544]]& ,
             TagBoxNote->"35/544"],
            "0.06433823529411764`",
            TooltipStyle->{}],
           Annotation[#, 0.06433823529411764, "Tooltip"]& ]}}, {}}, {{}, {}}},
      AspectRatio->1,
      AxesOrigin->{1.6, 42.},
      ContentSelectable->False,
      Frame->True,
      FrameLabel->{None, None},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotLabel->FormBox["\"DensityHistogram\"", TraditionalForm],
      PlotRange->{{1.6, 5.2}, {42., 98.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     Graphics3DBox[
      {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
       EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], 
       StyleBox[{{}, 
         {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], 
          EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], 
          
          StyleBox[{{{}, 
             CuboidBox[{1.6, 46., 0.}, {1.8, 48., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{1.6, 48., 0.}, {1.8, 50., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{1.6, 52., 0.}, {1.8, 54., 0.01838235294117647}]}, {{},
              CuboidBox[{1.6, 54., 0.}, {1.8, 56., 
              0.01838235294117647}]}, {{}, 
             CuboidBox[{1.6, 58., 0.}, {1.8, 60., 0.01838235294117647}]}, {{},
              CuboidBox[{1.6, 62., 0.}, {1.8, 64., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{1.6, 64., 0.}, {1.8, 66., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{1.8, 42., 0.}, {2., 44., 0.009191176470588236}]}, {{},
              CuboidBox[{1.8, 44., 0.}, {2., 46., 0.01838235294117647}]}, {{},
              CuboidBox[{1.8, 46., 0.}, {2., 48., 0.03676470588235294}]}, {{},
              CuboidBox[{1.8, 48., 0.}, {2., 50., 0.03676470588235294}]}, {{},
              CuboidBox[{1.8, 50., 0.}, {2., 52., 0.05514705882352941}]}, {{},
              CuboidBox[{1.8, 52., 0.}, {2., 54., 0.03676470588235294}]}, {{},
              CuboidBox[{1.8, 54., 0.}, {2., 56., 0.06433823529411764}]}, {{},
              CuboidBox[{1.8, 56., 0.}, {2., 58., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{1.8, 58., 0.}, {2., 60., 0.04595588235294118}]}, {{}, 
             CuboidBox[{1.8, 60., 0.}, {2., 62., 0.009191176470588236}]}, {{},
              CuboidBox[{1.8, 62., 0.}, {2., 64., 0.01838235294117647}]}, {{},
              CuboidBox[{2., 46., 0.}, {2.2, 48., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2., 48., 0.}, {2.2, 50., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{2., 50., 0.}, {2.2, 52., 0.009191176470588236}]}, {{},
              CuboidBox[{2., 52., 0.}, {2.2, 54., 0.03676470588235294}]}, {{},
              CuboidBox[{2., 54., 0.}, {2.2, 56., 0.01838235294117647}]}, {{},
              CuboidBox[{2., 56., 0.}, {2.2, 58., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{2., 58., 0.}, {2.2, 60., 0.01838235294117647}]}, {{}, 
             CuboidBox[{2., 60., 0.}, {2.2, 62., 0.01838235294117647}]}, {{}, 
             CuboidBox[{2., 64., 0.}, {2.2, 66., 0.009191176470588236}]}, {{},
              CuboidBox[{2., 66., 0.}, {2.2, 68., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.2, 44., 0.}, {2.4, 46., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.2, 46., 0.}, {2.4, 48., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.2, 50., 0.}, {2.4, 52., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{2.2, 54., 0.}, {2.4, 56., 0.01838235294117647}]}, {{},
              CuboidBox[{2.2, 58., 0.}, {2.4, 60., 
              0.01838235294117647}]}, {{}, 
             CuboidBox[{2.2, 60., 0.}, {2.4, 62., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{2.2, 62., 0.}, {2.4, 64., 0.01838235294117647}]}, {{},
              CuboidBox[{2.2, 64., 0.}, {2.4, 66., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.2, 70., 0.}, {2.4, 72., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.4, 50., 0.}, {2.6, 52., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.4, 52., 0.}, {2.6, 54., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.4, 54., 0.}, {2.6, 56., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.4, 62., 0.}, {2.6, 64., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.4, 64., 0.}, {2.6, 66., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.6, 52., 0.}, {2.8, 54., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.6, 64., 0.}, {2.8, 66., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.8, 54., 0.}, {3., 56., 0.009191176470588236}]}, {{},
              CuboidBox[{2.8, 56., 0.}, {3., 58., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{2.8, 62., 0.}, {3., 64., 0.009191176470588236}]}, {{},
              CuboidBox[{3., 68., 0.}, {3.2, 70., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.2, 66., 0.}, {3.4, 68., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.2, 68., 0.}, {3.4, 70., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.2, 74., 0.}, {3.4, 76., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.2, 82., 0.}, {3.4, 84., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 64., 0.}, {3.6, 66., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 66., 0.}, {3.6, 68., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 70., 0.}, {3.6, 72., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 72., 0.}, {3.6, 74., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 78., 0.}, {3.6, 80., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.4, 86., 0.}, {3.6, 88., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.6, 70., 0.}, {3.8, 72., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.6, 74., 0.}, {3.8, 76., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.6, 78., 0.}, {3.8, 80., 0.01838235294117647}]}, {{},
              CuboidBox[{3.6, 80., 0.}, {3.8, 82., 
              0.01838235294117647}]}, {{}, 
             CuboidBox[{3.6, 82., 0.}, {3.8, 84., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{3.6, 84., 0.}, {3.8, 86., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.8, 64., 0.}, {4., 66., 0.009191176470588236}]}, {{},
              CuboidBox[{3.8, 70., 0.}, {4., 72., 0.01838235294117647}]}, {{},
              CuboidBox[{3.8, 74., 0.}, {4., 76., 0.01838235294117647}]}, {{},
              CuboidBox[{3.8, 76., 0.}, {4., 78., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{3.8, 78., 0.}, {4., 80., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{3.8, 80., 0.}, {4., 82., 0.009191176470588236}]}, {{},
              CuboidBox[{3.8, 82., 0.}, {4., 84., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{3.8, 84., 0.}, {4., 86., 0.01838235294117647}]}, {{}, 
             CuboidBox[{3.8, 88., 0.}, {4., 90., 0.009191176470588236}]}, {{},
              CuboidBox[{4., 68., 0.}, {4.2, 70., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4., 70., 0.}, {4.2, 72., 0.03676470588235294}]}, {{}, 
             CuboidBox[{4., 72., 0.}, {4.2, 74., 0.009191176470588236}]}, {{},
              CuboidBox[{4., 74., 0.}, {4.2, 76., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4., 76., 0.}, {4.2, 78., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4., 78., 0.}, {4.2, 80., 0.03676470588235294}]}, {{}, 
             CuboidBox[{4., 80., 0.}, {4.2, 82., 0.03676470588235294}]}, {{}, 
             CuboidBox[{4., 82., 0.}, {4.2, 84., 0.01838235294117647}]}, {{}, 
             CuboidBox[{4., 84., 0.}, {4.2, 86., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4., 86., 0.}, {4.2, 88., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4., 88., 0.}, {4.2, 90., 0.009191176470588236}]}, {{},
              CuboidBox[{4., 90., 0.}, {4.2, 92., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4., 92., 0.}, {4.2, 94., 0.009191176470588236}]}, {{},
              CuboidBox[{4.2, 72., 0.}, {4.4, 74., 
              0.01838235294117647}]}, {{}, 
             CuboidBox[{4.2, 74., 0.}, {4.4, 76., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.2, 76., 0.}, {4.4, 78., 0.05514705882352941}]}, {{},
              CuboidBox[{4.2, 78., 0.}, {4.4, 80., 
              0.03676470588235294}]}, {{}, 
             CuboidBox[{4.2, 80., 0.}, {4.4, 82., 0.04595588235294118}]}, {{},
              CuboidBox[{4.2, 82., 0.}, {4.4, 84., 
              0.06433823529411764}]}, {{}, 
             CuboidBox[{4.2, 84., 0.}, {4.4, 86., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.2, 88., 0.}, {4.4, 90., 0.01838235294117647}]}, {{},
              CuboidBox[{4.2, 90., 0.}, {4.4, 92., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.4, 72., 0.}, {4.6, 74., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.4, 74., 0.}, {4.6, 76., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.4, 76., 0.}, {4.6, 78., 0.04595588235294118}]}, {{},
              CuboidBox[{4.4, 78., 0.}, {4.6, 80., 
              0.05514705882352941}]}, {{}, 
             CuboidBox[{4.4, 80., 0.}, {4.6, 82., 0.01838235294117647}]}, {{},
              CuboidBox[{4.4, 82., 0.}, {4.6, 84., 
              0.06433823529411764}]}, {{}, 
             CuboidBox[{4.4, 84., 0.}, {4.6, 86., 0.04595588235294118}]}, {{},
              CuboidBox[{4.4, 86., 0.}, {4.6, 88., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.4, 90., 0.}, {4.6, 92., 0.01838235294117647}]}, {{},
              CuboidBox[{4.4, 92., 0.}, {4.6, 94., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.6, 72., 0.}, {4.8, 74., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.6, 74., 0.}, {4.8, 76., 0.01838235294117647}]}, {{},
              CuboidBox[{4.6, 78., 0.}, {4.8, 80., 
              0.03676470588235294}]}, {{}, 
             CuboidBox[{4.6, 80., 0.}, {4.8, 82., 0.03676470588235294}]}, {{},
              CuboidBox[{4.6, 82., 0.}, {4.8, 84., 
              0.01838235294117647}]}, {{}, 
             CuboidBox[{4.6, 84., 0.}, {4.8, 86., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.6, 88., 0.}, {4.8, 90., 0.01838235294117647}]}, {{},
              CuboidBox[{4.6, 90., 0.}, {4.8, 92., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.6, 92., 0.}, {4.8, 94., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.8, 74., 0.}, {5., 76., 0.009191176470588236}]}, {{},
              CuboidBox[{4.8, 76., 0.}, {5., 78., 0.01838235294117647}]}, {{},
              CuboidBox[{4.8, 78., 0.}, {5., 80., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{4.8, 80., 0.}, {5., 82., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.8, 82., 0.}, {5., 84., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.8, 84., 0.}, {5., 86., 0.009191176470588236}]}, {{},
              CuboidBox[{4.8, 86., 0.}, {5., 88., 
              0.027573529411764705`}]}, {{}, 
             CuboidBox[{4.8, 88., 0.}, {5., 90., 0.01838235294117647}]}, {{}, 
             CuboidBox[{4.8, 94., 0.}, {5., 96., 0.009191176470588236}]}, {{},
              CuboidBox[{5., 76., 0.}, {5.2, 78., 0.01838235294117647}]}, {{},
              CuboidBox[{5., 88., 0.}, {5.2, 90., 
              0.009191176470588236}]}, {{}, 
             CuboidBox[{5., 96., 0.}, {5.2, 98., 0.009191176470588236}]}},
           FontColor->GrayLevel[0.4]]}, {}, {}},
        FontColor->GrayLevel[0.4]]},
      Axes->{True, True, True},
      AxesLabel->{None, None, None},
      BoxRatios->{1, 1, 0.4},
      FaceGridsStyle->Automatic,
      Lighting->"Neutral",
      Method->{"RotationControl" -> "Globe"},
      PlotLabel->FormBox["\"Histogram3D\"", TraditionalForm],
      PlotRange->{{1.6, 5.2}, {42., 98.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.1]}},
      Ticks->{Automatic, Automatic, Automatic}], {580.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
WCX1S27f1J/Qf5L6pccbyxVbEpFP/cJnVAxtyFqZQP3CtUuvFzxu2kj90nHh
av49GOxA/cIlEnVjFywwpn7hj3NvGu3yX0X9wn9EWDuHf15E/cJ1C0KFZISn
s9Av/PTPqoxOdQEW+oWbrHpevW/CT+oXniB6PqDjRiv1CzcNfl10t7Wa+oV/
9G3n2zjxOPVLj3dorvYbiUzqd/fqWb0zx+hxStR5uFfNtKd+4byqF77VdnhS
v/D4LKVDMr6B1C88eZqkePCDUOoXLmV0w+qRezT1C19nuuH7yT3x1C986PfA
L/FjidQvnGdH1QnPsCTqFy5p/kFk+rdE6hcuc/uVoOT8BOoXXrzjRecrsVjq
Fx5TuChnLvcW6he+wrfGO75/E/ULj81VNzwt70v9wn8byk2v9XWjfuEjVy87
R562oX7hXq2XPQy6jalf+OzYXJOWZg71C2+o/fzk41Ul6hfOWfS77ONPaeqX
ju8Vvb3DyROpX7hli/mOMUF8bPQLV54zxsQ+7yf1C+9ZWea5Zvw76hc+85Rn
9NDkh9Qv3KnE48kymWvUL+2Pef2pJzeOUb/wUjM3Vffj+dQvfE/hi/uasinU
L3y3prTgLrUw6hfupujZ+2nGeuoXXvv52Raeu+uoX3jcLb3KWapG1C+8727N
7KtDatQvvGmG4nMrSznqF67ww6b1uqEEC/3S8fotbWnrMEz9whs38OpNT/pA
/cJ7txbtH9CspX7hw+svzlzaeZr61Uh41/u85r9eJGsPNE5xoX7hB81n2kjz
b6B+4bl7Ssc2xQZTv/CMetcLLTMiqV/4S5Wr6v1x8dQv/Jxe6aZ7/MnUL9ws
gaOQuW0r9QvX+5bwrCRvG/ULTx0/7Puebxv1C1+gwVIwHkmmfuFChkZ+lV8T
qF94XNR7yenFMdQv3On+94dJfmHUL9zP3vSe0Y9A6hceJWv+cImON/ULZzfO
XLpzgxP1Cw9Zev/pqT8W1C98c4WBntE5XeoXXjbWYa6zhDr1C89f+EtQ9ZE8
9Qv/OqWxTeDZLOoXHtBSFfpjWJT6hbvtu7JuCTcXG/3Cb/X/kf/zt4v6hYfN
i13m7f2K+oUb6J3yZ/2uo37hp7YvDY3Jvkr9wusXVvCHvi2lfuGBJdMMsiUO
UL9wkaqPasXpOdQv/Niuz7LB2snUL63zS2m3K8LCqF/4AbnS5N/uPtQvPPRh
/N9dx22oX1o/fY06RT461C/80mB5v/kbReoXfkWD29g3dgYL/cJHLpw8WrCZ
l4V+4c+eFQk267ZTv/CkNWFBZ1c3UL9tN4/+ytumz5m9wTx7E9uN+oWr671b
Oz/Bn/qFH3zlN2fH7FDqF/7r0kDHm9oY6hd+UrBLLOVrIvULF/cotlP4vZX6
hW+ab2Jx8Esa9QsPOfQjx3ZZBvUL37lDvSukJJ36hS/ftKp11cZU6hdu8f3O
hNd/kqlfeJCMtvuJ9njqF857SeBOfmEk9Qv3ibU+4rcghPqFG3uvn1kxzo/6
hddMa9vQVuxG/cJ3GBbnv75vQ/3C22oXZ29baUL9wpOnrlpVu1aT+oXv2Xzu
ecrrZdQvXCNBYYvuNFnqFy6Z+iGi+/0U6hceWjrLrk9kLPUL//FV9OKuW4PU
L1zhh1SYT+hX6hc+Nyq7/gNXK/ULT3eRnidr3Ej9witKeiIatlVRv/Cp4b6Z
+pcuUr/wqo8JqZufn6R+af1kz9/hmHqA+oW7HrhZI3woh/qF982+eu11SSL1
S/O/M8N/rmkw9Qvn1sut7DzoSv3CbZzWqxnfM6F+4a+OnPl1dJUq9Qt/t/94
tMTVOdQvfKF21NvZy/hZ6Bd+XrRObLnON+o3cXhDn7mhAWf/IcU7Sq3u1C/c
vLnTcp9oIPULn9KWXb9uWjj1C3fhXpjsUhtH/cJbHkxw1K9Mpn7hOS/Xre9i
pVG/8DWDPK0xWzOpX3hduRUPv9B26hfuu3ntjua0LOoX/jusouqIUgb1S4/3
vl+QUvQ26he+Nabn2ecJSdQvPO7WqrRfUrHUL/xR4RUNqV+h1C9caGB/bMnC
QOoXfnef6gbRF57UL/yQNnvPnkgH6hd+JtfNbvKAOfULl1+oOPhgWIf6hddY
XmO7SKpTv/Asn/DzzcuXUL9wvhOPb16eIkX9whf3WKZNGhGnfuH+jg3spIlj
2OgXHu4z6dCsgX7qF67v5eF+KK+D+oU3aunXGA6+pX7hc05U3TTwbqZ+4cY/
V+9am9dA/cLFFfnsnaKrqV/4sf339wxdukT9whu4B15cXnGS+oU7tbeFl7P2
Ur/wt7svX1CxyaR+4SG7Px0KS4ikfuFT82uibk/zoX7hG0ciT5nXW1K/8F7Z
CxsHSlnUL9wr0JRbIUOW+oWX7bm82PuJKAv9yq5c2j9e2JDjMJZnu80DD+oX
ftvBpKLhCdMvXLB9eeiH1VuoX3iL2dpBxwPx1C9c/vGelltvUqhfeM3ks39y
j6ZTv3DFy1fCtZdup37hh3pZ+5MCsqlfuMr1zB1JatnUL3zOofPXc8WyqF+4
/i4uvSK1NOoXHvPQcN2sXcnUL1zhTXtBZWsc9UvzphaevnjiFuoXPjDFjje/
NYj6hbssWrk0KtGH+oUv2TyZ18bYhfqFnzygdiZ4sjX1C//jvVVbbo8h9Uvz
oBSsUuPOoX7hXg43Nq1oWkb9wuufD82sviFH/cIj2Au8XwZKUr9wKxnhK288
xKhf+O8//jM/L+Bno1+4jqOC0OZdw9QvfOmawEfH/XupXzouXfunTnfroH7h
DZelbHdZvqd+yR19kz0Mn1O/8FfrXvLoejRSv3A/tea19+yqqF/41C1ftHhk
zlO/8MqrzXc1q4qpX3hg8fl12vNzqV9427RFPw2TE6hfuN2LGwnj1QKpX/jH
1eN/XLW0p37hs6Lin9aa6VK/8E/pdx5rPVCkfu+H/+y/X2/IWb/8/Z3eAaZf
eMTFnIDzv5l+4WX+OxL4k5l+4b+nlOrGP2b6hT8RtjrEu3Ar9QvvcHn10FMk
g/qFC7LnHCu5xPQLtxk7vHVDNdMvXFbu6nmu3Uy/8MfHf6gvfcv0C1fZc1bI
elw69QvX4Go0iHZNoX7hbcvZImd2xlO/cMty7remNhHUL3zBsupJnT83Ub/w
a65C1145b6B+4YeTZCpbX7lSv/BC3dUCVmdtqF/4bdeEI2nvTKlfeOm4438/
t2hTv/R4h11iNTzUqF/yntWVlx0UqF+446lxGY3J86hfOCdGhpW9dib1C2cZ
/XIXeTyR+oVff9IafyRAhI1+4XN3Kj4S8uVno184lyfX/A2aXGz0C5eL3Cku
ereP+qV1++lvV3twF/UL9x8ZNp2t9576hX8z0OJrF2ymfuEeRucjOP33qV9a
52lPpriWXaV+4S0jUapTJpdSv/CUfYeilhkXUb/wF3efizccTaV+4c0hrnYX
Y8OoX/jJwZbhe1M9qV+a/2R5oW2FFtSv38VLA8nbjTjhn7I5SQ5Mv/DVn2fu
To5h+oWf4C+669jIvH+GH1wULJhsy/QL56TEblicy7z+wiW/S6s1eTGvv/DO
6ce7Josw/cL9jec2ZoQy/cIvvYs6dN6B6Reu2stKu5rF9Av/6CPMcnjHvP7C
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
X7iavOrS4qMc6pce7/TM4uJxatQvnD176fYMBSXqF87jesaCO3sB9Qvf3Lgj
WdhLivqFL0m11Yzrnkz9wveV89h+WjGejX7hXwd3Vmd3cbPRL/yEX5HqsRm/
qF/4g8JJ+2yvfKZ+4bqpsTbDds+p36KvGUOKtmacn2P0Cx3PWFK/cHN1L433
J5ypX7j6oemhmy57U7/w+LP5BUL5gdQvPKu/paH9/GbqF84SCfGcWBJB/cJT
hc3GbL8bQ/3C7yvrvvCuZM5/hmco1h04vSqe+oW7Wdxc+6U2jvqFpx3XOmgy
gTl/Ev7w/k2TQOdI6hc++0BCdNUM5vwreN5J1vSRV5uoXzi3+mmJfVobqV94
nc5w3GdX5vcjeIpps/VVfaZfuM7WTe8fNbpSv/CoT55/U3a5UL9w29fV094u
c6F+4Xc1PwpMUHahfuFvkt9+XKHtQv3CtebI7z28wIX6hUvwfjKYmu1M/ZJ7
rmmXne1E/cJraqRuOv6xp37hpicOpJxXsaN+4SdzWuuuD1pTv3C5W+uOH46x
oH7hC49ViZeNM6V+4VZN4ZcW7dCjfuGf/zoZfnmlSf3S8T3v2Sy2TJ36hU+b
JruZN0eJ+oU7VTgGJvssoH7hQ7Hd83ZWzKF+4Y8nZigUzp5E/cIrd8zn3r1l
LBv9wt+pBIfUqQ9TvzS+bKyqQV039Ts799hIn/AaTvHYGWLvuU2pX/ikLs3J
3hK21C88K7q/6SCPG/ULt3vAVWGmuJ76hSedl5urkBxI/cLf6NWU+jsz1x/B
E143dyuUMdcfwSNGzswQHxtB/cI3dfyKsJSMpH7hes23s97UR1C/cMusPJcY
tS3UL/zzkoU140+FUr/wn8srtbkLg6lf+OP1ZnufBjPnT8LP33v//uRaX+oX
Lmc+OfCwiDf1S+McZ+3daMT0C/eP0cksGHCjfuGvZOrHZ9xzo37hnYGfszZa
ulO/NM++nR0/lTyoX3jY/bSxAxM8qV+4xcXU8LKzntQvPNacdaa9x5P6hd8T
3qpdXuZJ/cLLxPqSpr/zoH7hy3gdut4nulO/8Fku8hdYJa7UL7ync2ZO3Ssn
6hcuKJff5zRhHfUL3//UZa+mljX1C8/XfMX98+Ya6hf+QfRAUkOkAfULny82
RXB/mRb1C2/wTt75x1Gd+oUfPno4luepIvVLx1f/Q6b+ODnqF97x/pr2MztJ
6hcuMPaXt0HGBDb6hffV/1oircvDRr/fzwr9bfL/rwv9O9/MrupQv3BfnlYx
i/Xm1C9ccOadh5PGr6N+4aJitvJjNN2oX3jTx14p+7HM9b9wdvzMnWZPmet/
4fb2C4uD44KoX7jMy/dSdqHB1C98mqxy0Z6sEOoXfuzrknMxJ5jrB+FrdmrV
8T4Opn7hslY1q9KUN1G/8O0ttS4DcwKpX/iSd49TZTuY6xfgVZmTYpskfahf
uPWJLwOL7Znzr+B5oR/emrczn3/hZ55cjXxa6U79wkeWv9qgfcyD+oUXGx5d
3KntRf3CCy+Gf2xS86F+4TO7VRrOr9hA/cJTpWrbpLj9qF949P6zTyY5+lO/
8KhiuVXjp2+kfuGn11iWtwlvpH7hiuWfq3wl/alf+LfUOSrbjHypX7hnW5KD
/lUf6he+1nK96r7DntQvPG65o2qYrhv1C88PFrxxqMaR+oWvrLsRqeRkQ/3C
uzd8XWp/0Jz6hW9MS1lnEG9A/cLbel3VGg5qUr/wx2PndMeqqVK/cMOeDyyL
8YupX3hi8qSmT8pS1C98ftuDPVfYEtRv9SO/v2cb/pvnX6/fi19l7r8BPzKy
Z2biU+b+G/Ae9Xu5a98w99+AP17M8yx9vh31C89x3LUo/pQL9Qv3rthcIvrR
g/qFW8YMHzRu9KF+aRyhFbpOQ77UL5w7d2692n/rBP3Cn8zvr7hStZH6hc/9
qdfsNnUj9Qvn8uG1F9Zmrv+F91beP6Nbvp76hX8Q9l47u8+L+oVPt+yQ4Dvu
Qf3CC+Oy+gu13alf+PDFRX8DxzL9wk/qK5Zf4/agfuESd5JOSvJ6Ub/w9RcL
X7+670P9wuv5B/tejfejfuEKD3JP7NwaQP3CL+ddruDdEkT9wttfX7WfxB1M
/cLV1yzlM1cMoX7hp8rb1GXfhFC/cG2RnQ+62kOoX7iHTq2A0OoQ6hd+beea
w7v6NlG/cMMRtWOnZgVRv3C/0oMnvB74U79ws7xNK7UGfKhf+Js+txpZSQ/q
F7605nDZDxFn6hcuW7dX+EDXWuoX/vqzkZWBzBrql9ZJXf+Ngl061C/cNGiP
0RPPldQvvGX1nEXb/BWoX/gYj/dHinLnUr95PQ1/s5eaczb17IxLnbKM+iUf
++dp40UW9QvP4lf82jpfj/qFW1XMlrbauIb6hSd/+3btFe9a6he++EL1hOjv
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
p6hfeHTilLR8+wrqF344aa0+Z1oN9QtvL2otm5L2iPqFC+YYT3yX/IL6hfst
s12o6fee+oUbbkpoFw/ooH7hs3b6VvRc/MWi+7f/c4nlQ2ofP3Mz92//5xNu
5R9IeC3K3L/9nzeeq5m+YtdM5v7t/7zIe4HYnp2LmPu3wy9+aXglrsbcv/2f
fzGp33K3W4e5f/s/F14vwS/gxNw/Ft6QXKl7yceRuX/7Py+Nlq85kMqcvwE3
3pE3JTWb+fxL48wq9ljpz3z+hbvvEtP2+sx8/oUf1Dd4od/JfP6lv7vQZrAy
Io36hXN3/176ciHz/hm+tdbtnb8w8/4Z3qdkfsv7EPP+GX4tZLl5/lHm/TNt
v2v/Rt5m5v0zXOxw/bZpvMzrLzz9junXq1OY11/4GVkRPntZpl+4UYbhjpke
TL/wedl1C/LmMP3S4/1zwzbCj+kXvjDA79iKH8zrL1z+895nFQeZ1184j5+y
LPcepl86jnE333e/YPqFx4hrKzh5Mv3elynm1Rj47/lHfGyv/8kQ6he+46NN
1SyuZOoXXmP89foXo1zqF55oqNsVnnWI+oUvO75YOVy4jPqFL9QcbL8aXUH9
ws8M37D5pHKH+oWf/1a6WYLnEfULPx03NFs1spX6hY88MxoTXdpO/cJvHDeU
V20YYNH9r/75G6/7z28/FGTuf/XPk2bskjp6bSpz/6t//nSXy9yr3XLM/a/+
eYNze2fuUhXm/lf/XGWv+oo/hdrM/a/+Oc8r1V9HotYw97/65xHiW3dEhaxj
7n/1zw91fk5NMGDOf4bflgpzuf2Q+f0X3i2xd6u7OPP9M/zvRf11QmeimPtf
Yd5ODS7Y+5D5/hlevUcgmP8J8/0zPPf6tC+C0pnM/a/++fyhwcfqyjuY+1/9
89J3XXdaC3cy97/656stN0sExTLfX8GX3Jy3dssJ5vsruOmRuWfnfmO+v4LH
7H/+tlI+n/qFZ94yON0WmUv9wlVbQsNm8TOff+FzE+cVFcgwn3+pi56N2y0/
Mp9/4RMMF7uu/Mp8/oW/eG5qOLR2C/ULz6k+u+FyK/P5F95rMKTQIcr0C/cQ
Cf0uf5B5/1ykzc83w86aY1KyO32ivy31Cz8d38ild3Q99QsXvhoyPO30FuoX
zpUwvPGMxTbqF96v+9Tjb28e9QuP+HxJvtLmMPULjzI+8vm8TDn1C1fgHzD5
2nCT+oVb6k360na+kfqFL3szLqGhro36hef1OLR/W/WD+oV/mNspWJHNy1w/
+M85xdw/frMmMtcP/vN3h8XbPvRLM9cPYh52tOjZlykx1w/+85SG5sXZBcy/
XwbX/Pzaxm/YiLl+8J/H1Cp36katZa4fxPZzOvSecFyZ6wf/udPHEeVNjuuZ
6wf/+d53iWyzbub8K3hcSF34kYBw5vrBf27c2OT6aDzz+y+8+sB1/4H/5/df
+N0v6w51DzO//8IfVo5169+byVw/+M+z9s9VDejOZq4f/Oc9YWGczGM5zPWD
/5zV2i92qpr5/Qge3+3s2DYpl7l+8J9HSk0VkknbyVw/+M//is0P/imXw1w/
+M+LjTwOP5Ngvn+G35lxKThFnPn+Gd6iMkY8ZB/z/TNc+fjrw17Wccz1g1if
Kk/atAzDmOsH/3lV/1jBjZoBzPWD//yTXlXhqzPu1C88OCJMznkF8/2Vv5sP
3+AVa85q1okDPINq1C+cnSTUecTVmPqFT4yOnOH4wZH6hScYrRcUfOtP/cLj
HvoFuEpEU7/wk5KnMkIbM6hf+NzXKruXDe2lfuExYp85R06VUb/w02u/jBPf
Vk39wsN1b/F+WNRM/cI9kl9opH7+Sv3CVVdfO2LfOcxCv3Dp1w+z1u4QpX7h
ordltKRDZ1O/8GZXTYFz+xdTvzQ/vmo2XF7q1C98G4/uAxMLXeqX5qHIbuRN
H3P/Z3jXAR71d3vsqV+4YQmv435rD+oX3vvTZ8qEJ8z1C/CaL5Oqxc8FU7/w
DrEFb78MMedPwhsOJrsm7oijfuH2M0Qb3PyZ86/gby5xO+eu3Ub90nE837i7
aiid+oVrljl4KvJsp37hGxK/FV1IYs7fgD9bt7XI93029QvX/RRW17Etm/qF
K6vHq2/qyaJ+4eN5FJs9dqVTv3AV1UdHk32Z33/hsaqrdvW/ZH7/hQuPN3/3
6mYU9QufvMzF/fWZEOoXnnF1llmJAPP7EZy7Us+5qYn5/QieL3btURzbmvpl
x9fyNU9fy3FftXhvRP9U6heuWZLvIBohT/3Cm7qawu31ONQvvNfH8eqVh+bU
L1x4Yx535xN36hcu6VAe2pkdRv3CnXSqFj09mEn9wk98sLGTNDpM/cIVJxo7
tspcoX7he0pini253Uj9wgtT/AxPTXlP/cIfv6guTDj6i/qFv/tRfa1imgD1
Cxf/Mf4on9IU6hd+pW6LEM+vedQvvNXPVzH9yDLqFy4oqR5kdZJD/cIzPtfn
lnw1pH7hf+7tffal0or6pceVWHzD/awT9QvPurvyneFrT+oXviTzDq/jxI3U
Lzxk1tUrXEPB1C/tp8SXHWant1C/cPVNV48rfY2lfuFzVr38brkgkfqFS3V6
btJalkL9wh9larYZ1GyjfuFPfZyW1uemUb9wl0n7qrSc0qlf+H6hM9/Fh9Oo
X/jW2IpXoYGp1C9c2Xr8ixVvmPOv4AfuFgv17kikfuGH9926UVAXS/3Cy/Ki
2so2h1O/8Ae9q2c9vhNE/cKfvExWKrJizt+Av/TJCIg3cqZ+4Q5/zT9db7Wg
fsUOyI+5EPnf+NV59/N6fmmgX/i8OXUl10+MpX7hpdITi3qEpKhfuO6dPydK
bi2nfuHBq/a2zW81oX7hbiOzdfteeFK/cKdk18ILY+OoX/iEL9P4fogVUL/w
HnYvR/zVGeoX7lLGo5pdf5v6hQf1S1kbxT6nfuH7X0gFzdTrpH7hAydkpIVT
/rLQLzz69/MC67ei1C88X8CP9d1+FvULD7nY3jJsuoj6hZfZnthuY6BK/ZL3
u/SpftKifuEtOoYryixMqF/44bHX3ys+Y+5/BV8/0XChgZsz9QuvLH6/e1wD
c/0+/OYVjZlKxv7UL9ygqP58khBz/SC8KOOR6sPOMOqX5uH2gkXaY6OpX3ji
Feu203/iqF/4H2ujy42zmOsXaP//ajSPnE6ifuGR2luiE0KTqV94hbO85VfL
ZOoXniGhf265FnP+M603r9SyS/YJ1C/8c/W+Y29LY6lfOHeUl9vB3i3UL1xe
cJ2/kVwI9UvzY+N3Z1oec/4kfCg5+EZiuAf1C1fyk14XeGQd9QvPe+B9cLfO
Gur3/Y2sMTtb13LWtjbnLxr3iPqFs0Mtx0ZHfNBAv3Ae03lnvYp4qF/4850x
YjUFM6lf+KZ+c02vB2rUL/x109jeAfm11C9c+uQ+yV0Pgqhf2p9V21oCfqZR
v/DHs8oXXFpymPqFh+YduFuTeoX6he/+GSkx4Woj9Qu3Cxtrqrz+HfULz1U/
uMydq5f6hS/NNVoX5M5H/cJ1n+1dvS1LgvqFaz0yb+q6KEX9wtPG3eLf67+E
+oW73GTbWX9YQf3CYzzOXgqJ1qZ+4U0fKl7l2ZlQv3R8T59jazlZU7/wvNzs
0A9STtQv+VlXvwtZHtQvPCqnQdtaypf6hStMHeNywjCI+oW3VJUu6OVspn7h
IxNvdefO20L9wh0UubbWFjLXD8IrP30ec0AllvqFW97fnzjGKo76hU9+PC+J
fx1z/RG8V7hkRb1xLPUL18vy29udG0X9wp24Xnv+eBFO/cInHrim0ZsWQv3C
PzUtmag0PZD6hadUcflov/emfuHFUx60l1e4UL80n3OWHb4lvpb6hXcP64vv
d2bOf77wqmdMkIYNp4zfrbIvs4T6hT8pulSWbnyN+oUHvrvvfubaJw30C1/1
Yc7zKG9+6hduXeZwrbxPjvqF13d77ze6oEv9wh1W13hsnuxO/cJN/lx52Hsp
mvqFP94VYuW0PY/6hYeI3xw3RvoU9QsXGZpgr2FZRf3ClVldYXejn1K/cBUj
lQDHnZ+pX/iKeYGzN3AGWOgX7iM4SVAyXID6pXF+JhW3Bk+ifuG/K3Un3yia
S/3CH/Kd2bC/bgn1Cz94co7b7sAV1C9tfyxWvbFci/qFVwUdqUq7ZET9wpvv
p6+Q7rSkfuFP48b2XLtsT/3C1/noXFA+6Eb9wmMyFJT7pH2oX3iUulO81DTm
/hvw2pOaJiv5N1G/8F1+IeV+F5nr9+H39OI/hT4MpX7hu8/X3A+YEE79wj+e
EddZoh9O/cL7o1WdAtaHUb/wT6HX+QzTNlO/cLapvPv8d5uoX/icnGsZf2MC
qF/4i2Eu0czvPtQv3KqzxMTzihv1C5+46sn7vIJ11C/8tuXI9XlPmOuPqMeg
FzK58brU79YhC36zfTYcrn//od/Rjn7h5W0zx9pZ11G/8K/RK/u6mno00C/8
993ixL1vJ1G/cNOZx+dKKqpQv7S9QN+EL8ssqV+4xsDvzYIxG6lfeMYiD0/9
8BTqF96/2XvO2Qf7qF/4/QzJGve956hfeK163KmnWnepX3intOUl/9rn1C9c
6Lnp8ZjGr9QvXG5ck8Vq9d8s9Avnq+GNm6UlSP3Co17X6A5bTqJ+4brqFX+V
u6SoX/iSttjhbSPy1C88d882/1dHVahf+KG1y8+pLdWkfuFWu24MeRgbUL/w
7Uva5UJGzKlfeMdz4b7rJ22pX3jy3q4ERy0X6pf28+77a1LZzP2v4LsDHjb+
+uZD/cJjvJb13ejwo37hU6NrViqKBVK/cKOQcSzZicz9N2jdpil4TXMIon7h
ggeM+cNaA6lf+DFxj051nQDql467jWVWRYkv9Qv38wh+tsvYm/qF35bn0j9S
6kb9wi/Iy+yUCXCgfuGZc3x/SKRYUb/wl483HwgXMKZ+4YYiB10fiGpRv3Yz
LvAv/vu//Y529Asf4t1ndcDtIvULVyr6cN437iX1C9c4+unDoRZe6pfGiRq8
aFgqQ/3CR3pmzOmaokX9wmf57Gt0lHCkfuEuYVn3R8o2U7/wh54h1nvnZlG/
8MOtXM5PAw5Tv3DXpYFKSeaXqF+4zvll2+Pn11K/8G0Jn/xPp7ykfuG603M/
dBp8o37hl5vrpnYcGGShX/iF5/GF9t/5qV/4tdiXm/adk6B+4dxJ2mwhiznU
L9z0T9flp0sWUr9wbY/rc6rXK1O/8GPLHmYFPGdRv3D7aNdjxpt1qV+4f+ru
oIteZtQv/OX6J8WrBKypX7jEijdjFXrWUb/wKR8Nhs/EuFC/9HhfmYy5bOZO
/cLLxV1TbPZ5Ur80D6esM/tlvKlfWg/uQnIvyr2pX/iOFO8OGUVv6hfuKbeA
J6Xck/qFL+9etveYqzv1S+vQTrnxbYoL9QvPMOxesuPNOuqX1mHlbFOxeivq
F36Xp/Xht0JT6hduJvmjSNBKh/qFKySa3wyeuor6XaQ+RWCci+3/9Dva0S98
q9hFeZb3AeoXnlI9L/jbzNvULzz00vsj3zN7NNAvPGTj5co5N8WoX/iY690D
pgFLqV945sa9dkXZBtQvPHzn25Yfpu7UL/zvFG9+C5VI6hd+XrK6rLV2B/UL
/5bYa5Kw5wj1C491q326Kvsy9Qt3YU8xualWS/3Cg+zclgwFvKB+4XbHJKZ5
WbZTv3Dx4xrN41T6WegXnn647eHHCD7qF37CaDjIKkKM+oVPVR4/qNMuSf3C
yzx9E3lWyFG/dHwNs2yC+ZSoX/iI4euQwkfMv58CH+v+NHbPRG3qF148Leaj
92fm/u3wlRW7i61vr6F+4Wsun5tx5LwV9Qvf0NrQ8HC9LfULN+0UdwxIsKd+
4Uucfa9dO+JI/cKnHJjQ+jPHifqFK1zJbshZ7ET9wo8p7fkkluhA/dK6mnou
vOuuHfUL33LD/9c9Y+b+V3Bhk4TBaQEW1C+8KbLL5YWECfULL5yUbnz7iQ71
C79RNlG9eTKb+oXnl9znHulQpn4HbbcItN/6335HO/qFV0/Xyf0anUz9wiuC
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
9pi3cfKnkwqyB8mxPdbbb+uvTVyr9Ok4Hm8+9Ytv5DdtD8d6O5EwZZuvrT6n
+f/uTxq75aAxz7S6IdoeTu8feNLs1k9mnJ6Xmo4unKvMONbbXaFZ5zp7mXXl
7n74l+ZUbs7o8bHeLs3p9hjsYtaV1k2N67FjeTij9x/rrdhrveAOUWZ+po17
NM26ltke42C9lVVwvzynycy/2Rh/5cvxvJzR84znpUhloVUv3Jnj2JZdGly+
io8z+jjidbA+g7tu/QpmnfgkfvteIDSGM3o99IjNUg0R4ueMXlcWg2ah1bEC
o3wde6CpXd3D7yc7cXhDn7mhAW1vvzBX5+mUX+QYH897d4478mmOMaDHFa3/
slgqqm/UOBHsiDjlhJuX+8mxvV/xSJRB+wD56PXmc+vavNUrDeg4+r6evWpI
6jdtj+MlW/T4k0bgH3Jsj3Uo5JGvtfm/cXL23fooYJXJPlut7lWlNEzbw7EO
Q4/6NmQ81SfHOtw20zbn7QDjWIeCXzWczS8w6+2msekWj29cnNHjYx1mH3pr
lnaPWW+N8iNKe15zc0bvP9Zhg/dTgcmSzPzwr/xkIlvIwxk9D4bStyOWfOHl
jJ7nyC9cq9w0Gcc4PyWmJY3bw8cZfbx6tyxJUvUewxl93D0ypr895c7PGb1O
6D5Xcp8Er3xi1pWw/i3ZjJcCo7ZfxzaK2tYzzP7Jll25tH+8sCGN81pzOGzT
h15y/N0RZ+4b1pp9o7aPYD9mBxsKbewnx+PF897dWzLNM7kNaX5+GEzqnZQz
QNtjHmzvTZglXTZIju1NfL5/bm7/TY7jMvmr0oEhhyHy0evnh591y3An5j+b
/Xfnl+He+pFR+5nNHs8tlcSzgIsz2rGulLLKJrre/N/1k+R1Ueb8b2adFG13
XtiYws0ZvT9XxmoHX/zKwxn9uGwuqwnH6TOOcfA8ZsU3spvvErN+xrS7+OSl
8XJGz9vTQ/XcVs/5OKOPy2zZkf/D1pfHU/V+4Zpl5pyDEikyC6lIhv0izRQy
iwoRQiqJqEwZIkPJmClEJEWDkmSM0ETSYEihZM483H73891nuWfff5/P+qz9
vs961trzWt6lckyINi6j+kcvC95iRrTxtU6T3WKfzoJo9TB1rrJ1n8wKGtwS
O91p1jqoOo698h6fetUE9lKMMmvCOiaoOO6/EjNc77plksbeB9uz59324UNT
VBxfZ/q7MR5V/2kqju93dGD69NYbM1Qc5/Poj13t2v/ul3Ec8ndQ8pDYPBXH
41KVeQEzl1+kOW409LuzcFd1VgSctPv++KZiOkRr/93+Y27SI3pE69+YWezy
Rz5GRLvOsr82wT89GBDtOk9I6pfcvwv2+H7x89S4q4DGmlvAWyGJbe35A0yI
lreJ7cOuVnXMiJb/qPxaWcV5sMf94NdRibbKnBx3IY6/XndeTK1nQbTxvTdy
UiTBdgUNbokN6o1wWxuPY64PH00HX91LtV8S2iwvNTNBxfH1kB4JyK0xm6Sx
98GudvPxDIdMUXHaerIzV7Djkc5eKp8zctte6dyZptrjvEl9y/Jub5yh4rj9
qLjGFwHGOSqO8x+X9aBO48w8FcfjePvElT6B+kWa9URjwWUf/jwKoEO0OM/O
ju9BufSI1s9l02DSTl5GRLueo2naSbrODIh2Pc5BjTb0xWCP70us8CYl0pQJ
0fKzebStL/MDM6LleVKcoecrC+A4z3JnJNue97Ag2njFmrhzCIWsoMEtsUB7
5pym6+MYz4TvjLbhPqq9tTHdAc/tf6k47fVJrtOU+fyOfdR1Wmrrsc7kT9L4
8cEYtzprRA5NUXHcfsuUuoKq6AwVp70+qUmPWNCW3UflTe67y8Z2q1mqPe31
cNi1t99Mdu2jxiUnJ8jS9u4c1Z72enhzyerDbx9AfMv7bXj97Rao9rTXJyfL
MW7vtL2E88jeUyvHBlTBvumEqZTMdnpE64fav0tl/8G5NbCeWCV1b8UNDIh2
nRPR97RqvgOO73cjlxqdQgwjouXtpMOF/E4tJkTL86x2yqxDMzOijeM1xdvq
BpNgj8frk9Ice2I/C6LVA/5ejPzD9LHOU9BPwl/PfNbiFTT2ltiny4lbulkn
MHzuPO7nXVlceEDtXypOvR/MygzS0JiisYf7LEOGk4pCP2C/qwa127UTpqn2
+H5tUkKfjQzOUHHcPqp/1PuYyRwVx/l8m8R57YXAAhWn1Un1NCVDpZGoBxns
WN5IE+AlB9W+F8XRI1o/80J03P0BDIj2uPj1QL7Mfe6iRYjXy2PCe46zMiHa
fQlyrji7YQ8jot0Xfh4pq+caiz4EcVSuWSmu9Qb8UO93nJn8ukuZES3/u99/
61LoZEG08druUtPO1b+CBof77uK00oE9TmCP31+v2NNR+9YF/K+UMCtflz6B
4XPMaZ/zeL9SmVh/B9Ypxi3wbsB/kmqP++kUVsmjCE/T+PHB3NU768bTZ6g4
7fOc5guWXvvlgf91b24d+6Q+R7WnfZ6TLTfzU0EG4hii0eK3RmmBak/7POdB
QFh8Rrg+4f569RfbYKvr+oT7a15D8fuK2vqE+2jT/PVe7Q7gX51nrangQ3pE
e1z8/iXV9Wy9+QFY/7aiGGb5OgZEu6/aBLkvR+4wIlp+5jNnztZGMiFaPo2Q
q6NfGDOi5d/oTUdtwisWRBtHJlf6VD89NhrcEgvZUTLeVAhz6mmfJ5/O94n9
Zgt4vluBxOoTf2nsnbFPTjbmNy/BnHra58argu6yF3fBvvKaPni8sJ6h8QPP
jQvIRbtCJoCfnO0HwiZ0YK497fPhibpnlxKDDAg6SY1cvybpG1EPG/9q3zm8
0YCKf+tgifJ7tED1T/t8+FuNO7+itgHhuZ97r8c2CXYDwvO9Ver0CqEHwM/2
rUoT68vpEa1/6vdRXdeyhi/AvkSw5CR1HkZEu99Ik5fPeNcxIVreVJT7Gk5q
MyNa/vHrzEx7UdGdXBAvEV+PFY0FLIg2jvh3FJwuzU7e3BB3/DsKGcc9ul1h
gGf72L6fi2VHtPoR4N3x96r3OHUuOe37o60WkSYC3PsJdYbTQF7r3jtY/7d4
S4XvUZM0fuC9kpfq24gDlcDD5RaJy1/Hp6n2tO+V+GrnyaF3gc+4H/c5mfbN
0fiH90p/09Ym6sruJ7xHYJzo7Tz5BuJ4P34HQ82FRaof2vcIUi5fI4d7wZ76
HZ0Gqe7nC8Bx/Sx0SV59Iwl+vj8fnEwrhbnttM97TbrO5ITcAx6EEIep9wmY
247j+PnoloP0ryoR4EfIMzsxuBnmtlPfS97RM0L+LIiWf/z7mWb7Vff0iiHu
+PczDmMDnzWqAaf2/1SwOJzSCjj+/YxSo2Fvx2/A8e9nMmOVTdazg37w72fm
mwROM2wC3Ohkc6OJIi+i1Rt13tnbmWnOPsB7hZrKclJgDjjt++WNK37WGjIc
IOitY5qdrvA28JMT+nEo8N/57v/1A++XH6o+WaXoDPyvYnuINq+F+eC075fn
5oJ3draDPa43nbjoN8FU/4DPi0/7rPcg6k0R/X7UHga4hEm16lbZJZp1wnvP
tFXeho9Ogz11HlNyCeuPBViPrdeTV1E1MH8cx/E6NjZxrXQ8EuxFKVkhp3hh
nji+X5nMZ40Ga1gQLW/4d1AGe5WllO0hXtQ+6usbOIrjAMe/g4rQFtv/pnmZ
TiJf0+9eNkebtv7ou10Vyz0BuIJ9+hZVEZgfjeN43P1N/L/9NSPGt1P8Rkro
atjXOi3yew2zWRo/8P3GqSKx9WX6YI/H0VZ2avKSK+B4HB04H9hbCgPPDd2u
65y1Yd407XcFCdqU/qiVxLjEi2dMZR8A+/gh9wF6R5g3TfueWk0/pHItN+D4
c3hb0tlhvk2wr6G5cv9ndjBXmnq98V8dmDsZzD7rDPhwb/qfcgonwR6vD39b
JJ8IHwAcrw9lN29//qgDOF4ffqdEFDlggOP1waF6ZWq1LlFX2t5R/Ov2A47r
qqCbf2XwEcBV5L9vkFrgJawT/74u1Psl79IyXVH7Axc4OHjIAY5/X9f3y3ad
nhHgkw7MghatJESrN7z+KF79KzNYC3jJcTtx7F+dwee04jiuw6TV8ck344l6
c7utaVX2EvCWh0qqhcyLNH7geyFGA1TseoGoqz+rchK0AgDH60P4hFfojlNE
/Wx7yPhE7BX432e//WPib5iDjOP4+WjxyOgnhljA8fNLCKORq28K4O2tad3z
D9gJfnA9pFtf5s58Ces5+f5HpPAhmCOM47hOhuPX72l7DDiuExM7unMTTwDH
dfLQSEFSuxpwvP4s1N8OyT0L69HeVRS/kZmPeFxcP8HXV/deBXtcPx4rdthb
FgF+77tCToA3ibBf/PvM+6HGJ639QA/495nF2jpzpfmAP5fH6F9WkBGtfvD6
9oL3ttQwpyEVD9/86/2TkVnqXF0cx+tVlO5uUfFeon6E3HbYDc8AjutHV9qx
rp/BkIrj+hG13OFFvwT2eL3KE5T0iBgEHL/+zNTltNrNCX66T2F1kYow35a2
nixVrsl4xWRI5X9U1XM+NRDm21LP4//VmQedLbWxnyBeuK7OT9yMqZTH/ftg
x82qFIXquWmOC/NtfXy/sxvwA47rKinT34rCBTj1+/w0kogKL+C4rnZfCe5U
bCXq7SPXe/cF4WXH/U9XS4I7pbl+gX1Xrsz9fYl8hHXiehPgZNePYwEe8HqV
s2Oqib8N+MfxoAKp8rQNYI/r0KpkOvL2Ati/NU4SvXSDROB5x+eFHeHuZEK8
8O+Hp2u+5fr1LNPtf98P72g9cenSetDhHtZ+XSEPCqLVJ14Pu3fR+YdrL9Pz
f/Xw4qquQzpuRD3verjriXok4EOuN04k2sBcWhwvYpVIb/gLc1ppz3cvb66K
cTKH/Z4c7tALrYU5rbR6m389bstjBnHZnrnRLUabi8a/D1WHaehN98owQ+p1
2p/DGki3DOa04jiuw8punmeL9oDjOlxTLFF6/yDguA71Zzxq+I2IuGFjortW
lCH1PuWNwKYz0jkw1xXHcX0ekx6+Lm0JfgwofeY140R7XLddn268DVEm6rl9
qFuRzhX84LrljfTv1d5H1HPO/fN/LoSCPa7bP7VbTEw9wD6A8qedUZVE4A3X
c8m1zxb9phCvRNeLTd3fSIS44PVWZ8tZ0q1NoIdtl4yS073JhLjjOi90uX9p
yg3sWT483rJflELQFf6dvJdpCUeUJ+gwc8lq6f0Urb0lzD2fkHny4TbgeB0O
j1x/KPkJ4Hgd9t30po/9BeB4HS4+ocoWVA44fn4vV9OLtCgBHD+PC+iZJFTn
AY5fN0aESuguLVsP/lxiaG0+81Q94NHvhg4Gr4W5qzietoIxkeELGw3ujIky
l79LtIE5qjjPeP1/1BLcSJcL8XJpQo2XQzlp/PhQ8/HQhPSY8SvQAyla2fzl
NZiviuN4Pk7yv3nj/w30/CUz+sNYKsxdper8v3yMHs0v7ioEHM9Hrm1si3Tx
RPzTdZFtz98YwvsUugN9znUwvxXH8Ty9cvfo8c1VgOP5uFmQ/eaGOGKeJtGl
FzyrBns873LUlLqMMol5+l6s4LXSe7Cn9tX/0vLL8BnYU/uFCgR//zIE9ng+
spYLuj8tIObp78Lf9RnfwQ9n4OHgy5Ikwn7xPOXuvttEnw5xxHHxV9/qyr6B
f4FBevThHokQFzx/M+PPlmYvy1Mcv4fGzkh9Af897+g9z0iRCXrA8zrrkBi3
Tyv40X8pa5CZSCboDT+vvY96WNJYDnr+0j8Y9ZCPQtCzTYpwgG4qhaB//H+Z
wbkGbaXPkC/xdqX7HlrxE/II/16lr+3cp427jKj4nPzkCbEimJdKfU4Selzg
RiMbDQ7X5zeKznRMCxnBfcE7TNZ0JcxFxXH8/Hh98tmnh3pGVB5GI9uvSK7i
pPEP81JLcy906GobUXnu2lsakDQB9jiO5+/O3bs7a1WMqPGd71U8zvcC5qvi
OPX/6JPPN3lsNKLqaq9M+EuLMJi7Ss2L//L33bPWzoQxQwIuZcmv37LZiPq+
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
/RQJjWVBBqjQ5dIP4JMx1yvm4ygrsjhePxQeBnMohP0Y/TPUx7FCx1MOuRbQ
Z/7ih9LTMl0T2L3LbfP1u6CP/de9ni0j2CTGgPjk6VZDH/u53Trr9h6ZwvoY
81ffvwb98BUvlpDVw6axCU22Wdf90Fc/gGyluy9hBitYYhR3qwT+jeTn/Mre
zmI+el5ngwKhP/9It/OQKZrHHOy/pU5bQZ//+tsbImqOLmJveg3vcF2EuQCb
Tqp/eh9Lj6xNS6Z81cF+qSGk5QAXI1Kwln0r8hiO61Vl4UHew4BOHehv+U5e
Nufi4ttW3RRGJLn7bnuaG6w/Z8Weju9KTGhT9UfefhnYr7O89OClKmb0/faN
ltYy4C2Ak8R1Y/8KtEpbQVEsCfr2Xxn8OhS8Yxw7VkaWmhaFPvD1bot2wn0T
2K/WA3InuaCf/Aan61nMWyexuwF8CY6fgP/2lNg+swtT2JyITSCfHfSlj7tQ
LBMbPY3lBUXtxCjQx75u8Pps4Oi/OuO9vf+mEfS9P0V37/pDvXnM1G9JcUoU
+uc7n2SoNk5axLZ3a22RsoD+6kazR/dW59EhpiC36oFZ4F/1b92ezgf06Gys
Sh7jKvDTXjeYx83HiM4rBwYvnYc+/F//TOs99mBA6S94t6ybBP5nni9EWhQz
oq6GIemVOrB+/5c618SMmRC73WZ1zxWw3yfHpw4e/sCM8voNdF6GA2+FJ9Hp
knkmJJocmGDeCrxpeC5+ePSKBYVtEqHLawX979a7Uv44aAVyqby392oo9FG3
Hxj4JOU/jsVuujWzagbipZ07wtCw7i/2Uy3rV0cfHDfJS+qJlNMkxr8xa/ZI
EfT/rx8MCHUYn8b4nKeTI5ZgXyujON5d/TiDaU8fSK1JBX7cbIuyJN2XsJI/
C+5594H/bRoiceEG9EjGpzEc2wl9zg8ce8I+cZ4OdfGbt4/Hg73iYpb2vDID
oj/MkHJHD/rYk07PS1Vep0ekk6nazpUQr0vPrruXjzKgnkr5Zrv10N/+LDvi
l7ZnQCF7I3/uLQT9bNRPqO7IYkQv45WlfaZhXzFjXgbmRkxI5GyoYNAriFey
2+airS3/zhcz9hrSu6Dv/Qs/nW5HFmYU734xXDMNeGt9dZCF4QcLamIr87K4
C/wP3kHlAtPjWNn6X+prhqAf/hF+9+qRwr9YoWfcvdBe8M8wbvKoaHoSW2y5
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
/w8rdUad
       "], {{
         {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
           GrayLevel[1], 3], 
          StyleBox[GraphicsGroup3DBox[
            TagBox[{Polygon3DBox[CompressedData["
1:eJxNnXf8j9Ubxj/f9dlftJf2UFZpy0j2KEKRUWSUBmlIEe1CJVqigYxQKkrS
JO2iqaWhrdIkUdTvendfz+v7++N+3fc5z3nOc55zznOes67r7N3vvC5DSlOp
1IGVqVSZ9HHpVAp3bclhJalUXlKQbMmnUv/K731dP9x+RckR1pWSQyU53/O3
wv+j8KsU/i/ZW2W/K3tnXftF9q+SHWX/JP2zZLPCbJF+W2F2Kgk/wv0k/9+k
n5H/z7J/l/2c7KMUppqkumQHybpUxHW0/WpIXpL7Hsm9kr4lcQ/X60rKJOWS
F3Xtboc7VXK45AjJcskUyV2S+gpXIUlL6vk+3HUkpY6rgSTr9z/YYTOSD5TW
EulfpWuXhM09h/g69xzp/ON9ftE7rtczlyr8b7I3yH5e9nrZf8h+UXbvkigb
yqGX8x33qfajTPo4Xt75NPvhLhRSqVo8R/HkZO9PGchuLL2dZHvJj+nwL8uk
UseWRDlRJluVhl2kP9T1f2TvKvsj2c18nbLt6bwgTT38nrhPcb7g7l4SeYq7
octqG8nr1BW94zfSKyR/y/5O+s101I3vpf/QczfKfln2Mb5vW8mZch8p/+HS
jezH+3RzmfG8zpIDJQdRZwuhf1P4vOwDqHOyu5ZEOVG2J7uucP9J9sPdJxXP
Oop6ZX20pL/uP0z6QumW0rtJakpaWe8uaSrZgbovaSzZTrK95Fj77SRp7bB7
SNpY7yk5XrKvZD9JE99HXG19fS9JO+u9Je2t95F0sOb+Zn7OzpLmkl0ku0pa
WJPu43yday8ozy+VvlTv9Y7s62WPk/2i7BGyR8p+WfZlskfJflX2KNmXy55G
mUgukTSSbOt3flhyXSrimi+5RnKtZJjf8wTJxdYdHQe6E+EU79V8t9LXpePe
e6XHpCPO6dJN3S5Qd7lvf8kBkmMk2zgdFzi/yKfznY+4L7QfeTY4FWVJGQ6x
pnyGumy45zz74R7g96RsH8lHO9pT6TnddaSh5FH515M+Tf4dqSuSFpJ+vk4a
z3V58OxzXE64Bzpuyv8Ma+oUdbCapLqfg67h+Gr4nQfoGUXicD1VMlKq+v/V
5UrfP0ee5dK905H3+znvLnJ+UDb9nUbe80w/n/p7lusWdedsa9I9yNebufwo
h1qSqS5jyraJ2x7KrESJqin9qdLQTonZS7K3pI1kD8mektHF8Nspp/KSbi/p
IGnr69zTUrKbpKaktWR339/KfrjPUzxl0n9nlWbZJbI3yr5MdjXZOyj+UbKr
y95R9jHS20i2lbSQ7OpnnKswpdKbdO9x0jtLdpE0lmwn2V6yWO+zSu/6lvQi
yXuyV0qvVZ6v5DuQ/bXsN2TPlf2t7BWyH5D9qORd2W9IL+A7lP2a9ANqoy/U
D/tZ6eZ+Jmlq4mfuIDmWtJNXkmbWpK+pr3Otkd+JtA6ikkhv0LuMlF1JXHr3
M2T/q07Cb+RVebwnzzzHmvw4y8/g2gDHSx70L4+8w32uw1I+57vMKOehLmPc
k/SsI6Ub6rn90L5/sO+jDIdYU7bnWXP/nbr3KMLr3oF+Pvlxpt+Z/BhkTVov
UPiMdIXCl+bCPki6Pn6SNOlUmHLpf/TuA2X/o3z4Rfa2ucifI3LRZ6E/Qb/j
UoUpUFfkP0x2TnaBPHRaSMcV8t+PMpP/5bL3pVxyUY/3KQ93Jhf31pUerjB5
2dVy0TfiOS9LnlA9eF/6nXT0q/B7RbJW8pxkqeQ7ybN2f2+/ZZKvJE9KnpJ8
bf205FvJM77nG/vh/liyQLJQ8p7q5wzp8Txf9kzZE6insu+TfaPsH6WfT0V/
aobcj/A86S+ll/jZX/AOdq923I9KPrF+jPTonn3UJvzD9yLZV/a/0plC2D/I
rpC9h+wvZZfJ3l3257Qh0ntJ9pa8primpyJ9//V1UtF3pL9Avvwg+SgV6eQ9
P/XzF0k+lzwuWSxZY026P/N1rtHnIA7i/Vf5sJvcq5WGz2Q/xHPTUT73uv2j
7/Ody4p+67cuK/rXX7p86FOucT7Rt0Zzjf7iNy4r+o9fu6zoj3/l8lyTj3ee
SZ7Lfl327HT0lV9wfV0i9weUp/Q6hfmQepCOvunnflf6rB+5/OnvfuyySpXE
vdwzVfc8SH7x30/Hf/1x101s3v9jxT9b+nb5fyh7luxbZN9DW0bZp6PukjfT
JHfJPY/ySEc5LXe66YOvdh2hr/2py4E+9WcuK/ron7gM6SeuTVWV8TLXyyv1
Te1Pm5mL8h4jGet6f7vkDsm+qktD6Guqjf1HepXkfcl+8j+Pvqb895d9Pv8w
2ZOlh5aE+1+H/aAk9d/ACv2h5DKFbyr3DQp/iexGssfKPke6uaSFZKT8m0iP
k/8o2cfKvkn2WdLNJMdJDpD/Bfw35X+2/bh/H/kPpm8t/z1ln0OfV/ZBsi+i
ry77Bul+kv70a+V/sXRN+T8gfZXkask8yZV23yw5g762ZHeFP0s6r/AT7DdI
sof8z5YuyP9Gxz1AcpP1QPrgCnOh9E4KM95+xLu3/M+Vrib/c50HLSUlpZFn
H5XEv669pINkomRQaeTHjbr3TOmZuvdm6TNKwz1McrzkBMnF1h3Jd4UfKD1D
4cfJHiB7uuxbHB95OVkyVHK+ZIr1BZLbSyN9gyW3lUaZ4b7V9+G+yGnk2SMU
72HSt0iPlBxOWMpUcgTxSZ8kXUdSV3KydT1JV0ltXxuudB4jfT15Lmkle5Z0
F+mDHO5Bl9s1aF07mrRLnyhdS3Kg5HK5j5SeJH2B4mwg+xLZp0gfLDlE0l1S
3+5uTgvuzo6D5833c66VPGR9nWSu5ArXm8tLYgzGmO9SyYklMQ6rWQidIx88
vmK8dVlJjMFwZzMRfnfp0b7ezXET3yl+PmPg3n42Y2DGu9db93G6evvaww7H
9ZGSLn5e9Qq1o2oHvpM84utjJAslYyXjaEskj0oek7RV+p+Xbqm0fWq/RbSX
kscliyVrrJ+grXJcjzpfSDvj42aKZ4n04fTfZD8l+yjZLWU/I7sR5Sz7WdlN
GI9LlpIX0m3kv0x2c9ktZD8t+2jZx8l+UvYRsu9UOZ3neky96On82k1hOkpn
FGaG9AjnxyyXwSi/8+luI8Y4L/s6P/r62kzfxz31C1HGeyrO2rKHyd5V9hzX
A8rt/pIoS9yz/Rzc0yTDJZdI6hVC76F7t5fdWvZfav93kN1G9hbZW/1f3y4T
7R92+5Jog5izYE6iUuGPk/49He1TU1/bRf7HS5fr3opM5MMumWiDmjjcVS4f
8mtnhe8gXZqJNoz5BeZLdizEM1Py3052K9mb9axtZLeU/afs6rJbyN4gu5rs
5rLXp6PNa+zn0ccZJ7lBMknlNMRlNkbh+0lPpZ1MxdiPMd+tqRhfMS6ckIox
GGOsm30d90T7MSa7KRXjUu6/MRXjN9y3+DpxMdfFGJgx8V3WjIMnp2Kse77/
u1xjvuw2P59xKvWAeTXmcu5MxXiYe/rZj3mafnqXgt5lYCbaslJJmdusErtp
Y8olFW7/yuyub7+0252U7znYfhm3WeispL+eVeQfwL9SUk32aP6tkuqyr5Q+
XWHyhJV9qHSu1G6nlzK+3e/HHMCkVIz/z3OfYLDdi5yn5PFjLkPcC92PoFyf
cNlQVo87LOX5pMuJcnjKmrJ92po8fs7P4/lLre90/+VOl8/z1pThM76PtC/x
M3nGYj+TdND3ZJ6FsTfznhfZ/az6YyfzXqqfT8vuShmn4z36pmIOY5x1P79r
P9cn+k19HI7/A/0eyulJxdOZeqZ4LklHmLHpqEMX+tkXyd1L+hrP5WD3Jn3p
mJO93vM62KelYi6JeYQTSZ/KcTv+y7SH0ntI9pS0td5LsqvkN9oBvmXZv0j/
ShtWCL++megX7CfZX9KnENf7yL+n7B9pr2WfJvtn2afJPlX2T7JPzcR9f9Mu
lcQzN/Ltl0Ra/igJ9+6yN5SEu6bs9SXh7uhnHiDpZM1/+mpJT0kv+hh6Rm/p
h6RH+B/MP/8y9w/oO4yypu8w0te5Nrw0nkHcd+n+vtKLpPeV/qsk0n1pafQP
iHe04+CffwfvKf0w/xHeX/YC6YmZSNuD0le4r0Df4XLfh/sSP5N47yiNvhLt
2j6SzSXxbMqGfNokGaL83FHuYXyzsrflnyV7aCHK7OJM9KX2dTnRx93FZTtY
YXaQvoh+o+ztZV8oe7hkN9njpdu5LuxdGv3HvZ2WDtbE27o0yolyo29V027K
g34/dZqyopy3SrroWV9Ld1b8XWV/g18m2qHPSqIvQLtFv4E+AmXLfcR1isL/
IN2dspW9jv9yJtozwnI/aSRvyC/aQfoQxEVbSV/4Y8lJuuc76bOlO2UiPQP4
p0m+ot2lbku+5H+difaRdNE3oX0ljtV+Hv0X+i5jNCY6iDkIjYnGya4te3/Z
RdlDyhRPVmUqPbgs3HdKzpMMlfRkbkj6auneknNkXyfdJxvhx0mfJjlX9hjp
GorzWtmDZL8mPV1yn+R16xmSVyXTfG1bhb9e+lyF30b2dbLPlt1dcpbsK6Rf
kZ7qe06Se5D0KOkp0udLLpA8ILmKdEqqK55rpM9QmNmElYyW3CsZJrlYMlMy
UnKZpFox7hug8JWyr5TdX/b9vu9yyV1+zoWSu60vktxjTbxzHPYKyVxr4vqX
/750e8X5guMijpedJt7tJceFe3+l4XbpGxV+P9m3yb5B9k2SSbKXSF8vuVX2
AumlZeFPuY3NRvjHpP/Wc/vKbi17s+w+slvK7iF9iKSB5ERJLcmBkl107SDp
I6U7kg7JAZI/de9p0s3lf43kFtkPSV8lmUjeS18umUAeSO+oNI+lbGTXKkbZ
3Cz7zbIoD/J1pWSW3StcHrjfcB3B/a5knst2qsttOGkqRv6OV5xvOT7yfmf5
j6M85P+89OSyqCPby38MdVv+y+1HGbzociDf33Ycc52Oy1xvpvmZl7j+XioZ
gV0a7Szt90y30bTfz5TGGJIx5VOlMf5kHPm0Nddm+D7ume62lbimuX3HPcft
L+3x/W7Hcc/2vwH3LD8T99TSGA9z/5OlMZbm2UskExK3ynEc19VuLJaMlf2q
9J+S9bK3U/78Jvsn2blslP8W2jjaZdm/Sf8u2aAwv0pXU5jd5b9B9h+ShfK/
TvpF6T3Kwm8jbbHsv6T/lkwqxHj+GYW5XfZN5A1zGmUR9k/a9bLQm2jLZW8u
jfv3K4s4SNPnuvcIuWsqDY/o/mvl94L0/Ez8a5+XXuk8Is/etCYvV7jMuLZM
4e6l3ZR+w2XDtVWSByXzJcszYX8m/a70PMkDpVFPR7gdme46Qv04UPXtQekJ
1E8/k/J8RzLX97+kuB6SXiP9musBdep1a9LxqusE19ZIFkuekHwoeVjyCGlV
PjzKOyme+2U/LvutTDzjSslVki983xK/E/lzjeRL+1Ff1kqekyyl/CR3S+6R
vKa4Fkh/xb/IdZq6PLcQdf0d/lfSz/r+rxwf4TYzvya9o/LhVOXH4WVRZr0k
h0oOk5yuvmAD9fseVL+yr+xDZD8gu5/sQ2XPl91H9sGy58k+Ix3r+Q/JvlL2
FfSdZV8l+0r6zrKvln2V7OWyH5b9tuxPZT/I2rPs1bLnpWON5iPmLNOxRrNK
9px0rNF8IPtU2fVlz2WuV/Zbsj+R3Ut2Xdn3My8uqSb38EqlRfpy+vWsnaZj
zfQZ2aNlj6bvL3tYOvrCS2QPlt2NcQbrrrJHMm6QfW46+u0LZZ8t+yTZC2QP
kt1F9sPM00uq0wfXc2fJ3kb2CNk9pOsozGzm7yU15L5U/tNlV8q+WPbN6Zin
fUV+N6Vjnv8l2VM8N/u27KWZKP/xKudXMlHXJsh+LhN14ybqmtuQa5nzYP5R
9vWyX85E/bxZ9hOZaHOukz0tE3N0l8qek4k5jCtk35+J8fHlsu/LxFzfCNmP
yR5DXZU9OxP9zdHMqTAXKXus7Htl96ftk32F7KNkD5B9lefKBsq+MRPzq+fJ
nqR3nKN3XKl3nCx7ruy3ZN8m+37Zb8iemI457ddk35yJOcvzmRuWf3fGiPK/
JxNj+WHynyy7j+wLZV8ju6HsM2Rfm4n5vTOZy5RdKfsy2shMzA8Pkv8Y2Y1l
ny37bsaxsi9i7lnP6sE4T8+6QHZPxp2yh8o+hXFnPvocx0tOcNvTyf/zS607
+z/WVXKS26kudvNP6+h7Rvn6yWXR30F3K4v+FH2FnmXRP+rpb3d9IfSx2ejj
dJecUhZ9n252j/Dzed4fhfj+myn8V7KPlr2X7NZl8f/gX7GN3LtI15f+QmGO
wj8b77af+yKd3B+p5bQ0cDtSpM9Buyvd1P2bftnIm319f0vJbvwvJG38TP45
ba3557SX7F0W/5wO1ty/g/9zh7M+mI1/4SHSnxWiDds1G32TE5yn9eRuxrvT
30vH/pbvVF4vyf5T9veyn03HvqAvZH+VjvWsP2UvS8e+oG9kvyp7s+wfZb8i
e5PsH9ino+eeoPBp5irJLz3rI+mn07Gf6nOFySrMfgqzTn5/S9oSXn4b0zGv
VcpYJx1raJsU/gvZezK2lf1ZOtbdNsj+OB1r97/KbqBnNKespQ9mXZy6Ir2W
9Q7KKBv94vbOv1pyN6GOSh+WjTI4NRv95Q6uu/Sp2/kexhytXT4fK9wa6VXZ
mKua4jmRt+V+XP6NizH+IM5W/Fdcn/pmY9zSxmV7g8LV0XjnwFyUVV5S8H+o
KKmUfKLrj0oek3wsWSBZKPnUfosktRXPQwp7i+Jf7evc87nkcfYCSNYpzMPS
c/WsHwkve04u5qCflTwn+UbytOQZyV0KczzrxwqzxnE8IfnMzyTeKcVYP26c
i/nsZxzX5GKssTeS/+d8V7yP7C7yXy37Tfrwsj+S/YrsE2V/LPsNxm6yv5O9
VnYb2e/LXso4Tva3sr+T3UH2h7JfkN1O9geyn6euSb6WXV3P6l0M+2v+77K/
kf1tNsqOOplWmPddjmWyP5H9peyc7K+V9qecF1/4vZdIvpI86Ws/SJZJnpeU
VUTZkPffS5b62p2Ka7b0C9Jrncdcq6iIcqUMyyviPtylsj9yOWcqIq8pw3RF
hMWd0T/yfen3FWdW9geyP5BdIfs92e/J/rgYz53Ce8m+X/bdlIXsObLvkf0l
4xTZU2VfL5lK3aI+MCaSPUP29/QVZc+W/YPs+bLv517nB3lxo9zTqQ+52M/x
g/LwR8m7xYhzrPy/kT1P9nTZt0lmkhfSt0hmkM/S7xUjnvGyr5bcLftB6Wsk
98ieL32t5F7ZD+dib80fes7GstiDg/6zLPbioDdJfi6LcRTj15/KYnz7otPH
GIzx1m9lMYZn3P+LwzL2XV8WcwTMDWywZvz3h/UKP4NxI+O8zdaM1ZoXQz/F
OFf6nbIYL270fYwvf/czecavfibpOL0Y9/yge/vJ3kJ6ZZ/MvgxJPcnV8j9A
uib5I7uW7N1l3yH7CNlHy75O9oGy95TdzffVd96sdLq72+9gyW0Kf7j0kQrf
X/ZW8oxxvexDuJ89KpJDZXeSnlgM+1DZt8o+TPbhsmvnInwH6mdF1F/aj3XO
b8qgpcK/J/1MNvYD/eSyYk/Q92VRh9gz9Ivzhj1EP7t82HP0q8ttB8fL/ew/
olxxsyfpN+cx+7Y2uXz6FkN/n439WBtcnuzPWu9yZn/V7y5/9sT8VRbl0Ur3
rpJ+Vve2KEZ5Pi17oeQp2Z/xz5H/c7Kf5J8ie6Hsu2Q3lP2Y7Ptkz/I/gn/F
kfJ/VPa9sg+RvUD25Gy8/zLX0fryf0R6kvwflCyR/aH0scV47iLikzwj+yvp
JyTPyv4mG+0oNml6RO4npVdLzyNcWfy/Xi7EPyclO1cRZUWbV1kR7SD/hFeY
d5K+RGX6kuwrZA+T/Zrsq2SPkD1YcpnsW6WHsI9N9h3SLyjM5bIvkP287NGy
h8quy/9Iz71Nz81Kf+5x5CKl5xPp75iflP+njG1LYxzM+jrzCAfRFunaRN5V
9gjFeTZ7qcoiLHEtkf9F8j9N/m8whyb7slz8o26T3O72/Va7n7XfHW7XJkpu
cZuN3yS3+7f4nreZD5S+QnGuZE5P9ijZT8m+WPbp7L+SXCr7Bp5bDHuQ7Kdl
D5fdX/YTxdhTeKrsJ2UPk92XfVhlkR+Mj19XntSQu0LvW42yld+3kvr4lUU+
1ZOU212Xf5rdzFWs9BzDk4UYS69jXUzXSh2utqTEbubYUna/WojnlWajL0ua
6KPQt83azVxdxu6DnRbcm/zMtzw/8rbnGP62Zq5ii/V7kn8l70s+YOyfiXmE
vzJRN7/02J1nf+G5gcWFGPP/4HH8Kt/Pf2mCy495oJclr1AnMhFmUybmclY4
X5gHesPuDZ7jwM2c02t2f5SJeYdf6dNmYu7jj0z0C2728+gfjbf7HeaNpa9U
OV4lmSJ7Xs59AslkyfLy8L9LskXh35J+Q2H+lL1S9suybyqPfY0DHS/7+c70
cwbaPcF+7DEcR70rjz2MN1izF3KR4jxNuqfivNF+xPsP/ynplXybkhW0odJL
+WZkr6XeSl6nHZAuUx/jXd5Pdlr2KtmrZOcros2gX1CoCE1fqVgRmnbkp2L0
lR7IRdmQXvZvLpT7ZenV0r8Ww36Mb4H2hTil1zm/XuA/UAz9kPxLlIZ3+BbZ
oyj/F2U/Inux5FXZn0tXq4g27Ft/uzzzbJcD+zjZBzq7GP/C43NRNvixV3Su
/E+R7ij/h2X3lH2S7Adl95DdORfld0F5fMNL3U4Q92MuA/Kb/vhYl89brEFI
X56LPvo4h1vksJT549aU8wKF7yXdLRdtJ/0A/ue0ryfZPUNhukq3U5jHZfeR
3SsX7Rr7ZdkDe7s1e1rvsB7i9A5xXjyme0+V7pGLNu5s37+4GPnRW/73ye4i
uy19NNknyG5KH012R9nNZC+U3Vt2d/prsjvJPo5+ouzOslvJnib7RNktcrEu
tKAk9qy003e9XLoVa0myX5Tdhr0ZKscfy6MufJgLm03lO6sObJa9UX47KczP
sn+RfCT3T9KlCrNG9m+yc4xnZf9O3ZT9rez1sqvLPrIi/nnUl3Xy/0P+O8h/
e8X/p+zf5bej7E2yN9A3lmyQvS1jUuqu7Izsoytif08NxgS5SE8ZezN171+y
N8uvXkX0+xkH1Lemj7+3wmxVmK0Ks7vsv2X/LXsf2f/wvco+2GEZHxxiTT/r
iIr43niHPRV+i8JvUfgGvs6//VBrvtfDrPleD7fm/qOcB7zDqb5G3EcrzlrS
tVmrR0vqSBpJtpVsJzlGso3dJfkoszrSFfkom/rs95fsKLuedB6Mj+wGzP8x
d0C6mBckv3guc5vS10qukzwouVpyDc/TtZqki/gku/N86bpK556yd5fdpCLS
sIOkocuE9DVQmL2l91KYI2TvK3t/6oDs/WTXkn2U7P1lHyT7cNn7yN5Xdifp
AyoiL7pw3XlxkvOjLuEU/l/l/7/K/5PtR5l3d3lThqdYU4Y9rCmrntaUVS9r
yqq3NeXRzfHV9zMZN5b5OWWuW6SpxNfqOi+Ol+7vcqLczqgI/6aS45TmttIt
FGaArzeW9HPecc/pFVG/cR+scMdKdyTfJC3IA+lGkla8H/kmaS67s/ShkuNk
n8hccUXc24zn6bntpFvLv6Xs9rLbyr7c70meXWFNnl1WEfWP/G6r8CdIt1f4
9pVRNh2Yr+aZLp/+nqtnzr6Nwhwvv3b5qFO9XcdHOizxznf94vroiig/0nGl
n9/DdbCny+caa+K6yte5Nspp5P4d2QMt/XNF1GOeeRrhlJ6Lpc9UesY5f8nv
sZK+dndRmPMIz3x4RZTNQMkNDkt53uyyPFPSyfl7tnQX5uhln5uP5/Ed0871
sT7KzznK5dqN+X3p86R7SobIvlD6hHzEP0j6Rj+TdIxxXMRxv/OLcuuhNF9E
OtnjI/t83kX2vdLDKuKdp0mGSy6R3Ce5tCLK7RSFv5BnKPz1zieeMcPXKatZ
rgfk8Rw/kzoy15qymmdNmTxgTbnN9n2kdabjIy79av7DY4JVGqY0rJPfnV67
WCv7e/JF/i9K35SP68slL0h+kbwkeVmyqiLaKerRX5K3Je9IBuve5yk33fur
w74i+V3yquQ1yZ+SlZI3JZus35JstiauDZLXJW9I1vs+3O/6nXnXjZIVjmuw
nncLeSG9RHqCZCJ1R+mZTL7L/z3f96DvmeV8esvlOsdpmW33oxVRX6mDiyqi
TlA3H7Mf7rPyUS9HSz/u6+Mlj1REuVJ3FlhT3xdaE+9Q1jwoL+k//K68z/vO
V/4JH/t+7mOOfQfGJtkYH+Q9NmHefmfp6tJl2Rj7MAba1vP5NbIxxsqVVY1B
sx6/JGOVvzyOYTzzp8eiGY9z3vb1zf83nvnb45mtdjNWKXjc9Hgh5nUZaz8h
u7rHVoznGGcx3/uB3+9hyYfW5NlH1rzzar835fCJNXn/qfUi15U5/iY+sx/l
sEayWPJERewjBWvAvv0rXD/GS39ZEfaTkq+sn5Jco2tPU4ekP3d8i12/57r+
UU4zXYcotxl2V6QjraQxnQ5NusrT8T5c+9dlTB78UxHfEu5MOsLyzJudvsnS
uXS8zxeSxrK3k2wv2Y91Bfltkeybju8Q9z7p+JZwZ9MRH/ez9vi19DeSVDqe
T96XpiPfqWtl6dCkde90fJ/EtWc6vrc/XVbXuX63Sse3vav0Tulo+2kn9kpH
WO5vyj7jdPwf9khHXSeu3dPxneMuSUdaSAdruaTx24pYX0V/VxHrqGjaqZrp
aBe4fzenAffO6Xg+bU8T59MOXpeljbtX+XlIOvKavNlaEe0CZdDAfuT3YZK8
pMB/1X64yet3fc/frhO4aeOmVkR7Tzt1n+sE7dZ0uwcoDXdJX5aP9vVuyT2S
MyrjnzGKvoSfWWS9PR11iLTWT0fdwl0vHfUJN+virI+De2W9mXVnsLHN08E7
cJDcx9MnSEfeHOtyoKz29/uQB41kb+u6dVA66gdlUtuaOlI3HfWDZx/gvKP+
1kqHpl7f7TVu1roPTIcfcdVxHNy/0m0M8xPgjcAdgX8CUwTuCIwRuFnwt+Bo
wU63TAVWN8HfJnjcox0OLO4xvgZunf0J7FMAk9zI18BIN7YbHPZxqcDPgsdu
bneC2cYNDhwcboILb+L7E/w5adrJcYDFBV/e2tfYK8CeAfb67pcK3O/xqcCK
ozukqjDk7VOBv2a/BPsm6LuzjsIay96+3i4VGF/26IK93st+bb0XgT0J7Adm
3wI4aPDQ4J8JXysVeOOOTseevq9NqgoPT7p39Hvwzhd5vZt1b57PvmL2r7N/
mL0T7KEgT/unYr8y+c0+YvYTsycZG94A8pL93uc43wf4HvJxoN0J7nqgn32m
3aRlkN3k8Vl2U05n293ccZ/tusA+6r6uB/3sTjgF+rjMBjtN5AHrmkNTVVj0
wc7XC3yN8rnI70+5DbO7je9j7zp7z9mDvihVhbEf5rJiX/Vw5+95fgb7S9hn
AsafvSnsUQHjz34V9pywZ5w93vAAwA+QYPWJl/3mi/089p0/YTd70pfYTV6w
152975TVtanYAw6WH5u93+TH2FTsMYd34PpU7CEH+391KvaNJ3vTx6aq9qaP
c3lM8PMpj4l2n+VnTnS5ki8JNuJG30+94FnXudxuc1opj9vtpgzusJs8Y0/+
JOcp++zvcd5P9rUEXzHF5XS33UN8H3Gd4fSOd/nd43DsvYFjAa4FuBdmpAJj
S35PSwVmkn05M1OByWXfDuX1qveosKfo9XyUzVSnj31Ns1OByxzoZ5IXd6Rj
r9Sb+eB8AA87w2UCjnO+ywPMJNfAb85LxZ4gMK6EgYchwTaAdQAT+mAquBrA
ij6QCg6Hib6+xHlP3UywFOgEH4NOcBUL/ewEL/GUywDcJhiI6anAvb6aCjzy
66nAwCbYiaUug+WpwE9QBi/YnWAqCAf+dG4q9v7c5rj/w2ekY+/WinwVNuM5
l9OLjot9YpQF2Gj2ic1KBeaVvH8lVYUDRr/kcn7J99/h+HgfMKz8Z/j3gPmF
0wUul+rG3eCGWwA+AbC35OOXqcAJgzsGnwvGF5w4/ANgcuHfALPLNbgI4BYA
ewvPANwC4G3BABMGvHaCeQZX+4TjXpOqwmknuG10ghFHgxlmTwt75+A5eNxx
fOYy/8ppJQ/Arv+SqsKif+X3/y4VGGfyY63dlM+PqSosL/p7lw9hv3FZrnM4
yuMnu9nvwr4XOIXYA0M9ASfNHhvqCTjpl5yWBNP/s+9/2nGTvkV+jwQj/qnz
gj057AmEvwHuGnhs4G0gv8Byg6uGCwlOJLgg4DyC3wYuCPiS4E0Cyw8HDnw4
8DzAjcPeHvb4wMEEFxN47QTzTF+EfCVu3AlOO8Fto+EeAt+NhpeIMgRPTprI
a3Dj4M55V/h84E4hD+D1wU2+VncdpBzAVINfJ9/Bz+OmbGq4brIXCP4ieIwo
Y+LmeUtdVmudl8QHfp0yBD9PXPA+wS8E1xC8T+Do4RqiDEhXwvmETnD8aO6n
bIiP92FvEvup4A2C1wesJ5hPuHxOshtuAfY1sb8J3ir4keACIh/hK4KnCH4q
OJHgRoJ/AC4CeIrgxYJTCD4lsPBwCuGGVwgb3qdSP6+2+4517eZ7rmc333d9
u9N+Jm64s+AmgqMJjgO4DuBEopwbOH2U36F2Uwbg1xq6LOGDOqykiqvrcOdv
I4erdFtyhPOusa+x7wv+BHgU4BthTyx7Y+F9As8IhjHvuA91eYCbbOJ6c6zd
29uvsetQM1+DSwosJNjMGk4vbVmFMZ7gPXGDLezr/AAzC+6XsgJ3CeYT7CU2
vBA5Y1rBdGa95w2MJ1hR9rOxrw2up04lgXuFCwt8MThjyuBk1wnKoJvd9f1M
3HBGUXfALFPG4Je5P2M8aUkm9szxLDCqlE0Pp5s8Anfb03nW227K41S7G/h6
D5fHab52lPOgj/Opn/PlSPud5rLs72vkNfjSAc77M+ymPM60mzIYZDc4WTD7
YPnBqMIVAH6/keMgXvZmb/Va7fteG/7Ha8OsTeMGVwS+CPwTuErwlGCOwPNO
Jw8ygTMGb3xfSeCF0YdlApfA/nr20sNpA85+njFf7DEAT5/g3AgLvg08BLgI
MKVgS//DOnk/Avd08H1wBoBRnulnd3Uc/2EwSgLzzLU6Ss9U6UMUzwHgDWTv
lwluhymya2cCqwyGGewy/AngvsF0g20G9w7WuRZ7c6XrZoKf4S7izgQnBNwQ
d5YEPvpe6nUmOBnuIT8ywTUxSfaBmeCXIOxBmcBJz3ZawUmDlyatnZ0H4EHA
+Q33+59oP7Ah7JUGBw62GG4CMCVgSxJeg4TnYLLDkfd3+doQ35dg+NBgVZZ5
vzf7vnkGmINpfuZ9dpOuGXaPdNnOcPrAn7B/BKwgmJUEO4hOMIijXd7s/2Yf
OPwM4BDBJMKZ0NzvA+cCXBHn2t3SacXdyXlAvtzlfdfsv4abYpHLD5wj+Eo4
GcBagrmEq4E95ewthyMC/g24JmZ6bzgcEbjZR85+cjDa4Ii5F2zkcU4X4eC+
eNzPg+9isd3waTxhN98/PAXXuL240nUq4TJIuA2uczi++zG+1sv3Jfh+9FUl
VVj9Mf7OJ/iZcHfcIr1XJr7tG0uquEDQCe5/nO8/pBC8BPAJNCgEzwAcBXAN
YB8p/XJJYGbB1sJXACYRbOIbJYF5Bev6nGRtSVxra1wt+McWxk6CowQ/iX1i
Jtqpm51n7YyRBId7vHG4YG9PLAS2F6zuqyWB58XduRAYW7C9r/v5uDsWIo1g
eNsbw9szE/VjmuvlQD+TcuvhvLzSeQ9/RMJ1gU44MNBwb8BhQruxv+I8uBA8
DHA7XO3rcKtc7nbifseN3zznN21JwjmBXuDyQye8FI84HVf6PtodeFdu5fmZ
4NagnYWHgf8VbR9u+jqX2Q1PDfw08CfsVAhOmB0zwY0AbwP8MPAbwNMCt0x3
18eEzwNNW5hwu1CH+O8RJ+0ce87hk4H/gX/qKD/7ZN+HG34HeB7g9+CfjE3b
BjfFfzoTnA/EB8fOipLAUlOfznU7RFvWozRwS+CXkvwi/95z3pLvb5ZE+0me
N3Xb28Bx0vbTrr7vcqRcV/k+3O86n4mrkdt22urGbrdpw992mVIW71hzz1t+
JtdeKYk2m7b7GP8X6unelX4+6aOu8k/kPwXGA6wHvEBgnZu7XQEHAh4EHhi4
DuCQgUsGjgW4ZeCYAbtCOwVfENhquIPgGgIrDe/QOH+bM/z+/IN5bodM4IMa
pgMHxPo8+9GZ42MPAfN87LM+thDvwT/9cdcBvhnaM75Z2prF9sPdSeFfkm6X
ifLj2eQ9bcbLzhu+ZXR7hekg+wXZrTNR5oQln/60pjw3WZPHm60ph7+sKYe/
rSnDLdbUi63WlDNtxWvSx2einXjd6aMtoU3hGnhrvjvqF9/1xJJoP/le+W6T
vsAN/haOdp+B//4i+5FHh7jt5Tvd1f8tyrWBv9995H9kIfoJ9DfgPXrYz/7A
dRP3YW5n6KfQV6DP0DgTfQX6DE35HynMbSXRFsH5Qz0BTwQvELgn8E/wYMBN
BEcReQJGHYw7GHVw77jJc7DzcBtQduDjwcWT/2DUuQY2Ht4H7oH3AZ4O3ODf
4e+A24NyJA7uh7+jtsOBZ69jN5j0unaX+z7clC84fZ5HmcIBAGafMiW9uCl3
/AgHrpM24UH/z8EvXu3/MThX8K3gQPGHVwEsKphQuA7AuoIje8z1gXeFCwCs
Gpg18LDwTYGTBZda3/0Y+i9wkpxiN9xK9AXgS4BvanxpYFfpU4BpHe8+BGmZ
4P7CrU5fwmlCfPy3eP5ufk/6uMe7nDraTZ7CfwGHAdxQ9IHAoiVcGG1Kqzgm
OrqcTrQ74Zw6yeVKHK1cfp0djnLqYjfl1NXuOr6vq+tBOz8v4VZo73I63u6E
f4FwvQrB2wBXQ49C8DbA49G9EJwe8D/A4QKXC5wGcCzA5QKnC/wb8EXA+QCv
C/6DMsHpQT7B/QCPB+0m3BH1XD68J1xXcF5dmgm+hYNdR+H32Kk0OCjoI8A7
gZv+BN8qcSXtDt8Ee+TKXH/hUCh3/a1h7A97ocGPgTcCdwTeDcw4+PNtvNf6
lmwV/p9rd8t9I/vfdX2G7PHslwe3wb5/2XsWA3NHHGDh78gGdh4M/Z3ZwLOD
a781Gxh2sOxTZN8ge9di8BWAkQcLP8pxgF+vZgwyuHtwfGDoCQcumHV01t7B
E7M2z5o8e3dZUwfjDLb5PYcD/8z4kH29c30fa/Jgmtl3zLo9e4kZN36RiT4+
18Bag/lqoWcemg3sGHgx8H2zCrHnnP3n4Eo/Ko29yNW95xzc9GV+D3gA4KmA
3wD+A/gewO9P9nVwFiuc1+BBwIfADwAeBGzIgcYUgIOoZUwEmIL7HRaMxkHG
QIE7eC4b5cje+dm+zjOWZwM7AIbgpWzgDsAfvJYNfAE4gxXZwCA0dJmAXyAd
jxhTAE/CfOMC5hojsJiyzwZvA3wOcGvA9QCHA3waI50HYM3hg4AXAs4NsHLw
PZAvYOjucr4kWHfWOROuCq6BFYVbAq4DsIpT7QYHOs1uMKTT7QZDep/dI/x8
3AnnBfGCKf/CdQjMN/vH2YsBP8AvtHOZ2LcBjhJcJfs52L/Onnr2cIDLTLgB
0IRjPwdYT64lXAAJNwAa3CbzFuBACcd+evbZs7+effZ17WZffj27K/xM3HBc
wHWxczb2pRMf2E72mxzi9LFXhb347MEHw9iY9Ei/ZuwquNRXZB9ZFvwDO7hd
2D4b/AjgTMGIUsfTfj57UsAcgoEvcXrBAWT9HJ7N/pXD/GywrGBa3y0EnvRY
3isbuEuwpXWl95FsRx1VmN2zgV8AxwDehOeAS53p7+M/PFVp5CPvzZ579uKz
B3+W6wvX4YLgHTZmYmz/hsPeUYj2Am6BW2U/VhqcA+D+wf+DlZgn/+9LA/sA
F8BaXwMbAHcEWAH4JdZJ/5IJjoCvXW/mFGKPDliDJa5H1K3X3EaAQWc8MM/t
EH2BB+zmX8s91EfmMF4qDSwBmIIXaFsyMa6ArwDugjsLkW64C/g3P+X6m/Av
vOb3/sN5NN1+YBISLg/uWe62Eq4J+BxoK19wHwQbroWZzlfim+jnkFYwDuTL
J/Q5jRt6OBs8PGCJwBTRxoFPAqf0kPuL77vvSP/1Q49D3nZf+WH7fVBSNW7h
2hclMXcHJxp9V7iBPi2p4jRkno+x6Wr/A+kDf2L3Avt95P7wp772uO8jrnnu
h/O8B90Hpy8+3+nF/YD9CHeC26AEvz6srAoTjKbdgl8ITiHwwvxv4SUC79vR
bRb33+/35h8Opp1/Bu1lZ7dZtGHwDcLpCtfrKP+XqO/MS83xv6qT2z7iTfDz
uLs4PuICHz/Kz5jtZzJuOcp76VtmqsYzG/9v3LL5/8Ytfzkv/vm/8Qp6S0nV
mGeT8+xfh0t4Zv91vtP/pl9COdDXwU0Z0L/ETTnRf0k4VtHcn4yXSAe8lPBK
wS8FtyS8UvBLwV0JrxT8UoxH4KiErxKeSuxjMjG2ZOzGeAruyuc8TjmiEPyZ
cFc29FgPfMEs5xP3NDLWgDFgk0KME9tmYgzNOBE341DGaIwZmWNmrIabsRw2
49kZfj7jusYeh4JfmJuJOdArC8FpRZ0BD97edeoCt61wFyT8AWj4AsDy9y4L
ToM1heBKgu8Inhm4j+AuOC4bvATwE7TIxr8APoM2so+R/W0h+AfgQmgi3TYb
uHjw8WDgwcL/yJqG7KayfyoEn9WZ1NlstNnwJJAOuJXgUxotfW02eJauzAbv
E/xL8HEtMi4SDih4osAnglOc4fYePC1cUrQlYBbBTNK2wB9FX2G52xc4vuDa
6paNvsILvsZ/HqwueF76Ci/bTV/hFbvpK7xqN32F1+xOOL9w3+04iLedy4F+
HH2C9vZLOBdwD1Y6Tpfeqvy5VPYZsrN6j3OywWcFr9WZ2SgXuKnOykZ5wXE1
XPZA2WlwfrIHyC6XfYHs/rJLi8ENAEcAfSi4y+A065Wt4r/gO4fDgn48ffzz
ssHfBY8XZXulr8ERhg3XRDeHHV1WxZdBv3t/t1kJjwWaNu8It2twStAHIU3w
FyScFLjp43Ty/fv6vv94FcqineIaPGnwoXWV3lAI7jV4zwZmoy7BvQFfB3xo
8JvB03Uz7Vg2+NzgduvhPlFnx8s6DWsGV+m+D/gG5PdeNvY5s6/5HOmdspGO
FwuBFwL/AQ5kZ8f1UiFwKPiDDwKfAiYFnM4B/hbeLgSOaOeKwK5s737UC/L/
OxP9pAWFwLmAfQGLBHYWfA14mw8UZjn/fIV5X/bzsu+WvUr2Mtl3MXbMRj+N
/tqH7g/cWzDOvyJwPuuMM/pOenUm8IxTC/Fv5h89rRBzZKSBObPd/e3TH9xT
dkO+t0IVHg+cD5hs0sgzSrKxD5n9yP9moi/IPuVK+e8ke5nsrZnovz4q+59M
9F8fIw8VZhvZTxVifzV9vCWy/yoGJguc1JZM9IMXFmK/Nfuulxeif0j7s7IQ
/Vf6sW8VYs6P92CvH/u22b/9vPz3dju2ohBzhMwVVvd+QMLiTvCHCR4RTXmA
/wPTBDbq32LgqjYpbZuKgecC21XH/dj3CoF/BPP4lPRBbg/fKQRGElzks7ng
XkhVBMbnGWMVn5Bem4k94rN5l0z0G+k/DvbYeUuhCncHDm+ox9H/FKINYRz9
VyFwd+D3wOHRhsBDuIl/o+L8mP5goQrXd9v/4fpwg3EE6wjOEiwjmMYE73in
n/1tJsYAjHfhnAAnBF7ox0z0k+kvv+u+8mTZ72WCf2uK7Lfdt6avmjY2Dcxa
ufFr4M5KjUEDv/aFx+DTFf7NTPTV6bPDaUEdB/+2tRj4OHB8GeOnwLt9o/Cr
FX5GIfrl9M/ny/5Z9o/0Y2X/JPsH+tyF4NEgPjBQGz1eeKQQ4z3GfQ8Xgl8D
nBTvDPcGYXH/rjA/K8xDvJfyfFvl+dOyCx7vLC0EjpR6R32ChwA+ArgK4B6A
gyDhwEAnfAZoznGB26RGeZztApcB98Ft0LMY53dUyr9HMc7dyOeC84DrcCQc
kAuumDa54DvAD/4DcOt8Dwn/Cpr6DlYd3C3fPVwIcCKQ1qd9nWtgR8GUgiUF
i0dbl84HhwJx8z5gS8H1g+/vJbvIt5cLThXOrOGsllq54KYYWqzi40j4OdBw
LcBrwfkjnDkCrwXnIHAWCTwL8C/Au3C/5xz2KVZxeRDXXM9L7FsMDgfOK+Es
nqXeC0wbsD4b5+mcwHNycc4O5+3AA8OZKZydcqHsLG1fLvhkOGeHM3cGmkMD
Pg2uEaY8F3wQpJ30wQlBGsnHvXNx/g7n8IxwnmyXC94A8jvhR0HTDj3nNFJO
cO/A2QJ/CxhhvoGE4wed8PegqafwrsD3As7622JwvIC/XlsM/PW7ucAOf+a4
PpT/m+WBH19TDHz0SpcdPDxfZoML6MPy4I3JeJz+jOp2Vvb2sp8tBJYGTM1z
heAcIi0fud7QjvIvubEY3CF1jIcFS/t1LjC24G3BX39rvO0XucARg3kHE0+d
h29njZ7zZzbKq3MxsLpgaT8B352L83FOkf+nufgfrzbWG1wt+FrKAs7Yc1zu
fCNDmAcrj/CEA3f/g+vKTPNRwEHxVTHw7G/lAp8OphhsMRhzsMNgiMFif57k
r/Hyr8v/r2yc0dO1yEa7OLenezG+X/iF4L56wuWf8CetcVxbs3HWz8nFwLXT
R+HZcI3AOUL9BlMOtpz8gssCDhy4cLrr+xwMLkFt5MnG6x0j++hszC19pPI6
JhvzSatlN8rG/NInsm/MB05toMI3zMb808fy3yMfeNgd5H9UNuZ/PiwE1yrz
QB/IbpyN+adPWVPKB/ZkkMJfK/sZ2afKvl72c7L7yN5N9l70SWR/XYg+M1yv
Y+W/TP6ny/+qfOCKesuemA9sy5myx+UDW9cfLG8+sLc7gdnNB1Z3F9kH5AOf
u4fsN4vBZwU3USEfOOJ8ZXB0wHkFz1U2H1jjnPy3zwdeuFJ2tXxgjQvgYPKB
KS7KXlEMvqNZuvfAfGB+95L/GNlLZfetDJ6HR8qDUwvsPt8h3/Qu+cAg1wDP
mo5z18Ac7JcPfHHNyiqcP/fsJP89+KdUBk8A3z/fHFiVE9KBV7nBcSecAY86
3LJi8DvB9XQd+0oVz2mK59Z8YILOkj08H1i/rrIvkT1F9kmV0S+kfwjf3Tnu
P3eojL7Wtu6bjcgHNqeb/PvkA8vZrDL6avTZ4FUbmQ/MTnew1G5D6D8f4DaE
vtMFCnOHwnRUmO8KMd6Bc7hfLrhQrpPurTBDFaYp+FH2OsvuBEZW9p2yO4Ml
lX277BNkD5F9q+zjZdd2f3WV+73buK/YKx/42SbwT+YD09pY9tR8YHoulH1P
PjA+F4BDygfG6HzZd8j+QeHPlT0tH5ipiyqD3/KodPBqwmN5dDq4Lm/PB070
nMrg3jwyHZyWrdwP/4Y10nzgtM6W/5eFGDPCe9wvH5jZVpXB38cc7ftcl/8F
8m8u/0n5wBEPkX1GPvCz7SoDSwquC3zXgHxgbFvLf0o+MFNDZV+eD8xfL9lt
ZHeQfajs5cXgBIMf7Lh8YLHrVcYcwSn+3vn2u7sNaeTx5Gq3Mye7DXm0GHw4
o3PBNwL/Cdw4s4rBFwT/Tw+P6X4rRPtzktsr2q6ubnNof7q4zYGjhO8k4SxB
8x2wZtPC+TMiG+tWmWLMOzdzHYAbBc6UhCtlvOOCH2NMeXCznO5viW/uMo89
c3xPxeA7uigX3CoTHFcvj8d/LwSv2VTX24uzsY5WVgz+H/zhVIMbbZrsMbkY
8zL+3eD5AbjEN8q+MBvrZSXF4D6DAw2+oITDhfTBCwTvGfxn8KZMdJoeKQbv
0Ej5X5KNNbsK1neKwcs0PBccHowhGA8sNPcIPEXzi8GJdGku5nGYz8kXg58N
TrYJuZjTYW6nIP+Jct9HHuZirok5jTWea6IOU5fhbYG/BR65Q/KB79+vMjhe
+B/D2wY/Czwt8Lk1ywfnQB3+O7Jbyt6/MvhbXqGNk26YDz6BAyrjfwj3C/9M
eGTgk4FXBy4Y/OGLo5ye8P/2xWJw3MF31zIf3AIHV0ZdWOz2l7yk30Z/7dVi
cN9N4z2KwVl3L2PBYvDg3ZcLTr9Zsm+X7qo4z1GcDSuDxwnOOrjrmsq/jfwP
kn9j2a1l16qMeRDmQ34pxBiM/mvCL4WmL89Yjn48/fRunvv6VeE7ea5pXSHG
eM863JJccN3Av9fZ83U/F2LMR/7Q92nlOSv+wyd4DuqHQtSJp/z+Nyv9DaQP
ycUYcZnTN8F5Q56uZH+Jxke36d4Onr/6XnY7z1995/nGfm7rbvV78AzGtIxt
4dKHjw1eNvr3Fe7jlbh/ThrgmruoGPxycM6B7wVjCtYUHC0YTbCaYHfxA5t6
t9tt2m/GVZwJyXmLYHy5DlaUczY5q5FzHjln8+jyOLeRdhMMKPGC+wT/CYYY
jCZYTXCcCeYTDOjFxeC7a5CrwnmC+wRrC+YWzC8YUPyIi7Ef50lyrmQnuVun
Ax9MfwdML7hQxhFw98G/l+B7q/n/3859AHBz9CM4i4RnEcdv/LMdH89t775G
rVT4tXaYzo6LPsWJ7FFPV2Ff2/jdwaHW8XsSR0s/C1wr2Fpwrvx/yHuww/zH
wA4n+GM06QZ/W9/3cKYnZ2selYvxZ3OXzSXF4Bs8LBfY17p+Nv9g/sXgkds4
nWBzU857ygN8MeUDthsOFLhB4OiA/wS+DXg34CSBewQ+GcamjHXhS2Jczhmd
nA0KjwkcGvBsMNZt4mv1zEkCFwq8J/0dDk6UAXbDjTLQ7oTPhXQkfC646zld
pInxdFM/Ax4OeC3gAUk4OBJOjj6+BucG8cPZcrTTSLg6fj+4Shq5zaTtZD7g
WD8DfDk4c7Dp4MzBq+MGW44fWPMa7ifTXwZnjl+CO0eDIwcnTx4nuHk0cYEn
5zp1/Qr3K+hfbOt8pa7Dn9OxIrhZkrNgSR99DvoecLwcbL4XuF/gh4BPAJ6C
I83rAk8L/Dpws8DnUtvvjZv+OHwvPANuohMrgvvlZNdzlqZOcl0H5901Hd8e
3wp4dHDp9JsYCzEmusl9WPDncHow/oDj48eKKm4FOAoYk3ANHg+4APg2qL+k
nbYGnoLtPKZgbFHpcQfjj24eCxyYCi4Fxj6MgZgj4SxZzpTlbFZ4d+HUTXhA
KE+w8mDm4Qqhnw4nAxwNtKFw7SZnEbd1XJxZzDnFcPDSX+S7hc8EXgjKNeEU
2exngM2n7ClbOBdo+2jb4EJIuS2Eh6DE3yLpoA2ibeE94E+AKwI+iDXOC+rF
F3YnXBJwN+zud+U8XXgNSt2+rvIzt/pd1/sZlA9tNG3/SucHdTnhZeD+Ffaj
LsM98Lff8w378W7vOe6Eq2CLwy1yuVHG9zkveD68FSscB/8P+BEO9v+mgd07
un1q6v/Tob7GWTZwssGTxrgBzoXGbjeb2k07B7/AMekYizS2Gx437mWuD65X
+NPgVWPuqYXb0INS8U+obc0/guXULq5j/AeYr2rpe9o4nbTz/EsPc1rTfifa
a8YKh/sa/9Ij7E54qXo4nzK+j++Btp5vAD6S1S6ThJcEN+cOwxEHj/RDrk/U
rwUOS/knXCdcS7hOcNd0HeEdmBOBa5o6nXCI8Gy4RpmfPDcX/DWrXM5zXQ+o
7/Nc3rjn2I+6P99p4Z777Zfw3LzpujbD5U+deMBxE9csX6d+sC8LDuo6xSqu
roS7q5fz7i2F+VRhjikGPy//es5xpk9AX5+xCGdJ9y0P7j7yGs4iOIxoT/s7
HGdVw+8Hl2PCPwWv0TuK/zPF36hYdeY0Y5f3vEbWpBhnT8PNC0fvy9ng3D60
GHNXzOPBBQzfL9yGJ+SiLR/gZ/NfHGj3St37ie49uhj/G56TnDV9hsP1dLp4
h/HF4E48MRf/gbOcPv6p8AXB+cN/lH8A3EH898bb3d9+hOPfCF8Q/Cr8C8fa
fbrjwM2/EX4nOJ347462u8LvBw8ycdNO0Waf5vjgbYEDGf5DeAsnFIN3sUsu
/uWUA9xStxSD2/DkXPy/uQ+usISnDC6q24vBt3lKLurCtS6nbr5Omro6jfBP
vZ4NXvQjirGXD170g4uxt4a1BNYQ2G/Jvr6dyHPP5cKtzn5L9vjtUgxOYDjP
4UFn7fxH39+sGPzncKGz5s2cO/PZM7PBRbxXMfZwwjO8XTH2ebKfcIdirKmz
VpFwaaNZf9ji+txNYabLXsRcfzHW3X/1Pa/6OQnH9m++xvr9OqfvBceHG253
ON7hLoZLeW1Z8MDfk429i7sVY88j44eExxrNmgOc0nBWw5W9Lht7JuGPx+b8
9NbFKp5u7k+4vJnjh88Znm04t9kTCd8zc7HweKPhi/7Ldf4k5z97otgb9Ws2
9d/59e2LcZ473xLzwXDNk+dfeX6b8oX/PuETX+9yeVp6cTb2wW10mta7DsCR
T/xw3cN539Nzv8wBM0fGXBm8cMzDw1MKfylrU/QX6VeyJtrQbtZIj6mo4u6D
86+e18Cx4QGs5vvoh7KeTB+XPi/8gdhwObJuzP+Afm7CKYmbdTz6wfTHGfef
VRE8dHDQYcP7x3+LdU3mJLZ13KQJzjq46+ASrPTz6SMn3JQJV+Vhfl7R17mW
8GDy7IRPk373oZ5/YB6CdU36jvQlWfOrY3fCmYibuV36lPA9wt94YEVwXdJe
dPP4gfaju93kGWmGFw+eQ7gNG3juDc4i+Iv2MIckfJK7mGdyn3zMZTOnDf8k
/SDWZVkTZq6cOXO4K2uaixJeSvp08K+yllvu9yPdnLPAOgG8rDt67po57DYO
S7xwDNLfHeX5QniYcMO3R1+HfiXc2XBon5mLd4IjDu42ONxoK+H9Yz6Rd4PT
L+HX4x+b8Ovhpr1/0G7aNv6RMyuquPkSrj40/1u4sOHEHpgLPlhsOLO7eV6F
+ZUubiPh/jvOdYf/B/OevA/cifRvznXdYp6U+VL4BuHghou7Ty7GDyP83q3M
TwjHIHWIdpx2erTTxf+fNpv+ynzfN8P5Rf8Drl/ynfMv4BiHu5vzMuDuhm98
qOelmZ9u5bId7H7MYKeVuXLGG3BeMRfPnDxcfNf4meQj/LqkHz7wkc5L0sH/
kD4r4xL+XfSZEu6xh53uRzO6pg7h1YX4dxKWflnCtUf/a5z9cI/ye1NmCTcf
8Q5gbrE85jDhXqM//x9HXDb+QfDewwcHLxxrN7d4DeIsr+mwNsQ6EWce1SiN
s4dYL6S/cZD0MM/Pw3PJ3BPzP3VzsbbF2JZ1Ls7Q5SxdzktinY/1vn1zcc4u
WAzOVOJso21K4zwj1rn4BuEPq1GIc94rMzF/zvgOHkfWCFkrZF19nNc44CGD
V44xylDPnzNmYS2ANW7W+84vxroAXI5wOnJGElgSzgI9xXOVjb3+wlrY2V4X
YM2LdQTm/1k/Yo3grGKcfbmX4q6Wi3V/zh/p4TlD1iz43/Pf51wAzvDijCfO
FOPcLs7n4jwv/v30AThrgH82/27OC+jj+Xw4VuEAhQv0eK+h8B9hLeZUz8HC
/8r/m/845xTAH0r7zXoQ/13+v/d6/Y61JPgjOTMMnp/LlZYBxTiTYrdc8MDC
B8u6JOvirI9zJksvz4seWxmcsMzPMHe6TS72P3BGzA2K61I4VPKxTkGbCUcv
Z5BxRjBnBXM22CzZE+R3ZjHOudgjF+escS4VZ6tx/hpnUXHmGhymrPuc6LUk
/pushY30mgt8pee6fp6kctw1H5zPcD//lgtudjja/3Ufm/Xowa5vJxeCA5o9
WqwnwhkNd3T1yuCVZk2c9cSdZW+UvQ35nwl8MWexnpcJbDJn/7IeTD/1n2ys
K1Pf/pb9Sy7W9DfTH8nFHgDOe2G9nHXzzfQxcrGWDUd7p2LsT9iYjfNowShx
RhhnjYEz4pzbP3KxNwAO9SGZOAO3WyH2T7CP4g/duz4X693wxHdVmG9LAvdE
msFMgZ2CR5v1fdZP6QPRF/o9G+eXc475v4wrFU+uPM7cgYcUPtLeXi9mjY+1
VHhC+eewPnWd4+e85YaZOJsejDbrmKw/wil7rdPM+b2se7K22Mfrm7T/rFey
H4W5P85XYt2WNUTWnVnThGMWrlnWr1lPZM0UvlF4R1nLhiucPQysI8PrzZ6E
nPOKs3Q5U5e9C+xh4EwN6sP3JZGH1CWw59QNzu3lbDXOWKMPSl/0Z4XvkQk8
OLjwttQt+szyb5WPvgGc05yz+x+2vRCcvKz1s+75cy7OCOCsgFnue9MH5ywM
1m44V2eQ5wYeyceZHIyRnyvG2YEr5D83Hed+wVfzYjrOGoQ36QHZk3OxR4Kz
O+C7Z+zGmS+c+8X5X8vTwYlPn5NzXiblYh8R53twphXzrO1zcf4He4uWFuNc
Mc4Xe1n3XlsM7vfmuThfkHaMc8A5M4h1n0W5OFuwbirOGbyqGNzyx+bijD94
Njj7r7vn9HZJx/llnJ/IGWR35WLNkbNKOLeRLjpnOA5kXiMV5zNyZhlnJnJ+
GWcv3p+K8xM5k4yzyb5Px7mKc1JxPuNLuVhn5zyl3/PBV/NpOs4m4704H42z
0jgHjTPLypW+1uybZ75MdkvZf6TjbDPOONuUjvMV2E+4vhhnmHGW2SfpOGuB
/Ye/F+NMBOoeHPOchcA+w9/kN7YYPPytc3EuGuejfZmOs6Y4+4kzoDhLkjyZ
L/+v8sGPtDQd5y1RT1YV41wS1vVuzsWZTJzN9L78VuRi/YuzmzhrjTPX1uje
ZV7/+oCxWC7Wyzgz6pVcrCNzxtRruVh344wpzpDjLLnn0nGmJJycnFF4YTq4
ljlrknkT5k+WqaBmex2WvV7sd2TfI2cun+/6xpkMnEEwkv5eLtbuWaNnHZ+5
3lPSsWbAWZO69b9zMJkPY+6V9QzW/ZnTZR2fukMdYo1kajH6OfR3OEOTYdyc
fJxZQN/4LPmfl4v+P+dFsB+A+WG4ohkzM3a+PRvr8sxLw0fO2j3z2/Cac37n
G6QnHedDD/K66kiv2bH22s1tSOtCnPVInbw9HWc9zpZ9i+w703GWKOdgstbP
PDk86OwfgNscjvNnM8FDwzmYzCkw9uRsNc5oYK8Fey4454PzPv4oxhmmmVSc
bVqvGONNzlPjTC7qG2dxcBZqLhVnnnJ+Deva43Jx7iTnn3LmI+dCcl4qZ0Fe
7HaDczOuL8a5Dy1zMdZlzMsZ0JwXyZmqnCPJnP3Jnsdk7oPx74vZmDdb5Hkt
ypc5/WbpmLdi/upVXb8wF3NWnMvBnBTjdM6Y6+D2gXUw1gC4n3lQzk7ls+TM
Vq53dRtCGlgnY+2AOsNcKnP1M3Oxbs7ZHac4HtJwtMdcrE1z3iEcUGXSvTPB
GQJ3CGcYcw7pRNknZmOP8S/+/7LflX2vr2fiHFLOQN43Ezh6eE7479MP2ViM
80mbKMzIQvw7wKpwPgZnjMLPcEkh1qRnuZ2f5HaAtveHXPRJaGd+ykU/ZEMx
0gk+Bb4E+g/si2Z/9BuZOMOUdV76G+zjZT8v+4EneQ/wZLeH7D/iXFR4Hi7z
3uA7vGeY9WLOUOYsZeoKdYY1fdoa2hz2S7NHGuwbZ/b+6L3x7OOdJPvI0ji3
lO+c7509CewfBs/OWc3wDsA/cLjsKZk4U5XzSem3sP+cfejsq2B/Bedu/5qL
/d7s+96WPdm6t3omzkvlLNThhfh30I6xL6YW72JsEeefcnbqMO+TZB8yeyP5
ZpeB8fGaeGOvrdMud/GYmn3+8HtzntJehShfypmzKjmzkv0kLTKB1QKzxb+T
fyhz2jUzwW2ySybOY37I+6j5ljp77AzW4C5jB8AITDUugG+QfSDsB+EbYU8L
e1s4T/pe4wjO97+SfTotC9HHo693nvsA7JcEszDZ+IWT2QfuNopzlxd4Lzr7
0hd6nzZ7xe80xoEzOdhrd2BlnDnazPsZ9ilE3pLHlAFlAf/Vyx63cp4vZ3Vz
Zjdn9YKhmGI8BXvCOVea86XpK9BnYL8o3yl79ti7R1+ho8f+7Mnn7GnOoOZM
ULDe7EFir+p6/0+buRypS996nwN7+MFdbPC/mHPHOX+cfeDHZQJTBraMPYp8
y5zxgj9cHHByLJB9msfgL7oPz/5cMBdgT8FKsO+f/f+cR88+TOotZ9qAEwAv
wLnwYC44E42z0TjXmHN4ObO4Zj7qM+fScJYxZ/6Ooc1xv539qsfmYy8i56K8
4rHM6mKccdzWeLRFsvuWxlnJW4wvAOvBHkv283MuDeddveq99Gd5voi9QJyt
DCcV5x2zv5G2gvNn2NvDXFb9ymjfFroNZI/9S96H3zwf+07/O48lH+0P595s
9Z5/MCa0ReB5wfVytvIA2eMKsef/ee//Bwuw3LgAzokHNwxOZ7n7yfRV2GvF
nqtB2cCtgHFgb/8y/wfp8/ANwpMDX84Kj4/YQw0uBiwwZ4496z4bfafzPfaH
T4J91OAR2DvNuWVwBoAPAhvDXkTObgNTAE6BvdZgiOAWABfDOTesF7P3CawB
GARwN2BwwCyAf+GMabgyOIcaLGE7Y6Cot/C3wOMyKxNcGpxD3SQfe0prV8YZ
1nBycJ71mx4nsveZfa1gNzhfiLPNXjT2AS4XxlyMvTizB/wT+7iYU4LTjDOv
q2UDMw2WB7wVnHzgqjhPHa4+sFf/A917Ktc=
               "]], Polygon3DBox[CompressedData["
1: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
N7RNDqlcUvmFo5C75oMfKr9QfomcQ/me8mTlFsox7Mr1LywFt9LnK5dPvqh8
RvNJ52fBb2yfj2cgv1R+lNxkOco7ZZGz1f/1HvIX5bPMyMcY5DfeDfojd8wH
H7FPev9yUOW/dk1jcizdQPdScA3lHMp/lNMot1FOpfxY+ZG2yWmVzzmoFL9F
jme/LPiKcjH9DfJdfedyv8xbOhfkN65HWwdwRhb8crmGcqzkWsmXkxsoZ1A+
4GvI86vBGZQ/Zz7Svs65psYm0PfJB4dSLqX5GbnxctjkZ8vX9V34G+TmjisF
V1XO6shScNpcT+T0yteVD+e30zQffMwepZjr/ib5l/Ld/Db9DfIz5dcejn5e
XfCL5Xt2T89XLrF8327p+nKP5Qu6t8hplm+/QSm+Ib8d+Yzylb2WnGz5/DeX
gjsqh1T+7Ypi5J7MQck3l5MuN12+fykL/rq1DH7PHbPY76dqG4BX9e0qYevq
89xQiWPzamET2FfOiNwRc859zN3Q9nItbI5JCVM4d3gh2t6vhD06J/l776J/
UwibRH9PDoJcBDkRHcqRT5FLIadi/3LwPORayLmQ56F/NC3Z2/ov8j5sk8Nx
WDnsnXGF8CmnJX9PX0Of441a4PXkN92T/LWJyT/UN30PfFcIG0l/dVYlfDd9
uKeRH66ErzYv+ZeOYX7yuxzbsizGLmdQnoz+ob7iy8n//DkLroA5dXPrSyph
K9+f/F3tuYXJP9I/XVwJW3xm8n/NTzTn3O1Tvsf8xHb1ccx8hfFyuXjbpvyE
+Qrl7VL+4sNaxNi1IbUltSm1LfV59X21GbUdtTm1PY3jX5nyF+Yh1q8F10Qb
ybj/mEr4jnck/1W7cWktfOoFyd6ckN6/sYD3k936onZoJfJVO3CtFin/82YW
sQY5EpsbX6+ErzEj+fvyLeR6yZeRW7Qgi75yVuTjmA/z2eyQ8l+LsuBfyMmQ
GyMvRy6Gx7YtR/7Je8s5kXviM9eP1qb2XRhP8F3rsy91vJWILRhj+LQSnL27
kn9o7Ohn1qKfqpHjNNf5bDFyw+aIzY/uW4q9xxoO6xOsB7LWRpvSepw8el0p
aoysr7GeSK5vp5Q/Nj+srA0nf/mvlC/WRpK/bL2H3A9tJPn71tPI5T8t5YP/
TPlrbTT5zN7LtUEb03uas3b90Aa1fsiaGmtrXMOsD7B+Zuu0Hsv3sD7GXLjX
LGSB+ixqZmz7vBi5bMdovvzdlC92TNb3WK+zTV3UEMmffS/l0/0N1quYf5er
LH9Fo8Z6H2sVzP+uzEVnURfxQcrV75H276/qol7L+hm5KXJUKlnUu3gtbQ7r
sczHy+2W4y3fW8iT+T3l6r9M+fw/U35czoHcA2uOzH+bj16R+AZyCf6T1tu/
U77d/PTyxD+Qj2AO21y2NT1/Jj7Du4mfLHdZPoO5dJ+R+XPjX377lyZ/3/iY
a8Xo5K9Zf2Rt0V8pX++csxbMmjDn4lLweTU493Lv30r3X5j4EIvS+H2n1kMt
Tvl934n1Uz4jeUTWofjs3km/x2dqPZLXfC0XNUfeq2Mpam+swbH+Rz6BY1uQ
+AlyDuQe+I6sDzO//0/iW8jHkK/wd+IzyL/YuxS1RHIQ5CLII5F7bU7TPJz5
pdXpt5t+SWPwieVKy0mUmyjf0pj80JR7lZNmDNrYs/zLo2oR8zHWI7e1rhY8
SDlzcufkzBnDN3Y/JOVzjZkbKz+/HHwjuUhyksz/FivBnf005QOXpFyhOWxz
2XIc5DrI4ZHLY07T3KacRPnT1gP+nvgg8uuPzGIu+8z6lYJ/b5vz0Vqzo7Jo
k5/Rn/ZL9Qm03cCsUvB6D6oFB0gukHy21vWxh8vXM3/5aXqeU1M+2NywOeKe
KV9srtmcs/wv+Utyh65L+WnrX6w90+ewFkO+llwe88+daoH9a8Hhsk2+lLl9
87Pm2w81RlcLDohckOVZ5FTMpchNlY/1Nn3/qg/+gZxK13DX7u3KwY/rl/ZT
+aXyXc2FyymQP2i+3Fy6OfVu5civO3Zz9McjX8a1Tkr+wVOl4JzJPTNvLJdE
PpdcJDlJ8hHkl5ob37c++KvyH32W5u/li/ob5JLJKfO3yUmTm/Z1ffAl5EA5
h5275pLl23ZI+9Nq5Yif6bBt0xDxD+NHxkqMmTRWI99t7skclPmolilfZkyj
muIjeyKvleJ/xkfaIa+R4ns7pPzc2ikeaIzKWNX2jcFNMb/ZpyHOMZ5iPu/k
hrim8Rbz1fvzrDrloz51FcbTWAnOjHwXa0wOT/6h9VfN0LdK+WHzhcZ3/G2H
pXxqm2rExoyRNalG/s98d/sUn+lSjVxghxQvuoj775ePMZgvvzCLWiqP3YM+
WPsReTcwEb1NLXhycs7knskR1mbUVuxSDv6rNqa2pVziY1KM2NhwrhKcTu01
OdHyy+VQy6WeWh98C79puUHGj/3W5Tc7N+T0yjeXL6p9K+dWfuagLPw5/Qtr
477KwmbUVpRfLOfL/VLOmNwxn61cbmPaPuOzad8lH79xQiliYsbGjLkZezPm
ZuzNmJuxt11qwbOTwyeXr22KT9fAebXgiJ/7/+LWleDzyN2RwyNX03q7lile
Yq3zJVn4R64xjxkfKEctgzUN8ifkT/styGmRLyIHWy62HE35JNYUGc+whvH8
YvCJ/DaaFIL/IYdILoj5V/lJy9J4zNfKdzqlHFwNORvyT+TDy+WS0yU/aqPa
/+eh3FEO39DaQWsI9RGb1sKG1XaVu2IN4rAUX7myGHx9a0/Myct1HZmFf9XT
mGcp+K1yr+RgdasFn0kuit9k73RvY4jGDh3DI+XgeroGydeRf2JthzUe29eC
f+RaaL5Xfoz1k9ZWWs9ofZL1j9Z2esx6Sn+jvB55k/52OVpytazh+C1B7ooc
Ftvk6/isrBmR/yrHR36PnC35t/Jn5XJ5TO6PvvXK2s1c+NjWSzkWayytt7Z+
QO6PHCD5SnJ89BH0DeQqyVEyZmqs9N5y8JP8VlzD5dPKJ3JuuAfIl5Vf5tq+
WSH4QNZ3H5fif9Yeygdz7ZXTKp9HvpT3dk2WX2ssybEOz0VMaUE11Ybnonbs
rSx8Cn2JLdKaLldHzo5rvfVWj6T8hLVN1vTInZADLj/ddyq3SM6a79oaIfkS
8hHki1svJbfHnIK1S9Zv1iINsbL23Zovcwty2K0HsoZCrog1X/LXrceSu27N
mLVj2hDyxmYm28L6VrlufoPWu1p/2yLx36x3/aAc3CY5TvKhralulosaROuR
rak2Xtc8F/XCR2dhK2hPDShFPXHzFB/sV4x6YmtxvIf1veYjDshHjay1svKZ
jbXJuZd7Lx8vLZUr+amPpvkuB3wvH0Q5uOLaHPLnrWmwtuHffNS3+A00rwUn
y2/DGgh9O2usrK+xHsa+C/NRPyD/298qZ3xEOep15AcYP7C2Qr6sYzEVZG28
NQXmjybmox7NegSvZczO+jBrNPPxSlbWF1lvVB9Lysr6I+ufjUXKD5I7b71S
MdyklfVT1lOV4meu5CP+WA7bRw6e/DRr+qztM+Zm/Zg1n8ZjvYb1TltWgxsj
R6aNuZJqcGsOSXwZc1DmolqkvNLiFC9YkfJzrk/yv+SEyS07Wf8FeXVjfsau
6F+tBAdULqj2odywy9L6PSqLWOXotL5tUwnutxyaK+jfh3sPTvyi4xqDoyFX
Q46oXFE5LHJZ5M3JJZXjJNdJjpFcI4/JrZFjY99FKZ6xPOUP5dfKTZGjcmUt
6iOf4l5PguHVqGe0VsOaDesbu6f6DfNvI6tR32gtoH2sdxxYDa6anLWjq1F/
Z/2gfax/1N6Ty2QO6wl+b79qcOtOTXwj67l2MQ9QjHo76++U2xajnku+2zly
S1P+8UL0x5GvSnw4+VhzG+JvOPi3HORLdU75yk6NUR/mtdqAO2i7FVSRP0t8
sNV4Hk0qsSe7N8s/01Y6FxzIuX0Zf5N8vONR7r/VyH+enPhWxryNfY9N9qw+
kb7RrsWoD5QDKBdwz8bg1vsO3Sus0fbddqoGd08OX8fG4Pv52/okvpv1hl7L
Z2S9mzX1xj6tSR9biriJ8RpzxOYk5bPIfTEGJv/myErk/M31318LnlCP5N/K
S5Fv1DP5t/Jj5BDZxzb5Kdbv+LdZvmyI+iM5X3K/5uhT1YLfJDdATov8mIZk
n8nhPqsW9pd7uXu6sdNmleAyWeOYRz4zi9iuNfrW6mtvys0ckOxL7U1lY+bG
zr23sU5jno5BzozcGWOmxk6tl3KscviuqQYPx1irMVfjpnJyPKZsvNRzjW0a
45yX7D1tLW0uY9NXVCLWZsxN7tHyctRmWrNh7UbvxsjVvtgQ9Y190V9uiDlp
veSJjcEvtGbV+sgTUv2q34j1qVdmwZU052HuwxyDuQZzMpNLwdfVVpPTIT/u
qizWVs95thT8NLkjxlTlY5lz0bfSx7qtFPx1bTk5HcNqwVvrluKz8pbkZfer
RV2Otazy2exjm9wm/z6Ovod7kvlx+WVyS8xhy39yrZN7Lwd/5ZqXhS98QrKX
5VPJVTEmKT9MvptcFWPG8sHknMk9k0ct9/7I9L2ZAzMX5jFtTTkz9pVfoS9l
jNtYt/Ux4xN/81x9qSzO9RojOL/k/gE+MvZaCVnfTY6Sx45L9a0TwLBq1C/I
N3CNcq2y3sbaVmtch1SD76GvZ8za2LWcB7kP5sGbNka9h/kta3ys39isMfLr
+mTbVINv6lyRL98/cUOsVbBmQY6I/G1tUzk+8hPlOlj7YB85D/Kttc3kDMlX
lAtgbYM1DnICrDfQlpdDJN/Seov2KX+vL2r9kvXqrtmu3cbD5X65Scof8e+B
3JuLv5Hg36uQn+Le52/wt8gHd6+VQyMf05y/uX85HHI5dm+M2ihrpKz38u9f
eK0puaid8W8stEv5qdtLUe9lrZU1V9Z3aUjoO5uzMHexa2PsLfqk+qZyq619
sgaqW9r3rPe25l6Ordxf35XH3Bc7N0abv9l6Leu9rm2INdy1fOUe0RB7bu9q
+PhyT+W46/u7Jrs2W4PVqxp7gnuDe5L1QNZzmdv3b0S0LwXfXttaTpb8UfcW
fT99QPeY3ln4ovqk5hr7Jv95lzRfXbNcu9yT5btY713juWXFqO/W3tgt+aPu
R+dXY+66BvVOXBDrt6yX0y+V/+xeN6sh+DpDq/GtuCa5Nrmnu7c75+WbawNo
C/iM5L/LR/FvI63F/Qc3xh7qXuqY5Edr366e9kfjYa5n/m2Xs9P6dFSyj/we
jadZP7Im565RjHoR60eUjSlaL+J+YG7UHKK5RO/pvT3HehPr3X0W7uHu5a6H
3su/geDfQrgixdP0p7eoxd9b8LdrM2g7aPNp+7nn7l8NfpO2hWu2a7ecFbkr
fndyjbZsjNpFYyZtkp/vs7UmUY6NHBy/u9UT78UcqrnU9ml/tkZuXi7+Zsbs
YtSfvZXis9aCybWx1s53ZlxBTpPfueuC3DH/HpN/m8dzrFczp+u34zc0huv/
H5FyEL8=
               "]], Polygon3DBox[CompressedData["
1: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
               "]]},
             Annotation[#, "Charting`Private`Tag$17992#1"]& ]],
           Lighting->{{"Ambient", 
              RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
             "Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              ImageScaled[{0, 2, 2}]}, {"Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              ImageScaled[{2, 2, 2}]}, {"Directional", 
              RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
              ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
         {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJwl0jlMVVEQBuBB4QmICuLy2N9jE1QElFVRwRACQsGmQkKhhEIb0Q467DQ2
0mEHHXTQYacddNppJ5120GnHd0PxZeYmJzln/jvZ+cXJ1zkRscOTVETST6iP
aE56lvnoe0Pd54gyBwd4xSpfOKDglPNnItrVWd6xxQ/+kz0dMcJbPvONv5Tk
RvTygg/s8IucPO9ggmU22OeIIW96RhlTjFJOBZVUUU0NGbLUUkc9DTRyjaZk
Xq5zg5u0cItW2mjnNnfooJMuuumhl7vco4/7POAhw8zQzzRjpDk0xx7rLDFO
E8FP82/znuf0UMwfeX1ljTcMk+GffL+zyQoztJHPb/9ml0+8pJ80h67aY50l
xhn0rqdJJvpJ9XGSkb6RBuqpo5YsGWqopopKKihP9oQ0V7nCZS5RykVKKOYC
5zlHEQvuPKsWUkA+1ipSJ9HEnEYUYewwXoykTvb3GDZsO2U=
           "]]}, 
         {GrayLevel[0.2], 
          Line3DBox[{1628, 2728, 1627, 2727, 1625, 2726, 1626, 2736, 1640, 
           2735, 1641, 2746, 1657, 2756, 1675}], Line3DBox[CompressedData["
1:eJwV0UlsjHEcx+FfL7RMT2hJJCISB8TFVi0Sbto6cFSJUdpyabWWmUo6XW5E
p3XS2lqq6CZORJvY6b2XqS5cSSrhYDvx9PDJM9/3nbzJ+3/XVzccqc+LiEmd
WhJRo8fLImpZp5TSuqwrmnJvgOOa0IKd43f9UGJ5RMHSiLVcx63cxgpV6rCd
ZJIpZtXodxe7NaiM/YCtfMg2PmI7h9jBYY7ohTrtl4vP4iu+1oz67Fn2c47z
+qkn9i/+1or8iHf2Sq7Sdu1QUieUSHg+n2tc++0vPM6igogWlrKHVXzKdk5x
iAvMMb8w4h83cJMzK2EFy1nLg6zjUbYsnj+vsoadbOB11rOHF9jP8+zjOd5m
E+/wEgfZzPtMc4Ap3uNF3uUt3VSjfYNn2csuZdWmVlW5nuEZndYhVWqLNitP
oWnv+M07j3BYHXpmH2Mvy5hhMZP86iwPcIIbmWUhT7Ja+7RX877RHs6xjLMs
5Qx38yNLOM1dzHEn12i1PtjFfM8i/vXt/+izPumt3mhMo7qmJv9Ns1n/AbvJ
bwo=
           "]], Line3DBox[CompressedData["
1:eJwl0c8rw2EAx/HHZbTlTyD+ACm5c1ZK7sy2GzIlO0zOHOYicZ6G/Mw2DrLd
cKVITowDLlKObPJaDu9efXq+l+f7dCfTozMtIYS0dqMhjEdCKHOaJU6yyClW
mOU5F3jJHG9ZYI0VPrHKDz6wwS+2x0KItobQwS72sp+DHGZCqaZ2lqta05GO
daEr1ZT3zTNf9K2i/cMS6yyzwRP+8pRv3OIrt/nOHd5wndfcYJU5FrjIFaaZ
4ywzjDPOEQ5xgH3sYWfzjmpTzP5097p/cM87nenR3mRey1pSRvPNc2dzTCmp
QzvBA05wn3HucSzy/25/ZlxGig==
           "]], Line3DBox[CompressedData["
1:eJwl0CtLw1EYwOHXssEGfoGBsGxZMRpspgU/wISB0f9UtLjZhmV4AS9RZBOr
IN6CzqQTUcPQYPRWV4yC+Pwx/Hh4OYcD7ylWa1PJUERM6yQXkWQiumzwiivs
cY23XOczD/nOLt94zQFf+ctvDucj8tmIERZZ4hgnWGZVM6nmOre0qyMd60Yb
znrc5B3v9aG2+ZMdfvGAj+kbfOA2n7jDS7bY4TLbbLDFhEussMIyJznOEkdZ
YIFZ5jiw248dX9jXhc60rz2tqqlFLaTn7s7znHPpXdZ4ytnM/7//AQceOtY=

           "]], Line3DBox[CompressedData["
1:eJwl0CtIA1AUgOFjcOIUzIIgLluWbAabIAwGNld02DbLiojPTcQVnSAYBDWI
WRwMNexhcVgE0WI0i8W04j4w/Hycwy3nTi2vZYsDEbGoZjJiOxHR5RGfecwP
XvOdN/xiiz/85B9/OTYSMToUMckU05zhHDPMa1Ur5k2e6ky3KtvdscI6G+qq
Zn7hCR94wHse8pFVXnGdl9xglQWWmGOOC1xihvOcZZrTnOC4BjVs/nZLz01v
fFVDdV3oXPsq68mbPXa4yzZ32OJW4v8/+2z9MwE=
           "]], 
          Line3DBox[{2762, 1682, 2776, 1704, 2775, 1705, 2788, 1730, 2801, 
           1754, 2800, 1756, 2816, 1781, 2832, 1805, 2848, 1827, 1846, 1848, 
           2883, 1873, 2898, 1895, 1916, 1919, 1943, 2931, 1945, 1947, 1973, 
           2949, 1974, 2950, 1976, 2952, 1951, 2934, 1950, 2936, 1929, 2922, 
           1928, 2924, 1907, 2907, 1882, 2890, 1881, 2893, 1863, 2876, 1839, 
           2858, 1818, 2842, 1798, 1795, 1771, 2809, 1745, 1742, 1717, 1714, 
           1693, 1690, 2769, 1688, 2767, 1686, 2765, 1683, 2763, 1681, 2762}],
           Line3DBox[{2764, 1685, 2778, 1706, 2777, 1707, 2790, 1729, 2789, 
           1731, 2802, 1757, 2817, 1783, 2833, 1806, 2849, 1829, 2866, 1849, 
           1872, 1874, 2899, 1897, 1918, 2916, 1920, 1923, 1946, 2932, 1948, 
           2933, 1949, 2935, 1927, 2920, 1926, 2923, 1906, 2905, 1905, 2908, 
           1883, 2891, 1862, 2875, 1838, 2857, 1816, 2841, 1796, 2824, 1772, 
           1769, 1743, 1740, 1715, 1712, 1691, 1689, 2768, 1687, 2766, 1684, 
           2764}], Line3DBox[{2779, 1709, 2792, 1732, 2791, 1733, 2803, 1759, 
           2819, 1782, 2818, 1784, 2834, 1807, 1828, 1830, 2867, 1851, 2884, 
           1875, 1896, 1899, 1921, 2917, 1922, 2918, 1924, 2919, 1925, 2921, 
           1904, 2903, 1903, 2906, 1880, 2889, 1861, 2873, 1836, 2855, 1814, 
           2839, 1793, 2823, 1770, 1767, 1741, 1738, 1713, 1711, 2781, 1710, 
           2780, 1708, 2779}], 
          Line3DBox[{2793, 1735, 2805, 1758, 2804, 1760, 2820, 1785, 2835, 
           1808, 2850, 1831, 1850, 1853, 2885, 1876, 1898, 2900, 1900, 2901, 
           1901, 2902, 1902, 2904, 1879, 2888, 1860, 2871, 1859, 2874, 1837, 
           2856, 1815, 2840, 1794, 1791, 1768, 1765, 1739, 1737, 2795, 1736, 
           2794, 1734, 2793}], 
          Line3DBox[{2806, 1762, 2821, 1786, 2836, 1809, 2851, 1832, 1852, 
           1855, 1877, 2886, 1878, 2887, 1858, 2869, 1857, 2872, 1835, 2854, 
           1813, 2838, 1792, 1790, 1766, 1764, 2808, 1763, 2807, 1761, 2806}],
           Line3DBox[{2822, 1788, 2837, 1810, 2852, 1833, 1854, 2868, 1856, 
           2870, 1834, 2853, 1812, 1811, 1789, 1787, 2822}], 
          Line3DBox[CompressedData["
1:eJwl0t8rX3Ecx/E3qS8zklJyNUqbCxEXUsqFkqa2crOIyXyFMf4Ays8rU/th
9sM219Tiyo8Ld7vYteGLG3fSKIld4yEXzx69Ls7pnM85xa+GW4bSImJKX7Mj
/iYilvmPSzzlBm+4zsiM+MMiHrGeV0wy92HEOz7mFht4yi4WZkWMsY4L7OAm
p/hLKzq3D5n+ICJD5arQMz3XazXnRAzwjSbUbk9yWu/Va39gHz+yn3N31/IT
BzjPQX6+uw/fspszTHKULzjCVvawkUk28SlrWMZHfMISXnv2BFM88y5L3OY4
19jGL6zlKAv4kifO6FibKrVnOaNOdahaVUo550rmK0+/7Vz+922utGpfcoUX
PNSBFu19/mSKP7jH79zlAnf4jduJ+//gFuibSpg=
           "]], Line3DBox[CompressedData["
1:eJwl0c0rJHAYwPFnTLtehrTlItpSWk4TDpyUA0k5SJumNLNrtE7CzVtJ2WXk
4uLkD1BeSimhFE72tCcXFwe1BywRR+WzOXz79DynX8+vLj/eP5aIiEltpiLu
iiOOmCyJOGSCByzib9bwnLW8Ygdf+IPPHGFlecQqG3nMTt4yz+rSiHm2c505
HvInd7SrB/Mlk2URH5RWfUVEE1vUp36Nqtd+jBNaUNb8izku8huX+J0FDnGZ
eU7zK6c4wBlmOMwu5tnNHraygZ/5hXV89caPvOCNN2/wD+e4xwzX2MZZVjHL
v25xrX3Vm1dYUE6DenLHDJuV1qf/N9WZfQVPmeIJS/nozx60Y77nNv9xi7fF
7//6BsRfPhE=
           "]], Line3DBox[CompressedData["
1:eJwl0T8oBFAcwPGnzjnnlIzyJ0UhJXLFIi5iQVynrm44DJRykRhloIwWk5FZ
6Ur5c3ZS6jJJUQaLwcJi8JHh26dfveH33mtdKMyuVoQQVnRZE0JlLIQ7NvGW
zXzlCF+Y4jeX+MVl1iVCOGAnSxzjBxfZUB3CDod4xDwvuMtTnelJz4rGQ4ir
V/2a0WBtCGnOqaBJ8xqnuM5pbvyd5SbT3GKG80wxz1FOsI/jTLKdjWxjC3/s
EGGZ73Y84T2P+cBtFpnlIQeYVL1y5jd3HuY5i9rXnnLK6tN7Zdijbj2au1hm
BxOK68YcY4lVvGaUV4zE/v/pF01UNJ4=
           "]], Line3DBox[CompressedData["
1:eJwl0b8rxHEcx/E3JefHJZkkcacUkkHdQDl111l14eqSixgYGGRRFobb5W+w
n5gs/gBOdLPCpKQb/Vg8ZHj26PUdvt/v5/tNbewVd1siYku3XRHDiYhX5vjC
PL+4zU/usLc74pTjvOEC31ngBzc50BFxzCwrWte1XWVNl2raT2zvjOhIRiSY
1LQyWtKM68ucZYll7WvRPmCRa5zjKudZYY4FTjH/d0+m2c8UB/nj2a38Zhsb
fPNO56zziBcs8YwZHrKPPXp21qx9xZqqOlFZK2r6XkVOakINe4yPHOUDR3jP
NOtM8Y5Dif//8QvpYjIa
           "]], Line3DBox[CompressedData["
1:eJwl0L8rxHEcx/G3LPdLXUZZxGVAKWRAXLpzg3SdhL5ZrkzEqiyKlFVWy/0B
kjLLbBGrJHEp6UZi4FGGZ49e07vPp6e+Xdtqi4hEt9mIQirijRU2OcdXlvjC
Mn+4wW9usjMXccJBXnGA16ywxXV2pyP2OcNT1nmoI93bl3zQk9KZiExHRJZ5
jalgj3NCK5q0VznFhNNcY5GzHGKRwyxxlL3s4pcbv25+st2+Y9Nu8Ia7POcS
jznCHeaZ8NmbHnWhMx1oT8taVMu/VPnBBb5znv3qS/3/8x8tdTAu
           "]], Line3DBox[CompressedData["
1:eJwl0L9KglEYwOG3zfo0CIWGkGwpQgqChgKRbLOISKMLSGhL56CGoJZWaW3p
AiIcWpqag7oDhwYpImgMCns+HH48nDOcP+/cYafRHouIpgZJxFYmYsgO/3jM
X7ZZyEZ0mec1l/jEOr95xOJ4xAVrvGGLj7xiTw/q603ZiYgkFzHJvNY0b73O
BVa4yCrL3OAyN7nCEqc5yxn+ODP4mp7vzhcOeMtnnvKeB+xylSecSt+Svssf
qtY93ulS50rsnXFfe/oyj11+cocf3OY765nRHP8Bg4wrNg==
           "]], 
          Line3DBox[{3070, 2161, 3094, 2198, 3093, 2199, 3118, 2244, 3147, 
           2288, 3146, 2290, 3175, 2334, 3205, 2370, 3231, 2404, 2440, 2444, 
           2486, 2489, 2529, 2534, 2575, 3340, 2577, 2582, 2618, 3368, 2621, 
           3370, 2623, 3372, 2589, 3346, 2587, 3349, 2590, 3352, 2550, 3325, 
           2549, 3329, 2513, 3300, 2464, 3273, 2425, 3245, 2386, 3216, 2353, 
           3190, 2317, 3162, 2272, 2267, 2224, 2219, 2178, 2174, 3082, 2171, 
           3080, 2169, 3078, 2167, 3076, 2165, 3074, 2162, 3072, 2160, 3070}],
           Line3DBox[{3073, 2164, 3096, 2200, 3095, 2201, 3120, 2243, 3119, 
           2245, 3148, 2292, 3176, 2335, 3206, 2371, 3232, 2406, 2443, 2446, 
           3284, 2490, 2530, 3313, 2532, 2537, 2578, 3341, 2580, 3342, 2583, 
           3344, 2585, 3347, 2588, 3350, 2548, 3322, 2547, 3326, 2510, 3296, 
           2509, 3301, 2465, 3274, 2426, 3246, 2387, 3217, 2354, 3191, 2318, 
           2313, 2268, 2264, 2220, 2216, 2175, 2172, 3081, 2170, 3079, 2168, 
           3077, 2166, 3075, 2163, 3073}], 
          Line3DBox[{3097, 2203, 3123, 2246, 3121, 2248, 3150, 2291, 3149, 
           2293, 3177, 2336, 3207, 2372, 2405, 2408, 3261, 2447, 2488, 2493, 
           2533, 3314, 2535, 2540, 2581, 3343, 2584, 3345, 2586, 3348, 2546, 
           3320, 2544, 3323, 2507, 3293, 2505, 3297, 2462, 3271, 2423, 3242, 
           2422, 3247, 2388, 2383, 2350, 3188, 2314, 3161, 2269, 2265, 2221, 
           2217, 3107, 2214, 3105, 2211, 3103, 2207, 3100, 2204, 3098, 2202, 
           3097}], Line3DBox[{3099, 2206, 3126, 2250, 3124, 2247, 3122, 2249, 
           3151, 2294, 3178, 2338, 3208, 2373, 3233, 2409, 2445, 2449, 2491, 
           2496, 2536, 3315, 2538, 3316, 2541, 3318, 2543, 3321, 2545, 3324, 
           2508, 3294, 2506, 3298, 2463, 3272, 2424, 3243, 2384, 3214, 2351, 
           3189, 2315, 2310, 2266, 2261, 2218, 2215, 3106, 2212, 3104, 2208, 
           3101, 2205, 3099}], 
          Line3DBox[{3102, 2210, 3129, 2253, 3127, 2251, 3125, 2252, 3152, 
           2296, 3180, 2337, 3179, 2339, 3209, 2374, 2407, 2410, 3262, 2450, 
           2492, 3285, 2494, 2498, 2539, 3317, 2542, 3319, 2503, 3288, 2501, 
           3291, 2504, 3295, 2461, 3269, 2420, 3239, 2419, 3244, 2385, 3215, 
           2352, 2348, 2311, 2307, 2262, 2259, 3132, 2257, 2213, 2209, 3102}],
           Line3DBox[{3128, 2255, 3154, 2295, 3153, 2297, 3181, 2341, 3210, 
           2376, 3234, 2411, 2448, 2452, 2495, 3286, 2497, 3287, 2499, 3289, 
           2502, 3292, 2460, 3267, 2459, 3270, 2421, 3240, 2381, 3213, 2349, 
           3187, 2312, 2308, 2263, 2260, 3133, 2258, 3131, 2256, 3130, 2254, 
           3128}], Line3DBox[{3155, 2299, 3183, 2340, 3182, 2342, 2375, 2377, 
           3235, 2413, 2451, 3263, 2453, 2456, 2500, 3290, 2458, 3265, 2457, 
           3268, 2418, 3237, 2417, 3241, 2382, 2379, 2346, 3186, 2309, 2305, 
           3160, 2303, 3158, 2300, 3156, 2298, 3155}], 
          Line3DBox[{3157, 2302, 3185, 2343, 3184, 2344, 3211, 2378, 2412, 
           2414, 2454, 3264, 2455, 3266, 2416, 3236, 2415, 3238, 2380, 3212, 
           2347, 2345, 2306, 2304, 3159, 2301, 3157}]}, {}, {}}},
       VertexNormals->CompressedData["
1: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
I0yrk6oOP/jQVuaheFH3Q1+oNRQoTvLGfwlXhEaHBTPq8Nyyaj2w4akfuNu+
fTJxTgpWu6yOoPksKt7YGtVyB8xewTzFJkJwszbKCsVr5uPEHy0HHEBzykAL
6WlOeFtBTgjlG4mUxtd6/5wD5X+uHc8QZIZsEt8T0Hidgkkam6l0wKJyLin1
JCVko8+SQ/Zpvl27rYApgK76vC/Cy9sYa0BwC+IjQ+ZbiLNoWR+sYFzEMi48
JvA+BtJKw0lBQNzMLdj/dBRLe0BCyMPXC79c9Us/BjI3T4B30Z+x3MkPhHz7
pPm+8k/UlCBsZYXkpgnEJojMCLowf+hWQ5azirv2wDH3TNhzbJF0L9+uuuv3
/m72d1zoTw8iN9Fs7Hn6xl6cHb8gMKP/AdfK9nC3lDMGe8O7p68snNZjKFyF
s1dUO9pH4o1xje3xj70MdVd67+NqQgI/3uS1x25v7vHmSdaLVwtv4v5kyumE
3TPGLP/TqdDTGsWwDD/cffpbRvdbVf/F627m80G9s5dwlzDJW67Dktjf/7h6
fibTaZNzuPN3VQNjt0/90/tq5IRHQrc6bm1aa57mE8M/XUfLbuWaT0niGrk2
vvXFE//jSVzBuqo0nLgwygCTBc/5f/ryzRDU3TxCjeta2d/6avnrP/5N5/5c
+50/CgeJDWt/VcH/xfddbftPcwMKnc8fvaAmffSPEy/dytvnWaewmLzx7q/E
jf/F8aGREvv5YEimP26XbiQA5SgV/jQjPZKXbLbxRMPVoLg45gkp6Nl6bDMR
z20WLOyv1MTBtHALYUtRJfiVTmifLop3tCsuj3rjYdJ763xmUk3Y2RXSwo7n
B2yvmzpit2FhVNsZLZw+PHTP4boInh9zc/i49igGmojgwhcWjaBkweYlpOsf
ASzfnLz8oRWMyTN3N4XCBm1fvyEd3ZNIuj7JDzzt076VvjSDXUk7i8ieHamU
F74LBoCgCrvro6FmUOPNO8eveL7E0PNG93M0iHr3WMJ52QQ6Pr5rdAPZw8+A
nLDmONC6k+cjb20EJ7dkHM4iP1M+l/3d9xb48MBN4KSzHjSPaI9URnkg1VqK
17dYUNL7+OLrAQ14OfbwcUc8F3Hy/7pjFgWeqUZR6HUoQVWaj8pZeO5F7hWs
mRYCqI+arsRbysJhdeFL7/Gcn/TFtKG+Dxi9/1MkS18UKl7zvzWO5xIaX7dJ
alyA1OUbgeK13HBh4tgyyje8217WfvxjCzJ/W1pmtx+Dq9T8IWhdX6bXJADv
GINPGsWN99Jo4fY73RAUl9+NsB0iv6UGONemXcIKSaB3dsItQjwSi6BC3MaH
x1TeYQ3LYu4lcFUHIZbGVCnw9177W9PrP7Bfp1lHEadaXtktz+YGgX30HIYp
/RjNSeK/iJf98MkIzmIE5T5cPj+z27DCBQFCXA7LnRsouL8fWHpNqd4drsaw
mLy9/HaWO/jZ4iLuPVu7lzPJU6zuwF6+bSfQZZjMMYhrmStITO7Nwointggc
a06fTf3dhGPAPVWZpIzDaoL2dGTL6Ft0x68c13lj4VDdxHXs2MweF3fPdvv7
8gGOe9vnm2qKO0b1n643M0LlFUpScIekzxvGTF7Ecv/Lw+//kdBPdIzC5Sdc
GMpuNMEy/tNp++fXh+wKfHGJ2d/72MPUsNH/+Gc/z7/idy7hlsDbhjvNEv/0
Lv/MdWHlsynuECd/We1bjn96z3J8GpN0UgX36EppyXnuw/90/TpH8IlUkBCO
8tDVzdd9/8vb+x5y8cmwMeEUbA5IZbWO/uMqUh9YHNa3FHTFVY8PFr3/xyXi
oL2u8ZhCDK/j+9Smp//41onL4cdhOBwwD9FKIjsND9KVyKK8V7p78fDk8Ztw
tLqieUxWAu7mWApdROumlQPplzsTYQwtC9PkVRz8S5H7lBjP79WMlGd1JcMr
3o+SB43UYEnpGvZuZwH4RbPakWgkw97LJLPDQ2dh17tjVd14HhtA38l+4xaU
m6pwU9k1gHNpnc5K+Haqb/iPhd0NgRKOSbrydsaw5pnpWgOeG2NbA+9vcMDo
5dtbOiUm8LJ9kx6y25z46+v4/4D6h5nqfIUJXFq6Zd2O56Y51z9kBt0Empvn
SmiCjWHWyzd8VnjuF3Qw2qk4EXDaldh8PmsIn+kMj+/HcyhZP01lnwQuVB4x
C6XWhbT9ifeX8P18GEL38v5IPKhKirZ5I64BW17+skR+ad1K0sPjSSx4kO/B
8adcCaYkDDVfxnPFFV4v7soIIHurbZ/AiiyM9SA3L8Tzl9MdabRXAgFnz0eV
HGsxSMI5Z4rWC7WQUS3pugfYGWZVlRA9Da0tU/tQnaFUX93l7pQjwOasRB0g
OyxPJQv+i+e93iNU3MctQfKIuMfsTUbo+UvRBPkxoVAvDYNWXUCjY/TG7jkl
PB0aehLZlZh3hjrixhxbd6607GKdcksE3p5zOK9eQxEEjpmSZ0svYbGnCmsR
JzvBzNpMJgooPGr1JpgnMC7uvjnEdzoofMZ22EHNAztT9tQerLYpcBNxA3Eu
IY+TNKCXe/Y0FXUzlqO5SdC1R4JkQqnsNi6HtFo8TKkaE/FtI9h5nsmBjumh
Hzjw2e36QaoXmHfIn7061VtWdmn9XlxPpskDl4QH2ODA3jqahR17fK6tCdd0
fr7vR0s6pnN9Ty/PIk7sV0p/jaN7c35nvj8Oi+nb40+KjOczT73AGdNo8qj8
DsUCl/Y48fPIrA3xB7iE3fn64S0PTOc/vWde1+I/UJKKm2ksutq4eBHz/0/v
dYMrDFL2UTjb9PdqPLeNsKz/dJoba+yh2u2F+02sephyWBGb+T9d+5H1BNy2
w9nGK47amAigIuFeHWB6TO6Gig7O00HVkub3//J2g/fVZ441SuASljDuprO7
//RYZPqS/ve9o7i1xATq2PCJf9xQbmreum0fTv2kwLOPbS3/uP+zz/vPHo2C
x0eJE6ubOOGlG3emc/DvTZnVeO0RfBuyhB4Li98nAn/PTBBJInuLnpUSZUqB
vDkeik5cMtDXTaTiNd7OC8L6FZPN0yB5U/XhP9uKUD+2fNQOzxlYgrn4e1Lh
+cI63gAzdbjlPMbpi+c5ZeuNf+YTobeUum+u11kYXrKmvw/fvtGoGdEz+QjY
JP70RGOKPkx2bx4twvPQkVVO1zwVGNY7oMtHYghJloQIcUdOvpxZ4HsI6JBJ
HYuWMYRlyelySO9f2NqtzK/eBpMFNS5Glw2g453lHxIozmIHm/6MJ4MN4xPY
7UhdWM1oQA3x/WngzQ44UZgCimeevnQV0YIeQ8c18vE8xI7Um+REMhhgV6I0
jVSFUe9Fr/Xj+WhjsHK8920gx3NMTo5KESo4sRmg+VF8x2+c2hoNQGeZG422
DNRroxS6iee3B2xkZzhCgeB204k7Y6JwNlfOBPVzLioz9NaWNyjMmdIce34a
Suq/dpvAc8l3x/c1zTuDc0NNbcbLJ+H9ywGPV/D88qYMl2yyLVivkWelMmGB
pLC1HMVlMtnyL2r4uPzseX8RbcthODqdRZifQ8znCXxO43YxLTEJdDEXDUVc
lY+eM1ZXHdiX8o+ddviLfWYOi0T2tnWG52GHlgx4ZJDOeJxyDvNiYRhAvMb1
iYy93Gnwynx8WUVuDDsUR0Gogz23ePH3BdERoPyi4DDTRDeWtnabUAfjPi4s
o7hJBvh1vve+tGnDGG5dI9izyMPFD0PsazjGD0rR3YbvMGX1YQKnyywQGH89
jRNvaLUVFXqFedKvEfgCi9/KKtUAzqI8NOHS22IsgnFP12ZxtdHPGj/jjh6S
uNJSko81je6tr5XuMGhhMe9xZh11LD+WMrHZm3s6en3d9PCnvDc4nmFhuVjr
W9jfL3v8F6Ml21HKEpwSsUgpk2Awhi3+V/d2s2865nkfJ2kgQ8f90xV785/e
pR55CLRyJOH038ZR2uVaYhv/V2djaVB8OHwdV9fxyaqgVB3r+E+//U+gl2ni
ZZxbVP4XqR+i/+J4QWq2RUOmIc6o0jTMgof1n643Nn5dpfkujdv3i+dx5GOi
f3yJdZl9sv447rOGxLjLsal/+qXwLYxKHI2G9zdDGyiaj0DGVUdTtO4zvPDt
6jR5IkzUVyGL+MsFCytC+Q8jvazd3rqJpcK6KYbgnn5hmFuRRBOIt2cdQJfu
qJkB+1e9yt3vScEa1oNnD+O5vqX2+OFv6VB+Yb5FhQoHWxXKkjjw3FnY9vGN
d8nw8R1+wTtlytDgl5hVI57/0LYPCmqMgo8KflT2flaDDkLNlakoP3T0NRZh
M4Luj+vV/cc1YAIv/WlkhzAy+ncPRRjIe1B2RCVDEy4o9xxB9bTNsA/yf3wS
wDGjv7tvezXw7eX5MeP58T4B+0LHVHDV/Oqy05AanPP2VryBf29L45tSats0
EBxoYhxEowIrVZS9bfG82/E7ddbHFBCwUaPc9RXAP6rjJLl4blt0yNTXIxHw
1gXE/C6WhXamHwrIkf1wB88kK8eCeArSVwzCElBWmqreFcXBrQPPam6EA8u7
rBUizMKwzbL5WDnqp86bE3UH/MG9K8eiP4XywKI4svEBPH9lqTA1FH8NiJJd
1suwOQkFr91xXcTz821Wqn1b9mBoeuy75DYLLNyKgWi97NBapS3kdw6wX31o
tutEC/nDFAtRXF62ICJwMTFnMqq7ZLDHcYLAx4zO0nr16gCFc3HXfl3fxaYd
O4QJ+zKOJTe3tRRBt/OpbZ/1FWzxTCIhLvM+uyQ2li0KehaiyEO9fmH3UzN+
EepCXyooys5xgHy1L8lsY+OYoPcrQh1s8VBwvu4mHfCV4A79FTmIqUanEeKy
n8RL1x+3SED0/q4alYfdGHFHGsGeD7wezMv2+ov7yjqlkOP9ASNv7SPws7tP
GVsPLOISgmKufDJpxPuBBQI/1JucNjk3ibMnHh37UvcGK9P/S+BRglW4mIdD
uBwHxxPP815iEWF7+bmLtFYIz/gXnHC5uZawUz52MX1P72O0S7T6Dk04OsrE
jH6FdGwi7L/9qZrCOWvF17hXbMkh7m3RWEv/HgdZl4ZclApx13Pr7cWJfbCK
1T2uNdB4hko3A9cke0ld4qg9RvmfrsutsatfFyJwWSQksfXBBtiT//Rb4lEs
nPfnKu7axa3bNJJnsKX/+IVuBqolLjPc1rq4tFLW/9bjNe4cteqcAGdZ05TD
kUvzT9f9yo7il3/GQMuO2mmfTWJIEX+w6Dr++d+68wGv1ZPgASsX+SN5h2HU
Ay6aNbzd3pE2CfauS4MnHAbvKZaxwDY5J31DPE+PKggqCMmEV3pI6odPcsCG
qrDp3m18HHGLfyLBnQlXDY/XxtOchuK3rxPN4PmW5ull7q0UGOp3TaBEXwTK
qWUHZOLbORFQ2KRXEgOHQzXNlTfEoUzWYxCK788ZK36PK0GWUHHfViUDsTSs
E7p3Etlh9U6vGRd5GOjg28jinpWBW9R1mUi/d3vpVzXdEwFtxWyL2SVZ2OQk
/Rbpyx0w+N9UTANx1pGT4b4y8JZryjNH/HuP4AZ59FzSwZ3iYr9QRymoK7Rz
UBLP52TcJZVHUsGoL0MmVZE4/LPRsOaN52w3nTSTS5PAp4+vNT5CEVj2y1H+
B54Hn3lK7fbzJhiNXghxXuaHJ51pt83x732rkXCSfToCJLiHn3bcxwM/Ey0/
fILnfyt+tOSpBYIfEy+6iko4YOqvta8or+bPFKgRzvIA6n+rjiiNHIclne75
KK9+fFil5Hb/JeA//Ybf6goz7CF62Y3q2LqPCrWXWq1A+AHGBuZtWjiysPAO
1bGDN8gJ3GTj2/dXJgdhTYt/PeLcvxOyKCMMQcGYVuWbJhJonU31AfnD32mi
3dJBqqDKaWtH5OcuFmwwloHsZ06Tgv8mlzRguvqD9ejoXyzxj80wYX/ZV/mG
VutpQGzh6OCXsIydto76Q4iz7F9Fl7KPgy/BdsbP7sxjHCeiCXWwqPlBIx53
OnCEQ1xc3n8ao3TLJ+i66hCpRaEFBfDbdZUetxvDvuVaEuwWLlUdfhhGDCS6
3/eqZn/DqA4VEnilWkBVE9Em7mDi98XAsM9YmUUngWccPreRNrqEW/MQark7
0Ygp6v4g8HMrrA8y7szgKNOcLcpnXmPU9nt18qihNT/6kiGcQuVbJaK1IuxJ
xJ7eGzgSySU9P+NYnPP2n8u/h7HM7+mdu00mnHmsDudSNPxaoSMem3m1py/a
06tENswvcR9fYZy/717Hchf2uEjNp8fy9Xdxt8I3DSp9nLE3W3s8PPDdCQOn
WNy3lJZz4tAcc/5PpwcLp+WZB7xwEmDK4HWr6r/8POKX+ZCkvw3O+tkM8XyL
6L/83O1X78uOkzcgdTQWfuvVLs5hqU8mEOX5HYKyFz2TYMMRzxO9ZeQAasUH
/cbb57x08zNP4nR49urX9uxcWrB4g/q2Op4LfhA2WBjIhBSYqrpVPxPgPCVb
2ITXqey3BeuKvEz4dJbZwKSYFUT4ne7uxHP65E2/9bhUuELJN7aZexTEFOST
RaB2Fnm2aL7egHC4dSuikAXYyY/99sD3h37slj2dvB1cd0/sdXhPC4rLHlii
vJGJuVDjMAwBXmf5drRO7wMnrU/NNqJ8yf+XhOiZREC/+io5VWgCe/bRg5MK
zz/rc8e/tU4DKaQqZOckySGnXQIJyvNPaTLQ5penAyV52bp7VvTQV11kgxfP
aZZbMvUV0kC8v5sW3Q9m+IHossElPLdb8t0/QJ8M6i96l/qzssLah1HGg3je
+XRKpuVRHDAhGhiYzWGFlA33I/RQ3vLXftU6MRKQraqeTyJhhdMc5Wb38fz7
g3KXSu8gwE3m/5yvhgV+H1Ua/Yy+i1P2d4knnsAjiPkw0Q4T9HUXU5pF3zEx
pn3/iyvgL7HX26d/GaC4zMtAtN9tP7yg/qjdBuznqqdn66ODK9WFB5FOz89t
qiE+6SOT7/aeBoZVLBF4zizXY8bvxiCzdCLzXP4heDToA+E8CXOzboQPrya4
SXni7vo6BcwXdb9KiI8RlzQ65uVBsuY8KU/AAdhJKtKOOLWAnIRBiSg41ky+
WES1HzLJHyHE5a488ds4Ph7QFVRIW2i7i5ns2Kwhnuzvb/CylB0kjOnGV8/8
xY57hRDW0c8FyJv9eo+AAlnP3dK5JezJZ11CHr7mglkNGDEAnjMRKnH2PzEj
OXOC3rX6m60k/1CDWdnZduP275jqd8o9HQlHz7mJHwBDqo2Unc7fMG+viL34
iIUw5MZv456Imt00IP+IKce2ELjgy45lB/ElXE7iEPHJmHfY0s4sgStf+8Ae
Uz2ByzW69D0ouByTElsncLEnkuW5uz24UcNNN8X2R5gB456u9SKYofDv97gY
dZq6FY907Fv0nr7Gnd/e/vKlAqfyvihT52Y05jmxx/0pB5QvMuXjDvyJpEs4
7YNJbOxx5qMD8Q7UybhvlbV1zy84YN/+i+PmDQ29R0lDcMwjNndzTxljTf/p
V5WuzUQqMAYuLnZZhQawgECaxhfheO7azh77cicRane3lW+Wc4LHiVOUaH3q
/8vq1D3/NHjH9ch0nKkguC/r9dUKb7fWvAMOmwaZ0L3yUbU2nwR4/BQTHMXr
dM46z/KleCZ80U4Uv5wiC2LjznpM4vlKINUbf+tUWK7ramMwrgAY21oyYvHt
fDITD7XijIWqgcql3+gVAWdaNIMbmocb7pLcvx2gxMf8IbVPAKiTBk+hes4h
zgNLWQevg6iVlkceE/Igf/ZQ/kc8Z6NQFN+F8eCu1kkjbwoZcDDodxoHnk8/
uiB2uywVnPCnfVotKwb0D1ROBOHf+7hbjmdBIB3MeLx7WTTGC/6qz0UAPBcw
dTHVG00FjV6Z6lVxx8EE+9R3FH/jF8j6tfuTgG4qjf6fHUrw0Xl4dRzPeSUd
VIMc48BrL6tBBds+XJn8lw5DtK5cMo+64xUJ2lNHGA5+2MRixH5ffoDn3Rnt
DpNXg8CxqIqpYRJKaCdwfv0zId+eqWV+5wkWDAVMT+jSwvsOCvuRfqe9PrLG
0ziBNhVPf25lBqic4iGI9Psk+t4g2xVbYMbU5WLGwgR5K61bkX/7Tnd7AHFX
gWBa0wkmmDooR+Bybx6PZNGbgtDLufGCr5nge7EGJaRfoyFN7b5v2iCwk8mc
9CUj9Cr5q4XspLbpmXzHNSVw20Z0bnOeHrrzuZchXjoyu07EIgPkgw0zjjyk
hb+mwwjnSWJyBuMrFMVAjnzU3471Q5Donc4sIR8efq0XOyMIvjwYUBhzIYcv
htx/E/ZrVmeqqRRPA8fOlTA6kv0Q6JcQ4njfco6G8AwXqDDd9T55ZgvTaVkn
1MNPhGmHcHuwA64FCcHs38vY05YXBD+gfJKe7tVpFvD17yJx0adZLOrnc4If
UJa+IzMRQAOY5nK4bAXGMGzuJ8EP3OY4G68+SALqtERzVsh7MIegZIIuhKh7
Dwzm/MWNPlR/Gf+uBbNM2svnuZ34ucrO/sT1jcR2hvHUYDi+lb117hdVkuH2
QRw9iHpYfKQEKyzfi+O+14OmNdU+4FbZDRplau5jbqf2dLfTsO2WR1qLo2+m
t7C5lYzxtu3xxm+rdp/EnuMGB34Z3hkIx1SX97jJz/16NhM5uMfv2dYaEjww
1v/OreX0P7zmSRwN87TO3XxBwwnknozmJeP5B/hX/s3PeKiccy+HglgY9Efl
HEd112JbQ7tn/Kmw55jNNWpTacCgs2WUhOrMBZajSZPpUKClLdNRQRHIs9vL
sOM5GWPf29DpdLi18rfUckYVnFsye30C1a/yaPY99E+BH9kui9tMaIILpWZC
z/C8nZKocSLtBnTu3uituHwWyJ44oeCNf++VuUZbf7UrMFiGpDl/6iw4KrBJ
jux2mGaV+CORP5AqHs5VV9MG855rumj96Jf1q/4N8S1QfKhT8vqYOrh5RIZJ
C8+DWqSkHRRSgAG7lJbENWVwWNlnuQz/3vPnJEk1+1JB/t3pA/s8z4CfAiYf
ffC8NVTZb39HCvjClm1P2yQGpLLVE9H619oq2fsQZRJImqDgU+PkAYL+UaU7
eB5e9/CVq/RNUM/feeboDDOYyHYmsUO64/+QxJMdAYJIdxzOyW7hTMUOxTzF
c3EmlrAwwUAQVc/38MLSKsZ/yYa/B8/3R0Tb+fR6gHM+YrU7Tofhrmr3EZQ/
GxN1bdl9uQxuiQaeDrvFDKMvzZ5A+TPr53P6hz1swI01GqNxz+OQa5KcHcXZ
q/0PdRFv0W5RoS5ih6KfGU4Q8urGH6IdLSagwQzcwKWfhHnTgmeRfl0rqkqp
gQ7gZ78u9zbuJLx+9Y04spObjTsq18JVweXmYMuzxexwUSs2hZDHVj6wqLZW
BAXSiwdKrNlg2fHL1YifiljipguUB0f5I22/RLJCC7qUNsQ7+DvS7D/IAsWh
n8VR4kxwc9W3m1BHekW6qCsmDY4ce3Gn/yMtfr12cojQPtfiF4MtcXDLJKoD
mB6EzNf0phBnkH8xrigqAmSdzhfVUJNAImOZBcRpLMQUdXx5wVa7MVMX3xb2
qcebUGf7PmgzaiF6EvCEsQkyry1h5jxnCXofjdK4aZPIBM7Fndq+ljKDcd9d
J+g9JEqFLfrzQcCb9CHlbN0wNjEhR9DLYTN2BxLNfcAl/+JFoydfsB3rGgKX
nsh1p9dfwvWnB4l+X32PLaXuxXGNc7Wj97fGcXlp0tS+rNXY65y9OF4yOP8m
0qgHt33nzmBlfRFmJLgXx4WySj3kJJpwNB8YjlMl38PMwvd0+t7WVeeRfxWO
rZ2yrJM/AUsY2eM8808K1UYjYAkmq9DXxgPYRFjH0bqMlaHLY3AkDh638q6f
9BQHV8vPmKN90sATkm7ZZ5LheilJXaKrAtisxnV8xdvtNou4qlxNKmQX7TQ/
mKMKpKeTaFFdC1Sfzq7oT4UdaSHLw5XaYCDRjw7pQh3kgfWFJPiW7qeAAoUB
eH3/xZFRPFfDNBtey8fA5vGyDLWvhsD1jsXJSPx75Yek2hioXaDu14MrW3ZG
4GwtP46wT2pS5r8+4QkMZ3ibqhMMgeTfiiB03uPMXzMTG9EbIPfg8i8+Zn3Q
eZwm1R/PHY72rEoxJwGOw8rDvdFagGaH2n0L/94/N+tTVT8mA1exwy13nFWA
Q+bZpHo855b7ZRNPlwzItIT7D2meAR42/CYoT76zhnuwZR8PKMI7qNq8RcHL
xthVHnz7RE8NtZPFboCKit9lmeacICHigEcAnrtf02bhpQsHNqMLog8iDgHI
JsD1Cs/1FW9eom73AwLJt84PFM9jImb7c9F5j97J9K0H09eA9hWanLn3dNDK
YpEJ1a/mvoocEf7tAH6wta8l77JBZ7KVk6h+NfTot3RA/HlA/mWWLes8F4yw
sCVG9QHN7B1xxP0yRUbav/FAW5e1XaTf66M1E97dRsAZ26UTHD0N3YnWU5B+
FdVn3LoP6ACOo48decL44AHxAhFkJxtdN55s+WoALZ+KqVj888TG4y6It8x3
XW1rVwOHdfgO5p3hhcQV1GGInz9c/nbbQg04F/+2uvXlFJTUy4hBXO3FqvnY
L1Xg6fvc+dAMB2xMW7pNiNe0FBt97SrAVYu99UrICbi4xp2D+JSmiUZPpRIY
b/72PFv0CNS+fLSEUDfzqxOjLlIAX4v7aMwt6WELLqaZoAvtreIwYWmQ95ye
XC2VCq7X5hD8wNuiHJ6JORGQdzZYUsKABJrhSgj7YhKnpP98k+UBPQGrFh9H
NjGxQjtCnu9f4OryTZgNPO4f6yQNXcKyrM8T1u9uLHWhnM104JrQV6GP9dNY
U3IGIY6zOVY4V6ceALSqXXIcMUMYDV8wQV/eo+PHPjps4Krd1eNVyzoxTL6L
wD9PShuTks/jdr7F+7vaN2IJYb8J3H1Tszrr1ijO5MoL+UcBVZhn9t45c9yT
9v1LsZ24br+NhY7sAqy7YU/v8l5U+T7aYVA4Xdvvyxk+EMUzfgedG5w+5016
mu8GbBuvPD7rJwm+/Yh8i+ywguvW61tV8bB4RT79hooi8Em+tp8T5RXKTx7q
UidDsnyZBr8udeA355mM7LzjU38FUE2GIhV0EWWluoA6xWsT7f8mkVAngMF4
uCXwojTnhyFQEWHtOoFv58WND5rfFKNg1oTKT75DJsD0dPVoJrKr8pk1Yuqr
UFi3rBDXYwL2W6kcR/cgKFlkyMnsnQGXwbc0QRYTQH/m1C2ka74szoviBRHg
kKlI/OaOIdDzSYQFSF8c2hp+3+NA7Llk5tpfuoCddt1FG89t7SY2n11LAD8/
FDSR0muAoA9XRlG9mh/3sPLK83iQvrrk5eamCCJZ07LQeJ8vld526LkJpNwN
vz0/i5+fy/SUFnienzbHEhQQBVoX43pX+njANVOZ06j/wzkDPR0LwSDUSceI
Qp8OzMkIb6JzMh+o//g3uXoD10uKo5d6lzF1Joq5SWQnCnoLPBedQQRbodZD
Uhb4jPXScXQu/dLoz1cxsbbgQXPITgcRF7y8ZV6B8mGHdIWOEydNAbbwMSjm
Lh90aQqSQnosFhxtRtz8lU3VcqkwpGPvF0WcQuB0qdOiLuDWvCeRkSQKQyUe
UCF72HzDI+1soQXU72aodvuKwcslB7URL54qr+DS0wIWF2+9TM8Sgw/ldQi8
EhBPadmcBe0aB6ViKMXgAIkFQe+3a2LUBdp0ASm1Wu3UhAj8sKZLg3j3gJ5c
t74+GDoS0pwZKwQvSBtvof7Epchxf+XXB6DpQNGNLD6YoU1BjJ4fXG/cWmfV
BeZ05n4Setzw+YYHF+JPbCQUNu21QPclurqvRBxw5mqDBeKWE6oLHOWqYGtL
PqZi3zG4zNmZjHg1ie/j388AyMaFud7cYYCeZdkQcdLHCuzCE1LAencfq91F
avh74xyhLhc+wUB1OV4YGN10IcbJkcLvXESLiBN/Ggv5+YML9L6jsyC/u4W1
6K4R8nlOylXrK12sYFU9PF0xYQmTGmAlxPG/dBcf8jynAafCKGiamacx7rIx
gt6jfZZT/5CSgGxeIiNv/wEM68wi6HFA6d1XHOMazo/88Hrd8U9Yfd0QgQvY
xq+esv6Be2/ccyHkdR1G8nxv31zi0eqr3c1AGEOXpVh2mw+477Py/ILnVeeE
Xpw9FQnLa6b2NzyTBPzOgbhHeP71CbmLSHws/MS8afHOThFwzTdTOOF5YXDV
IXPl2/C9e/GzQ+vqYLspoVsa9V90uku28zaM9TnrXzWtC4poB8KF8fyebUs1
ldFNKKSrGHmH0QhcN+G7Zo3ea6Jpmvs1HDbLmzw+bGYCTqd2dBejeZZ5el+K
wg1enHuqrahuCgrLazlQPOI4XGNgdcQa5CZIe4dXmYCnTKStG3hO7/rsLDUM
AgpUQmHR742A3ExdOFoXDw4rba2xR4O8yxf+Mj7TBwvvTZ3QubIjRCNv5J7F
Au4DOzSsXzTBEH2ELjqPYSpRs/U8KRbcv1m3LrerBFyFGDuvIL+6ul+w+Xk0
GP3hYPnpvTQIV4+8EofntEW3XHtkwoFuZbrXL35+YCg8/qES5VfTA3eZOv2B
hILUDFcEI7hByheG7necvq7dLwXcAW13hmrchRVs40JgGDpXeY7+CA2zjT3Y
L0HLTmN0FIrQ0bGjcZFcftpccs0UHHCJcYmU5oEXztIIEOrGByYULrJqgitP
Ihd+ewlD+mRdG/R9n9WdlUZcsUNDoPS0OJRX/WSOOJnE7nEvfSXQNSUdhBuW
hG8Pi2ciLqn3xVLbRBmsjAV5J3ZKwyT5+FjEAwe6rq3nagDKKw5pstsycKop
SJdQb1lm1PuYogeuzotoJ1rIwsb9PPOoP62bOCKXIiPwbCT+MsWoDNR7//46
4qFmuC9qSqbg8dZHYes0aTj3I+AI4p59jFyPoswAd5xS4v4ESVijOTmN8gff
i3JWRKJmwInI9Ov9DTH4mI5sG3HRP95r36xNgIm3RZMwswhsvTJogNqxG1xR
KwkyBO+Vhn9+VueDmSzxDYj75G/IEynogOULKg0virjgbZF1UUL9R+3J9ciH
asCTieTijvEJWGjFfQPxu0baThGVAJxZDPTc/MYE+bLYCHr/XuZq8cdKCpDd
Lt1JIKKBaoexEYKfKU2l67oqBPxM3j3TvE4K0ycZCOv6KoGvt6UWOIFCjfpH
21ub2HnqO+uI2w9ms6uSHQEOiTHS8OMilvAriKB3k+pRk8mfh0C2c2I7sd84
9kiJlaBTKxU5T8X5fUDB3QOqm/RguYlVBB69+GfpwRUfmFne+DSI5jTw/d5h
gM71MdTHnLTUD4E+y8sU18wkgM/A18AmPM/+sbrR6BYJ7y2Uz8XcxYHjhllW
qA4jG8rKkucRA09FH2tOc1QDkUrsuagOtjg7zxXPcgMOv+rIf9N5Fqh9DPmO
4jivG6X6w5dRUOfbrqtOrwH4SDc4jPZ5XXmy5wI8Q+AZytLIQGJj8MRv/jGq
J4/ZnWUI6cPH36PvNFQOmICX0iSRSL9+NLhXd7dVwDbp1B+xcmPA8HkfC/pe
TMtVMXlVnoBsyZ6E/5gRsGBY7kZ5tb7v4OEOolAgs2Oik3lcH8iZNqzW4/mW
UsidnYEI8FbwUuTgsiaYCsz3R+uI6vGS+QfqkeCFwAuNoGxlIKzE+v4hnr9R
s926oRCOzwMNA+xcZYGxY3ws0qk2qd0vdf0gENARTEsfIQSedcqZoHsTTfzy
DAs0XiDI/od3wrGjoJHnk+oPlMeqepKK/LwETjJ6UNZEfMGsjX+1ofWsVunW
DW11MzDRl4LJ2h2Bl8uMD6Fx3bmcG11QLg8CQkSXN6/xQFH6+Qb0HR2y3lS8
Z3iGKR2L3g6+IwJV6BrmEX8qrdExhuft9Uel7zNJwkZ3iQnEM1t5E/TYaOGK
AvPdEj5ZKHNCrRfxtg9zGTlVbKDKqvKWU4s8zPG4STgvzSr9vVSzXR54uxi7
0bYBGOBGGo/4w1OY4ivys6Bk/IPJpU1FSGYiSoT4Eb2FpK3fxqB+lST+aKwS
fFt57hTqv+U6MZ9qjgXguJAuzOetBKdJLLiQHj919BWH5l0Aehlyci/fKMKm
xXAdlOerSwwk/75gA4Tb/VzN+3CwQOzhL5RvhNCE96q9tAZ1O4Ux9ZZnoF2Z
Byd6fu37gWHr7fPgad30q1FjabgsmvQR8Xt0LsFHSc8BLfutpHh2cbjNKEjY
Bzd6VqnZk2wMHBsEP905KQTjn/R6on7ekLW4SnVdD8RUB7qfbOCG7O9SDxPq
7U0p7wyb1UGd2Lf7173ZoeS9Q4GEuCzgW51lpAi6JPmjeyuYYOqm7VvE93eK
KdKdlwLK7IuVVF8OwRSpSYLeqQLf1v8+Jgj0Z79hzenEcPSCC+H8+c1iMvGi
uZNgYV/i++a5P1iA/CBhP53sUM/OVisDuLbvRvUrtxnMIFidEMfN5t3H2mTd
YRu50EKRADfgd5qKRP7/lyZ9eO2CL4ylOKp6cUgU9KoVUY7gOfmaixyFZzA0
nA5Jf/tWDggNZz1sxXMxPtkjt1nCoXP2Qhn3XWXwg7svswrNT1HwZ+2P4dCe
NS00kVsTxIm+40P3CJyS3QWYTcMg25Ae1YCKLqgd+hxQg/zML448cvkAKBDy
Qb8h3QCEPLdgR/ee0tb2v+kNcIV2o09f8941BNXZ59nQ/dxfDG3ur79IwbLF
TFO1OENgXt9ahOZ/vdSiUpH6EvB5tVjWf9kAnCmnsEC6sPayaOsm9wH3vON/
9/ToAKWbY7HIX2WmKT+5SRMECp8wPk/vwOfPYvbPkO6kTrfeZAi7DkzurFnP
2ysDlel90x14/vahNnEaFgDymHIXx83kQLr4sSvo3LV4qVIsJ4U30LlHOvJn
SQQsVXP2ovuGI5zWwpPUzoDxA8mCY/5J8IWNxAblw5mu3Y7hshbg3vyNh1I7
W7gtgchIZFfZjfzmvgPCYKvzULPWbVp4NGaRoMdPt763aB1VgTG+9NppSlzQ
tcUoF/F9SzssAtT6cP9BsRkiN2Fo/Ml7F83D8dkoasSv2nzr5LOWhP0NlkuI
J8jXnGnp1YMMtXEjU4JnoNQ54gnEvYtF6Eeo1OHXcjfAdEMR+r7hUUbtV9hd
y9f6IwjrH7UWl1iowBRe6zSC//dO+wCXJMFAeK3M4hc1eJLpizPiRAzuT84X
6gP74YBvzMUasIhGhXAvMrJ190MAuyXov7G1GVeiCbUvUNYiff2+0Wj53tcO
nHq8L66xQhOu8Xnko3yDoezBlXEvB1Al9WZToEYDRuTP/ED7Dj2/zAIOlDgC
fa2XxxLH1SCQuC6M+EpK2vOnso7gz8lUy0kbFRjWdzQL8TvD8ufFfeyBM/fH
greeinAtaaET1Q0k7j0XujtqCxSicqck6uSg251xG+Qf9n9yl/AfPg/aHAUi
hDok4EyM5iDqZ2l9TP3bRVPwNGCEd+ebEAz0rjuMxqXfxs9o7GEAcqtZ3/1o
PAUXvp6ZRfxko4PVJxsNoH/0+TMzvuPwfhaTNyGeLty/TGUHwPUzV5Icwuhg
hMmJd4jnR8pMlnwSB/dGeUCH4AEYJb9NqNdlswRJj3jxgBUxU5slmnUMu69I
WKc/mNwnp3TlMtz+VqP68xwHuJfP6YLs/NnOz/UT8e5wTLV2idVaEFT1OXTN
4/nlUdBmYuIDz187NMA0KAl2Hm14IvuXuxJslrPlD5OLW0N7THHgrxzRO3Tv
QE5+O0XKOxAGiGg7tT5TAfX8ot+78Nz/zCn28r/+8ObkTN2V7xqA/TWTP3qe
NOeDGou5N+z3Ylf/KHcWwLl9Lmg9qBqzrbN5wBmGl2e+uyOhCx6H0Kej84TX
Y2fBgZMG8N2oQ3pNjC4IDZk+ieZt+eOMfvtDE7AS/URNSUgHMP7JTUS66L3q
0HjprxN4QuSbuuWsBao5H3ejdjw1uGKYmTzBlKZpqUiRGmjOa2BB9ygfBZ9d
LiryAtUXBG0qryqBFrJj0dPIfgwTfHHQA9C1a7eaasoBo77AU6g+vCPS1C5+
xhk4MaZQnTojBpztp/mQTm+8Kj+6ccEKkN2QjehePQUy5hu7kD20TRecWJcR
BWp/GNNISejAcIooYf+0qH75vUCjHmw8kadA77qGqYbI0iM+fXC8kzXUCir6
lrwfAcchML3zmbCf29r+8KebHfzyKfUr+yI+b8zalEB2+Jn2Tw7ij0lVPk4Y
SEAjxxhuxLuHspxWoR20lY1895xKHjJGZH1Hein+87kgLMoGGr7hFTqgoQx/
fj3Rjp7n+dadOXDTHDYRkVW5l6vDP9Ospmg+ByWbH35+ogFJtxX8Hixqw5ri
SozgBzawP9L6vMDhxXqmVbIeXGPnP4T6v8t/jVE/yxhorDY++JphAL/19Lii
diRBZ5NbB96gT4fJnZE3hGFRreNIXwop46FblleAt7nmkVBuQ5gzcywdzWeh
7u21qkJXUMigwxhoYQAfZRueQP48STrE+I2XG3iWPJvzql8XVij256M8jWHk
0+uDK1fBzmSNfiiDNnwRy2WI6ie895LJhx67ANMn2p8ZGtXgeO+vTFQ/uXTc
Zk2J9Qq4/SCmV95ICYa+U3yA9jtizIc6B0bswdNWszD2M3LwRRfJU9TPSAXW
jqgVa9DKs/rcbEAMynyN50ffhVlV6sWBCjNwkytH8FDJaTiaoLSExpu7GHQ+
TVUfaJbfqGe9yQ4/VeqREebnNEh5eFoVKA3rBdgyMUAFr7YsQnwv+pG3dFYG
eD4Tv9O+fgD2N2UQ9unWdbGhfTs28ILGdYFu3DHgXGW3jb7XIIeT/mTFJSg4
f4I5PpwbXF949QPpOsSclT4y5Cq8Wwved1eIgE/Js2Zo3iSdurvyIz2gX6fg
Tyd+afCz3KcM2XOj59KxgWVPuKDzY6KUFQe26DlMUN7Y/ja04VqEJ6Q4XndC
zVYZjOrNEs4nKLXtt7cevgZdnHyX8zjVQPj17lKUD1SK5z1UeHMJ2jc8FvHH
r69Xk8ecUH/G5Idlhu1NYRy9bcnrRxrgaEXlMzQ/GvtISTi2xMBdnqwz7Qwa
ICZPywGN13VjJLkRZwU8/K3YYi6pAe/HVdfQPJ9sVrSiE78EGJaXhqgGlEGJ
Tu8yan+Rj+jltZ9XgA0sluhIACBNre0Q+o5KrKXJ13odQd9UqGoNkSygUS53
QH7+LHm27fzYefDbjuXh/XQxQHtwYxS1L5xVFIijlANkx1/ZpPOcBhRP3xLO
P/SJ0JtEu+tD3hduUuJrR0G/fw8p4sPRr90PhdhBDR3LbXn2ddzbphlp9F1w
b3YjD+RegVFEerY2iTSwQGssBvWn1e3BzBOKqzD53CuvC7an4GAdSwf6Lj+O
n+xHfLpEikTgjhiMTMmuRfzQ4xLXuXk3mMooaXVUVB72OvT0Izsfnm4usj/n
Bl9+pqUpe6YCdUiWzyA7L/aIjPq+5gwn7yemM9Zrwcd1q1vIzi9uabs0XnaA
jdGOnSS/9OFl17ehaB7SZamrGGxN4VtRdsmmdiN4XP9jD5qHMeYzMmQFp8D9
n/u44phNYf/HD2cIeQJu+pG3mRVIfXujcDfLDPqGGA4jf8K1GmV7ad0JXNuv
VZbAZQ6vtNRfQO81yXRcu/jEA0iwFBn8fmoG9/3cjkb2UyfkPBjwxBv0xouJ
zEuZwsE3CxkovpyZu3nKZ9QHcLUrnhn5YwQrPywWo787ofJtc8TeywdYXTzF
lspjAA9rdcmg+6d3TzMz/XziBYbV/Csfi2rDoRExUeS3pwd5H5WMuAP7O5yu
tXyq0PbUq4/ofve2KI/1Gx4X8PzdgYM6bgrwHpeCKooLpzhJxnnw+YPwj6P7
mfD+s+TS1QtI71lyLEJRzVYg7QvJg0B/PljzuOM1mh8plpHC+QkjMD6gpmSn
yA5/yo9loPmJqQq7RMymATbG/ATEGulgdTdpAGE/q25UDdwzgflq+q5VRxiA
rHeAKXreJOyW1vnwC1CaAYx57WMHGbeupaP2H6U6yeNc7CGxoSZ7dAsPsJRu
oUPzHHTzhV1e9GXoPtGUciZeBDgv1moh+yf/tMIYKeAMQ6HrD6fHkiDls4sQ
8p9uB7x7uVOc4fnN1mNNJXIgbPZqOxpvVqvzOKvgFeiTfvBSzzEAsmrjCH5v
UeMAW8n3i/DYPZKuPDEl0A2cONF7s3jpInMvmMG3FKa+UbTKwC6I9w3S75fm
5SSXcVFI2aUssoXnb39eIOxHyDkYUlM2aYIV9dH35LJKIAg4HUP82Pz17kz5
c6BiO3zM1wCA/Mqzfqidl5KZV/X6z4P8D/WC5AJngOQhhjY0DxPrxaONs6bg
iPvTH7LhUqBwfGsXPc8ul5L9kRkHkgpZlA7ViAImc6ycsB6cJxOyuaMJf7Rx
uLFJ8IF1j8kLBP2KxjBe+GULhTSDJ2sFTgJ9w45wpFMs75K9J6kLNGmOac3h
PQwi1Twz0PzEVtbtLnR4QDvZYMEHZH+x2i9MYshPxp56sZgt4gN3Ij7VDYew
Q6K4Wz+R3Q5S7p9GfHaSmdFnSwS2xDYMId5WkHg/I8UPBpdxjN1nkYeFsVP0
6O8PRNwU7MzN94diPfdZxjBVWLg8+xDV2TboUg579/rBjc8TGQqGOnDpycuX
aJ+9IQo7H3jfG778O0bFwmEEFf0KT6D7F7uZy69XMq9C/ZGAhPZVUyht7OmG
/AONV6x8/44lrKcU4eHTtIAGizSF6DtGrxf7CNxSBS8SVHpn356HB1/qE+xt
bsKnimT0MiiLWBXFKC5AubKKDqTfVoF3eg2S3uDulw/SQWQX4NoqpxAa151r
3ULOUYFgfVEhdr70PPR5IEON1kEr3z/dHjcLATaBjEdHhC3gNMXrbXR/ZIOe
44hXWCiYkM4+KvTBFJbtf8GG7nFTDl1LrOMLAU0LyTvdc4aw6V7qELoHeuTZ
jzOXOgOBBY3m4fbVs/C+wwktVO+tnpr4HSbkC/4yuKxQPVKFfWokPcg/fL4l
ZbpC7wHSGU1ZuVrloc6bl8lI74OWDrKb/lcA09r5YuU5MdjzYz0e2XmEp/KX
cH1bUES2TPbelQc+4tL6hOyBVHfmmqKUCZC73mUqKH8Uyj1Oc0A6pVb0JIsj
1YJncf4Mr/D6VSqbsiPk53e3iz9wG0HBXwkL3nj9Xl2MKkPPk1rLXvI4fw7S
Buw238Drd/3S+GNktwIOnO2O6taw9D2LKA6vX3YZXUtC/vA8isncyQ5u1Lsu
XcXr9wEVPSF/k2NxuK/iehHK3D883obXr2fgSDT6jnlJccmPn+HzwBOUN/vw
+h1/QDOO+Ffetegv1RdgYYDB6n28fmss3ZRR++EC53GC+ibQ81VkAdJvu8ss
LernuYbS2AYWJfh3Y4MW6besWtuRUOcZ4jy8z5wH/L2WQ0+B1+/gAdMXhPMw
5Tw5dA/VAC7m0gt/vH5D+V8R6qvFJtU10dGaoPyovCIlXr+/xG+cIexTfH3u
sskpDUYwr//H2XmHcx29cV/2SlZCkrL3Himfk5WZnb1XyspMVvYum+wVSURo
ke9BpciKjCglUaFBsiLP93z163c9fzx/PL+/uq7X1XU+n+/HeZ/7Pve57/tw
H8frN/3pexziUjNR7QYaJ6HPk6HjSL8PVVlrEJ+euCw3ccEKnl2ljOTA67cq
U50UfTdBM+a43Idu0L95TKgVr1+S1yxe6O+YQnyQqeSPD5SSiZTIwOsXvObq
RP58DE1dRbHvRRg5LyWTg9dvsRptBdJd1fxjb+mkUEjyzGR9CK/fe6bHmPrQ
PPEPdUCcY5VuxQ2v3/ogHzLE1b/E2CdfioDfrDZ6ovH6tXPP+9mK50y5GWIU
RFGQS4BZ7Clev7/i2zNR/L+ekvWdskUU1HnSkMSI1y9U2kOL6sLo8vkvMlFG
QjfqG2R/jhjBuI8CUijukbPXZovhWgj0O7uj0YzX74hzWhyK/9u+27o+keYD
V+hqBA/h9dubOCWP7GYX6aRs5j4TaJhAOvIFr9/RQEcPNE8OzWAvb7M6gGGi
5COdeP2+1SrnRvadr5HBOS0iADyNrRMIwuv3im7LAIrP5F5fH9WRjAANT6NG
JvH6JXVZ90O/Kyk/nnyaIgbsCUvyasPrl0mJVy4Pz+d7ZXbGFmPBi2WDEHK8
fumMRFZj8dxNZtD22FAsaMwUE2zE65cxS6QJ1Y+b1qvIV2xEA5thZaECvH4Z
NUJCCtB8eBNsY/spAlTPlt9drlCDnUM/eVG/C/vzhyIORQWDr5WZ27R4/d6k
YplG+0ebZkY3Rg0/oDO4P1gRr1/VnJR6FF/dn8Hb3UlyHgSNhJq04/U7PmXt
jOydd0H7NqWWPXB0yhEUxuv3NI/KOPo+Sf36Avm5J+AjV+exHl1q0DWp2Ivm
m4VH5vA2tzp0rri0v4J4P3BzSr6K+CPzD/Zf9+P3FYpspRnnD4ODuVUCiDPR
j3kbVBrBz/knPa338YGrJq2FSEcM89hMJTCFLxuukzpLiwLpqVoSxLv0SnOT
UszhUmQlrYiGFFBxvpiG5vMWMU6fq8kcss0fUwpvlgUuncERiHs1peW5MpjC
wloql85IBRDRcvEn4izE14tiig0g3VfdoXJLRRB+y7kdjS+pX9vtkKoCU0kt
FFbJjgMaS6VQ9J7x+Rwxb3i4IHtQeo+dryIIyJQbRDzMt6zL04AHVPt1khA/
UgCrtw2GERfidVGvjeAEsxGP6L/zyYG7fI2EfIACmY9P2EtkIYf4zrcztNJg
aISd8N0EPjMOPfc2ht5nJbHhYHGg7N0aiN4ngh+bVY50gjFlQELquQDYqikn
RevSs2z/r5cwbzh9vi/1zNgR8JbsZAuyU08eaw2WcQfC81mfqw7OMoELYmzW
03h+hZExpp49DB43dVOO/1KKi/NeoEP1zu6tsPg5TxQcY71q90LiIKReN2qo
w/Of4rM5iKsWJdZIkkrA43vFKhA/xAE7+jJi4dYLyhRSjhNwUv60H+pDsufl
zEaVYQIsS3GyKo1ShwU5lQ3ueO5bbRL94kYiVLF6/forpx5kaM+6aonnWm/v
Vqi/TYBZ+wQ+6Nwxho16FQtOyJ+85TyyEBELP2G13My65tDv10cWdL4W92GK
RVLyMvxIqbgh6W8N2RbnyZG9Uy35FumU5wUZ2lSKalvsoGjXjjeyU8E6lt8u
XtAAD2Qn4/um7GF3oDwpmrev+0M7nzgE4Pdh9wUfczhAJ/3S11NoPq8XL/5Z
igK6gSJZPCn28NZXqm10PtJLxkpZrpoIFFsmr3wLsoVrI19foHrwmzJSwd9W
UoDuONvCeK0lXG7YmyOM1oeLh/O/tV8BrC6PpiwFTeHzmF8Q5R+aq/LqvPiQ
DKrWeEkWLhhCvb5YlxN4PvOovDaNIgFoCZxWLVnRgtI9/r9R3m/fg1SNRY5o
ILba8ePJMRX4/emkOTqH/XOT4t0aZyiQ9LcyenlQAe4PmfNC69vdkJrVbT4/
4OV+8anxb1H49McSKdpvJtN8SwSCbmBre/lJWPgR+E1D5A1a529UJX94XCwG
Pfgb+9kjdrD9+QcJ51aZZ1bL5GXkoY3zs5g39lSgUvIBYd6Km+dOKPifhLOZ
87rTkkxgOOd9CyE/51D3geAJdfhCQzbdz/og0MPdjiWcPxoLTc8d1IE0Jo+L
xi4cBUx6q4R4pk2hpuiMkD4k1lAZ6M7kB23vA0gJ+77D6iwX7Q2g4N753qRq
EZCWuDZHON+sjHKrfKIHu2fGyGyzJQC9BQ/hfP+48Jg053dNKB4ROPxGSwqE
yt/SJ8T5K//YP/I7CWkLWn5EKUqDQcVjlYin/e4SKbooAbXebz07oi0NKt69
IJyblG5Fpi3UHoFpDtV7Tl6WAldpHs0S1rFzed/0PaTgvlMp+o4kkkBOqXGc
kOfDT80MsrXgT7sXyzMCYoDnmJAe4tkjR0o+qlnB+JnA9tVXgoBuZW0vWmfy
D9uqj4+fhQt6xzc6pHlBfBDGgvYX6x8Tu3vNfWHF7aDLhj8Pg8IylWVkj9Te
tK8IrlyCwddvdzY1MQJ2j18fUV5l/ezccr5BJAzbnPpU/qEeS+0RokXnVj/y
rgyWUsdBz/aTmZzC7FAh8Gx8HJ6P2fh1IT7hZzxoXyoORa76BSNO2tfcHvcs
CTLiVtdv8p+A7CtPonXxvINq8pXQ6FUoxyUu4fdYHa4nDvUyID/QtUi+pCIN
PrG04r3cpgdlk9Ol5v98B2+N5WoeZqVBl7rbXRHqJnAyptt3Ac9L0iVtjUev
wHTDz2RFShaw2/DEd07kD8fkc9cIx8MvYu3dx8dtYLHGUd1AtC4xvwP18iHw
0pNXvyn77aHC0yQt5CfQrmZUCPUYQNFr23xxNI5werpwAO0fBXDrb+OP+AM9
Ma/2ukuO0EY33BStb150uYWaHrFAnr5LK5rMEc4W5oqjelidsGfzPqlXwY3J
kfrFh/YwPLP5CCPycxSD5yPFMwB/7SJ3SzjejpfzvLmDf/8/YVKz1AKZ4FrI
bW/6m+YQ/L5RchXVmT6Xz6PWyACvZArjKqKNITERp3sDnht9xzY0v6YCXWWu
syIip+EQsYURqhcIXvRrPHQzEVyqV8wMvqoGPycNrqJ1b89e/TR2ymhQxCPm
vKV8HGoPE6tV4nmjWufUFZZgwF0wGBqzLgGNqgKd0d/dsfeC6GDCBUBdQ97e
2M8NH0zdmEHx5NGd9WsLjZzwcGKNmYfiEtZODgh5YtOkMwtVa/zw1fyTqAze
Lexd2ytCHuk4FBb3vSYJE/o7B8hqyIAjzW68dDyQpfKRugJkp4+9ejFxHxhZ
kSHEx35t9dWs6gP42mpP1M+n+4F65FQ74prc2Wxi91Vg5ttuR90svKM8okTQ
1/cD4/ZX/dRgf4p5b//rI4Chx5+QZ/t09c4y3KcGy6TtNZoUeYFenBnh/OLE
9pm4j9rK8P0J2wODFAJgkkGhFvEQ15tj95aOQW71Ak+5GUFQcz+AEC9iuEh+
QCxOCk7Gbd1sTxUCiRXxhPM4Yi0G2dKXUjDFZcLVnkwIKGNaBD68RaXps3US
qnf+SLvuJwD46+JuI27c+Pg7W7ghfC4Vz9MgxAdofpl0oXVGbl6uW9HAHopn
23pIeXGDgpzcl8heZJ4MC7PjdYe9SucOhytzgVOxWBBhv3+XV9Ct2h/O9u1U
6kSzAhbqW4Yo3k6lKj19xysMajPvJzUJpgaXTr2fQOd0v/4onjObj4ZfJJpa
D0Yu4k5rB48V4nnTgY3u3rZEONOhQMt4hgO6JEUZo3kyM6WMQ9xv8g9wuS0O
j75YPYV4ZLztnOmDVBh9oKRnOPQ4zAwLVCHF8y9KNC+jozKggt5z9cxtNUgz
nfO1Gj8/r83ckglTy4K5NxzVO4JPw2q/KFNnPL+/eTJyMC0LLhvePN15zhgu
fy5PNMPzjhrpyfObGVDvCDvHfnlzSG1aEpmN52eDSynEG6/CXEleo0PQGmru
c5FC60PcdfMBwTvRUE9gNrdG3R4S6yfPoz4SXYuz6+t3zsKHakabtJkOcCqk
0RXF3455LuPY5XyB+K8tR8jqCDGZK/zonC63Xugxe1o8+Nl+g/w9zgFqXi9T
v4Dnj0+cpeXrTgeOOgeavyfbQ5uzATaob4NYqq3Kdk82uFnz3qJW2wamx8Td
PILntPIKrRMOuUB3Y3m4K80cvsx3H5vYxq/PTry0Y9dygFHC8nkQYgwTLE++
2sFzHvYuXobFTGDnpVQRJnAalv9OVfLFjyMcUy319nAaMGeKnTRPUYO4hfqM
33geu6x8oJk6AeSo2OXpyx+HQbh3+t749xQuD6d4mBgBclfvRxt/koDZKylX
kP9/byerjZgkAFwdS828dIMb7hMhcURxhk17P/qWPloY7Dr9fUlqGju1Jrxb
Lzx6ZE1b/QCkW41zt7yxiJVXjhDyQ+IUynxs247AnAf1NF8yV7FzFr8I58v2
9lzXbC8Iwj/d8YdNpolAtkwhoX6Eab6N/xW1JMzybwlq3KEAAfhVCnEe2bYs
ysOycM8kGJ89Tg9CO1lmEHe0hXLWX+QhC0N2N+0sM9CTSSWsA9g8fVfUeQV4
/V3CybxUNsBoKkGwgwxxsZu/bOQgTdalks76Q+CbgDbBT/CYu1a2QSkNZR7W
+ZVZcYGjpiIEe2owLaY9/EAShubdIP3BeQSEnush9Gl0nI0p/lMkD3E3N9hn
GI6A/Xw5u3bWVuq26iV1+JOlXEpMlwv4zqcT8pG4bvIKfvI3gYsPDccC1g6B
y/6klki/o6ne1LUijjCM6/mkYxQ70P5A9Ar5yad7SukU73rCvlGTsgQ6FmDz
aFwazcPpn6XlDwoC4fHmhbVzhftA2UI/LYp75FWNzjadiICz/RtXN1Q3MO0R
KxYcnp902E44JRUHjcwcHbEwInhXWH84Bs8F+Y/eKf+ZAjsW+mDmvUNQIH+P
pxjyuy59r0J80+CMk+y4KDz0J9ER8VE5E5a6jXRYRzN36lmbAiS+//beI/y8
ImcrTThwNBvepYizwtxV4BJ5LrEynuc+bOguNsuFpx5zhkiGacGDV2a8pvDz
Nqlh+334Wi4Uzacqz75pANvFGL3a8dzwEYVGbHgOTDjoqvQUZwJJzS6qkSL7
dVrJ1rs2AxpfyXt9tdYcRuRMzpSiPPMbXDGpsonwdp+YkCOtNeResadB+XiW
FTI17Yx+MOGs06smH1to+CP0Olrfum5tvOoivgAy22xuP4ywgwHr24T6DlNp
s1lnkAiIi2tkFsnsIOt6zjvkJ7e8KLNx+ZEJwmabfCbIbOBlBqaD3vjnXtjL
znp67RqYdI/cVIcWMF19kOQq0il/a9wD7gLAaxCecb74DCxR8Qo7hOrpcJci
qgLywa37Kmd8eQ3h2VMHSlXwXDKDkWQoKBec4+beqizXgolU9pbjeD7A3NSb
zJwJcKqKLPfJVOArHp1rmfjnZjHefLYRnwIyNg+V7n8mD+Mqzpuj/jC4T8vy
vtXRQETXy4DbThRKlxKZluC5il+C9NBWEGhNlO8ZX+aC56osfqHz1gKvGy/P
am3gZEFKPLHzALbCOLabr6VXq9skSwZ9T6c/6X45gdG2pBD4ybblrG8D9DBZ
t9jIvGMW41p5u5u/bX+M5wgNGwyXYPcd6f6Becnu5oMlNDJaRToegeIfL43s
q1nH3OmOEOo+roDx4cRTfJDJx2Mj/fge0PBrhXAeLb024dnFLARZytsfPn9L
Dmzt36wgnv+HrOhxtzCszW8c/d1OCx5mcf1EfLlPyXfMWRgqln5M9GdnAAef
HiFwIW53lmU2YWhzUeRc6gkmkEfGTOBU3KeYOTglYLX+4q/zwczgszQXIS+i
x0e6K//BMTj8846OVTMzWOXYJNTFWA1bElX90YCr2vs0XbeZgGJxhBfin8kv
pXvomkLiwMZch2hGQNniTciP+l1+6XSarxOUodUVOGFDD3S+cLEg/YqGt8dl
F3pDnAeTmW0VNeitY3ck5I/dGwo7yhkExTBL37mQPeDdnT/XUVyXt+UW04Xz
kVBfXlC7WPY19vvJhHAznr+TLrk09zUenikWGKZtI4ZPnDTHkH0xfdszz2uc
CskFfCToj7LBqx36NdR47v359Qzi1OW2/Y0n+CHnkNl1xAusJEJXLmdCCt7W
lcvnpKCn/6OKaPy8UquW8Ur9kwPXflKmvChXhKdtekm/4+dhkWFFSGBsHmTA
GrMmDqnAiDxdJX9kd75O7Ek4lw8FXHCSW9Ea8G3l20fqeP5jkE3Q/EAe5G8g
6iw7fRpGUz64nIj6Njw5nlkpnw1HIyyo/ZMM4eRQccYJ/HPvEpP22xVegb3d
9QPDR0wgp8F5GZRnjru1b9RY5hLk4vcwnGM2hc4J7M4oT8Z30BRTNXQHLzXM
k7iYzCDjZKYKWg/Pdy+GtoMk4CCp6zzyxRTeT7VvQPWbSjlyOOuwbKBEr/y5
I/MMJL/daCSB7OMNzhZbiwIw+P7lxJ/jxjBCPd2XEf+etE3z8d4kxUAjhpiy
T9oARq2Vb1za+g4oi/e/MPApAmqn441bcVpQ8+P06UI8NznSx35WMR/0RKs/
XwWq0KdcuFAfP84wlfTJKIds8NiMSoCa4jgkF2Yok8M/9yGOw0KVJA1kd3oI
rDyRhDdlei7v4LnZB+ef6cxxQD+H21ZrmBdmc60xo/0O7ZMJzmd0oeBsU5Hg
xAYrvNNd0Y32y1lSLGGBTz/iTkS7cBSdaMEkDuzWN5XIvGSz5FzG7R+7M+rP
+Qyb+rVbD/WS7QSj5Jtt3NPV1bf1LsPYg74uAjeO/VEvQEcBJ0RLb/wheoc9
srpI4C/85U1OJdFDiaGiyY8Zn7DStlmC3pc/hO9Tmd4Pj5lmuKaRLGH2ovsI
fMIhNdH5Kjv8Zn87SAqsYfe2OXbt/k9H5m8fDsEyTz7ana1tTOCa9taun8Bo
qGDFBXkELlL5KBKD2MHdevBpD7L93Ne4IV9dGYXde1JQoZtJyDvFnWbOalUU
hWy2Ezcfp5EDBVV+Qt6ansltt5RzivCgeI2eKBcFOJ7ynhC/OnCUXEhLXgt+
DJRbOFVGDow/J9ojbiv6uYdFxQyCRdkHPVpkoONS0QdCvm55/n4OHme4MdAR
NShPAno5tqvRfk291FhI3+wCTEm1elAhRQT+aAN9dK49ntX4smI9CLrVXSAv
PLyG7Y9/TI7Oa8RDanNVGaLgr+Zf7rxO0xij7WcnFAfuKnbhvzueABs/BBA/
MfmCq7Pmr0b9MEfDS96MKKdBE6FSxoU5UvhCr7Ie9Uu5fUt6EvF7CmOHIyuZ
oMidtNuIV764kcSmmAXf354JsCzkhEeLlwZRXwLJPRPX9d/kwgtVjC1LrbxQ
+fxCGurDkJx3PjH+Sj58fePA0PQ5UcgxY9GF4fmtex6XqisK4FehknvbttLw
VyRulATPtahiWjSi8uGr9i2e0B8KsKzrALEynsssvOa8gsuBdBM7S1ckANzY
6XDexPPfyotqR9XToA796I5MpwqM1u9eXMW/j4HU27s7M2HwjL7N0slodRia
tdCM6j7MiXQkGphcQcDSTGKLgwZ8mN75GsUTbhiWJWSpJIG7Ht/z7PdowvCR
E5TGeO7qRa41LJIDuGacD1hhGlCDcbOOCT++ePxzwFpQCNyd49+fk1WHFdyW
B/vwetxOC7r0uqIEUFdwVm8rqMCtvbLmLHi+RFPOqSpdAtrnIxs7/JRgNKP9
QSk8d7nb+b1otgC0zCybx5rLQWeNhPBfeL76KnL1Ql8O4NT/OQc6xWF6q+/C
Gv73nkrmJ1o/mA7SgwMV7zLxwj7fkWOT+PeR0rUb5SqOB/4PfjKvULPDd6zq
iah+NsxvZWeMNBwkDpB0s03shc9Fn9Si7yAZ/eGSwdwALnQ7O4tN9DqG/d6t
S9o8Is3N/OMNzmjveYWD7o2YW+VuPfLQyCRNTMdnXJfV3oFPFO2YqchuH5L7
v55xrD3+icuvUX72Pa0He/JxjsCf2Tbfr1HZxu08uioWO/sKy3m+2/eAdHHZ
jI+CFDI8JOIuYHuHYUu5u30GtC9MPL5EBTsGRB2rhmaxGL3dPsNnV/RpvSX2
wRmSRNDev4gFje0Q9H43QCFg/08muLS0UHvp7RLmyGBL4LKtl1t+vzwEJ+z2
1dCMr2AKee4EvZNKScpqNgvBa+GJvSFbq9i16BaCfX/RxGIYyqoImyWNSqRk
1rEjN3VGCPmK5DYDbnpa0LpJ7bZM5zp2KRUS6gK6pIeeSuiYQe2JhF+ZUhuY
mCuYRvpdPSZ72ILDGdYceKRjL7iJ2ZrR30b65d0mt9XRvQAXJX/RDklsYVdD
n7kg/TYsMqfozwXBebFqZsu7O9jS22cA6fdrR5H5K6Io6B86nKN1nRg0nXix
hvSrqNu2dOx+AvxSkfzHgJICaJVcPYXqLPArhsu3I2nwZhOpzujOXqDg3vAA
7bOuh3IT+ObR3pRBe2aQpLB8H/EmtTToRZEF4dEzGiTLB8HjpvxuL9R/4OSN
kpTCXKjp+QLD5R0FkaVFrkP4+bb8s59/zigfHpY2fl9szQ9y71z9rI3nd2X0
mc8nFkDhrw6LauLC4GiRTDIVnsdo/P7uWJ4PvdLlEzPWRMDTdjofReRvHxKk
8uDNhWcbV0xvbwqDjC9W3KifktmG5XvV+TT4+Dw8NMctAJ4IUg1P49+HXVfU
Wy8yAvanZh9doz4KdHpfv0P7wXGZkwxSk3bAnTi7NTl4P/AvtKdA54ktt5b8
7pMmAt4vp/vYDH9jq8Tm0SgeLu3z3XELv8/9ZBRvPKK+hjO61EbCix+fbOH7
TZ3wQsDHQ6VZKU0HG0X3rA/jdVcj/iLmx9MSYEx/qP20HzMcVxmRo8NzK4Ei
07XoErD3ISCKomSBRAvf4jnx/CpX+E6RfiFIYDR1cchhhqbRL4yn8NwocfRD
0fFcoJhhcF1NggE+Z+oX+Ij/vRRuryTfhKWDr/QZouAnFfSxjiTtR30RWz0K
P8olgIgun4rC7j3QOvyBmyfaT5HeXYseDwelPq9Z/AVWcSGYVgKqCzik/cwy
fegezvzC16dva1KwqqnduuDh2xxHVyOe4vp1HG7MixVgMX/7+OlIV3SLMg/j
9veUnapIrcayknb1/mpd0CbA7x1uQfVl5Fumuxgjxa7elfK0+u3pP+OEBS28
/Tk6sKiaXb3ncLb8PntiCXdOhXlmUawHs368uNuf5Bjf3a6iNRxWy7T+aXgI
G+2YJPCbOIHU4+lEEDOryG51f40ZTT7YrZekfD1sQkcNRQWcmMa532Ph0rv3
+HymkyLjXj4Af6wVe30/O4MZ3Hu0vRuvPptuoigAw1tDeOa95rCzYr2EuJxr
tR53yyMFKNO68VSm4guGTdx7jTi5d7s7t6wm1K3Nj9fh/4Z12/oQ+skcErnR
UKRuCs1Kvy7s3VzGzF3fEfJgrex49TqknKCw8nue3K8bmNmFJCXkP8dHGoU6
M3vDZk/5SI9pYmAZPPkJ+c+qnnxL5PcuwoBAhQvnnGmBvcWDSVT/O9Fs/PQy
RyS8wJxfb3hpP6igGO1B56ofeaja7b3i4R2Zw4r9TFyAXSz9IYrffjVoDnOK
vApvnZC4/ecaP9B7M6iH6h/3L5T7IT5OO/GW/p0E+GHQoo64vpTrNfW5DPg4
q+BRkp48iHxuWpmPnz9u4TyBAqdyYP2cywh4hwGrPNlM1Iew6kbJBvvMNah4
QGzILE4V4HzuC2Xh52GJAh19uhBe11M2BVi8Bughdqk1wvNP69RtbTF5MPFT
p3PfljZ4X7T/jx+e9xXLCN3zy4F+pi5Bw4GnwSRFzw45fnynmY0Dn2EaxCCf
5UKJHrDfNxw9h+daF59LamlFQovrm2VuunogkmjTBe0jyH1M1O9eMQQDL8Km
2SN1gV4tJELff//3wVm9wDjQczk6MN5XC9y1Z1BEdTSnJC5Sm+pkgUb3hDj5
MHVweSe1ygk/fsP9a+ERK/ngefDWO4EDyoDxARuJIP49PVV+vMyzLgb5mUJz
PwOPgVS8vFzweiwhKb4kbVkMzN7fvi9aLQmqU0f8XZHeJeZjSfwLQNRcQcFC
ER+gYdkjQIcfx+lyjdifWzng+04q1f0odvBU4MOXbTyf2wnwnRFOB9P0KZT0
rLSgMF+C8zXav6g4xBZ/igfVTIxDaz6bmFpsxlHUP0q+ouxHd0E4kKmlyB73
m8VWGct8UD7J3U9s16o9i3H6YnM2DuW+mO7f/lpTT+9ELtXV4T6Tbew77hqF
fV7a5VScNE+b8J7/0VymB3vV0jGhwb/99Nyeu0mrPsOdSh/O47pZjNEG7PJc
fiwvI2sINxGY9jKz8iYWXrird/UxflHFyje4G8Do6VuBZoy6cVfvVoz25P0n
5nBMl3dSTnS1YWl0u30FZZvpPVZXlnHaR8XVBVqfYDjO3b5kPlnSo8q+xJA8
+qf/6egXWKNkzW69c/jtENc6Jnj/U0Evac9L7ENayK5ddri25m/MC7UExl84
Ko9h1+58INRvesqmGtw9JQfPiqjG6tG9x26fXif0M+8UYXQknVeHgbc6QvJp
P2MVup8J9WUjya3+TMImcFoirMLf9Cf2S5fvHJo/tOcP+eTZOcALvox6XIeI
AKuHqyaKP2+cLLMOYfOAmN3bm+Qz1OBd/3I1yiNqPH9/9oNbAGTKFd+U2NwP
ErZpzVEekZIHUdXSeDj8tWfOzuz8EWDbQxKF1lujApcHQcyxkFZgXiOoQgj8
VOh9k4bndUr8o0Jnk+HpmI7Z7RJpEG1SIqSGftelCIj4IDHfzYWJ4+DaDWlG
xC/DgKWE9TSYXGBreIRIFVyMVy1+h/oqnNYcdMLbZY+i4ZmRt5pg8US7NLLL
JcM+y0UBOfCwyNEAD3l98GogPxXpTsRo1Wm2IxcSOXRxP3hhBDBGtiM9+Pnp
8/1W6KpdLjw6dLt46+4ZUJhF3jyJ58FEG7+uvcqCYrXkFv405iD27PNuHfw4
/sf3t1S1p0Kc6y2Kp5EWQOkzm9Me5HfdKZsTMouEvzNCt36/swDKdF2yjShu
INLHds6TCz+flylVaCxANlN2AvJ/XquUR7IORwEXPRlFBXoz8DRC2gSdy1zh
u0UjP54Ohh0Grv/hMQGF22SrKP5s9YosbETsGuhxZxrXKTMASh8/kN3Dv+cZ
6U7WO3kFwMRSKXt8QgtUsT72JMPzQ+ZvC+VmCsAo4PCseq0CYvTIXiA/mcbs
6/Gei3kgyHCx+dGtY0CUJO3wRfz/P57/fs+HY9mg/sN3a7eTEiBi/zdTJfxz
n0ya9psrpAEveUGhfCpukNlQMLWO+jI97aG50xUHjs5yB+bFMINcZuHT6F6D
OfEIN3K3MGBKMi9uK0sKypobfqLzCJao51RKD6Jw+iIYRd6CKfaf/paa7b+M
OCYycL5FnDF17mexrL99tK457z31RLQcVxvi1JtRH4jd+9t3K2depvcsewMu
MzJRNrklBrP/239Pbk/fyIWyVtyXgX0Md/vTMdqBXV4UMkMmIfUc96yw7AvX
cCHmfH6Xe2yTuFiXjuLGZiuDMa4qzHV9t99vZ6/0RaXpT7gXuQGdQjYNmCb5
bn/gzRP8pWnmv3GDRaWea2QPMI7Du30I3bSH1X/07YNsJ6+P9yt2Yv4viAmc
KMKUln7iCGxXUKQJKu7DBF1ICfvl+wfKgkPeS0HNVRq9ubevsYSd+18Qbw6f
FM++rgKfPWezEMj/hD26xnSTcJ51UYGeScwQ0sRn8/Pf/oVxPGsdJ9Sh8NCo
RRfawNGfATEwkgScUXmRgfw6Kv+Y1I2ls7DgCLAf+kEPzkQ7UKH92uUmqeE7
J3whX8O+R3KKHKDjoKs0yrNaVCfnD1QNhmSGe//oxfIBVZg3ifpS/vIKKRdd
joS/+Kg5DGUlwQKd3rl6NE7/KFuZRTzsLjzKYShzDKSPZSZcxHOSsbtbpXi+
p4pnvOKhMlBkaXNA3E4u9Vf/dgqcDvx4kOmHBtg4OHBaFMUBXmsQ7xVLh0eE
iP0SaPA6ZW+YGUP+Ns/c00GHTNg0Uk953NoYhNIfHY3D88YJRc3Amix4v1JP
5hVmBmxZ3Z8Yob5Dy9f6UpOyIHe7jA71e0ugUoVJonMly4dc2K/UDHhYqGj0
+JwNSC2UXEB9tm3nInAaKymQRHrijtUvOxAgXXdOCP8+InO4W32PI6DdF69z
h+zswaJsfTKhnvo9a9raHy1YNnI4KILSHkD84oHWyfi2e5b60mFgg6L57JGv
NqBCLEsW7RPrh0Jsb+VfAVtveRT2JFiCfe9JuVE/tHBeiYKd3Cwgv+X/YVHd
FBi3Vsyfwb+PMrxzb/1TLmhk3Pl1pMoQdMfmST/G6/FS08L1/WHXQIU1g+sb
fW2Q/udR8g08d43jyU65ngPOjoQ+p3RSAV5lIV/+4Pl3ZwsfR9ZMILLoUnWc
SAEkX/4hheLPQR7qOPLYK+BF/KEv6TyiYC/Jrf18yN5Rade6/4oBzvY+96wd
uUCLGI1QBp6zcbNEaFmFgGZ1havk6/RAcL1QAeWFborEf6b45Iyb1jmX2wyO
Yf+5n5HOkyLkXk8A7uZJNzGie9rYh788fok41rExDsfdp8++0WeJhf7lPriS
kH7bbJyrlPcdDstzmNhfvT94Je0+PHcdl6afvD+xMBCj+3sv1UbKh7wh2Xu4
EiMhM67T0Vj/+12epHtgJSavGxfZ/4zqx6E0jM9ql1eTy2kq/n6Hq6untKI6
WYDp/tntKyLYbfHgtvAKLpv/GU+VUjXGl7i779azPtjXH08JXXfSHqUw38eI
vM8ReMTE2rXSvRywj3i/BTj6DLMMXyTsiy2z/XNUPovCb9tPzu27MoZx0O3e
BzQVtdyteVMJ6lkkCeZlfsIu3twk1MMa7n15lcxNB77wFewf7ljFwh6zqhHs
frSpYvlNM1gf6PeaZYsU9GtUDSC7oFe7XMcv6ATv+DYVv/FkBLjhIyrIrz7+
yC//s4In1IA/E0eGOcGN4MjrKI5auuJ+PZspALa2zfPEZwsArbI90ui8T5VE
kHJiOhTyy8pmET+UAh3Z210o/8psD5mv2bso2EtW9qFB4zigJ5PvQvXLdKX7
zBC3NHtKfJFeFcTum8pD/Mw57ra0rHionSMz9CtLCyiL81qgOEnwb/b3lSIp
kDNbWvbEZQNAU+AarIDnpmNFH8po0uBaflVldbgJENBmn0F9h7hbFyO+aqfD
1oOfwp+nmoMnA83ZQ3hu+iZWLt81Hcp9IfkR72YN5h2rqND+zkahY35zKRVO
HV4aAA12IKdt6jsa52hDHqtrUiK001DvnydxABm60U7m+Ofebpm94Wp/Gc77
zpz0TXEAe+8dqCbcK9d0RntfswXc2ah90WniAC71vn2I8ipvFRYKzHf5gxaH
66eVzOzB5tfP4+g87gzxGouPQjyYoj63rWFiA0ZaLowG4LmTVNK+R3fTwPGA
p51nNs2B/E6bEfLb4Qz5jn1/Jni+fXjJjcsEXCarY0X3DiznC1anl2SBmzaD
b1mv6YEm3oYHSO9cUm9zH5hnAjqf0xypb9RB7esXsol43kcrnP40MQ08TrJh
k1ZXAkSrVKrf8Py09YmrCp8SAdvxrCdWWlKAtfuzEPq9dhTek09KowAHP9ZE
epwX8BCbKqA+aRa/Rx5WlgSBBnWtjXPdLKBE7AHrBJoPmWvT54XVcdQRTVbG
dKzYf/pCX5k0rMt6ZYpT8qh3Z2IQxv7TR/puW3xrT4w7Lvl5fHDixxPYyl+u
9DrDnv9qKE62YVRO/bcu9p/+8ze8Ly+o6KbjLh+9M3iz3Qob+qvretbve0WG
q3Aro6GFOiHnsaG1Xe7fGz4nwgRxq4kzHZyMwVjo412+Xbr2/nzICC64U4Jq
SSoZ65Xc9cO926/oXo5YxEleZZrS2VeMUer8JHBcbsEjsfY9MF30wrfn9Hcw
MYE7BP7xzd08imRmKOsbX74g9xgjLrEg+NXz8n4wip4PqtS0H37++RVWtehI
8KtrssKbrYjkoLC5+sLv+lnMrub+NCEezjPZFXJeDda827DUNPqFYXX1hP4V
ivySZPcaDCF2bs+FlHESkGB1i5DX8SLitxw7zhq2bD4VgpEMgMu35gmyy6tO
sdTv/rjAdxSCCZ+NDwGO0nOeaB6aGe97p/jeG3qRL7qK2fMDcJf/ANovt50b
qxv+HQDNDwf/6X4iCTJHbt9HeUfEdzaJCrZCYZP82C2aoWPAdCrQCOnaoc38
TT6eP9aI8OraVgZ8hnLCiDOL5IcrGkRB++H2Ni9mTfAzQDUH5TPzlcHeQKE4
OCQoY9lDpA8edc0dQ+fLVKuU0iPXEqFhlZElAMbgQd9NHMoD+fQHe2GzmQx7
bN1M3PabgYeSefKKeN7rVn/+UkYKDOzgzwjssARZpl/ZJPFc2HiKIb8hCW7b
nLx87qcN0Dt3wxX1L7rdVvO0ZS4W8uGevb0jaA9eRQTsoL5n9MkdZodCQmHr
vbYHEc/sQa0m5afneM7ZXDploekA02iHG7Lv2gMvHu91lE+4PTh6++OL84C+
T4Xszys7UKgTNYS+25KIwjd9g0iwZMBhar6A6n7Me9A9QY132tftdhKBxWra
i7otcyAl+jvbBM+tr/u9oU9PBZpRm/vGg0zAoNrWcTI8Vx4r/prYmgYSKQ/Q
P7+rD4goRcg+4fX4m0uwVm06FZBE7GDPjmoAMiISB+T/V7tZPzhxPRk8Td1H
HlUPAG/OpdaTyH87XXDl61IsMNLRNa/XkAE29MQRKL9aO66y0eHPZXCSkrL4
J58A0Lt/cBuieSXupfXDOwAcj/rGkV7MDpiKNNXQPkvbXfZLGgs3ToTmetfD
vatK//q6n6T8cO+gLK48I2LOyZPqn65ZvLW1blAZ4opdwpnrNQ7942UWKuVv
TJxxehqyRZ2sEv/s+LH3p98XS0bgyktbmgurlDHcX372SmQOp3Ie7vIOUfVM
vAkW9bcfZhGNSmjgnibcS/7AZSOVc5jzl12+6nk2pPLeC9wn75POxmwRGA7s
8oMbNOmusx9wL0ecPyrlZGGs53fvucPqeEsffF7DLdf7zz/MuomFHn+z20fo
wsmnQT9pYNLBZC8yfRz2KuDErl/9sb55QI0Tlixdl1xfHcTI684T7PLFgu6K
eGcxKL0/IPn9h2kMcKcQ8kuHlexOdNqdgERpE99XOpcwi5n8PsL6EHUFJ/tQ
E175SiGbUkEE/B/PuyIeNnXgxLyUCQzrpWhrubQXxFEKnEW6rlb1vtnMaQdV
JaQ6giErsH7PL4t0nVb5lc0d5woPf4lvvg25wYdHXR+Rv50pXnmVpNUbDuPc
RjqoxMAiZbYcmp8SXXYbXMcCoEnzoztHR2RB6VnXVsI++sb0LOKPSV1sqP0w
UO2LlSC+3BkSua4eAm+LHE2OO6cG3vdZsiN/LInoRWFSfwSkp7j2UslKGxCn
UTajPHziops8a53RMBBWUSR4GoDvCkoGReh9wjsOLW7EwlaPLpOtXmPAqzX6
EOX/byjpmlYOx8Hf33bkfPC6Dl9VqApB+9PJF2PtD2Ph0mGc1HliSxC0N8YS
zVsqg73B5TpRMD7wpZqshjX4aJUjiezO4GDiC4u9l+C2LstzhnwbkMk0aYHy
CcOzlxc8fZ1g0rFzCt87bcDxo1GEOjXv0z/MDqfaApXXz4Krb1qDpMIcHhT/
H5W25jZrCgLNn5iSVm0tQT1ZHh/qC6F306GNMjoaiF84dryGwwwUvKlpLUa6
dvgm9NowASh07D3lfsIYKN76WH8ez3mWOYL0VJLAYN/6irqeHjgconHPCM8F
xJj5H7okAne6CqrOqFOA5CUjhvJP3C+POBmaxOH35ydso88CkPxujR2tS1TU
+3Zur0cClshhhaJgGfDTQJwf7YMyvrH0kmQEg85XQY0R4wJAxzNkFNU7yAfq
kWQx+IIjHz0k6j8cBGXJ+tlon9V7zvMnufeftpLk9HgRmYF/+o0/Q/RUTpMB
9ynTxkoNfvjHT9GTvDwYL48T0w/5SN21+Y/fcWy9OCNqgCM6ekFulJXxn64l
1fV+Hyu4gDtx1ln8eJgg9uOvfvVut/jOnkjBsV0fuXqFSBVT+MsT8qmfM9pV
4SCHhnEltzUmsr7LN5+qvUt51o7z+ijR+PyYPxbz8K/fbjBiJqE7hjOTTvlZ
8yQZC3q/u1/+LDEgkff+K87uG9E98/UyzJRymcAZPxbfm7q+BwpbTZ8qHLyL
GdE1Evioxpc5Dm0maOrdRJox8ByzNkgm2OWvBzQdhBK5YR/t1P34gAnsWS05
Id/sbujsXkdHKei8+DQ8JHIeE9EdIfQ3FuZ8I3GV9yTUlWHjcSLawFw4bhHq
kl6TzRRZFmlD8vUEgzuq5GBW04uQL03W3rPe8MAEFpeva7x7yghyyjFDpOt0
ec4lx2ZbmF7NSJfMwAna7e6cRrrmfeX4+lGPCxy/RX4kcZkPRFfIpSB7zTnl
20TU6Qk1vUG/GZQA7yvMWZEf/keirBzxFiUz/h8h8iD2mBsF4mbuBs2JV/3g
yC+M69g9APT6Sl6j+laWpJzifdVB0Mxi84znDTUQLSCeg86z2M+sm4YWhcEw
yfzbNMTa4EPQk1hkB8/A2JWq7gg4rVuzmNigD6y/NaUivS8emOsobY+Ei0fz
yW7WGQFqRf7XaH6yaWu+eywXCV+sagY3a5wBgXfs+FA82fZgh2tmUxhkjCpq
OOVsBprXeh6ifk3V2TQK4soB0J3CW4C00xwcIR63Rf5GXIye47C3E8wTl9UI
ErEArt2cJWh9SyztUCt8oQti9Gc3F+PNAZ/sj1H03UwzFsU+zl8AhslkuNzX
psCDIp8R5WvdiBx3pjELBSIKdJLhWiZgaeixJOqvonhf4wwDbxR4Yx6mS3TI
EKxbdCbXonXyHBXF+SW83s0PGdad0QEW60qjqP5IsSjYty09GrzsfhmvnaMG
xrpkxkvwfOjkQ4P8C5HgIF3l67OcSkBMkrcD3ZsTeCuoQ/liKKhpdqR3AtKA
+dhLVZTvXewX1/HBOgDwiT9WpqjhB/WDaj5ovZUNO1PmnOwJWjYjC55+ZgdE
4lUW6O/I+j6Nio9ipM3Vgks4uLT+nx5b5IN5NaY/tWlO0tDf2On8xxPHj3Tw
kxzFtfSdnSUqnP6v3i9F0pdpH8fJe/Nff2aw9Y/fre4ReiDvgAtnOKLsJ8qK
/efehyvcZzKn1MNxk0K/QzsyZbDnf3mSukxuTMM1XLLrwyvtHgZY8V+7PNlY
lGDyrhH3XE9PLfuuG9b81y6zb2amMRf24I7wD9VJBkZiDXq7vHEv381PutO4
i2Suayr0udg9g939sq3VamxX9Qpu2SblfZtXLRZ8apbAT6r7bewbIYeDjxaY
huzasRW33f6fHeGvyJ5ZH4ATDymiXW68xFY23xDOodgHSA6ZyfLBc1We7GkT
01ipyCmCv006PC3w8L40HFOmcJjc/IFddikj5Gfex1EUCAWchMrxg8UqgX+w
P6r7HiH+/ZUwbpFSG2YMJn3DJqkAX8fHM4Rz8AJeuW+1xjDXvS7hyjgzCD4h
GoJ0fZq52z4k3xp+zfRoOE3BBRQ3hrvR/OSakZKMonOG921v8G0V8AM2TlnC
ufP7rTPCiF/pLuLywkmAu8QulYgLsT8w7mFxhzMTzRj5Nznw+dbUWZSPLaN0
/GFBjA/8rXxYjNESA1kuBtfQPG8WeuezLzYAqieHHzrmowoeG4/Vozr3yCmy
8qB3QVDwYnJTwEFNEJJN/ATl9Q1t9m0W4z2KBb9QKvpPusCrt/ACqpNN7dZQ
1HAOhn33pF32tBgAt5w2O2Rf9ugbf7qlfBG2ucjsX7lhBK67kI6ic7Rag2d9
91V84L37Wb8Pk5gAtYGSQWR3fKyj7mvUO8AwVd78lHwTwPYlzB/9rgkfYufT
jyTAAsnZJGhgAuZ1nhHWw9bu1xcEhVzB9bt6PtrcxmAx9vpHZK+LPLlTt0b9
ADXVQdIUUUPg6kYEUB51ASPJjUmOYEDdL3RuQvs0cGt1SEbxw8OXiYNkZMLA
xt097BHXNYDBhjAfus/doPVNzy+GMJBwZ4Bt344yiJOqe4v4asySR8ipYBDK
FOVe13oMaP6Wb0DjrG/RH+7qCgCL913av8pIAvYkEm30PTUBg2JY2QVQq8fA
UuzBC7J/BNajOgUfrR2ts4FnQXqZ2ZHB+6ygKb3KCa1Xuzojivi///3x/+Rp
rBUkT81ocHpcllt2ZG3/dLpD2xx56SQfji7HzzJu4b+6lsjX5JxnMcTx5kJK
nnnSf3b5MLHLs/tWXrgCaw3yDyk82H/ub6ph5VMx0EnEBbsFlPQmKGP2f3l9
LccF7coK3E+20tINDyts9W8cLPjlz8M6nI9w2oOeW00zflh4/y63mavPMksd
wlUWhvm2dCdhr6p298sNPK6GW+5zuHbluFqWrlKsmmv3fCo2v/vRIPMGztOY
7N61rCbsA0p/Rn4vKXOn9gYVzD/+jcjP5ilGO7ubT0JVSOrNtIcNWkTRUsWP
jWBHv+7euyeaIuwhE8cHlT2f1W1tfsSGOmgIumbVPPxq66g07LoZKLu6s4wx
05AT4tu/P06JM/zE4FxysbOEFhH4/fgdoR9d/6hxugq5JuS440NFl0INlKpI
vRHfz56kTkpkBB9NCT+QrWMGAhPGLYRzT1ZZUzpaS1g+xFFn850TrHkNEPrb
pAfOGiI+EzeX9sOKDwzUPzJE/Er4dUZFTkcoEc20Eq4rDqBI+QCKp4kVP80P
pnGDViE2IddkZUGltuokmucMC+F0n4W94EN3a+o/w8eBZLleDurLsfdB7XnP
Nh9YZSQQ86JKGVRUd5MjvX/Rd+qZtvGDgwY2hv6F6qBDcz87qm8FO/LeyQ5+
MC6daZ0zVAtExuTPILt/6lZM9yNHH3hFpPPu5Y+6gDdovw4ap6Of3M4s9zw8
5p+v8MIbb9+nUgl9PwTMDPg+F9tAXVsFh3uOBiAi93Acij/7BN+1zrNihXfh
Kb3PZwyAyOArQr+viGJhf0drK1DJZVV2iEUfSDr1HEHrngHRfOzeS+eBXqN6
334h/HM3vU6hdUzRUuRy5A8fYJ5D69pwXBPYSq7po3XjyXVpkg5vf7BSEV3u
iFMFVz4yxKB87DcRRPDgLX9gm9s5wW2LAUUlVybExUPl4fa2L7DtK9dpWJcF
X4TSTVE94FbK5z36VBeAi2dgKcOAKIg8HvgO5fPsYIYJI2TnwFWsVGH841Hw
QWFSEn3/5rhT2RHMjoB77BZ5+WkWUKhymdDv6P9Xv6XdvkyFzqttWhc/TOe1
3vyn0+q63x7DfIw4p+Wiq+I1//XD+zLj2yslTuK6DGie37Jc+ce7ML4xM19r
nM5j3cA72cz/4mOVqm70tNRBOFbVgzyr3ZLYm79cu6Wn2GA+A2foo+ZwQVYX
y/8bB9u0vGwqFngLJ8NvHO7f4YxJrezy5DF7mVXPTtxO81ygv30o9rHmb9zb
yi/NN34Ul8ES7uBNloGJkOzqeio5k2g18QuOv/Rza79+Jbb6bLe/7hj5G52n
Q5u4THlnK5/k+1jU7NBu3JtUr1PmBDXkXdBQprZ+jl2wMCZwKevHb68fYIV0
QqNsxXVj2EnbhwRdqwZZ6Smv8cCSZz/vhd6bxfht2Qn5nFM6OpO//CXh77PT
hwffLWNtE28J9VwOP0U2ZshPwO9GvvrGGjuY5cOafsQHZGe3H7Srw2vc72a9
X1OC/sdsiQRd33+mWH3KAH4ddk6up2AC+fp1v9C8rXjAeQzxq1R8NCdVOYBd
7fpPxM3g55VGfTOomEQbEmbLA2qs2CaQrmmaJS1O3LKDJy15ZB08RcAzQX9K
NM+1Tu1nL1V0ht4Gsl7CItLgvpRIDLJ3G/4G/ec53eB+XPoj9+8KYGtctRPN
txqXBu6U8vOwXey1wE9JAJyPhNUhXYyFiBiD1fOw+ACx9LdWFeDFfEkX8ZOt
asaPkt3g1TNibJwZ6kCMru4IGkeSjiJIT9kJDh+hoB55pgHaGLNvoOdqRVTy
dH4zhXIkt2RjGLWAyd4fhHuQ21oHfin6SEDGYC6jC0ALtIW2EepJr78cnuL8
rgfiVFebdPFWjmKgOwx9h97HfTKiSfYgb41qJEz4FGC8OIWhdYDbef+lLOmz
QEbPtmlSRRX4/iFWRPZuhq+e7zWpO0g9OftusxWAK0q/zNH7mxf6BlRNuQPb
FYbVyFYFYBz57h5aZ/rJmXRH+M4D/ijfswWSUmCZ/eZxVI+fVX3IWbLAFQyQ
B975KiMIeiQ+baDxD5hc/h3P7ggoKensP5zlAomXh98Q+pN0HT3B+dkSTIET
1QJkzMAxMFBo+3/Q7+Po0yca3d63+dLuW1/fk/VPj07ZZgEDcZttX57y3ndP
ffCP44Yo+2O1RXDk5u0Ocp//a5ffJXKozaVp4rTOLVW+bSL+Z5dvP0q4Y8fg
ghtnFi1ac+T6FwerMeNLLeyJwAmo6RA9sFbEWv7yisAeqkcPr+F0dYHNSr0x
VvjX3zaOFO/i+dKAG1CovKpp7o6xfNvlUo/uiZctPMFNvv7z4l1JJKaZsctn
VVIm6RnHcWpZK+Obh7OxqZbdffTHEwXhxve+4Jxffx2eqbqB9ZTv6vqDR3+O
980NXMmHY/WJ/Q8w2jujBN7H+4X6jRAlJBGlu84S9ByTc/Xc9f95rDR1GvfD
6Exyj5eDo9iiIj9hf+11gIn6dutROOMhl5Ou+BFb+BBG2F8/03BkfqAmDsnO
Ta5AwSXsYUsVoX+4RemMyw2pY/AG5s7qRL2FUf84TKiTerYlXrcnRBXa0Xxq
aRQgBxmfKksR5yfru4W4dkQc3zkyBjD6408J4lEit8Xzy3Uhc7IzqZwDG/Ao
CCP0XXcYKH89O2wMN19TX3ylfhQUvLvug+a5mHu0dUGdBdw0uTl910QQkEkX
OKL5MyzqqqWzYAtVtBf/DE1IgHdxJ6WQ3gsSMwMF5BzgH9O2N7hQWcDKIKmC
dKHBZz8klOkA2U3HxFNkFcHYg9Q9hHp8o3dDbtL2sDdhSeJXGgYOarTdQty3
62WhDrEl/GhQLdRDqQw+N24zoudOVRt88vEwgN2t7d3E3Cqg/jJFKXrP7ak0
WochKbhMtZfK1FsFBN+dJdSZcimzk6wlYuD5TtC5nHfKIKVmPADxA7IrL7WX
jAB/qXyfevRJ8PoPMaF/1C/iFzxmvVagwUbFLYdaCbgvJXeh33XR6Rfxl2p7
UGpeXP7zlALYq7cWg97T2muQzrvCAeydGvuiqyYNbL6Y0SL+afLQz7U9DiA7
/gZmty0CzNSHPBG//L3jccspW9A+f+A013UecEalwZngD9B/OldMZAFWAsb4
rzw5CETm3yaj37u3PRM7IWQMWHIy2O8WMIDxPeGpf/4H/WpKYfuGLj9tO5Ji
ycXvEPJPj+Jfm77Xmk23XbT3zvzSVfqP5ynvWx58woIjD/9i2FDd+49junxE
vxKlcSV+lbTffn77x02JXqiQEhnirrylGvseTvNP19mmYVJlHu64RyoDoMeT
79+5VZLH/fbEwBhcNftE+8ntk9h/7kkPOHG08UBpIS5+ukvr9W8zrOdvXlmG
FP1U/sIdXJPrDatxZ29samGXx+hxqdduPMFZSxuazTNFY9Xpu9yX06eo/P0o
DjvcJ7BQm431LO/qelGCpv+c1ydcoeJe7V72G9hVp918klcZsbcoe1ZxIc95
X+sp3Mdwbu8InMNt/5UCFTJYuJp0/ht3F4aLvUrgj94snCrmYYKmpdKpTkKv
sOKVVIKuS9OHBAaruGDvQ4qEuepp7CZZFSHPxPvDYbfAUWHYry/Sdm72K6Z/
apRQV/VRf1FEW0AO3nPd7GKKX8eGZIQJ51xGtkPCiDN0hTCrXiUBatJLhLyy
UyHK/Vj5STi81ybJVIQO2D38Qbi36Jqldj+DrQbsdV3cmbFmAZ/8E3fnudL6
2b3JerAhWGzt0KPDgFVhnJFw3qfi0ZgSYQQ3NAakH0bygvVLPuWE+Bvu5dSV
ZhMoovIhYWtAGMQZyGggXme3oJyicQY26WhYkgtIgi/h3QKIfwCyHU4jxjCP
ZM7TVFoG3NLmskH84g19IyYNA/h7pKB1564c4AB9o4i/+SQy8vmhOqS50UXh
5qQAolNfEvoTxqdRf6ypk4BWZmwBFqTHgErzZcK9Kmkjauo54/yAcWiD0TVK
AXw/lPES8fXa+c4Ee1WQrXeV6tRXOdCboRFJ8K9w948+tdAD7lX3bcmDZMDW
71hCP94s4dF5x29GoFkv/GiQlySQNS+OQ1y20eHUVIcJaPl8WpRVVwRcCipR
Q/ye052Log9NwMbjnR7Rt7wg6Akj4Z6pvGwGnvPsxsCPyWJf7l4uIHGbmqBH
Q5XMCj1jA6BML7LAYcECmAviCf7Sj9wgID6uBS5Hin0od9sLhoaFzQlxno+8
5D61HrBXbM/7n62isMbpEhuy+6Qx80KB1s6QU62LJSuYH3ZPM4Yhv2VyQG9v
kqmr0nmrrxeayI3/3QOuLOQjW+unrRSpLDV16vCpf/z/d33Isb48/pXHBBBN
ZRfsbO8HRoOGbuj9Sz8TVaHfdfVO5IFuBkagmiizgriMjPtFJ5azUPjgkzjt
Z3ywh/dJxf+yr9e9JOmo4KcPpsStrdH6lkYXTejnmbjawJKs4QjFjcPDJxR4
oEHp3o7/Zd9BI3iiTypaFzw3jiA31KYHpygeEu4F49z3cT8aX1uY+bDY1hH4
IdKp838Zv2S0oBeNz7XJ1oH+vuzi84Txqc9Svxp1sYdDYpvck/j3l4yj6/r9
P4y/MLRGmD/07t9Z0fsT1W4S7nEwdLUgsWYPgM+aB5h8LY9Dwbjh3yhe2hZi
9elwTgBUc92DPRhShJEZrk0oPmP2oZdEcOAC7K1RXXLYwaAL35GDKD6T+P3Y
zXu53rDx2QS1ewOA7mrjAuhcLE/jt6zWmDf0+l3xXpBJF9Z9TXZC+0TK9x16
NVkB0LmJYvPHujbEfnmIofHt74ePahy1htRPvb0FZU/DpXFZJmTXpuSOuiQx
HwPbViLa7FWnoZHKIuHeFjirwi/s7gRO/TGa13Q8DXOqBlTRPI/slvHkV/MB
P/jvOQdc0YU2tDIZaD+eJBOTs9clABRcFCgp6NWB4Ynb5ei55cMtlgOunuD2
dR0PEY2T0K3863EUH2YUf8vHwOoNmquJ6iznAdTn3LiOfpeeag9TnK4vqClN
iOY2UIIrGjffoL4rnsVbDyTe+gIJB6IzX6tPwGtBxKlov2x2flXTivsSlL5G
vdqLX49NL7k7ojjhm1sup5ylL8GGw4X0a9RyMKtEWwLxVey2efJcBHxDLjr4
5eYpuPh/OLrueC6/KCyrUJGMEonsSMge1957761k77333jOzSIlC2085ISFK
ISkhUnbZDcnve/v3+byf9/t+7z333nPPec55EkgYcV6AJqjh2EOPWNgxHk1q
Z1cF/QtJFTgeXvetsNBtIQQYVUUf0pBowsiUcCZ+j3gqb66AZAiwn1U1UDcz
AEeJKS7MG6EZohVSORkJ9aq29r8f68ORi3cXMJ9Tb9Xtl9mEC7iVxK88dTSE
ZIMHong9LrIyJ+vHyKHhcv8DwW8M4f2V/5z+rd+och5hCg9kLM1nPFNlCFdE
aGzwuFG6yfbGi4ai42fKDsatGMAVk2xynO+ryGb66sYSgr5Al8N+Yi0ItDm2
hr+H9/rjmlazSPRL8olRdIgByPPf/4vzI4pTRk153FHovFRyXN4VdXA5Y56P
8xpsodevC4RHo+4ed7lfa2pwecIlugPvM7vXh4ovByAa1rX5WFIpyNg21sFx
jGWJwqu+pwLRBjw+uPlLAm7Fp21gO3el3vpBdi4c2N7vDTCXCMFn2+lWnIdt
f55+w/psIogPXtl98EABxi/OJGOdF7WY5vkhqURgDYhd37iiAH9ag0gxbitH
afXyQxw8kLIMlajRhcnZyfOYZ1X8E9G/90wGpWIOKckqTZj+U0mL6x2s9OWb
jS/EwF2+stXX3wwhZ9DRGtf1vMr4ul32LB7259luJS8ZAOPA44M4z0u+cj3k
tqgXDBjlqJTXGUNtMflRbIdTX1aXXkshlC/+WrXJ0QTSHe79wv5exX/7qyN+
+aLTvNpLOydMgIeC5Ai2z6OaLVzp5jEoJKSe8g2JMXQdZqnBv3s/gvEwd2Us
SjpuIVuQrA8MGw0mmF+xZTDiEjsQj6q1DQXhhBE0oKo83G9k1EFq5Gp/IjrU
Gly6GqMD6T/eOuI+OZw2VAK11bGIt8UbJgJVYDl9dAK/52/jkdUZ6ThUBRMp
2TbKEDRwMRTng8q9FBeemwUhcoGdcYkzYnBvYPMW5mtNzXI/cg8JQhQZwm5c
jaJgem3GCOM3bS95W/RGgMtP04lf0fygosHKj/NNV6y0M11Vk4EqfrsQFKTh
9c6cA9bLo+0udkuNTwWWHBOlw3Hq0NrP1ID7CfTXc736q5gBjJzmJN3pyhAj
fu8L1hsac8t5H+6QChtaO5cYGvTA2Of9DxsCfqT68x9a7Ux4/YKVtuOyFkx3
rtbzEHB/v62p7yMJ8EpY0VqX1gi+7n2mx3zLEZNy1o4LqeCoo3Vt2McAqr4E
R+P3PLj3VOB3hj9Qr8c1Mlw3gZ4MPzUcb4//NsAXrh0Cl9YVqij9TGD8xykd
nDc8/M3nO8SHAsfGU9p7eiZweKAzFeffa0lfVp8JkUbH+ze753tN4QhHS9+/
foz/2ZsdWziHvti83ti7bwrKx8wWMf588GqIW0kgos1evdZ7yRTS1IY/4/FM
Jr7AK/ImBKUJbPFcizSFm4U9yXidVilGBjp8jEeR07VDf14ZAwe3eQvO03m6
yT4oJ4lEbhdFVUIFTMHgwVQQ3jeKP+7plH1JQoNMrRIT5IYwNvvqBuYb1FY4
C90zS0VT1s8L01iMoCj/3D6cl3++u9VITJSEtCl4U89r6IDf12weXGcdYbsl
xWCejuo24vUNk/QAemqP4XoBbvNfav7HU1HR9jq/b5Q66F9rXcC6ovd1J04f
LYxHY+XOhcQFCvDXUnUE5w1z9Jea+u/GI3Jn75RBLgVQ3UI3Ma+gjv5RwZfd
IJSS07ok1C0MExZbU7hv27Wqp4+WTqcCtb5u8WGl8yCSkj6D3+8D5y8qn8qF
Jymv2zV+qQCx3OT5D3+/o8rTpx5KjGXDHSnWzvJ4Odgm7ZMhJjz/J1hWLysn
F5jHr+qpRSqDZXrLwX7C8yOkYQnx5DmwMsSdbmGoA6oLF4yxXuq+9yl8x/1y
ITHwHFH2Rw3YurH0E/MkGTUK24zdU0GHrTyTe9QAXl2yFMf2k1X+4BlpSBbs
2/AnJffSgyIvh+8MeJ0+vheXHxQJF2ZV7oV2GYFr9qo43j8/h+n10I3EgbHm
rYN+LYaQ9cptH96X/qxfWysMmJNTLebV8MgwgZLsakG8nxfSqzw8mR2Orh19
UsctYwKxFV+e4Tr3rFoDj3XOZFQlEf1ewd0YftdwuuL19Xfj0deZrQRkn3cu
f/W3EYTbn7qM60FSROVofn5KR0Gkoaj5lCHEVaVfwH3qjp35fWngQhbKZH61
3AIG0BTr1ILruexMRuragjPQPcvzYb48ulCa/TYa99MYEFHdFpfNQQfzp62m
MnXBL+KuNa6//vrS3CE6NhUdzvP4daNbDaa29l7idd0oOM306nsWuiD6/SOn
hQYoWlUy0BDwuOMfkq2fpqFLjUvflReV4MXkwTu4Xxn38ODZg6oJ6Hpsw9qI
rwzI6SVQ4b6azLMp1psswSio1xg1NwmBxB5lErYTr6kE0wWSYLR5wmurif8c
FHOYjGDc3Hs28xxvKgwdNTr95Mx5kDsfX43tx6Ehp5nyWyosPeUUZVPhB4PJ
lQ9meF13hv7+MJcNL9h/f47QkYP5BmdlzDfr/UDTdBhy4JKe2h0zHVFIfezq
hflpym++vCZlyYc3qmcndapkQEC4xi8P63ges/wY5pcPP/ySi0j4CecgewFK
JOAn8vJv3pYtgEsZ2y6VhxQh9CrTugsBV3czPdkwlQ8DoQHuavMqIFpRl4z1
uJnuDXxlF8qCGFMvx/sUuvDM+K34CcL3zPseff/kaC60vCxpq9zRAB0dlRZc
Z52q/cvveFwsZHUmyx+9rQ/RhynUcF0MeWChqTtPEmim9lA8ddYFtf5FC8w/
3E/VItyWLwqftWjkrggYQX33sX96958+UmmenIxE0cvkImlPDIFt3m4Kn+9v
6Gh+fjybhqJOhkfIdBhCweUj0rgO/Yr7m7VTd1LQtHiFVkCNPqDJc74XCHje
M+qSGaUcJN6gOXWuWx+ynrEa4/r3GLNPXSzEuahrhP3rmI4u5JLpvpwg4AKW
bjJcsrlIiKPt9ixhP+c673QY68AWXfQTZrPIQwZ2JusK3zRB1Jmi/Dbu53Z6
R8vdMAdFbdSrn49WAT4dgVNbBLxrNDfK41AeOvlVw9nYQg20+2QzWwn4u2tT
EuNt6Sj+nDd1nrU83GjR8EHYf7DSf76UlINc5eePV5Yowb6374MwH/jzi8bT
uvEJiHdfTvmF3xIg4OZTV4TPWZUcJ4r+dPRV0ZuUyBAB6W3uGjl8H5zcpVoM
S0B9YwPScmtiEN+SQox1HolII7qL7gah79OJ6uIOZ6CzI6x9Cp/LVx5aPo1P
gzmNs01KO6dAIuazuD4Bp9jHlOlrmQtXY73i793hhRNczC8xfzuizb5MrbgQ
fGfr4sgbpOCvAFuZAAF/XpOUXqxSAK0RLzjOGwgB1WvzVdwH7OK98NdKpEVg
3SHpur4gCrnJ84wncH+eFUbzeYoioLilVLYKUlBqkEHDRMC74e6p1Ypc2J9K
yt5urwSi6Kt8HwGvuFWtSzpTAMOpc/1xzxHEPTlUgeuzLJkZTpUv5sKPAwJc
LZmKoBT5paadgN/beSLWl5cA1Z1088E5qmAnyNpUSPhf0uJF7CUNiRDS+V7n
d5UKkFbDadz/Uzln6vCOhCawUnvwNhHpglPPoX92OJT7gVc+Pxp5FPbwPP1P
G3LtE6dxX9B5BdfCjC8ZKPN9YmXXY12wsPylh/sv+R+itX8Xm4wsTz+9c1VE
HTTzOlQxn1xY15FJwykPnR+STOHY1QTlMye4bmE7qf7DwFSVi3a1vzYK3VeF
mNrRzV68HsnYPhz5kY8WbvzcuJmkDEz579d8CPjPIjqPm8/y0fGy7GHnl8pw
8Q5jZwgBJzLucQ2hzkfEtIP/xXnKw/eG6xcLcB13PBoRFS5Anw5n9KfdU4Tu
hmOPL+I+J+nR0Ze+5KCHuj8F35HLgM8XLr0ZAp6+tF1l9i4djVHvSv1YFoNh
Kn86bFfJTCc3SWQTUMvplSt+l4RgZqoyCe+HP5fG3G4HBaHzzjOSwpU8YKhy
wwP7D4XvfJ4Qswchyec1l8cYueAZTawl5hfFkfOeTZ5MA953m/RsfAdg3zfx
GKy/vBcT2ZL+KBfuHRl17rlFCxQa+9e6Cd/jqDwi0fGzAPoFxIOaq46Di9sj
NnUCnvcjjpy7qwj6iVBlaNEp8F1+2/9rl7Cu/zsjYna0GPLpyZ9PUZ6BTV82
1yUCbgeXzwnbFkOo3f4WtlscQJbr/W6CgE/3vlZU4SY8n+u3LrjDAwb+0q/n
CPjGpbKjVDYFcCGBSHjl5FloHnsu7YD5/0/Xx6ceZEEpbSujwiFhKLoXSENH
+P5Doxp6HIIWwF3lx3jggxQUz7eYY//Kw8t5/YuOG3zr5DtrHi0GosZ3aHCe
xYX8YQX4+aO7k7/PUmlJQFuFqTjOI9/M0VMVO5SNcqZfnuZkVoCOVe26wwTc
RuiI4Hf+AuSetHoanZOCk9VPn7hifepuWt6m4hx0rMPhF6eEJHQ+HItfJuC/
2MiV9pgLkfCHg83cq2KQYvn6kCIB57uknpGvWYBK2SX12pwl4GF841G8Ttnf
bn3Mv5iPTn7wtGoglgRdEifVZFzHsbu+fP5pAZp6FRzQIS4K7QSHyYCAkz6v
Lx88nIvKybItvemFIDmIZxXr6oZx+4JgQD7BvwvMf6QuAkUz5zzwuZPjK6Eq
2ZCO5N9fPUIvLwBT1nIZmC999XrUTuCnePTbPGdOqZkbUqwPC+F7jZTIUa0B
i0A02FQwIJp9CoaEfkf+69vvvrldv50Gm4nknpTGJGj/oTxpzDNP/ysXrz6U
C/RO/VOdU1RofPaRLda5/tD9ePEIXyGcO9zlbDt3BHHpXyOVx/ZftaNbu1cE
nNOUht0q9Mgosnr3G2HeI0jjmb16i2F/0PuH9xmPoaG7kRq4bnTjvyHK5ppi
iGrOWEz0ZEKfGRYY3xDwHDZ4j0QKQfgkbaSy7AkkXXcgSg7XqUUMPng7mwPC
tqMWccVMKKF2Lwevr+Hdrmu8cxHAS76QKWlBj/4yrfZg3v7Vds6vbUPRiHTl
VUflngiERxuW4X3G9qTlkHBBPMrfP/n58NEtuWNSe7zVBLyALem/b6m5KO4Z
ychW8a/2fecobQcI759tnvUUKShEKtE72hottCCvzKd1loDbySrH/LlWgLrK
sqSI5aighIqpFNen7PtvllfqXQFiV32wp0LJAG8vZ5Tr4D5mzyVXHvzNQaHC
6nHM/mzQcfg9G67DfV8+/iTDIB85H7AjLsk4Bkx7Kk/TCHhhWuXTbvl0ZDdY
bhGTwwQtv8u1VQnfOSxxOz5pNQeZlkZ6CrEygdCnWDLcv8LL/aD6S/94ZF6v
PrSkyQJG9p8dcT/kOh5qz48W8Sh1YzSi/+dxUGtRssO6inS33gs2OAYgRS7K
yW0TRngX0EuK70ccWn9qb/SkwcQf1q4oSVaka/64Cftvl949pI+pzYWbym2t
1+S40VeOldt4X82a9Lsf8LYAfn2vH7R6fBYF2ie8x/83jYnu+of7ReDjWZwb
/1cYdR72ZfiD+0Sx0C7HEfYNsV3qsot0wuh61Op/eN8QpZ0ru6JcDGs0lOXH
/cSQcdqZizME/Dnteadw0mKgsyjRZuiVRKcvUP9YIeBvRotdYjwLIM2Zskrj
jgyKeb4bZIvvC3HEr4gps4GUsYvVgx4hmQMDs3i90049+ipl5AuhX7+8s5xC
KDvr2y6OU/k8inq0RRGFnjA1pd0qlEFvNq0v4jrEhGtp9TyROcj4OM/hYkYx
FPz53u/vhPdTxVx9GbK/EF3Z36I+T86HfOe9m1Swn3afuLxtOx8pf7rmN3VW
CPmqC5v64r67IwdL2l0KUKoWw5nmYXaUu944bUfA8zlfiocv5qFjA58MkN8x
JMH2lBP3VUgsGnrmmJuGQuUEdo6+n5A70eiZrIfvBUwMNEkZOSjkk8WHHyQU
yDp9kRn7M5otRNcsSuJQ+/ubmdbue+3tDBGZmE++QL9fqpzEH2mySewX5z8C
6UqyF3B8rKbtLccLwzTQ5r3/oV+QD50KjXqEed3ImMHKQTgX8kedf6TUiyCP
6DruMcL79SqaW9/+LISdb4qy14YR+uAfv8JMwI3uXV9sICmA3JCP39/ySqFf
96MlcJ/AL591+4u+FAITkUBrk5Y8Yf0uiZ3C4zB7lXHyayHkidm9JHNUQlZk
tp9Zcd8Y9zdNX+vywGkm5cvdz6qo+5tlDq4zfRjlFRx+swD2P91m1jFXRafZ
hJyM8Xn6eMQvoCwZwtxjJrhnNJH2/Ittf8L3352mXT7+NhdYLLyd59g00CVB
apsOvA8re58aznEBZ9B9vM2liFwbtC9hHrJ218gLupdJQEf2acrOUwulxK1o
RBLwjcBXIXEPwtExfablx6Ny6MaS/rNBfL6cOjMfbJuO1onyWh8EqiCFA7dV
8X3ZmE/o3fHsVNQms8rrJ6qGDK6ucuH7kUKX8JxUZR5yi/hzYoVEnnBv92O4
RvgeVpYpcBjNRd5C1mc3BxXR6fo3Afg7d8WWmubt85Fqzsc8MhE5tHGCRzyF
gNtraL+WtclH/lRCj2z9xRGLwtw4xmN6hGjsz+eh9mfvfGckhVBAWWLUPYw3
SNFJ5qSiNSJ7lEtxHD0NHCrH3xPgI/JViCgHpZTzATsJNyq0jFjBfdjKFk/W
dFyNRbfq7n8dUN+QS9mSlcP3i87COyQWGX4owUKG4s8qDYQ4KUbhuJaa7c/y
jQUf9FFP88X0NxoYEC1hwXHpw8K1PKbVqXDkGNt7ARVh9PWKwGMrAt7Ctv6f
e1IONN5v/+qSI41kDecfYrvVDY7987U/D0Y/L/e7OSuiOxbzxpUEvP/v8XES
swIYMro6smeigYY2P1ZiP8HZ9fKhoZ58OLBIOv5pWRX1RDCcxX4a3wH2arbY
fDgaXmWVbKmF7r5aH4wj4FE2jwwHJHKhzZOXrCpDDwWYkrrhe8fOehmd2o1k
yKZn9iWrNEDP23In/Ajf+dpM9+9hcjfQfh/bX/xEHyn/98YQ8z28qmQZwh4G
IM0s/r8+23roRGaNAK4Prdto/KDnmYqib+61Ld7TQVZNd/7FndxjfrfqFuag
fsldp6/P1JCEtIgn9h8G2vNURuRzUZpGBj84SSEtMn92/D3J7qyHvRlzEdXH
2PDNAmnCPJo14nvfxeq+0fqWXAQlRR7aqYpIgEo+5zkB/09KT9hpPhtRqVKw
9sxwI8ZmRw98ny1zeHA7hDULjXnoRcr8FEaVL40OsRBw/si0zLAzKYjp1Tir
Ux8nSrjXvIT7/MgNqFd8to9BvdSqHW9TDiBP3/FvWFeU5oRTIUeeO2KtM/p4
rowRiLZEWPA4bKMbzx/IpsJBHUm9NNPz6AJFQIU99lffErM0ceQARX648NiY
HGp6KcWJ+z6xy51muqabAn2tg9OTLuLoZFYDlwe+L8zN+CZfyYUnImE98haq
KGJatwafI4d+7zZaX8+ClMIw4f6bCqg4+dUz7AcqRV99qkaXCxlP7wmoFqmh
NaWcx3h8Ws+sCQ0p5IKigk17rqMO6rIfM3pLwJMO3nYcaswBVe8xNVJ1fcQv
J/x5Ht9f5C+wKOdnwWvv7Kp0XwMkoCXIQI/jhKrFkhnESRBQ/mX6PKMhotXt
LcN1PeKdz1KSviRAf/rv6dh5I+QhIKaei+OlaSEKEpoesMk842n+xQhR7J9Y
x/zGsZekZH0sXuhq0Y0iUDJCBjHT9jhubEt58q8ScxIyjnmxcJZNHx38dL4L
39NvGw1mpi5movYn3F69F7VQclxdHCsBf1/6YLF9JREZp7hubfbpI6+me7dw
vK750xmZ8D85yFKXKeRMvjIKO3LjAPYfKipCo2m2MtDm/RdftFc00ELFnbu4
P0B+Ps3t2L1M5ME9p8arqIS6Iwqu477u1lqF8zEp6eiV0vhLOzcplHZLWEeR
gNNfnGfStEhCJIOjbM8vnkWtn6/Q4vodkoqZeq6sSGQamU7JbX8Elbi7XsBx
yF/NiuQaUY5Izfkka6QbO6y1NF/F+biJD+TnRQ5EgGJ7u/kQEz/K0+sfxXEt
Z2/doufZEbD3kylnPpAP1dTW/MTx5CdhnrMZUUlQOdvWFpQmg3q13bRxH558
Xe6TMp7pUJodoiIepYLyZckilLC9qZ02o2HMBUoupR8H7usgorgZKmwPNgqv
VmruZwCL3Jcrx3K10QLbOXZcR6nPUHkimiUTdPY1Eo+sGqCstFevcL+CN1VU
u0IvU+G1n+0H/esGqKY43xzXBUOW47UK6jhg/NCha6ZnjKxXdEZx/DzNRL7X
mC0BHF1fCM7QGKPsEv2T+L62nU9swpnkCVM/M+c1qExQTHNQHZ73sKfzbny7
UbD7rScvP8MYdfuHG2P9a+EvozkSlM7oaHx5w2sfY+T/sIcRn0c5zBc+9pvE
IvLKt4X/iRqiae6ifJxvmjxwS2j0fDJiFjTcb06hh5ruP3DH8UBpi6efUndi
0HWJ4Z1D8Qaog2f+Du77tPlknZPYNBXdVbXrYa1UR47hBcs4DvzN4JxItHYK
eqz/nTsuWQM9CKJ6ivU+5O7LkMcapCBf73bthlAFdMOl5z3GqbY4pI7xJyDd
s/kOz0zOI9ELt/hwn/CQPrE5Ed8I1KBC38cudxRt81N743qQT0fnUOjVUHR5
hdpRRfsYUgt3W8L9S9VtTRarS21QWW3p6MNtDihCPzL+6TE1+6vqqmugaiOO
b16nBaGw/qDBv3pGHUsZRyZ15PaO8vtewTlg1sz/p19G2f6co48rDO6eAc7l
5nNoi/3wORyfL2i7rk3pnAhH+68za3sjFC4qZ5OJ46IaCUWp/mnwKtu4vzpc
FXlF/FeA4zBeAcmClmcTgD8yXOzVG3mUdo90Ds+jl26YAMpMh+S8uh+lvjqI
/1WbrQIBF+2oiNQfSoKYzLmdVRYNZPm3kB/7CWsMxfCsPQUCfhZfov5mgN5I
6Pzrb+ng7uyJfiWASRRr6XCUPqq7TbSN47T1WY5Mn5qiYafIhWnX0Ail+Cj0
4XpVL1EfpW+/PeEnvev7sK/G6GndAsL249n+YvKQQAC0HAsmcbpthGwrQqlw
fi1LdfjorU0TdH7yYkKIjjHi0IBYPJ5MnHYQ/iwUha6+SfCoNkSi69GceHzo
dHiNtr7HIDL7S7KuCnooezbT6CEBD1Um5ygtCEZld6ZSYo4bIJ3PC0y4DiLW
4eWZ2A/J6OCAveifo4roWVm1J+4rVXvw8t3CP3GIoca59TWxGnrHk2WF++00
kuQfXs6PQ1KMBavflyXQkb9UOdj/5OB9caclNxZ1L4WkKRlJo8qG0WvYrzgy
pcnU6BWIyjiN3q66syMhRw4VfA+N/TSuktGljCa0hugWPEVgRrDqn46POlU/
85inJFqse6T7/JoYaIskP8T4DW4nfy0xaUTU+0d80JtwT89X+9fvZVDk7i3O
LCVUYMpfnflHGmaXff/x4etmpCefBWqjA1e9Yk2i5ICb3HkHx6O8b+xu6tw1
Qvkt06EDmfKg8sxR/F+++5XJw6gPZkhLzrbOOEwBxiVqw3D8gfF3xr86lMUD
P9xr4oXRNtH0vz6K4X08q5NkIVBp+nnT1FwEBX6eH8X9jfcxO13Y1xQL1uWk
XlmLikhL/UEIztM9jLFW+kU4X3r9bmQXaWmiO/mkp3E+61dpP9k4fyyUJ7xk
vCalhByIdj/jPipIY6zvkEYCLI0pX315VR+xDLylLMF+b1jCgPe1GIi8to/+
J782Yj1CstFKwNkDf5dy/QmDzfKbrucvGKDlrZO6ON86/r6gxC/cA5jc6hZ/
E/yfgfQ05n96sguZ6eS3PSHmVt6pj61G6M1lvYfYDtUanepuz4gjoYntH5Gc
Rmg3vsMTj4/jbITYnXp32CdwraC4zADdViV9i98zOkRD/7vAF409Hn3+fdwA
7ac44I358K/3EU8ohwUhEbvAI/p8OuhgvnMxjpfG7jNRprLxRuqd8ruG27ro
Wfr1fzqq0t4Hk0scYpGjFee3b1fUUcZ3hmm8HxY+uef5OCgCHb8jOChlqIgS
mOYP4P0n5zF/RcSWLyIZO97FQSeA8g86v8C/26dw7FLBVQtUv5+tduyrApy9
0HoSz6PIXf47WfJ2yFTw0I/XAkqQWmg2jPkesYcKemMvO6LbWemyGvHK8N8z
77P4XLsT/dDqxm0XtGZvocg8qwIsa/f/6WjXPxAM5TcPhOVq6kyXSVFUcO+e
K7bnkUHiizsmgdCvfEtqcUoU/ZJN9cJ48LjI74zECFDXsnqydksZGfZzPsHn
4Jfdzyd+xUZDvKhYfHOANtKXy+LFefaZ7fVg5u+h0ElOuu3JqYLe0C8l4XV9
UuU7p/V2ILj6K+cMCesgYjNNMhwPTN//VjOT2g32uE433dAgjDPZ1wzsvz3K
l+nX8JOFG/cCrUwJ6/1WnNc1PI8yjn4y8ZmuEJZwZ91CWofwHcSA42nmZOpc
VXXO6MSakcriKX30Q/uAIf6/dddSjbJfEPzhablXsXqqiP/+sWjsD1/7rSjD
fNMd7bc+v3y5Xx05vdn1wfyozMuMWqvOESjoVUnqL3tF5HygWg3P1+LL2hhF
fV/ExRE1RB0ghN5feX0O60AlsziTSOx6IbecdplpGzEk/OjSFLbDByYJYqIB
DjDD86nzBLkMuGxa/uNtdo0bVb9odQBVIxq25UBpoBWnnsfzxUM2oLclZQFn
vQ59Ln6iAI1P4Pw/nU2jQX7eOB0oLmvb3yOmAp+JXt3H4/DkBhtbnBg/yHyM
tR+MUAchwev/zh372KGMUEEFNOJg5tGYrwXJVlQ/8fMC950u6980QUSI+GZu
hC5w1iso4vffNNaJSO9wQOFj2WJ2FfqQ4fjuL+bJHCjoOT7zzRmxuh0yfidk
AG1PMvcw3wPGn8iXNbmg//iPNQUS7Coy6dA/uzq+5/Sk65QrMgqsE5hvUAU3
zvELmCe/fl+sIOOHG/rgmNo/Z6oGmSrfmfD8Bg/ZszZVeqALfs/G7xaqwTJt
+g28HskfNOSKs/gBUwtleFO7OKL+2GeJ10VGov1EbqMvyBbG3IFVcXTEg98U
x0P0BeLCOeWDIKNS4Me1HBWUfkLlMo4/90xIl+SH+UDtQelH+rMqCPWYZ+N7
X9tq+TcuOQ8I7YLq3QkV9OH78BE873xnF59eoTeAplNj9RKEfXc/y41/eouT
49qTZRoGaPKx/W+eE1rI/k4AC8azeO7e3dK5hN4cTeAUEtJAk4cO22M7bE/z
Mw2HS2h8SeO0HiDk2sbngvF33Y4X5BJdEf9jg4U/UvLoFQWrBR6fW16+wywu
XoiCPf+95StJ9Lll7QL2zx9nHbUuJrsIWQoPPjNGicBrFalqPP6HhV98xrrD
RuQiNlVFZ+DZMfMePG5PLq4XV5c6Qlj7/SPcOnoQWShcg+fRifL1b7m1ixBc
2p9aXqoNwypZcvh3r8QoN5G16UFmsLHrOJEhLFHzP8X2IFPS/PePpiRir5kg
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
LSN4GRXjG7cJYzC0T9midV8J/vzeV/v/vCp/CdN6nSCs9Wif9GWUR3P2hCgi
by8FdVnXFwSg9s2R7MhBBUzOWJQg9WVrrrwyrfZ+WHhBVLFaHLCSupSeyM9A
fdchCxl/DA//IF3TrIcs1NWtxD45lLhTIWGPG1qFfFmTuK6PPMcHxsn6X5uf
lF+aVUPOfreG314GuLMv8T75Hu7rAvVWR60gbXdNr3q2Ab4WmaIm69AsfsPe
x/IEpLPnBjaP6+PlWZ4+cn4NaMYz+Wr94MIn5XvTf5WwfutDb6J/Mjaod/wT
CMH8kPuWLdul8CWW6xI9n+usrdT1LRi7C2MGz0rKoPzMrmVSL+NWpcvKujsG
3/6ZXV/sqIkdsexmJM7gLPTZ+se5cFSs0w7K26+NWu9npMn9NftlJrTq/Ck0
iuQsTNPWRV3GPd5EX8XLsNCU54bglmp11+2cJqjQ6PaL3Kesp655c3icwJ9e
n4vEl03QLfSnLvn+Hs+m9PN3jNGWz0dFu9gUG4yN0sn//bPuyP0+O2f4G8JZ
knfXFCOrKv2JnvkVWb9DKTYY3Nfv+ty0zxQXHQ4yEbvo02Te3Ln5UGgO8cig
pdXFoR0WjMQ/NeOUco2HUEx+8JBO9pMY9juxjZK6wmcsojNNEgnIkFwfPler
gqJquhrETvOK9Emu+BSLmdQv5Y/fVsM3jdWs5L54sis9Q781HulLmKtjEvXx
UhTzXC6xt9v0N16kicFTau8jZwqNkNqvupGsm6XuozOSCTHoob5ccC7aFEMd
rsyTvkxSk3VWOrLByEn1Z4Vl0AytlvYUke9/ychpvGWnCx6O1+ITnTNHqjls
J+fFv8CYLX2/Axze8sv5hqUFhsrWz5B1sPRlGElrD4VGo4IDi6nmyO7mdYP4
O7KNrrc9C8Kwd9xN47qaKN7eedCR3I9D/Cw3llwT8UfgX959VYoYrf4sIJaC
d/fdZPNdScVj1nh9/5wGmicnxulQ8An/zZ18Rskow51jpRmrg1/U+SpI37Yg
jqgZBTiDAYdVAl8YGiDtv4R0wrNKuMJofqQ+EcOWrn+6ctkY3wn9cCV1NDeb
GFs4ahIRHqk+k9QxxXbHQ8cI7lK51ZR/PhIXIl8H/BEwx3NbOy6RfPfErdKV
p9WnUe6ZT4nSUQuMMnsgR+T2F32r/oyJLzY5HUpjHrZArhyWZ0TOI/VrzBSp
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
        "]],
      Axes->True,
      AxesLabel->{None, None, None},
      AxesOrigin->{Automatic, Automatic, Automatic},
      BoxRatios->{1, 1, 0.4},
      DisplayFunction->Identity,
      FaceGrids->None,
      FaceGridsStyle->Automatic,
      Method->{"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], "RotationControl" -> "Globe"},
      PlotLabel->FormBox["\"SmoothHistogram3D\"", TraditionalForm],
      PlotRange->{{1.1570125492356031`, 5.542987450764397}, {
        39.98577551310001, 99.01422448689999}, {0, 0.02576720615388812}},
      PlotRangePadding->Scaled[0.02],
      Ticks->{Automatic, Automatic, Automatic}], {967.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  ImageSize->600,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.716160173873116*^9, 3.716160177432027*^9}, {
   3.7162075893447104`*^9, 3.716207615826447*^9}, {3.716215452393981*^9, 
   3.716215463486186*^9}, 
   3.7162156748140583`*^9},ExpressionUUID->"a98aad51-ad89-485b-b993-\
f66fae479c13"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"64a529af-e292-453c-8441-75eedcef2022"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Word Clouds", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.7162167688916903`*^9, 3.716216771314136*^9}, {
   3.716259624938788*^9, 3.716259630032078*^9}, {3.717186123706139*^9, 
   3.717186126398706*^9}},ExpressionUUID->"ff1372dc-8068-4154-9813-\
552ef52f6ad0"],

Cell[TextData[{
 "A ",
 StyleBox[ButtonBox["WordCloud",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/WordCloud"],
  FontWeight->"Bold"],
 " can give a quick intuitive understanding of frequencies of certain \
elements in a text piece."
}], "Text",
 CellChangeTimes->{{3.717157080101959*^9, 3.717157128338849*^9}, {
  3.7260153706334352`*^9, 3.726015390269925*^9}, {3.748277753666194*^9, 
  3.748277761764387*^9}},ExpressionUUID->"4f87038d-1e0f-455b-9b88-\
3ed8ac828f68"],

Cell[TextData[{
 "For example, you can get an idea of the most popular registered official \
languages in countries around the world by creating a word cloud out of the \
list of languages obtained from ",
 StyleBox[ButtonBox["CountryData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CountryData"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.716304113215314*^9, 3.7163041346778097`*^9}, {
  3.72601539500842*^9, 3.726015490711071*^9}, {3.748276480407202*^9, 
  3.748276481173234*^9}, {3.748277770051599*^9, 3.748277776186244*^9}, {
  3.832159768855248*^9, 
  3.832159783213788*^9}},ExpressionUUID->"6c1f835f-b771-468b-91c7-\
0faf179aec8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"CountryData", "[", 
    RowBox[{"\"\<UN\>\"", ",", "\"\<Languages\>\""}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7099015939594*^9, 3.709901611220237*^9}, {
   3.713096084407975*^9, 3.71309610970821*^9}, 3.7131030545018997`*^9, 
   3.713103259327409*^9, 3.713106078368162*^9, 3.713108597128026*^9, {
   3.713108700253845*^9, 3.713108715830673*^9}, {3.713111689313222*^9, 
   3.7131117107204313`*^9}},ExpressionUUID->"102915b4-4e46-4fc8-a19b-\
87c16fb19f13"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox[
     InterpretationBox["\<\"English\"\>",
      Entity["Language", "English"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.19337016574585636`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"French\"\>",
      Entity["Language", "French"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.13075506445672191`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {8., 48.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Spanish\"\>",
      Entity["Language", "Spanish"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.11233885819521178`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., -50.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Romani Vlax\"\>",
      Entity["Language", "RomaniVlax"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.07550644567219152],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 81.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Northern Kurdish\"\>",
      Entity["Language", "KurdishNorthern"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {27., -74.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"German\"\>",
      Entity["Language", "German"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.06813996316758748],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-12., -90.}, Center,
     Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Assyrian Neo\[Hyphen]Aramaic\"\>",
      Entity["Language", "AssyrianNeoAramaic"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {0., 102.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Saint Lucian Creole French\"\>",
      Entity["Language", "SaintLucianCreoleFrench"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {0., -107.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Antigua Barbuda Creole English\"\>",
      Entity["Language", "AntiguaBarbudaCreoleEnglish"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {9., 115.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Catalan\[Hyphen]Valencian\[Hyphen]Balear\"\>",
      Entity["Language", "CatalanValencianBalear"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {0., -121.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Plautdietsch\"\>",
      Entity["Language", "Plautdietsch"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.049723756906077346`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {83., -91.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Romanian Macedo\"\>",
      Entity["Language", "RomanianMacedo"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {0., 128.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Romani Balkan\"\>",
      Entity["Language", "RomaniBalkan"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-101., -70.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Portuguese\"\>",
      Entity["Language", "Portuguese"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-102., -86.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Gulf Arabic\"\>",
      Entity["Language", "ArabicGulfSpoken"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-107., 41.}, Center,
     Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Min Nan Chinese\"\>",
      Entity["Language", "ChineseMinNan"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {0., -135.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Western Farsi\"\>",
      Entity["Language", "FarsiWestern"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {0., 142.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Hungarian\"\>",
      Entity["Language", "Hungarian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {108., -30.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Romani Sinte\"\>",
      Entity["Language", "RomaniSinte"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-107., 57.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Fulfulde Adamawa\"\>",
      Entity["Language", "FulfuldeAdamawa"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-99., -133.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Armenian\"\>",
      Entity["Language", "Armenian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[1, 0.75, 0]], {-110., -30.}, Center, Automatic], 
   InsetBox[
    StyleBox[
     InterpretationBox["\<\"Hakka Chinese\"\>",
      Entity["Language", "ChineseHakka"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-100., 128.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Central Kanuri\"\>",
      Entity["Language", "KanuriCentral"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {108., 96.}, 
    Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Southern Balochi\"\>",
      Entity["Language", "BalochiSouthern"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {100., 127.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Southern Pashto\"\>",
      Entity["Language", "PashtoSouthern"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-107., 107.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Schwyzerd\[UDoubleDot]tsch\"\>",
      Entity["Language", "Schwyzerdutsch"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {94., -135.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Gourmanch\[EAcute]ma\"\>",
      Entity["Language", "Gourmanchema"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {108., -120.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Western Balochi\"\>",
      Entity["Language", "BalochiWestern"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {88., 140.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Cantonese\"\>",
      Entity["Language", "ChineseYue"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-108., -45.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Central Tibetan\"\>",
      Entity["Language", "TibetanCentral"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-110., -104.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Chadian Arabic\"\>",
      Entity["Language", "ArabicChadianSpoken"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {109., -106.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Turkish\"\>",
      Entity["Language", "Turkish"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {103., -50.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Domari\"\>",
      Entity["Language", "Domari"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.04604051565377532],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {109., 40.}, Center, 
    Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Mandarin\"\>",
      Entity["Language", "ChineseMandarin"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {111., 55.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Croatian\"\>",
      Entity["Language", "Croatian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-106., 72.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Albanian Gheg\"\>",
      Entity["Language", "AlbanianGheg"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {115., 69.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Njua Hmong\"\>",
      Entity["Language", "HmongNjua"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-110., 88.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Swahili\"\>",
      Entity["Language", "Swahili"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.0423572744014733],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {117., -66.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Romanian\"\>",
      Entity["Language", "Romanian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-97., -118.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Soninke\"\>",
      Entity["Language", "Soninke"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {109., 109.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Russian\"\>",
      Entity["Language", "Russian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-71., 142.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Najdi Arabic\"\>",
      Entity["Language", "ArabicNajdiSpoken"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {0., -149.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Hassaniyya\"\>",
      Entity["Language", "Hassaniyya"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-63., -147.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Gujarati\"\>",
      Entity["Language", "Gujarati"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {133., 22.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Angloromani\"\>",
      Entity["Language", "Angloromani"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {112., 81.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Greek\"\>",
      Entity["Language", "Greek"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.0423572744014733],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-134., 0.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Lahu Shi\"\>",
      Entity["Language", "LahuShi"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {59., -151.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Pulaar\"\>",
      Entity["Language", "Pulaar"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {133., 0.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Slovenian\"\>",
      Entity["Language", "Slovenian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {72., 152.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Bulgarian\"\>",
      Entity["Language", "Bulgarian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {111., -149.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Bavarian\"\>",
      Entity["Language", "Bavarian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-136., 14.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Kazakh\"\>",
      Entity["Language", "Kazakh"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-120., 142.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Italian\"\>",
      Entity["Language", "Italian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03867403314917127],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-114., -148.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Tswana\"\>",
      Entity["Language", "Tswana"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-137., 26.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Afrikaans\"\>",
      Entity["Language", "Afrikaans"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {135., -13.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Yalunka\"\>",
      Entity["Language", "Yalunka"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {120., 152.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Adyghe\"\>",
      Entity["Language", "Adyghe"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {0., 156.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Hausa\"\>",
      Entity["Language", "Hausa"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-148., -12.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Serbian\"\>",
      Entity["Language", "Serbian"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-43., 156.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Bengali\"\>",
      Entity["Language", "Bengali"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-8., -163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Walser\"\>",
      Entity["Language", "Walser"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {150., -45.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Uyghur\"\>",
      Entity["Language", "Uyghur"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-49., -163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Nyanja\"\>",
      Entity["Language", "Nyanja"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {151., -80.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Korean\"\>",
      Entity["Language", "Korean"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {32., -163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Iu Mien\"\>",
      Entity["Language", "IuMien"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {53., 163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Polish\"\>",
      Entity["Language", "Polish"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-152., 72.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Somali\"\>",
      Entity["Language", "Somali"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-83., 156.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Kiribati\"\>",
      Entity["Language", "Kiribati"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-88., -162.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Zande\"\>",
      Entity["Language", "Zande"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-145., -118.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Tonga\"\>",
      Entity["Language", "Tonga"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {104., -163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Khmu'\"\>",
      Entity["Language", "Khmu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-120., 155.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Akha\"\>",
      Entity["Language", "Akha"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {153., 36.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Pana\"\>",
      Entity["Language", "Pana"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {153., 110.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Nama\"\>",
      Entity["Language", "Nama"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-124., -161.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Yaka\"\>",
      Entity["Language", "Yaka"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {152., -134.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Kxoe\"\>",
      Entity["Language", "Kxoe"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-34., 26.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Fang\"\>",
      Entity["Language", "Fang"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-149., -144.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Wakhi\"\>",
      Entity["Language", "Wakhi"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {90., 163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Tamil\"\>",
      Entity["Language", "Tamil"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {125., 163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Riang\"\>",
      Entity["Language", "Riang"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {153., -148.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Mono\"\>",
      Entity["Language", "Mono"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {138., -163.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Dutch\"\>",
      Entity["Language", "Dutch"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-153., 154.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Lahu\"\>",
      Entity["Language", "Lahu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-162., -25.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Zulu\"\>",
      Entity["Language", "Zulu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-157., -41.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Swati\"\>",
      Entity["Language", "Swati"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {157., 49.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Pular\"\>",
      Entity["Language", "Pular"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {162., -26.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Carib\"\>",
      Entity["Language", "Carib"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {157., -59.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Amba\"\>",
      Entity["Language", "Amba"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-156., -54.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Hindi\"\>",
      Entity["Language", "Hindi"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-4., 167.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Baka\"\>",
      Entity["Language", "Baka"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {-164., 38.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Urdu\"\>",
      Entity["Language", "Urdu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-32., 168.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Cal\[OAcute]\"\>",
      Entity["Language", "Calo"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-165., 50.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Bari\"\>",
      Entity["Language", "Bari"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {168., 0.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Lele\"\>",
      Entity["Language", "Lele"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {153., 78.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Lisu\"\>",
      Entity["Language", "Lisu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-169., 1.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Yao\"\>",
      Entity["Language", "Yao"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {161., 61.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Afar\"\>",
      Entity["Language", "Afar"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {169., 13.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"L\[UDoubleDot]\"\>",
      Entity["Language", "Lu"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03499079189686924],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {38., -28.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"Aja\"\>",
      Entity["Language", "Aja"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.027624309392265192`],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {22., 167.},
     Center, Automatic], InsetBox[
    StyleBox[
     InterpretationBox["\<\"S\[OHat]\"\>",
      Entity["Language", "So"],
      BaseStyle->"Entity"],
     StripOnInput->False,
     FontSize->Scaled[0.03130755064456722],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-168., 13.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-181.5, 180.5}, {-171.5, 175.5}}]], "Output",
 CellChangeTimes->{3.7131117020736856`*^9, 
  3.713111783004117*^9},ExpressionUUID->"4416421a-32fa-48ca-aa74-\
bb0fd4711f83"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0fe6a7ad-355d-43f2-90f6-8d6984ff4803"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Clustering", "Section",
 CellChangeTimes->{{3.696699869245495*^9, 3.6966998746281357`*^9}, {
  3.7162163800434313`*^9, 3.71621638064985*^9}, {3.7171861962366543`*^9, 
  3.717186197322709*^9}},ExpressionUUID->"0985bc11-1478-45c2-a430-\
0c8e778abe43"],

Cell["\<\
Clustering of data is often used to separate data into groups or to try to \
identify subgroups within a dataset:\
\>", "Text",
 CellChangeTimes->{
  3.537729975986679*^9, {3.748277787688991*^9, 
   3.748277791465006*^9}},ExpressionUUID->"acb0657b-83a2-4fab-a71e-\
5c374a63b704"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"clusterData", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.2", ",", "9.1", ",", "2.3", ",", "35.4", ",", "35.7", ",", "71.8"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindClusters", "[", "clusterData", "]"}]}], "Input",
 CellChangeTimes->{{3.7260170413913603`*^9, 3.726017089939307*^9}, {
  3.7260173551144953`*^9, 3.7260173699456377`*^9}, {3.8320657364736514`*^9, 
  3.8320657515488987`*^9}},ExpressionUUID->"e9240655-730f-4644-9015-\
d41301328e08"],

Cell["\<\
The following code shows the clustering functions in action using examples of \
a dataset of dog images:\
\>", "Text",
 CellChangeTimes->{{3.7260174072536287`*^9, 3.726017454362639*^9}, {
  3.748276445128421*^9, 3.7482764464143753`*^9}, {3.748277795554332*^9, 
  3.748277813208763*^9}, {3.8320661035951543`*^9, 
  3.8320661217179775`*^9}},ExpressionUUID->"231ac1b7-0584-4d31-a3d0-\
fdbfcf8eb5bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Data\>\"", ",", 
      "\"\<Images\>\""}], "}"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dogImages", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Import", "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"FileNames", "[", 
           RowBox[{"\"\<*.jpg\>\"", ",", "#"}], "]"}], ",", "20"}], "]"}], 
        "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "\"\<n02085620-Chihuahua\>\"", ",", "\"\<n02088238-basset\>\"", ",", 
         "\"\<n02099712-Labrador_retriever\>\""}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83206589612253*^9, 3.8320659139546986`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"82928b74-d7ea-45a1-89fd-206c3c611a3a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Magnify", "[", 
   RowBox[{
    RowBox[{"FeatureSpacePlot", "[", "dogImages", "]"}], ",", "3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clusters", " ", "=", 
   RowBox[{"FindClusters", "[", 
    RowBox[{"dogImages", ",", "3"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.832066075972571*^9, 
  3.832066081051011*^9}},ExpressionUUID->"618aadd1-48fa-4ff0-bab9-\
f88d712a24b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"aab617ae-983c-4daf-89ce-ad3402cbcbf6"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Clustering Visualisations", "Section",
 CellChangeTimes->{{3.7016170675399103`*^9, 3.701617089621434*^9}, {
  3.705407215616131*^9, 3.705407225157578*^9}, {3.717186201564601*^9, 
  3.717186202738472*^9}, {3.832943896594677*^9, 
  3.832943897314803*^9}},ExpressionUUID->"e645c297-52c5-4200-a870-\
f2bb3e7ab399"],

Cell["Create some random data:", "Text",
 CellChangeTimes->{{3.74860311165585*^9, 
  3.748603115328273*^9}},ExpressionUUID->"1b268886-3856-44bc-a6ef-\
02341eb2fe13"],

Cell[BoxData[
 RowBox[{"colors", " ", "=", " ", 
  RowBox[{"RandomColor", "[", "30", "]"}]}]], "Input",
 CellChangeTimes->{
  3.7486031068499928`*^9},ExpressionUUID->"f2ab5bbd-0a77-4226-8184-\
2559ff4f15ec"],

Cell[CellGroupData[{

Cell["ClusteringTree", "Subsection",
 CellChangeTimes->{{3.700310161828535*^9, 
  3.7003101679892483`*^9}},ExpressionUUID->"51505091-daaa-4f4b-a6fa-\
cdae75ddcc6e"],

Cell["\<\
A weighted tree from the hierarchical clustering of data elements:\
\>", "Text",
 CellChangeTimes->{{3.701617219520953*^9, 3.701617253444682*^9}, 
   3.701694881108567*^9, {3.748277819559833*^9, 
   3.7482778198959703`*^9}},ExpressionUUID->"61a27de3-45d0-4236-8ff5-\
fe5148b96132"],

Cell[BoxData[
 RowBox[{"ClusteringTree", "[", "colors", "]"}]], "Input",
 CellChangeTimes->{{3.7016186696938353`*^9, 3.701618670420312*^9}, {
  3.7163041766772614`*^9, 3.716304181140375*^9}, {3.748603094964766*^9, 
  3.748603100833436*^9}},
 CellID->302722683,ExpressionUUID->"0a30117e-c8a7-4bc9-94ec-aed7387ab498"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dendrogram", "Subsection",
 CellChangeTimes->{{3.7016176393318167`*^9, 
  3.701617644262637*^9}},ExpressionUUID->"f95b73d4-c302-4a52-b0bf-\
3c11b182f786"],

Cell["\<\
Dendrogram\[LongDash]a tree where the heights of nodes are proportional to \
intercluster distances:\
\>", "Text",
 CellChangeTimes->{{3.70161764771798*^9, 3.701617661186964*^9}, {
  3.70161860322437*^9, 3.701618630053618*^9}, {3.701694897745077*^9, 
  3.7016949170645523`*^9}, {3.7105965878551188`*^9, 3.7105965962913647`*^9}, {
  3.748277831073354*^9, 
  3.748277831599658*^9}},ExpressionUUID->"0ce29c5c-79ad-4ce4-8a62-\
700acb687157"],

Cell[BoxData[
 RowBox[{"Dendrogram", "[", 
  RowBox[{"colors", ",", " ", 
   RowBox[{"ClusterDissimilarityFunction", "\[Rule]", "\"\<Centroid\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7016187051325293`*^9, 
  3.701618706072505*^9}},ExpressionUUID->"ac3f4bad-e6ef-4aac-843e-\
36c994728ee3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e693c60e-7d6e-4a93-a073-2cbd308e9b9f"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Viewing Data in Feature Space", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.716259197743946*^9, 3.716259199516745*^9}, {
   3.716259250493205*^9, 3.716259252392437*^9}, {3.717186214531878*^9, 
   3.717186222504051*^9}},ExpressionUUID->"54b9860b-7203-4564-89da-\
6ae98a8de88a"],

Cell[CellGroupData[{

Cell["FeatureSpacePlot", "Subsection",
 CellChangeTimes->{{3.699042379020441*^9, 3.6990423852784147`*^9}, 
   3.7003105793582907`*^9},ExpressionUUID->"95d58ef3-a6dd-4c8c-b6b9-\
6bbb1f97a2a1"],

Cell[TextData[{
 "Intended to automate ",
 StyleBox[ButtonBox["FeatureExtraction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FeatureExtraction"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["DimensionReduction",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DimensionReduction"],
  FontWeight->"Bold"],
 "\[LongDash]given any collection of objects, ",
 StyleBox[ButtonBox["FeatureSpacePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FeatureSpacePlot"],
  FontWeight->"Bold"],
 " lays them out in an appropriate \[OpenCurlyDoubleQuote]feature space\
\[CloseCurlyDoubleQuote] for exploratory analysis."
}], "Text",
 CellChangeTimes->{
  3.7016270401874723`*^9, {3.701697746248707*^9, 3.7016977756453857`*^9}, {
   3.71059676340996*^9, 3.710596775430436*^9}, {3.7105968184470167`*^9, 
   3.710596830018749*^9}, {3.716259210234232*^9, 3.716259224474308*^9}, 
   3.7482778443748302`*^9, {3.748278562952065*^9, 
   3.748278563960556*^9}},ExpressionUUID->"266064de-2731-437f-991c-\
570ddc08b7b9"],

Cell["\<\
FeatureSpacePlot uses sophisticated pre-trained feature extractors for \
specific types of data\[LongDash]like photographs, texts, etc.:\
\>", "Text",
 CellChangeTimes->{{3.701627076260433*^9, 3.70162710892105*^9}, 
   3.701697786304154*^9, {3.710596778582164*^9, 3.7105968073558826`*^9}, {
   3.748277848457296*^9, 
   3.748277864726548*^9}},ExpressionUUID->"de7ea8f3-852e-44b7-b2ad-\
4a124313620d"],

Cell[BoxData[
 RowBox[{"FeatureSpacePlot", "[", 
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJyNmHdU0+f+xwWUHZKQvTcQEvZeMgVBZO+dhLAJe8gUww4JSUjIAMKerntr
72m1rVVb2zraaperaq1aV9W29lZb76/+nkC99x7b8zs/zjvPeb45+ePF+/N8
xvOl8WtSSkw3bdrUYAmWFF5LeH09b1cqDDykixrKS0XC4lhRo7BUWO/PNwNf
OoGPD/gY90072T3pHrIi33GBt1boqy/1n1jXlHEN0lXHLHflCGM98Ch0fFRo
+o6onsaKacXgnsbKRmFeq7CgrbSoq0Iorq7sr6+RttQr2hrHOprGulpUPW3a
3k5tX4+uf8/EYO/UcL9BMmAYGTSMjswoZDPK0TmVYl6tBFoYH1vSqpfGx1c0
2lWdfu/k9IbWDDP7Zua6UlwGczzHeC/xSvw2NAG0jrfUlVO+04fj4BC/LVSQ
k1KQvL2zpkQztHu4rb63rqKtlNdRJuipLO+rrZY01o621st3NSg7m9V/wpsa
BnhD/4UnB4RGyP8TbyDbXV7goxH4jQt8tMI/2PRCI56uNEgr2r7QkVWbGkjB
E2LCglLjIvgZO0uyEtuqBNKuJk1fe19DRWeFoLemaqBeJDOy1Y91NAL3xve0
AzxNb7euv2diUDw51Dc51DslGZiUSabkI9PK0cVx9YpOu6xVL+uAxpc04yva
v8Dbk+w0lOU2WuCt5vlqhYHa4gB9sRFPL/TXlm3V1e6cb0tvzwrEolBRIUGC
vPSasoKKogx+dpIgZ+dAR/nuuqJGQXoDL7OmIK2lOKtFkC6u4Y2218rb68Z7
WvUDu/WDPZNDe6aGxbOygYUxybJOvqIDvknU/Z0jXU3y7hbdYM+cWrGs167q
9asT+lX91NqEYd/UzN7p2QNzC+1xtM54RlcCqyvRQZzGleR6Kgq8QazVfF9d
WchEQ+L8ruQ9uUFwa0sGnpgcG9MkKqsszgsP9HRn0/LStjdXZpflxBUmx2TF
hWbHBpdmxrRV5LRV5DYJM7pEhUPNFZreVoOkGzg51CTqLOfXF2aWpSdkb48s
Sk6sLsjtqiqVtDVMK2XLep2R7U94g5mu/elccQq7O9mpO8mo3clOe1Kd+9M4
0jxveem2KVHcnhx/mMUWFAS6IzJyZ3SkI4NqY7UFZmsd5OOetmNrQqRXaV6C
MGdnQUoULy16sL26s7awoSS9RpCcnxjBS4kuSo6JD/H1oBM4REygC4efltJa
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
snew/+apD35/+uTFi98vnD01Kxd3NQhaa4oke9p21fHaa/iTI90TkjbtcNu0
sm9JI/8r90CCALypvWBimTRs4NFIWALankJAA8INAzEY0BTsMCgo1AYMAiDI
1iB5QTtD2CPsYXAUAsEikbw5nKToaEln94GZ+X0Tc30Z2QYB/86RYz9fvfD7
059evHhx79a3M1pZd1t1dXFuVWF6b3OZXtI5N9Y3O9q3rFMsaJTzKuDemHFa
XtfLBNH8MfWBRJ4wHJieoxIweBScSSWQySgAhkJByGQ0g0lg0AggC1AoMDch
USiMk6Mzh+3synUJ8vePCw3JT0lqLi+flsqX1bpFlWYoNX3AyflEVdV5Sf+z
L889//05ILz4xfmBrqYafnpPHU/WWTXWU6sf2rWmle0zjK9OapY0qgX1/wOP
iMGj4WQC6AswkCAEApLJJNHpOBIeiUbAoHYQCAQKIovHE9lOzt5ePp7unmFe
nrnx0eK6GsPgyAHt1CH99NuzC38vrfy8qPynNw89vXPzX8//9fy35789e37i
jUOG0T3Knqr++gJ5R4V+oHVJLZ1XSWfHZCs69aoeXDFUy1qjVnTjr+CtTkzt
n56l0/HALgCGREBBDcTikDg8kkyAE3FwEgFDJqIpZBKFQsHhcKA4e3r6JCWm
iQRVXaLSPlGFtqv7bxrt/jH5wXHlkYHBxbzCR2dOP/v+wa8Pf3z+8y+/PXt2
68qVD468DmKq3F07I+1ZVgG20bkxGRDYbGTHSykB6r8hjTOM1jig0mhYCgUN
8gKNgsLsrBBIOywOQcLDyDgo14Hi7kznODHIBCwWCSfhsFy20/aobS01bQOt
nT1VgqFqwXhHvbKuTF9RPFfEX62oP2EwfPH24YfXrj3/8cd/Pn743Y1rl85/
/NnJEx8cfv3ArH5BI59VGgnBaoRUjc6r5eBxXXIQa0BovFT+IaOTeHDBRsNB
uYPB7aBQawwGTiZhqEQkh0n0YNNcWCQHCo5Jxvm6c3w9XR2ZNE83bpBvcE1p
dVt1cX95hqIuf7Kz4eDo0PGF2UvHT3x14t0bX557+uDus+/v/Xj35qPvbj64
ef3ip2cP//3vC3rVgvaldWBVSBfGRueVMqCFdTNBsiyoFeBW/lIgqTUoFMIe
DhoDHDQzEF8CBk4jop0YJGcmmUFAOzNIbDo+xNc12MfFjesYFODNYTPBuOLt
5pKXntJdlqlvFx5QDxz/294vT564d/3qT/dvP7lz48GNr+9dvXDnq7Nfnz5x
6q1DBxcnl6e0q5OqBdXIRnABz6JCOj8qWVTIFgEe2ANUlRF7fkxu1PoNHXgI
h4OTD/oCFLCRcXAyBkonY7lONAYJwyCimSSMF5fl4+rg5kT192R7cpk+bo7R
IQGxoUHFOenjQ71HlOI3BurfMIydPLD84WurV8++993lz+9e//qz999eUfTo
xLXavtZJSe+8Wro0oV7Uj4NjZoyvUrqsks/LRzY0NyqZVUjB9+sC/HKjgJka
FagcwD4sBgUqDAWHoBPBTEJmUvCOVDy4yQZ4csICPAAeUJCHsxebFujutC3A
q7G8eGXWcObkyU9WF24e2X/MMKKty9aI68689dpvT3745acf39o3K0r0K43k
VMb67Mraru1pmlWBy6x6US03EipGFuQjwLcZ6dCGZgHhHxqZlRs1J5ctjilA
CwPCohFMCoGCx9BJOEc60Z3DcnWieXGZAZ7Ovm6OgV6cbVt9A93YPs5MXw4r
PsxfOSS+/PkXd2/cu3vz9pP7j299dXZN3jhYlHhIL3vx4unjezcPGWQlkQ58
P3KRD6kkiDEkKjTIBmdHhxbUwBnZoko+PTIIfJuVDW/ggUfjOyLJwH+ApeBf
GAW+YdBIPBZFI2JYVKJxMnekObMoIG09nOmujhRwUQUGAk4PB2qQm3OwBwfc
VY/+4+Cd69fu37r38N6jH+4+enT/3pWvPnlnRv3podWfvvv2+1tXr318zNAr
KglhZnDs+QG0oRre7Jh0cqQPnL0ZJTBHssHzb7wNtv/WtEQyJ5OisXg0Ctwj
MDQykULCM2kkRxoJNBEjJIPo7eoY4MUFt0UXB0pkkFt6fHhZQebyhPbCx6dv
XPjy1uWvbl+6+ODG9Ue3bj28ffvJg/uPb3z78Or1x7dvgZy9e/XS0SXdqCi3
IcFPXstbA6VDIV1Sy5Z16iXQcBWS6WHxtKTXIOmdGQGb/vW3WOsvsv4gHJyV
SdA4UM/A5RCJx2HIJCKDSmaQcCwqgCQCKn8PjrsTzYVJDPf3yNoZIW4Rvb48
/8Fbhy+cOf31+U++Pnf20ienL39y+uKZj66e+/jqZ+e+vXTx7jfX7l2/+eCb
O49u3X/68Mmz+99fPvmerqlUKkjQNBZN9dTtVfbuVY+saZTrhWVkTjE0LR+e
kQ0bhvsnBnsnh/o2ODe8RWFBzcUAPBwWTaOSqWQCg4ynkXAMEtab4+jBZga6
OW0P9OSlx/c21xyanzl1+MhH77z18XvHzhw/+vlH7184+9H5949d+PD4lyff
/fTdI6cPv3Hu3XeunD19B3BeuXT/mxtP7n//609PL584ujuB3RiKbAzB9iW5
DGcHjVemTrQIZ/fULYJRQT4EUBcUo3Ny6YxMMv3yNIIVisDAkRgMlgi6KpGI
BXKg09xYFCB3R5qXEzkhxLsgLrK3uvQ1vfbd1eUTB/YfnJpQiTs0g92vL82f
OfzG2TffPHf06Nkjbx3fv/bm9MQ707MfrC1/+trBb899fPfKF49vXn98587v
P//zH4qOMmfTSqZJteMWkbN5rZtlRwimIwzbG+8kzdqqKE3WNAsM4pbpEfGc
fHBJNbKgksyMSVlQmAMSwQIZgrSH2UNgGASSiKPRaO6ubH9vblxoQNb2yJKU
BHFZiaGze7avf6ipvjwzTZCSUJ6ZMtxUd0ivObm0dGpp+YP5hcMa1TuT48em
pk5MTR7T6a6eeO/OuTM3znz4K8D74eez++aEbFshfbOQYVHKMi91MKtkm1ex
NlU7bKpyMqt1M2sJsO2IwInj2YM5W0fLU1WNvPG28sNI+OsY2EECfIEMmyTB
VST4MBnay0SJueQhP2d5VMBIaLA0Imw8LdFQlC/NSa+JC8uL8C7cFpLk47XT
3aU+Nbk3N2+cXzxVVaPhF+tKyta6xG/JVWfmlm+8/9GFI4dunDz26IvPfzj/
2UpbbRHVMp9kxqeZl9C3lNFMhXTTUroZkICxqYRlUs4yqWBtqnLcVMMxq3W1
aPCGNAWg3rM0/RBicRZu/TnC+gsU5CLO7hodeo0Nv8y2u+wMvcyBXXRFXPLG
fu1PvBLKvBDFPR/jdjba6dM4r3e2cg9uZR8K99gf6LIW6LYY6Kfxdu+g4XvY
rPGYqNXK6rHsrMHoyIUK4bvD4mO7m8YTwpo4hFyybTLBNJmyKYu6qZBqxqea
8mmmRRQTAcVUQDYtoW0uZZiUMTYBla+vb5iaHDbf/Lal+VEr82O2Vu/ZWJyy
NT9lb34Kvfks3vw82eZLuvUlB9srjnbX2dCb7si7/rj7QYhHEYRnic7/k+b5
P2nuL3L8fueFv6jY8Wv1jn+Wxz4pjn1QGHW7IOrbnKjLKRFfpoTeECZe4iV+
khd7KifmSGKoOsChxRFRhDNPtN+UjjfJxZsVkLYUEE0KiaY88mYBzVRAM+HT
TAR0UwHd5JCZ2T/MzA6bbzm6ZcsxS4vjFhYnrSzeh5h/ANl8CrL5NNT8E7jF
eYTlZ0jLcyibL3A2F/DWl3Hwi0T4FQryGzL6NgP9PYfw0JP8Uwjrlyjnp7Fu
z5L9n6ZvfcGLfNGQ+a8h0QtN74tZzfMZxfNp9fMFw6+z2t8mZc80/ff66y+W
pb1ZsDOPZp8AN8nCmeYSTEHoC6mmhVQToygmfIb5/wICQkLl
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
7Ydz33/91wvffKOlfMVeT81aV8Pg7m1bI13dOzcvnzttqaflYmPiA7fzhtth
kTA/JyTUQP/qubMXT39loXkrEGGCstBGGGh42xoh9NXwzlZ1OTG1GeH9FemT
jWWghNsq8upL0p4VpxYSQ4uIYZXZ8bFYVxzSNh3n7mmiCte+ijBQ1b55yUxL
xcFUt64kfYs5ujY/yBjpmOtu6HmSD6rJTvOq1qUzqkpfq148baCmrKV66+w3
p//3f/7yH3/+r//8t3+/ceGs3vULUM3rCF0VpM5NpOZlqOoFy+un9S79n6rS
V2qXTt+4ePb6+dNmGmoQHU2Y9p2SeJxsefgtY2KfPb3PX/x5jfJetPyzcOn9
OvU9aAtW3glWtpnzkqWptYUJ+nj/Qv/LxYGX9PHefT7lnZCxxV5Y6Wucfln1
qqawrSypIsE/3R8ehjDGmKs7aV+BqCnpXz+jpvQ3lW//cuf8X/UunLb68azj
rTOu6kootfNudy+g7yp5aF7007ucgNSLdrYA3/Ywg7tQIy24kR7G1jjWx76P
VLjNmt/mLMq5izvcxW32goy5sMUCjSUQO5wVORsEZZdL3ePS3/GZ7wXsd0L2
Lo8hZaxIGeC2ZfpIx/LAizc9DQvdJEV01az0kOZaK8caywbrCvp+Su8pT+4q
TWgvjm8tIrbmx7TlRbY/IHQURHYWRfWWxfWVE7uLY3rLiMPVOTPPSxfbny73
NrIHm1fH2sRLQ9u08U3KhJg2I2PObbFALMg5KztcspxD3uVRQOzx6ft85v4q
c4dD3WaTt1lk0NgFwaVtc6lbHApreoA61sOZeSVaGBTMvxKA1/dUp2imR7bQ
L1sZFFMmJdRJGWVcSh7foI5KaeMyyoSEOiomD68vD4qWBkRLrzbIo5vUCSlt
QkYZk6yMbpAnROSpDcq0hDwpo03KGDOb9BkpfUaiuM5K6PObtDkJ/Y2MubTF
Ah4q3JOzFVSHIedQFA0eTcZnyoWc/weE3U68
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
hg5XBhcHajcvqe/N6vdHFSst9Eez9b++3fz911e//fRAb8pPo4KIohi6NLqE
50uRIKLz7PFsQD7LIYnggSkG5DNcCxheuXQPXmNIiSighBdTzA/LYDhls12L
uSGpJX7ReW48XYLxIolThy1iBpQwA6nCyIa20gppNFOdmlMBonCDshnwUi5K
wscq2XkDRsnmbP/e6tjhxsTzoxuHN6e7GtjD9fT1HuHNXt7hcM2b9a5fny3/
/n8ePzqZrRSFlAhhORXgbBIol+ZRwPbJZXhVKBDFXBS2BBRf4JVQ4JxJdi7g
2hPEXgQujMCKySRCkinOqVS7YhEykeAeme5VRIut1uZQrGXlB9Krg8qFgTJ9
htScKGiKr1RGkXmovErfQiZUJMgQlcXW84ssWsFYv+HmteHd1YnF8e5GUVmX
rGBWT7BekTZay7/a6vn5y6U/fn3Z3sbPKHJlyGB0FSq1yBudeiGu0BbPdWXU
Q+TtyWU8cHIhIC7PNaHsAkF2Hs9zLKRBcUXgVLxPQqF7ATMgqdQtJv+LhAKv
TGIoJgvEkRQQq4LIXE+OCkkWQbia6M6Jqip5BFsaVCr0LWbDJJKcBnZ2PTPV
IC5sUVdODRjGenTNGp6Ojx9S4uf1pTudtJcL2g+H4//91513z2/lExBZJd7x
2c55VR6JpYCw+DPJOLu8UpeUUls8y03SiNBaEmqaEot5/oUVXuSKgMxSVFii
Y1SaS2SqEwbnmpIPySYgEnKcY7KAfmF2ZA4uuywgBecglGUQ+eFsFbZKjaXV
+PMUkYLGVKIAVcmPalbhu6Q5s83UK608BSNXXlWiEhA7laReEW5BX7LVRnm9
Ynl/MvPH+4dri4P1jcRaNb5eW9nZJbwyq58cbRofqr863To72bw013735tjx
3tzD0xsPTlfuHd148/huJsEnPBkAQ58Nj3P2R52FBJ2DBtuEYgAR8d5RyWBh
IyEx16+cHlbJS6BWYiSynNr6QnVjrllPbW3mGc1MfWNlu4berypZbmccjmu0
zCxGcXKXQdKhIo9ry9ZaqUej1T/en/355eaPb/e3lkb2Vsef7F17frR6emvh
0e7Sy3ubz07W//pk+7tnB9aT2OnejdOD9QcHK28e3nx1f+vLo5XsAmAxFYVJ
dcrPh6elQHKzQwsKIsjkxCadqLdTNzPeNtqnX5zoXJnvuzbROdii7tRL2/XS
AYumScnts2jH+lpaNTyLqGCpmXFnuLpFgmeXZakElFYJftJQvtXLer6o/fX9
g99++fjd168nBy0zg6blyd6dlfGdjcm9W1ce7l873Jx8dHfx+cnqvd35/a3J
uxtT1mPP06OVV/dvvnpwKy0FkJsFqWJkWnSC3lbN+IB5frR1atDYbVY119cs
DLcuT/WM9+rHe/TWONSq7m9W9rco+1uVrTrxlZGu2dFuYy13QF8128xe66gc
baTmZ8TmpUa2iXNH1TnLFtLf9i79/cOz54+P//jjjzsb88MdWqs5p4fMN6+P
3l4e21ke21wY3L4+cm97/unh8tsHN797cffbp7vfWPV87/s3x/lFCFwazKjh
XmpvmL7YvDTVc+PKwNRFS59FPdBSO9pWOzNguDHdOz/ScuVi8+wly3ifvqOp
xlBbZakXtjTKhJVlUxdbX5+u7s213hrWjDRxSHkx1Yy8iTbxnaWu10dLf//+
6Xd/vb92ZfDj+3cvH93dnB+aHjRdG+vYW5ncW5nYmBuwsm3OD+4uX76/s/D8
eO3LgxsvT9dfnK5bi/7V0ztpuUgeK39lqm9jfmhz4eLW4qWVK70zF03Xxttv
Ll68vTRsjVtXh+aHLVMDTWM9Db0mqUXLMyiZOnmlXFjOIGdPX2z77svDb+6v
ff90e7xHFxvkZazl7CxPvHm088d/v7cm7cmjg36z/P7OtdPb80frE7vXLu1Y
Tbg2tTLdtzjW/vx4/d72Vase3b2+vzHz5GD1y8M168uv79+0KiHdj4CPG21r
mBkyWzV3yTI/YlmZ6dlcGFgca5sbscwMGacHDZe7661swx2awRalNU706boM
NZ0GSY9J2qKrnrhkubM2sTzdw6fl4eKQKgF5uLPx7trUty+Ofvzw1Ztnx3dW
Jt493nl+tPbozvUv95efHa5ZrfX0cPXNg1svTjae7C/f31k8vb1wtDV7d216
+8b46qy14pcPN69AAs+z6FmTvVYGk7V8c8OWueHmhdEWK5JV1rkVz8q5NNFh
NcmdlTFrJlev9F693Hp3dWx1pnP+kmlvY3Treu/alfaJ3vp+i9K69U30NY31
Nc0Ntz64ffXJ8epP33z5n98++fju3rvHu89Ot56dWD2//fJ089nRupXtYGPG
inF8c253eWJ/feb09uLuyuTWtZHT7at769P/F0ajS2Q=
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJyNlwlQYmmW793SDdm3C/eyCIi4goqgIogKIqKigLigoqi4Iu4r7vu+oum+
pmmaZqa5Z5a5V2VWdXZVTeVUVWdXdXV3zfRE95vXEfPem4l58SZexOt3s3K6
pqJj3psh/py43xf3+/id851z7sXfYtdZ3VxcXJq9YaMrbU9sairt1GPgQU59
c3VlfUW5ur6lorKiKcbiDk/y4K8c/r67JgJIWGQqmgJhqTTcj4KH8CSZgvqz
kCQAgQe8iXQEnuaFJ7qisR5YvC+XhpExSBoGITMAlxNCyRfQ8kIoBjZex8bp
2NgsJkpNJyUHBQhCeXQ6mUTyI5N8yWQfIsWTCHkCoO97USEECPlRQQSNgaEx
CBQQQ4WwEISDRaGgqVQMCGLfCx7+VPDMf5Kf+E5+IIjgcXHRAnIEF0kHvMl4
ryAaKpZJlEF4GR2bzCEpuZRkf6KMipKBaBmIklH8JCRcjD89NIjDYABkMvI/
5Ifo+L/g/6kLf8EPi0RBwXrP/6P+kp+KpkJoXgBOm8iryYqcqFSOWRJKU4Jk
fEjIJQnouHAqLpSCFdCIkQxyOETkkVE8MjqIggkn48IJOAGTFsxjM5lUAECR
ib4A2YcMepNoXv8OPx0DwtGDAf7MD5PDq37Uj9jwPGzfbUjFvBcFwv0k/nhY
AIglwcupaICK8megdYqg3b6iD+erXi2WvpguOnPoDx0mR7k2TxmXzA+I5BBj
eFBMACT2p0ZR8dEAJpaKiwPwYiI+ikYJYkF0BhGg+gGAD0D1pUC+FJrvj/wU
2AWaH0hD0ugoiIam0jAUWCCaCsKoGBL5XQwBCpoMu0D5V1FgKjjyZD8yFfte
MD/s+3tRaQRYFAhPht45QgVRkWHQdJf5l3eX3x46XszkPh3KfNCU8Gqy4Hy1
9dQ50F9XpBb6q/jMJC6koBNTyCgNyS8bQGYR0WkEtIyMCaGTaEw4IAgK1ZsC
IWBaiI6CLSx4CPzADzFQNAaSRkNSaWiAhgFAJOwvCUDjiX5EwA8OIwnO8z/n
M/BDbhD/v/ywABoeTqRAHjjoqPvq+cnfvDr55v7Ks8Wq8770W1be5WLWvZ6M
Ty8Pvby1NdNu1URwZEyylIqXEhAKvE86GZlJQKtxmDgCigcRYP53tFSf96g/
CEmlv3PhPT9IR9KZKAbsF4QigigK+MMFGYXF+RBICDLlp83kP8UPwSdOw9NZ
QGt77TdfPP3d5w/efnjy9snerx6uf7puv2uP3NYgtzSEe46sbx7tvbyz02HN
jWYS+FR8GIDnEzFRBLQIhxUSCDwi3p+KpzHgbZEU8N/4aUwMSEe9jz+c/3Dy
0P3RDDr6HTYVnof5MXiCHwbrQyTDC99l1PtOSKbCR/PugkhG/KRm8SCdCItK
JwJ0IsQkASAGifFWpqecP77z/ZdPfvnhyZunV97cXf3rG3M/P+y63Zm8riGO
CFyXtZwvDhzff3xy93DJqBBFQ5hwOsimQgEUMgck+YMAnUqhg8R3zYSOpjBQ
VDocdiTERNOZcKzg4npXuXDyM1g4fxYeor/rn3CqwPBwJHF4JArtQyD6wbQU
EEl9ZxEUpi9Ah4sI8UMq/mu3BOlwwEnvBTJJZDqJFcKpb2n++ttv//j777/+
8ObT4/lH+xOvjmdeH48/326+M5S9Y+IMRHm2hHnd6df/6vn610+vjNeVKOEq
5rFC/JlhTCjcnxbEoLGpVCZEgmj/D34QyYRQZLoXmeUT4I+n/Xv88Cm85wfh
c/mBn8J4l28/CP9ecLa8h6cxSbA7YnnszedP/+f/+dN/+8d/+faLTz+6sXFt
uWmjWz/frL0+V/dg3X5lQLdeEjQuw1XRXGazaJ8ftL0939sZa9dGB8SF+Au4
LGEAQ8zlCFgsfzJAJqBpdDyViYX5Qca736XBqeKPgxhYiI7BkH34TGSlLo4V
QHrf/3/Kj0R54/AIOGHgvKLBTQnyozB8qH/mBxgEMryESaQxyXQmmcaigCwS
hQU4phb+7h//5b/8wz//7W+///rlww/2RlY7s/qLhENViZdm7IfT5QcjBUtl
4l45qYLtagt1P+vJ/PTG3N50V2IoK4JN57EZQSxQwIICAUpKCFsVFUjCeeMA
bwoTRYKQZBqSCPqhCV4Y/AUc2UcYDi3lCA7GHMxgOpmOJoM4gAw3PfgpgMOR
MEgsfCcST/Ej01AUGhago4hMeB/Ee34yg0CC+VlkiE2hsgGAA+BZBKaA5zy+
+/0f/9evv//DL9781ScPT0+cHcsOw3i9fmnQNtpd5uw3bfUZF62yplhsPt21
mO4ynkF7uGRbG2xODguMpAHhDCiYDgRDcLNHGSTC05GG8YZSaaQ/j4UJD2cy
GTh+OKMoK746M8KRE3LUrHg+Zd3fvwwxyCCEAqk4CMDRQSwNwpEADAyPIiEx
AJIAVzQdR4Z7bAiGFQI3BJgfQfUnAQwilUUGAihYLhnNJXn7o1lxkVu3nn/z
t//05stvPv7ow7tXD/acQxcnWnYWx6prywUi1niTbrlBPWAMrRNhcqhuRpJ7
Nc9twyqdqzWouKDCn5IAUeJBII5GDsOiNbHCg/GOezuzp8t9l3pMz+bKXq7U
vVy1/fb2+Kdr1icDKa9mc+/sTozPzBHJBCLZF4CQJBocbQSJhsSCSCTgiyZ5
I4m+SAICBz+jw0nC7PBQuT+R5klielMDyBQ2Ga4xUiAVfuojAkmuNERQkuTk
6euff/37jz/+/PbZ2dHexsHmyszocHtXE0XAxHJQbSVJs1ZZu5pZHOSlBy9o
MBeyiK49UvKILkLLAbJZUBaDmkYD1AyiikmKYVF6W+pneluXmvPvj5nu92U8
G8p+5FCdD2uezhc9W654tGo/WO6NDOO6e3h6+rn7Ub2xAb6EQBSeh0FwUd4M
H2+8u7uvm5uP2wXInSwhsXUcghjtyXDxYblRoyBqKJXOgyhBEA5+ZeGSECwc
LohW0mLfPL15fO3awaXdixtL9va6uExpmIbvKfDliqndZll7BrNC4GdgeauJ
7lJfl1TihTo+3qERpnFZGjZdzYYS2fQkDk3MJMjDGSfzPa2GxLkq9SNn3esD
x5Uew60h442xrNfHnb9/svBg2nx71aGQit+9E3u6uQOeflxfcgQGjCFhIlEe
PA9X0M3Fz9WT4I7k+/rE+LpFuvoI3AkJGA/BBUDGJERRiWFUUhiVCL+HBZPQ
wQRkGIkpDY5Ii1cUpmXXGOIN8XQpHZcEEBKJEVmBAz2FUyWyEr63ieOVx0Ea
mQhLGKUjNXS1In2/tcogihRQsKEMcmAgk8MFORzS8Ubfy8OegdyIW3N1T7f7
jvqsSx1FD3aHN7qLR+t02/3lX14bfXU0+N3rewmxUS6uLh50X88ALzTfGxCj
8RE+FwJd3BmurngXb5Y3U8Wiqhl+Il9KIl5QFkHIpGCTab4iIkJAxEaDWDHk
Fwn4RZJQIgJWRMQL8dg4MlYGYwNUFYRNJMlL4w93x893HGOZIYWcCy1CyoiC
O5TMceaKTpqzn0zZXy51XulvtKpihYFw0yd7EhGSZNFXz7bvrTas1ymeLzdO
1BvVEbTRivQPFjuuDDfkSUImarK+vDF+f7Hydx8fP7tz2Q+JcCddcAddPTge
XjxPT383d9DFneDqhnJ3I13AxpIZmYEUOYAIu8DQ0kOrwgAliInHoWLQWAkR
HUv0jkJ5CvwQEWiMCEOIwxAVGLKGTEmhUGNIRdWZV3f7P9ztverImdQHr+ZH
HFTEnzSoPpwqf71U/9G8/bP1zoej5c/nGz9Z63o4bdtqL55uMl7sr3p1bfHa
tGW0OHrdnnp71vZsq3u1JuXFjP1ab/FXH5w8vjS73Vdy76LjaLLh799+JEuW
uLi5eKA8XFFuLmg3F6Sri5+Lu4+HxwUvV29XF7wLIRLPTmJ7BXshRD7cAjZN
BcGiKimERBJKivcSIy9E+vhFIDHRGHwsDpdAQMXj8EJ0XpHsg/2BV9sdZ50Z
C7mCjYr42z1Z9wdzHo+aP3bWv9nt+fpw6JdHI28vDb92NsCTT0bNX211vT3u
+/J06unO0EiJZLxSM1CdO9RU+eajB68fnLYV5G72tD29u3W85WwsLRiwm8aq
tZ+czh8drnv7+bp5uru7u8Byc4Otu4fbuz+WLhgXBM/PN9CPEksLyAgBUmiY
eCQxkURRUqFUiJxEwkkxfmJfn0hPjBiJjyNgxQTvUCSej7I3Z784HX99ufds
OP+oIemwMfXOYN79oZwnE+ZPlu2fb3X96urkb06nfnc2D9vfnoy/2Wh/s9nx
xXrno6mSu3P2y9ONM7WpzQaZKSWuq8F+6+Hzm/eeN5Ta6opLJ4fat9dWWmut
Fl3iWm/lk72xo/V5BNLP/YKnh4e7u5sbbH4oau/g0PDwBAFVTIe98KB4YMNJ
flF4L743UuBNjMNS5GRSLI4YjSHH4YkxeLwYB8TiMXw0Mwqw2dKfXul/vtny
cKn6dMhwbSD3ap/xcrv2dm/Oi/mqLy/3/+ps6rubM789m/67uwt/uL/87dWx
r45Hv7w0+Fdb7Q8milbsmQttJcsdOSWJDK2I1mAp6Osbqq22N5RX2issHbV1
zZWl9WXGrZnuG0udT/eH7uxNp0jjXX7y4QYFPDu/84vXL7779quf/eIzSYbM
xdPFBeXi4e+Fl1FChSRBPBQcC0BhaJCPB6OIZAGeFIqi8xFggI+1IuPj23Pn
a3WPlms/mLYcdWmu9hqvO/LWK5N369NujhQ/XW/8/Lj37Y3R39yeens6/NdH
fZ/udXx2eeDNcd/5VNGWTT5s5HcVJHVZtaONOY76vLqK3Ori7Nz0BEtemiUr
NiOeo08KHWkvcw433Fzr++PXj//0T99899m9ifHhqhqLVJ2UmSobKks7nR87
Pz6Yaqx78fjxm+++wjPwrl6uHlRPuhJMkXEUCRyZhMmPBnhRRFoIkhqKoIkQ
/jEIlUZw7Ox9vuvY7sjY7dTOW2LW6pKd1bLFUslccex2repSR/btmfKPtlp+
ftD9yWbrw5nKh9PWT3baHq83w/OHbWkbNUkThaKy5EBzpqTDXjbU3z4+1N5g
zTVmJmQqhDppmCGBX5uXVpMdO1KX/fMPjv7+uy/+8NnN//7rB3/60//+0z//
1//xD9+f7487UhgmSVSDtbomM63DWja1MBWrjXbHvatltpKYkhKWlBKsTA9T
ZPBFCg43msSTAtwsAFAiG/uLf3F/6+FM1UiRsCc3ZNAYMlMiWa2VjRv5MwWi
XVvqUafuZNh0c7L07kz5+VzV2UjRixX7y+2W842W87X6o87MnXr1cH6kSQrm
JnOMGQkVRcWOltauzvaO1taG+jpbjaU0J8Ug5TXro08na246u758uHZvuvg3
H5795te/fPvpk5fHYy2Z/JyYQKk/GB9IMaTJu2xVC5uLAWo2EOvnFehOkPjk
mg1ZZVpzfZ6l3lRYl1dQZSytL+IlswlJuIpGxdO1lkOHcbg4rjkzqCc/crgw
qtcQ5EjnDurCL9aoNuzq/c7M476cox79jdHCB7Plz1frHztrz7fbn++0btbK
B3IELdrgylSWNhrIFLOLU+OKMhTlhbkt9bX1tVW1ZTlFqYJSdVirTtSaEb47
WHI4Zp4oDPlgZ+pnLx4cTNmbNdziSKwqlCQPgUIJ3pmKGGu1WWNW4uJ8QQUW
SEAT5ShrWa65wlRSZ861GYobi+rb6+09zdmlOdU9xSvzVRuNmnFLfFd+jCWZ
05oj7MqNbtBwWzJ4rencxcqElTrlZpt2r9twMlx4fcryeK3xgbPu5qzlfK/1
bKZk0hjcrGRaZbQaFS8rAp0uwGQKKSYlvzBVXJwhrSzIsBZoDAlBVoPMIguw
KYKWHDX7iwPDloSRmpylCcdYfV5HvrI2XSxjYmUBkD5LHqOOYkv8yTE4qhLL
0oHcXH9/I91SlFFo0qVXyoUWboJRlGvKUuYlFVTr7lxbvLPVPVcWX5lIkwf4
aSKpuhhGlUagjyRZlOzO/Igxc8Rmq2bbYVxu0Gx26Q/HS44mSk/nqk7nzMcL
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
mF0vSykQZdUmGqsUxpJ4e02aViPSmORsOd0H9A5UMgTFjGSbSG1O4oWyWSwI
opAiwkKEgkixSFZuLtpfG92Zbbs013pxqmtr+8rIuHNienV5ZX/l4uHC0s7S
+uHm4fXNvRura4fbW5fWdy7vHp3OLsKZtb69trE8M/nR+e2bJ1cnRyYHB8bm
5lZWnJu720eRBpATBFCwXiAJERbJSTKIaQoqW00K0VBY8djs6sSyrhyhmhuc
QJAXhwgz6BITJ8kWEWcKtbRpLC1phZa0lPI4WVlokIwdrvWPq2FLa0NSzHHR
0tDE1FhlagIvKCCcHwRSgWAed2vd+dGHzw4PT64c39o+ONTlmIRiaZY+31pR
b7e3dXQPwvU2Mbc179ybXdxeWt5Zdu4vrlza2j/d3D9a3zmenlufnVyanlia
m1ufn99YWFyHK4at8s3SiXXZMYEcBIB3yUiP6drs0TZo022K1KqUkcvTXbvd
xY48hT5OniaOTuIzpRRhATcyn52UH5nWKknKD42rCkrpCsvokqZ3JaY0yTIa
Zfn2ZENZgq40Obs4NSVT3tRRZjYZstLTKyqqbLbm9rYeW11TnrGw3FJVYq4o
L6uurm6uszXX25ubmnu6+0Z6BsaGx+fHpudHJpamF9ZmF5yLSxszi1sLFw+d
q/uLi9s7O1eX4HLfvbSysa8q45U0qZub82w1iZ092pbmAnWVbubh5dn7x0PX
NpVVBdld5oKhkgSjJNei0ZWlJWnjg2R0eXWQ1WFMrIrQ9ERkOsIUPTyVIyKh
IULZpjSP6LNLRAazjBSCjkoIEctDYqRh9TUV48Mj42OTCwsrszNLiwure7tH
21sHG+u7R5dOdravrG/sbe8crqwerG1fWnaub29u7R1eXts6Xtu+vL61uwHP
Hl3fOTjd2z/Z2zve2bl8dOVs5+Bka//4/wISzEG4
       "], {{0, 40}, {64, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{64, 40},
     PlotRange->{{0, 64}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxNVwVQW+vWrdut0lLXW6N621tX6u5eKhSKFErR4u7u7gGSQNzdgxUobsXd
IUJCSIL9H+17b35m5eRwZhjW3mettfe3S9/imdG8OXPm2CwBl2d69letrfUc
n68Gv7w0tzExNjc0uGv+3dDY0Pqs/nzwUAt8roDP7P0LZ6/Xzv4GvrEGHjGv
bXz1PZI8ID/cYcXGftAP1sG+iSQIrSqd3QwRdCOFrXACOzU1KcLPw8PWytQp
8IU3+nEA/aEP8Zoz6rJV5lsdN8frb0K1b6S+eIWzcuQGRgkT0ziZcFhist53
u/XHjsxdNH/JwkUaq9Zs37Bu37aNe3Zs3rV1w/bN6zavX7dRUxNgk6bmtnUa
O9at2bV25W6N1ftXLzmmMfeK5tynW+a+2TP308GF77Xm3f578eENG7auP7Rl
q/ae/c/1vUONfaJswzNsw7MMPKK+BcNCsXX++Hoj/+w3VsFe8cQkSjWc1xyR
xQ6FkDKxrITUrNAAv7DAQN/INJdUpnNmnhNE8D2ZbRJF+OqXZukcYubiZuLj
aRkV5ZyR5Z6D8MWS3FGEr/GJ75ycz2pfO7BXa+/uPQf27v3n4IFjR/YfPbT3
8ME9R7T+Pqr197GDu48f3HNSa9fxvzf9s33tiS2rL2xddmvHvGe75348ME/v
nwXvDy19vH/Nue2rtq5at2jeljlz9s5b8I95YKx1UJJXDNItFvU1MPl7FDqS
2ORHbNL3zXllFeqRQEnntPskEBcvW71kyeKDh4+bm9uHh0WGhMeGx6VHpqEj
s0ihEHxIOt4/BeWbBPNJhvgmpvskQrySIf6ZcH8oyicLHYxhhCHwz3Q+7di0
feMajXOnz1y6dPXi5euXL974jeval25d075349qD2zce3rly99qZSxeO/ntl
7777WjvfHt2id2z95xOa709senr476v79x7btWPD2m0L5u+cM/fg4mUnnSPS
3aOhAUmYkBScVyzCJ50ZQ2kJILTp+SLf2EZ5J1OyCwf0rXyAMPdoLl85f87i
ufOePX4al5wREAcJSswJT0VFJmXFJqeHJ2WEpcITYMhEODYZjk+CY2PhuEgo
KglN9o1LPaB1ZOuSxac2aWosmHfr1h39z1+ev9Z98drg2SvDxy8NHj3/8vi5
2dNX3168sXj+4uu9e4ZXtT+cP/vmyrkXd88/uH/uxq0z2pdP3Dh77P7Z49eP
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
9A30DwwPDg4DzgASsUwqkY+CzsuUo/JJAMX49PjYpGp8Sj0+rVRMAlGBexYv
l8bmk2gsNJmOIDH+AElmIMh0NJWFZQpw7DwMU0jhF13Svvzm2Y20hKjUsECv
r7rmjy646dz8cPGA0a2TX++fe3Vuz8eL+9xeXgk1eer08kL0l4cpli8KkOEt
VYXdLXUlLNSLi1oOxh+FfB6BhCFTcMBhlRU1re1dLV3d3T09fd3dA729I4ND
/2u7RDImESvG5Grl+NQ4YKuYVCmnVcqpyYmZCfWMSjWlUk2o1ZNMNo/J5tKZ
HCqDSQagM0h0Jo7KwFDoeDoLzxYSeYUEbgEzv8zd3cXF8mO0j53dhwf3T+3X
/vfQg0snb+zfeH336jPbNQ5vWHl6y8qXp3Z/urjt8b+autePGFzZF/vtUTU5
oae1orvlZzHcnZYZJijIzxMyKsoK21vqhgd6hoBWRFKxRAasOjwkHh4W/yEv
k42NShWj0nHA/w95AMXYBAAgD6BWT09MTE1NzXA5bAA2i8lk0ZksGpMJ6qBR
GEwSjUFjsin8AlpeKbOwXFhamw2DOJs+N3x0/vLh7Ve0Lz81dtDW+f7v6Wta
G9asWzh/3aLFW5bOP6K58Nr+FY/u33z7zfmjqZ3eo+vRprfKKLHdv7idtayh
3rq+vta2pormhrKu1hpRf5tMMiwbHZOPTcgUE3LFhFg69t/mj0ols/xlo8r/
kQe1zJagmFSOT0/8lz9g/l/QOWw6j8vk8dhcLucPOMJcXuEPfmFRfslPMhn1
TffOg+NbHp499OTpQzPf+Ls2Mbc/Wu3ZuGnFokUrly3TWLrk7I51jy6ddIyB
fgxCBEKopnofvl7fh3LT6Skn9reWKcfkkxPq4YHOnra6vvba4Z46mahHLpWM
jY0r1ZOqiakxhRLEzh/+YrEcSEgqVchk4+B1KBTgr5V/XgFQ1MTEjBoIaWKG
DPKASqPSGTQ6nc6ks7lsLp/L5Qt4fCFfmMvPz+cXFAgKCvJLSkCmWho+eXxq
15uL/z65fubDR513lg4nr17fsm75okVzFy1cvGb5Cm2tHZ8fPTRxCrJPxulZ
2OvcOu/y4izC43N9PlbUXQsap1aDf61QykVj4j7pcKdkpFcmEyvGlROT0+qJ
WUkDnoAt4C8CETQsEovEErFEOiqTy8dmq/hNXq2a/sNfpZ7Bk2k4Eg1LpKDw
RBQOjwHLCIlMojEpIPxZPBqbQ2WzGDwuJ79AUCjwdTF9c/X41QPb9R5e9rQw
8bI0f3L21K7lfy2ZN3f+wqUrlq04/fc2iwfX/Ky+OJnpGz7U1r283/HhUWFW
aEt17qioE/BXKtVTM8CD4yqFZBxkulw6rparwYPJ6T8AlhwfV42OysVDgyMD
faKBfhBJEqkMPAGv5n92VgIvq2f5Y2lsDIWFINJy8ORsDBEGBisan4OjoIh0
DJmBJtHQZBqexiRzhKzc3Mhg1y+vrt06tefu2f0mLx84fn738uqF1UuXzpk7
b/HS1WvWbNq9dpXNy0f4uIg4RwtvndtOT0+lO39szCcO9v2SSHrVSoVKpZ6a
npqcVKtVs4EC3AiErJqeBk/Vv69KJXgFKqCZUYlUMjIsHuwfGegXjYhHRkRi
sWRUolDI1b+NMAmMoFBM4RhcDI2DobLRZCbgjMBR4BgSDA0KIebgyGgSA0dl
E2gcAoNP4+Ulx4d9eX/73f3zDy4eNn5908Nc7/2Dm38tXDBnzvxVKzZs2Lx/
47IlbrqvinEIYkposOnTBJs39IzAhlJ6T0+teLRvXAlGjnp6amKWvxroQDE5
OTExPQNm6X8wPTOump41smRsRAQsPCoZHhru7x3sHxANj0hEYqlIPipWyCQK
qRgUqBqVqqhgltBoAATKrJAwBDIKR0RgCDloHLjBk+lAS1QGh8LmkjksJBJq
Z2n07dMz47cPvhu99bExfnP7yl8LFixfumrD+p17tU7u37ghwOx9Lg7yk4eG
RTpi472LWfD6cmZHZ6VsbFCpGgOEAfkpUMKEahK8ggkgmRn1/+OvUs3I5GqR
WD7LHxh5aHCwt2ewf3BoYLC/t294QCIelouGRocGpEODowB0OhiFRCqNSCQT
CeBDpgBH0+gMOoMJQGMwgbWpNAaFSSezqCwOMzEhzsXGxN5M18bkfYirtd6T
O8sXzl8MxL9Cc9WaLfs2aCa7W1VwCeUF9CIOqoCOyGUha6p43b11w6KuMYVU
pVIC/jPTk9NTajBHZ/s/Na36/QpAFerpWUmPj0/Kx1TSUQWQDSDf29nR19M7
PDgEShjqH+nvGRoEtugTdXcN9fUMM0HMM+l/wGDQWCwGm83kcOjc32CxAX0S
uHL5TL6AJRCyKVSCr5+7k81nB5vPPs4Wn57e2rRy9jA2d86CZXPmXD+yNyfK
s5iRUyEgFrKxuRxCaRGvubGqq7tFLBmUjYnkcrFaBVJUMTU5DvoPZDQxNaP+
HT5/Igj4908EAcOOjIiHwFLU09vd2dXbDb56+ro6ets7+jv6BroGe9q7O5tb
iUQ8lUpmsUDscwQCnhAMeB5bwGMJBexcISc3lycQcsFOnZfPz83j8vgMLo+B
xsL9fBzdnM1tTD6YvHt888yhg9s11/21+Mz+HW7Gb+FxgWRUBp+O47IofD6r
rJjfUCns6mySj0lUarlCATJHLAf5KZvV8Tjgqp4CyQ9sC2aASg2MAbJFPZs/
v6eASCQdHgI51NfZ3tHV0dnb2dbV0trd2tXb1tfZ1N5cV49CI8EJhcNhAf6z
A4vDZrHobBYFNJ/PY/L5PC6Xx+Fw2RwWk0Whz+4X4GwEd3BztLUzc7YytNB9
qXPn3LPLRx6dP/Txzhmfr68TAxyhSeEkVCaNiGDRMD/ymO0t1b197SOi/lHZ
COCvGJMA/jLpyJhUNAZifVytBG2fmK1CPTGtUs3yBxMNrP5/qhgZFvV0dTU3
NrW3tnW1NgP+HU1t7Q0djTUNdZWVRAKWSiEB0qDtbHBqAVs/g0Im4WlUEosF
5D+rKzaTxqST6FQclYRhUMFRKfPJ8wcf3z16cP3E28dXrAxfAxnZGj73/a4f
7WnubWvoaK4b4GYJS40oyqVVV/5obW/q7+8aGOgSifoVY1KVcgxAIR9VyORj
cjBewWACc20SDDYlWPPFI2IRmMgTcpkK7J9SKdiOJAP9gx2tbe3NTR3NzW2N
LU11jY2VYK8tryz8gcfl4HEoKhmcE3EYbA4ak40noMBv4HwNdAW8y+Uy+Bwq
i4qlEdEUHIIMQEJ4ulrdvXbq/q1Tr59fszL7ZGth6GCp72ZrbGv28cOLO/YW
nxMjfGh4aEVpbl1dWVNLfV9vx9Bgj1wmUoKtXa2ams1/pXJcBSaYeEQikQBd
KadUSpVcIh8ZGBkcEIOclColItB/sNSJBgdGujs62pt+dTQ2dTY2N1RV1/0s
rcovLBPmsVgENpvMYoIKcETy7GYLHArkBLTEZIJzJJi9TAE4EDMIdBKGSkBR
8EgyLoNFQ0ZH+X81/WBu9sHawtDOxtTOxsTSTN/iq/63Lx9D/FwgSRF0Yk5x
AbumuqS55Vdvb8fIcJ9YNCCXiZVgdwcja2oC6AZANQ7mkXJ2sxhXKEG4Dw+K
QKwM9Elmf0bFIrCXSruA3pubG2oqGyvKmyor6kt/1haXlOfmF3P5BEI2jYYD
QwCAQESj0HAcHkWhEIELGHQqlUYGdbHpBDYNRwf9xyNpRBQVm07EQDLT42xs
vlhYGtramn//bmFra2Fvb2FjZWJtYRQbFZiZHk+noAqE1OrKoubmXz3dbT1d
bb3d7cODfUAiQCaArUIO9KJQjoOlYgJMZrCZqaXi0d5eoJWh7tbBvu4RsE+P
yAYHRB3tnc0NjXWVFdVFhXUlRU0VpfUlJSV8QSGby6ITyXgkCYfAIDKhGfFZ
kHgcBgoOdzQqgUzCYjE5ODSciM6iYKB4RAYiIxEFTUFBExGZcYjM2MhQX3t7
G1dXBzc3RzsnR1dXJydbCyuLL+ERAenp8XgclEnPLspnV5f9bKit6mhu6Glv
6etqG+rrlowMzJoXbAjDw9LhgVGpXC4H/JXTYHUAiu/tHmiq729pGOxoH+jq
6e3o7GhpbPzVUFlZW1tWXv2jsKYwt7ogt4jHzedwWVQ0jZBNAvSQEDwqnYzL
ohFz6DQi4E/Ao9AoOB6TTcbCiMgMwDwbkgCHJGRnJSJgyQh4ChKeHuRu993o
vY+bU2BYZEBohLuPv6WVmb+fW3RMSFpyJDY7kU1F/uDTK34IGyp/ttVXdbbW
dXbU9fc29/U0DrRUSLqaFP29smGRTCwbk4L5JpsYHZ0Ai0JHy0Bz/UhHW19r
a1vDr6a6mrqa2qqquuryqsqiolIhv1TAK+HzioS5WByGQCLgiXg0FgXLzsxB
wuA5WdCstKzM1P8gIwmaFpuRGJEeHw6QEBUUGx2SEB8eFxcWHRb4+dGVS7s1
Lp/4x83RMSoy2ts32Mra3N3dLjDIKzTIIzXGH5YSRkal5DIIZXmc2pK8hrK8
xjJBc0VuW3VBT2VBT0VeT4Wwv7ZY1PJrtKdjtL9PIRIB/pOiIUl7w2BT/XB7
a3NNZX11ZX0tCMvaqorayp/lxUJhIYf9g8vO5/LAqgPPQcFgsCw4HAKDJ6al
BYWFBgX4Bvn7hAb5B4cEhYQGhYX4hwV5+fu6uDnbOdnZ2ll9t7UwtTB99/Lm
yXNb/zq6et6GOXM2r1j+UPuCg42NheU3a2szR6fvnu4O/q7WAc7fIjwtU0Ld
kcnBxMwITk5cISqpGBFVmOFfnBVUgY6pp6Q0cGAtheSB+hJRR7O4t0c+OKAS
DSsH+0bamgeaGttqqppra5pq6yvKqooKS/MFPwpziwQsLodC51A5WBwBBoVm
piVnQFJT01ISEuMjIiPCI2P8AoPdPX0cXFydnB1dnO3sbS0sLL58NTU0+Kz3
QeeNztO7984cOrJ+2fal87cvXbBz2YLDGkv3ayx5eO++sYmpvr6uqekXC/Ov
hrpv3tzX1nt4KcD6IzzUnpnmJ0j3FSS6FCQ48MO+ssItwH09Ib4jF9VeTGsv
y+2prwYNl/Z0yfp61COghIF+IJ7ysrqy8trKmuKisnxBEYcpmA11poBKoNGJ
bDgcFh8TGRHoExMRHBIS4OJi7+nlHhIWERAc4unt6+TmZudgZ2draffd8ruN
paXl12/fDIze3j+3f/vmRfO2Llq4ccGijQsXbFu2+Pyebaf3bjtw4NBrnY86
Ou/e6nx4r/PO5otumL0x3MeMEefMinWkhVuRA02wHro4Lz1+lBU70lqY7F4C
C/rFzOoq5fbWlPbU1w63/BpubQBXWW/3OOAPfFtWVlxYzOfnM5gCCpGBx5AA
iDgqEU8nYJmxUaGh/p7h/u5hAZ6BPm5+Ho5+7vbhfu7RoQGB3h4uLk4O9raO
dtYOttbfrSwszU2+GH14cubIic0au1Yt3bHsr0Ma646uXXlp7/aLZ7XnzVkw
d+GKq5dvG+nquTjYQ2Ki6ImBCO+vcV/uhH2+mWH7BunyDu9twIy0pYV/Z0Y5
CBNd+UnuZcioClJag4DcW1naV1vdUVrQX1PaW13SX1cj6+wcbGpqrq4rLq7g
8QoxWDo0C5WeCktKhCQmZMXFQqMiM9KAJSMD4yMCUmJDU2KCkyN8k0Lck/yd
Q90dAr3cvdxc3FwcPdycXZ0crCzMTIwMdF69OLV7x0FNjf0aK3b+9dfhtRoP
j+w2uX3m7aVjN7S2PjtzyPX1/Tizl5RQK2a4A9zuU7j+bb+3FwJ1b6ZYv8X7
mrKiHQszg0vg4bxk73xIQC4k6CcqoYqc2cjFtxVw2woELUJai5Delsdsy+f3
V1f11TfWldUxGcLMDGRQYKSjvae7q7+rs4+NlesXQ+sP74xjw/1jQn0jg7yi
gr2jgjzjQ7wSgt3iA9wDPZy93dzc3dxdXd3At72Dg5W1taGR0bOnz47u2rF6
7pz1SxYd0Fxz6+DulycP3tu97oXWauOzWz0f/eP99LjrvSNeT07EG92B2b6B
WDxPMnmUZfcO5/ctHxJUjo6vxCVVE1JKkbElOdHluORqCrSaDCvHZ1XT0RVU
ZBkeWkVB1NBQdWx8nZDVWVVbUVgWH534+P7TF09efX73yVTfyPLLt2+Gxt8M
DQD+D9xI8tM=
       "], {{0, 40}, {64, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{64, 40},
     PlotRange->{{0, 64}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
IoUtgwHNhSMcPFwrY3EIGFp0lJiCNgiFMQjkiaeeO33qXE9L/VeffvTPX/ym
qaicGE3CYXAMPMHv3MsBL/+UQ8FnpMhTbWK7FQQUwPTTHTZXIaVKRWSRgJiQ
QDzEw35zKsDAofQ7eLCJQDowmHBiHJJKjWGziPwEqkTMVigSNFoenIjALRol
U6dmWcwCqYAeHej//HGv8FfPO81GUizRle3anJh85+bWZFPN2/vbf/zdH7YW
V2g4HDYikoBEkbBRuU7N13hwSDAcqqdkHuKRRALCX8UL9uCBdFBkEtaSpKko
L3C763s6W4Z7OyZH+ycn+qaneyenOgf761oaiooLbKlpsiRjYljAhTOnXjj3
/ClqNGZ5avLf//Qvb+ztC0i0wLMX8pO0n3/4i99/9WVjdRURiwkPDEw2qUry
rTlOrdOhdKRIbUlCnYqtktPlEqpM/LfUCwy4CKdlOFOJeKz2ppqbq/MHuzff
eO326/vbD+/tvvfowa/ee/TJR29/+dkHX3z+4ccfPnrjtY2VucGOlvLEeBIi
JFAtkpjUmrXF2Y/feW97bomNwb1w3Lv9ctHa6OCD/d2Bzja5kJts0vR11I0N
tE6NdkyNuscHW3rdVdVl2c5ktVrOFgnJiXw4GhGZrMNdA44EeM9UAbkgFEGB
vkDIYpB7O1q2bize2lje31y9vbm6MjuxMjexvTb/2v7mzx8d/OqXjz799Bcf
vv/w/v7K1urE2sLwSF+zSS2hE/BmjeJafeXKxER7camGRIt66QwPjSxKsbZW
V1YUu/KcKVWl+f0dTSuzY9trs3e2lw92V/e3FrdWp2fHe9sarzhS1SIBmc3C
gXQUKioOcoGLhIkHfgsL8/P3u0AkYOtrr64tTm/fWLq9dePezsaDu7d21pen
R/onB3uXZ8e21ufv3916792Hb71xZ3LEfdmVXJhtbaktLs1zGBSizGRzcWZq
dWG+U6eRUuKUDFq6SuY0ag0yiV4uybCbK0sKW+oqa8ou93e0zl8fXF+cWp4Z
3ViaurO9emt9bny4vaI0S6VMAOmIcVGQTQw2HH5TA8sBHkhnt5mGBrqvD/Yt
TU3sbqwe3N566+HB6/s7y9OTg53u4Z5rs2N9WyuzD+/tPLq/P9bfqZcL2OQY
q16WnWyyaiUmpUQnk0h4XJ1EWOJ0lGalX87M0IoTKRiURixprqyeGRktcrk0
MlltRflITye8qM/dMjXSA3quzo1DLU+PdlyrcTj0bDY+BodAosKiEHCM94PY
wnne4bBXXS0d6GifHRu+uTK/u7X68LXbD+/fvn9wa3VpaqCrZazfvTA5tLE0
vbE0M9Lr1ijFWHQkh0nWK8SpSfp0q0kjEdIJOFxUBBmDoePxmNBgfESYiMVo
qa7eXFpenZnVKRRcOv1qyeV+d1tnc8NAR+vMeN/4gHt8oGNuYmBtfmJpZnRs
sLM4L51GQaOQgYgo/+BgX3//V1DIyAyHvamuEtY1MzK0vji7sTz32t72W28e
PHp85/Hju7e3Vxcmh8cHO+euD8+MDwx0tUsSBYF+voiIUEocUatSZmekF2SD
kAYFL4EZG4sJDY0JD5PHx5e5XNf7+xfHx8d6++KZ7BA/f1eGo668tLGyYnZ8
aGqkt7OlDjwJC4deXx/qHuvr6LvWlG7TknGhGMTF0KBX/C6eI8cRi3IzrzVU
DXW5oSaH+mdGh5anrm+vL+/f3tzf23xwsAvt3lxbWF2Ymhzrv9ZcxySTXj13
zveVV86cPnPhlfNSsSzHmVNZUnI1Py/barHI5XaNtiKvoLe5daDd3dfSWlda
RoolY6OinTZreVFeb1vL4uTYQGcrWHFuYhDwhrpbe681QPW5G1ury5LUPBoh
CB3507CAM/wEbkVJYX15cVNVBZS7sW6w8xooOdbXM9bfO9rXOzM+vDx3/c7O
BsycxZmx0YFuh81GIxCD/fx+9MKpE17egf5ByZbk+oqK9traqstXruQV1pZc
aauq6W5o6mnr7GxxG1V6EpFSlJNbnu9qqamcHh6cGOgFSy9Ng/cmZsb6Brta
oIa6W3ra6toba3OdVjYdEYM+i4o6K5cISwtdZUWuiqL86tLiysuFUNCC9rqa
zqZGd31dZ2vjcF/n+BBwjkyODo0P9Q90uOsqrypl8pd+9NIJrxPP+pxER6PT
7MlXCouqSksbq6prSkvz052Xs3OddkcCM+Hsj88lxife29vf3doYG+qdHoMG
9d1cntlZX4RcLE4Ng/1G+twdLbWt9VdrKkrS7EZJIj0W9yoOdc6sU+VkpBbn
ZRfnZF4tLihxZWel2AqznM3VV6811IKePdda5ibHNlYW7u3tbq6uLU1PgwEa
qqvSUtJ8X73kffzEU95Pn/R57uKrl8gEok4h16tURpXKkWSxaLQkNP4np358
7Ngxm8b06PXX33v3re3NtZX58dubi7c3l2G2wJwBV0OKe9xNVWVFBTnpaTaj
XiW1J2kFCcRY9PmCHCeUy+nISUsuzMo4rHSQsdTlAR7u7tjfvnnv9q0DqL1d
6PDSzPTU8EBTXW22MzsGgwO8E15PeR3zfu7kDwN8AyKDwuG3ZyaRrBImWrU6
daI81D/E5xkfu0rz+u72rz94592339zZWLi1Nru5MrO+eB3ABjqbh3va2puq
i/IyU60GhZinkgpcmSmZDgOLEg7SpSdb0mzmbEeKy5lWmJNZkufKz8rsam9Z
W5jdvbl2d2fr/p3du7tbB3u39rY21pcXRnp7GqurczMzefH8kz4/PH7suNdx
rxPeJ07/6MWzL54mYuJK8nNvLE4+uLfz8GAPknVjaWZmZHB/a+3nb95/9OaD
gzs7OzfXtlcX7926ubW2sDA1OjHU09fZWlVW6Ey1yBJ5oF5BTsblAqdBLXDY
k5yptsw0e5Erq6w4v6y4AF49OzEBTdhaXwaee3vbd3Y2X7+7t3/r5s3VRaix
gYGm6prMtFSFTHnuzHnPHwoBz8vr2ad8pILE3c21Lz//6I9/+PyrLz7+3Vef
fPmPH33y0TtvP7r/xv391+7cOtjfvgf9WFnoaWtemZ68t7t1e3sdNtPFmYnR
ga6G6rIUizEjxVqcl3WlODs7wwrSHfU3PzujrrIMzL88O7syO7exsrR1YwmW
eWtjdXMN7pcP2RZuLM3NT8KhqcZmMoqEkoBLIYB3wtv7maeeyUp3fPz+O//0
xWdfffmbr377+Rdffva733/xD599/OtPPnj7zfsQ/Nvba3e2V3ZuzN3ZWrt1
Y+Xm0vzW2iKMLPA0KDw/NTrukbG9pb76amlRZVl+cUFGSX5eXqaztLDgWlPj
2ED/+ODg9NgYdGNxZhISATUxNDjU0z060D/Y3TU5AuEdmR4fmRjuz0xN5tBZ
EWHR3t5PA6EwUfDJrz/41Qfv7O9t93R3ZGVluFzZqSnW/v6ux49/9vH77771
8P7qwvTc9aGV+eswQmcmhuC0Njc5Mnt9eGV+cml2YgFePNgz1NvZ29EGQoGA
Ra5Mu8lcWlDgbm7ubG3t6+gY7e8HhqmR0e5rbW2NtVVlxdVlZTXl5VWlVxqq
qqC62lqH+7qmx4eHejpMSmV0OOLpE09LJYLHjx6srswX5GeHhwU+dcL7+LGv
P0698LxSLpkaGwLx15fnp8cHR/o7J4Z7e9zNTbUVA93t/V1tXe2NQ73uo/vO
tqbWhpqaitLC3EybSZeVlgYA8N7W+vr2xsb+zk7gbGtoKL9ceDk/50phHsSk
OM8FTnM5nWVFhbCtwxNG+rsXJsemh/rTkixqmWR3cwVGwcvnTp/wPhYa4qeQ
S9JSk2VScVBAwLFjHlL/i+eb66tmJoYXZ8bdzXWdbQ0d8L6qKzBMKkry6ypL
a6+WgPFa6ithV2qoroBBl5eVbtIqM1NTi3Jzy4qKwE4tdXWAWl5cDCSFOTnZ
DkdOejpkubq8ZKDbPdjjhi0DOjI22A0rbWusaay5OtDlBtp4Fu3ZZ318fvA0
l0Mjk/B+ly6i0QhHWnKuM50cR/LxOQmEGGxUU/3V8aE+eA5kEPSBoZHlsEFa
i1zOXGeqKzMVbkoKciGkBbngnSSlQmw3mTKSk0vy84tdLrjmZmQAUrrdDgXk
VVeuwDYBM3l38wbkYufmyr29TTAzHA7ByaMDPV3tzRCrqFDPH/vJZCKHTfX2
+rqtL734okoqTrbZcfg4n5PPef5nwOf2uFuBsL6qHJIIEtnNWofdlKRXWg3q
9GRzut0MybUatRBYvU4JnjFpNWk2W15WFsBAo4EWjh/ACdYAg0yPjYJhILlQ
EL3t9aX9W+t7W2twA4TLc1NgY5hUEaGBP/nJaYVciogMPn78mLcXbCXPAM8r
587ZLUlyhTo0AnH8uNdzz/4gSa9uqq2cHB0E68NmmpORYjEoYRqb9QqtUmzU
ymUinlzM95QsUSzi/QczacsZ
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
VgY/XNX/NqPmeVT+z6X+z/L/Xv5j/DdGcxGJ
       "], {{0, 40}, {68, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{68, 40},
     PlotRange->{{0, 68}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJyN2AdQU/m+B/B9++7u6kpR6UhJ6L0KUkIPvfcSOgGSQAghISEJkNBCLyII
KIgIghQBC6BSBJFipYo0QQHpTVEslLwT2Ltz35v73rzM53zn5MxJzvf/O2cm
MwH7YxyCfv3ll19wJ4Bw8CMaRET4kRxPA2+cw3DI4LBAuHkYPjA4MELD/z+B
g1LApgZszP0wBTmssiIAp6yCV1ElnFcjqqmTLmhQNLWOkQHakGiITqyu3jGq
nv4xmr7Bv/r7eLSeHuUISUfnb1EQCEELgtfUjbigDQhX0wSEnVdDqSgjlZWC
FRUC5RUD5VQCZJT8pRV9peS9pOQA/7YeWUPzbySg5P9VT/9vxweBE/73etqR
Wro4DQhOQxurzqyHPq+GVFFCKCn+XQ8uqwzU85GU95BSAIQpyB/VU/r/1KMe
0zM4AlQy/FdxBkxA51h9gxh9fQBZR/ef9XSjIDrA9CK19IAB4jR0IjSAAWqF
qamHqKqilIEBKgcrqgTJq8JlVeAyyr7SSjBZVcBxpSj1CxR1jWgNzVgtbaoW
JA6iG6ejS9PTj9M3iNMHUj/R0CjZyPCIUYqJ+bFUU4t/K8UMYJ5sahZvbBzH
ZBIHNacZmcUamEQbmFL0TY6RdKFREAOipk6kBiRCHRKuDsGoaYeqaqOUNVHK
WsEqmgCatmaCjnaiHiRRXzfJUI9upJ9sZJBibJhuAgVkmBpnmZvmWJjlWlnk
2lgfy7e1y7djKrB3+LcuOTheBNg7ZtrZZTDZZ9g6pVk7plrapVrapFhYA+jm
VnQzyyQTsySocYKRMc0QGqtvFKNnSGZ2NiJqG0RCmNKg+hnGhplm0GxL41xL
kxwL6CUb83w7i0J7q0I76yJ7myuOtled7UtcHK65uV5zcyt1c7vh4c4Ecy/3
/O9gHjeOXPf0LGXyKoJ5FsI8i5h8Cty9LrvBClzdLru4AvKcnC85OuXaO+Ta
2l60tc20tkmzsEw1t0hmdjZPMDaNO1Jga1VgZ33V0bbM0bbS07UG6XfDzaHS
y7XKy73S073ax/OWr2e1v3ct3Pc2PKAeDm8IDLwdGFQXGHQ7KKgBGXgkqBEV
DGhAIm4jkYAG1F9qkaiaI7cQyMqg4JuBQRXwwPIAOKDMz7/Ux/eat0+xp9dV
mOcVD1ihm/vftS/a2Wfb2gGqvVwBtT4e9d6wu0h4Zzy5IdD3HgreFBLchEI0
hyKb0KhmTMgDLLolIvQBDv0oEtOGwzPhI9uiSEwkUjuZ3E4it5KjHpKID8nE
hyTSwygyoIUQ1UwgAprwhPs4/D0c/i4W14gJb8Rg68MwdaHo2pDQGlQIUL4q
GAGUB2rf8As4bg50BjSFBDSHwlvCglqwiFYs8gEW0U7EdJDCOym4TkpkVzTh
SSyxmxrVQyP3JEb30mP6kqnPUpKeJyc9S6H3p6f8U2p/RmpfegpTRkpPWmpP
6pGU5J4U+tNk+hN6YldiAqAzIb4jjtZOo7ZRYx/FRD+MprSQSc2kqPtEwl08
rhEX0YANvx2OqQtDV6OQt5DIzmhcVwy+m0boSST20qP6U6P70mKfZdCeZya8
yKa/yk0ZuJQ2mJ8+dDljqDBnuCh3uOjSUPHlYyOlhcPXmEb+yisj166OlF4d
LrkyXFJ05MpQSdFgMaBw4GrB6ysFr4ryXxbmvSi49Cz/Yt+l7J6Lmd3Z6U8y
07rSUzpT6R3JiW1J8Y8S4x7GUVtiopujyYNZScM5ycOXUocKM0auZI0WXxwt
yXtbevltWdF4ecnkzWtTlaXvbpXNVN+YrqmYrr05e/vW9O1qwLv6mpnGOsC7
f+bsnfrZOw2Amcb6Y9MNddP1TFP1tVO3a4GcrKt5W3OLqbrqTdXN0cqKkZvl
g+VlA6XXXpeUvCopfn6lqL+woPdyfs+lS4DJ8svTFQXvKq+8qy2drb0+e/vG
+8abc3cr5+5VzzXVLrTc/vigfvFhw1LrnaX2JsByR/PS45blzgdLjx8udbb/
pesx05POxe6uj086jzwGLHZ2LHV2APmxo/3YQnvbfFvrXOsjwPtHD2Yftsw8
aJlpaX53/+7U3YbJxvq39bVjt2ve1FW/qbkFWGi6tdBcvfigbvFRw3LrneX2
uyuP7611Na11P1h7+mijt229v33jWcfWi87Nl082XjBtvereHuj5NNC3OfD8
yIvtwVeAjcFX60NMG8N/2R56fWxr8BXTwMvN1y82X7/cePV87cWz1Rf9K8/7
Vp71MbO3e4m5NOaiFro65jvbP3S0feho3eh5uNXXtg106H+8/bxr++XRpQd7
Pg/174y8+DL6cufNy52xVztjLz+9Hfg8Mfh5fHBnYmhncujTxOCnyWHA58nR
L9Nvv74b3z028z99nRkHTtiZGvs0Ofp58s3O1JvPAOb+6KeJke2JESA/jY1s
jY5sjgxtDg+uDw6sDbxeG3y9+vrV19Fepjd9X96+2B1/+W1y4Pu74Z+zo99n
h79OD3ydGt5/P85YnmNsrTPWl/ZW5xjL7xnL84z15YP5KcbOGuPLGmNnnbG1
ur8693N5+sfS9N7y3D7TB8DB0tzPxffflz/8XJo/2Fhknrw6/2Phw4+Pc98X
PwC+fZz9tvBud356d+7Ih6kvMxNfgOUA+W4KsDczdGR478PYwfz4wcLk/sLU
4eL03uIU4/MSY3d7b/7ddFdH49UrdUn0O1FxWAdvuJk7xh2RgSHm0ei1BSU9
95vnhl79WPnA2N1g7H7a31zb31w+2AIsHW6uMT5vHX7a3P/0eX509On9xvX3
b4GDBxur+5sre8BpG0tA7f31j3urCz9XF4DcW54HFniUH/eXPzIWphgfpxmL
0weLM4zlWcbK3MHK/MHqPDCQ3qb7ZGSIm5WDqbYx9IKxp6NXlWeYpbwBj6Cc
ggzE3szZzMDZ3srX3xWD9SEnR2WXXy5//bRvd3v9YPfTwddtIBl7Pzfm5ib7
n98vukb38HMSFHNRkJ8dfHm4t/tje3V/Z/1wZ4uxsw04BFbxeRPA2N443Fpn
rmv7yMoc4HB1/nBtgbG+cLi68P3z4uHi0t3ELD1ZhVRa2pXsksLcgvyMvKTE
nAoCrdQb6x0Y4eXqF+iKhjlj/LyJeEwanXo1P+1mXeXD5nsd7ydmDr9/39v7
tvfjeyaVDnfydDO2Umc/bScpWY4IpZmYjPf3MP567R38/Hqwt8v0/cuxw93N
w90Npq/rzFxf+gsw6vWl/a1lYObvK+rdFVXb7tQxfnz/tLKwsfJucf5D7fWb
ra2Pu4jkusIbgYQ4Fytfe0dUbu6VoeHh9/Pvd3Y2X3d3tNXW3amofTs6vnu4
/7z/qbONqYu9hZSokDlUNycn+U7NzYzEhFcvny0uLV3MzO7qat/f+/bzx87+
z6+HP3YPfx75sXP489gXxt6Xg7XV/bXVg421/a31vU8be9sbP/oGUs2tM1Pi
NrfWNxbn1tdX1pbf3y+/QQyPaKys7C2uroITCIjY4tis0ri8R3nXW/NKXlXf
W+zqr8FEhkjI0swsR241TTR1PkrLKfZD5Ln7pFk5FbgiR8sau7MK25OTe0ur
CvBUDS7Bqst5u98/HzIO9hk/9g+/H+5/O9zf3d//tvfz697PL0AC5RnbO/sb
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
At2AxPgG/BfWfDzl
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJx1mAVYldm6+JUN7O7uYicbEJAQRNpBUCkDMcYWlJA2ZzAIEdx0t3R3C1KK
EgrSaWOOTpyZc2buHP8LmOM59/7v/Z7f/p7FZvPwe9/vXWu9a/OP+rqcVFm3
bl0ADNxcjoRY+vsfOe+KAz/s9gnwPOVz4vg2n8ATp074Gx+FgDel4GUBXivj
3LzbtwuKyiuqWlraenvuPRwaG5tanH22vPT6w8v3n99+/sf7n/78+MufP/zt
y//F59/+G5/+vsLHX798+OWf73/6rzef/vHqw6+v3v3yYvmnZ68+P335aenF
DwvPPsw/fTe79Hpm8eX0woupmaUn4zOPRyeHhsfuDwz39j2409nb3NxWW1tX
Xl5ZXFyal1+QmZWTkpqenJyckJAQGxsbExNzc/X66t/c1HL3bt/Aw8ePx+cn
F17MPX/zdPnj64+/AoG3n38HJl/58POfa3z85Z/A/9Ov/wT8O6Jfv/zw25cP
f/vnu5//692Pfyz/8PeX7//24s3Pz199/pf5+9nFt9Pzy1Pzzydml8amFx+P
TQHzgQcjff0Pu+72t3d0Nza119U1VlZWl5aWFxQU5eTmp2dkJSWnAvm4uLhb
t25FR0cD+Rs3bvzlX1nd2NDc2dnTPzAyPDY7NvN0avHVwst3z978+OLdL0Dg
9ce/L//wDyADBiAiwLvPf4C4/sUfIJY1gPmK/C9/vvn8O8j887c/P13+EaR9
8fnHuaX3MwtvpuZeT86+Hp9+MTo5Pzw2/eDRxP2Hj/vvDXb33Adpb23rqm9s
q6purKqqLS+vKCwszs3Nz8jMTk5Ji41LVMbGAnlgHhUVdWP1yr9dWFBYXFZe
CeJtb+/s7X/wcGRsZHzmyczi1MKzifmX4/OvppaWZ569nX3+bu7F+4VXHxde
fQIsLX9eWgb3T0/ffHr+9sfX739e48X7n56/+/H5+5/Ar+Zf/jDz7N3EwvLE
zIsnU09HJxZHxuYHH808GJ66PzgOctUDEt4NtHvAv25tvdPY1FpT01BRWVNa
WgkyX1hUvJr5zOTklPiERKVyRX6tciIjI8PDw8EdJB/4l5ZVVNfUNbe0dXf3
3n8w+GBkdGh0AtA/+Lhv8PG9odGBkScgUQ9BiT6ZHplYeDSx+HhyaXRqYZX5
sZnFJ/NPAeNzK0ys8Gx0ahF8bOjJ/MPHM/cHx4Bt7/3hrt4H7Z19rR09zW13
QZE0NLTW1TXX1NRXV9dUV9euFUxJcWlRUfHt1bJJS88C8qtl8295kPyIiIj/
37+xqaX9Tmd3773egSHA3f4HbZ09Le2dLR1dgLbO7o6unjt3ezu7+rvu3r/b
86C3f6jv/si9B48Hhp70Pxq/t8rAyMSD4Yn7Q09674909z2803WvraOnpeVO
Y2NrQ0NLXV1TdXVDeUVNSWllUXFFYXFFQWFZQUEJqJOiohIAGOTnF4KaycrK
SQM1n5IWn5gU+1fZRK/JryX/X/7FhUUlwL+qurauvqmltb0DeHb3t3f1NXfc
rWtsqaltqK2tX6G+saYBrAqdzV29rd19rV13W9q7mps76+ta6qoaG0vrG0vr
Gkvq6kpr68pq6yoa6qubQCU3NN+pa+6ob2quqK4tKKm4XVhSWFB0O78gNwdU
dd4quZmZuTk5ucAZAAbAPCMjKyU1LTFppWxi4+LXJmzU6gVq/j/9C4vKi0sq
S0qryitqa2qbGhrbWlo729rvNrfcAeOqqubKyqaqqvqK8prq+pa6traS2wW5
V8ISvP3C3A+dt9sRsMXGz3iLt76xh67hqQ0GgDMb9Lz1DU4bmPiZ2YRYbzu3
3el79wPhPj7xV67nJOeUFFXk5d8GhgCwpKyR8W8y09LSUlNTU1JSEhMT4+Pj
wWqjVCrXKufrmvPVH4y/+peV11RVN9TWNQPtxsY2UJbgQVdUtJRXtJRVN1Y3
tZcXlCUcPfW9VDOMxQ1l8EOowosMjYtsYRBPEqiheZGnuMDVDGFJg7maQXwt
P5bsNEN0mCU8wODtprLsKYxv2Dw7ueKAs0ticmpuTl5qanpqWsYaaausvLNC
Kljkk5KS1pZK5er1n/5rj+B/9a+orK+orKuubWps7WwE+W/uqG5sLa+oriit
yLwa5qVlsJvCtyGxDGhsfQZbn8M15vJNOeLthtZeB7zCL91ShqWEBkceO+Lr
6OhmY267Sc9IV66nEGlpibQM5Rv1xDo6IoWIL7KwtFIq47Kzc8GSCORXd6VU
sLYnJ6etDJKS/jPz/+n/dc/6On+B/5r8CuVVYBeoqqmtKK/ICo9Ov3wt9cq1
a/5B1457nHdy9hJJL1CEUjqLxBcQ2TwKm0dlc8gMDoHClusY29jvOepz5UZK
eXrZ3ZTCOxEJJYGhyqNnQpxcDpqabt2oZ2pqaGNtus3a0NrK0EJbrG1iZBZ1
U5mdk5eWnBaflpGYnpmekpKUnJScmAzk/0fmb90C99jVuzI6OuZ/+P8lD/Jf
UlVQXVlceDtwi50/U3qZI79AF/py+adlIl8OL0IgucSTyJk8PlPMZLDZTDaL
yWbQWCQCTcDV0JTp6BtYbnM86OEX+n1Ezs2EilupVVdvZvv6X9uz96SV5Q4j
XfPNGy0sDS2sjSzMDc21xNqbN1vGxSVmZeSkp6SlRMUAt8Tk1dT/d//YWGWs
Mi42Nn6Nr5tX5OoFBl/9i4oqahobrx0/6YnjhmnoRAm0CmWGA9+41WpbZPB0
Y4VaUTSZEZVHZbJIDCaPw2cyWQyQfzyVSmGxWXwBTyqX6Rsa2zo4HTnqcckv
OMb/XOxp/7BDxwKdnA9bWeww0jMz3mC8xWiLqdEWC2MLQ62NW21tUzPzlIHB
+8Saltt3JCVlJCbeAjGsltBKCMB75R4HailhjbWF6OtaBGIpKasqLqssKq0o
q6rLCY85xdUMpkv9OOJAIqPTwnW7QPMbpuyqoXWko2uAo5uZkckWsZaExqaz
uCQqm88RE0gMCplNJ3NYNPBQ+EKBXK5lYLDJysrWeYfTYVe303v2nXZ0Orx1
6+7NpnYbdUy0wIyQ622Q6xlrGSjk2s6u7oE7nI9RBcEXLubdLs3KyUzKBitn
elJcErCNT0hISogHzyM+PnENENBqIf3V/4B7cWVVQVl5SXUN6INM2YJdSJov
UeROYx5HI8qMHfTYIgqVY8kSOGlItbdsJhkqdDVkexkiUzKbTWYJ6XwkBofG
UnFEJonCpFDZFCqLwhbw5DpCha5E10jPxGaTpYOJ1Q4jyx36praKDZskmroi
iYLD5rLpdDFPpCMRWzLYJwTyC7t3hx7zuOETknw1Ij02DsyGpNz0hOzU+NR4
EEPiyrxYAQQE4gKFFBOzEgIIpLSyrriipqapLeJ6GFxVfQOZ4YgmuWDJzkh4
ho6JlVC+jSnxpos9WMLjFN4hlmAHlWZPJCTobA5my44zRc4UznaOhjlboMPg
alJYMhJdgqdLsDQtEnsDjW/ElllJ9W0VRrZyfXu5roNMy15D044rs+eKnQWS
vQLxfrHUQyQ7LhEf5PO9aILDbKEHTxKg0A/dbHlt9564oKCc+MTU1XVpjZSU
lTEIZLWoVl5V9W0VtS1Nd/puXr4q19TdoKtvjkI7IPDWGOQVDv8AT2GLI58i
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
Svp+T/e9u139/w95yWst
       "], {{0, 40}, {64, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{64, 40},
     PlotRange->{{0, 64}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
PdbSI3a510Zb79gVq+IcfOMBtn8Sd3WKc2CqyxqBDC9IJsUlOAPgBaU7B6aB
yANRynmNgLtmi3OgAJzI8U929Nvi4Jvk6LvFYVXSSu+Eld6bWV4Jy/kJy903
gz/MLD02WLjHmLttNHHZYOwc/bHzhsVO0QbsSKZjhI59FI2xTF7LQlHbUlnb
RoVpq6xjpay7jK5vpapvo2pgq25op2Zgq2Zop76YpWkwDRRlFn3EAjQWExUQ
gUUfrQBmc+LQYvAKy+n6llJWdD0bgq61irYFXduSrmOpomOprGWxQMdCUctM
gWFK0DSV01hKVl9CVjeBUDkZGJcHIJwGk6RweQRTRHBAAQE5Lo9iCiiqiIKi
rA6mmPwMaQ5WkhQRkoJ0Kl1JkkdINIR4QTkZBKcBMC4Ho1QYpUgjsTsEoWRi
cwwFqBBGhVDpLhlKnd65gjEIeQc8d4Psj8aHh+GZnTT494psHwydflkYe3cD
jbju9NWJbUPp1tlsA7INtHe3+37flCSKKApLSRN4xocVGURWh4hkeuX7e4l/
ui85e+S9fcj/YCf1r/ir4//y5jzojUwm/7e7+NNBIpH+BVr7Oyw=
       "], {{0, 40}, {53, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{53, 40},
     PlotRange->{{0, 53}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
CWMyiA==
       "], {{0, 40}, {71, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{71, 40},
     PlotRange->{{0, 71}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 40}, {40, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{40, 40},
     PlotRange->{{0, 40}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 40}, {40, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{40, 40},
     PlotRange->{{0, 40}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 40}, {40, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{40, 40},
     PlotRange->{{0, 40}, {0, 40}}], ",", " ", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJytmFlTG9kVx13JSx7zFfKWb5BUKpWqVGV/yGTsTGaxKw4uOwx2gW2MPWa8
gFmMjY2NgcHGYONtjAwCCyQWgSSE9n1tqdWtpbW3ultLa2GZ1KSco26j0oBM
8NT8q+i63bp9f/cs99zb/OzY6YP//tGBAwfO/QQuB+u++G1zc13roZ/CzUdN
5xrqm04c/3NTy4n6E82/PPZjePjzt3/lNk3TqVSK4kTvFsOk02mGpjOZTDab
y2aK2WyG4R5maim7P7EsC2OTJPkuLsNd2Xwhm8tBt0QiSqXoXC6fLxSg99tX
KJqfRnpPwWz5ifFXeEJtqxaXyhfybrtWIX66NvtI8fqBSvxII51w2jQ5mAqb
YxiaH5a3dw9utTdyudweXCqVYgtF5fK0YPiScWHMo53BTfOYUWxbeTY92vHq
4Q0yRuQLRd7te2tHFIALb+0KaXmkDJ3KsSzu847cPGOWjYccK1GfPo4ZYj5t
HNWQmFY6PTR253wkhILXaYbap6UVbq1UKs8fGsX1zQXRS8H9y7hJksD1iaA1
gQNXF0FUhGuVibiXp4Yf3m5hyASM9C4ba+bbDi7Dm8qJoqlicf3FgxuiJ52E
U06GbImQLe43xX2amEdFOBUB50o67Hx2u0UlFpQ2Nnd4e+/c3s2tvAdpXiqU
Ht25MvesO4yspghbMmSNB8xxVB1F1sJuZcAhpUMWu1woHOmBBINX3otbHd/v
zJmhNkqlsTtXRY87IsgqRdgpQAfNcUwbQdbAzyGHNIooo2616HE3mYhmyq5m
9s+FDjW5DM2sb2w9G74+MXgxaF+mQhYqaE4FTBDfsBu4SsIuDTukcY9K9Lgz
QuDlEDM/ABfuSlvfiiZGR66fQo2SOKZP+I2QVxGPOuJWEE4ZYV8i7Ishh2xy
5Go07IfFzPwQXGiX1jdMutW+L//lVLwMu+SwiGAFRdzKsGMpYJnDjaKQbR5R
TQoettNUEjjvFd93cUHweyIRu9N6VD3djxln46gK0inokAWsEswoQjRThGNJ
IehbmhoslErvm897cOF2Y3Pr+UDHi7tnbbJnhFMa9cj91gXM+NqrEyJqgUct
GO9tdBlX8oWNSsGsRr+LvjcXqnOpVDKppH2tR3SzA8alsZBlNmQW4bpJh/yp
dWl09kHr6I2GGIFn2EK6VrX8flxQLptlyGTPhcMzjy6tTvdppu+Z5oYNs4Oy
l91TQxee9J75eqAlRcX32A/etV3uwc2kYaul1tfXR3ovDlw+MvXVF/NjbdIn
XZInXfNPOw3KGYdx5fGtRppOZMovwjb3djesRrzL+Xvby9Cprc0NyeR4b8sh
s1KoV0oQ/QrqNCbjsY1v36Be50BbXYTw5fMlbjhmd0x3oPfJBXJx4xuVTNJz
9oMIZip+8990mqTpCBkLkhHc59CIX9z0u/QMGaOSCebtAaAcv/LhZJtbja7J
rbmKi6VNi0HVdfbvVpkANy26VEJEI8QMMwHLUtipIAOGcknBDMmglSJcdNTL
JIlsOlXODSZbsb2C3j8XjjQoYh+92SwcvbY6PWSTvfBohUGrBIpzwqdL4gYo
oXTYno652ASSS6CZJMamsFw6nM+kqrnVof//XJqGE4VJLe8599nt1qMPe5pE
Y126+VG/RZLAdFTQQkccmTiSI9EsieaSXjbpzZE+Ou6lEt5MyleOeDa3g74f
LpTpYmnduLp473Ld0LWGvta6/kvHYCOIowoqYKD8+mT5JKCPoaoooiBccr9t
Gbcsegxip+a1Xvo0gFrgNJIul76d3DR3vtqNZrZPsKX1zdWl2caPf33rwpGx
7pPD7fVfD7ZiJrHPMOtUTlhkz43Lz7Xz4yrR/eUXtySPrwvvt73qvyAcvjx+
6/SK+EWhWIJhdke5JrdiNc9PJuOXmj6tP/iLlrrftdX/abzn1Nx4j/Bh+8Tw
JeFIu2CoZXKw+dXgReHINenLe8q5p3bNonTy0Y1zn6hkQgjT9+NCLzg4nzz8
+9eCB3Lpq7bGD68c/8Pg1ePT473zL++N3202K2eCiCFKeMlULJOhsvlcaWsr
GiXamz7yey35Qqnaz/vnwsYaJvD6f/zKqpO/efPGYVrravxw6vHNfCFDBANt
zR9HQj5Ya5ksy2+F/CvBANZa/zev01wobfB1bMcqhm57c1m2iPucjUd+gzpt
mVwxRZJ3L9WZVJL1zS0iGOz5si7kdwOokhXQyOZYP+ZtPf4X3GUsFNcr9bOa
S1ap8qFUOcXDlc2XnBb1+WN/JIgQm2OTyURXy2GdTFQq/ScaCd3pOBkMIrBY
qiZPsWweuFcaDga8drbs551lELiJKiWrxM8kmSDBXp1y8cqpD1JkEnwQj8fb
Tv5VOfesWNyKxyID3U2BgJsp5wC5jabYfJl79dShIOpga31QADcQCPj9/iCn
ECeCICLbIogwOGllTtB54TN4OVn+NIt3NR5UiJ7ki1uRcPBeZyOOuuB7kZ8q
eAyuYH4Q93ac/TQSQHJsvibXZrNZrVYbJzsnp9Pp4uR2u6FJhEKC8a962z8P
RRMYjsOsuhoPLbwaIaksJM9A1xnc60yRDMyH9xiZTMLAAdzbc/6fsRCa/e55
r8JVKpVyuVyxLb69ygl+UioUVovlbvf565c/t9kder0BJtl9+pOZ50NeHw4z
1KtlRNAfjsSj0UiME9Ahw0IBrP9KfTRUPt/W5C4uLko4zc3NzXIScYJG+YFo
dnF5daCvY6C/U6lck8tkGo2mp/nI5PhdJ+KxWi1eD4p4fT6/PxQMhsNhCE08
FgMu6nHd72pKRgmuJNbgLiwsiMVioMzMzAiFwqltQXt6ehomMPNaBL+IxXNL
S4tSqXRtTdVz4ejEWL/RYtVptUajCYIEgfF6vRiGQbZAhoCzAxja39YE5+p0
JguZVk3k6zMMxZvMo6sFUIlEPM9JuiQFYyEEOp2+v71hbuKR1ekymwBqhZSA
ZPBwQlHU5/PBFUEQ5YqETCUp7n8Gu7kw1MrKyvLyMj8BQEi2BbfwHDqsra1p
tVqDwWA2m92Id7ijQfTyAR4gUBRc7KuYyS+EaDQKUYblxqQZvhzs+I7guTqd
Tq1Wq7YFiEqOQWrBLTyEDtDNBNZZrR7U97Dvokw8Aekb5GLKh5UnxjlVqgFf
iGpywQTTtsyc+IbFYrFui19icIWHJotFr9dgOBaOhCsrnbeRV4VbKYDpXQJ0
ZanyQjjxSYJzCnDa4cbdFL7KVbcr1bZiZkVwbv8fQM3zcQ==
       "], {{0, 40}, {40, 0}}, {0, 255},
       ColorFunction->RGBColor],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", ImageResolution -> {96, 96}, Interleaving -> 
       True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{40, 40},
     PlotRange->{{0, 40}, {0, 40}}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.713208183658244*^9, 
  3.713208183660654*^9}},ExpressionUUID->"403576b4-03da-4d68-95f8-\
9f64cea6304c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3865346d-798e-455d-8635-a8ea4dc9a5e3"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Graphs", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.7162167688916903`*^9, 3.716216771314136*^9}, {
   3.716259624938788*^9, 3.716259630032078*^9}, {3.717186234299178*^9, 
   3.717186235168441*^9}},ExpressionUUID->"0f35e67e-28e0-4b6b-aba8-\
856c890b6ccd"],

Cell["\<\
Graphs provide great information visualisation. Highlighting graph elements \
helps information stand out. By using algorithmic graph layouts, much of the \
structure in a graph, such as connected components, becomes self-evident:\
\>", "Text",
 CellChangeTimes->{{3.72601786315451*^9, 3.7260179127909822`*^9}, {
  3.748277879786172*^9, 3.748277886037949*^9}, {3.832943920444604*^9, 
  3.83294392077006*^9}},ExpressionUUID->"f21bd566-9b40-4ae0-a5b7-\
db8eff15b2d6"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<ZacharyKarateClub\>\""}], "}"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.7260188169922028`*^9, 3.726018844348898*^9}, {
  3.726083946677376*^9, 3.726083949428393*^9}, {3.747577828959433*^9, 
  3.7475778643150187`*^9}, {3.747577911749137*^9, 3.747577925199379*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"e97de6f5-8699-4308-aea5-9e0d7918497c"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.7260839621249313`*^9, 3.726083967867167*^9}, {
   3.7475777903409023`*^9, 3.747577797532547*^9}, 3.747577933557764*^9},
 CellLabel->
  "In[277]:=",ExpressionUUID->"f658a868-30ed-4a00-b4a0-34da273eec62"],

Cell[CellGroupData[{

Cell["Exercise", "Subsection",
 CellChangeTimes->{{3.747578388392598*^9, 3.747578425352194*^9}, {
  3.748009496251357*^9, 
  3.748009497618926*^9}},ExpressionUUID->"8f7f4eeb-5c5e-49f6-a4a4-\
6a63f5fcbf1f"],

Cell[CellGroupData[{

Cell["Visualise a graph of Asian countries that share a border", \
"Subsubsection",
 CellChangeTimes->{{3.747578388392598*^9, 3.747578425352194*^9}, {
  3.748009496251357*^9, 3.748009496609754*^9}, {3.748009999604439*^9, 
  3.748010009347801*^9}, {3.748277890645525*^9, 3.7482778907496147`*^9}, {
  3.8329439308110723`*^9, 
  3.8329439311302547`*^9}},ExpressionUUID->"c7c420ee-21e9-48b4-b665-\
5c87e3f38f0c"],

Cell["\<\
A graph of the countries in Asia can identify the countries that are most \
connected (share a border) to other countries (in Asia or other continents).\
\>", "Text",
 CellChangeTimes->{{3.7475784304116077`*^9, 3.747578453863906*^9}, {
  3.748009597990613*^9, 3.748009609542169*^9}, {3.748281972345155*^9, 
  3.748281972793724*^9}},ExpressionUUID->"5e6ae713-0c14-4d02-9bb3-\
f92ff05d8e87"],

Cell["Here is the map of Asia for reference:", "Text",
 CellChangeTimes->{{3.7163040172184267`*^9, 3.716304021321151*^9}, {
   3.71718624918644*^9, 3.717186258575151*^9}, 
   3.748277902245019*^9},ExpressionUUID->"4d32d418-80f1-4c24-834e-\
9818cb6c3bb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoGraphics", "[", 
  RowBox[{
   TemplateBox[{"\"Asia\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"GeographicRegion\"", ",", "\"Asia\""}], "]"}], 
     "\"Entity[\\\"GeographicRegion\\\", \\\"Asia\\\"]\"", 
     "\"geographic region\""},
    "Entity"], "[", 
   TemplateBox[{"\"countries\"", 
     RowBox[{"EntityProperty", "[", 
       RowBox[{"\"GeographicRegion\"", ",", "\"Countries\""}], "]"}], 
     "\"EntityProperty[\\\"GeographicRegion\\\", \\\"Countries\\\"]\""},
    "EntityProperty"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713105034682197*^9, 3.7131050379146833`*^9}, 
   3.713105090190937*^9, {3.7131051427962017`*^9, 
   3.71310521945518*^9}},ExpressionUUID->"c7aeb3f3-6dd2-4664-953f-\
7821ed6b9446"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvWmXHNd55+lZXszL+QrzLfr09OnTM9MzZ3xOT5+xR93tsXs8smW1xW6L
okTJomSyR6QlmpRImeImkCAoEgBJbKQIoApCYWssVViqCiBQC1grhMzKglAF
gAZKBRwQ1jkx+buR/8ibN2PPyA2sF09GZCw3buy/+8T/ee7/8Off+MP/8F//
3u/93uP/XfXnD//su//Tt771Z9/7v/776p9/8+jjj/zlo1/9i99/9Ntf/cuv
fuuf/Pl/U52447/6vd/7rLr8f1sdf3uk7MXayXlv58ic98Ib27xHHnnEe/7l
Td6m7bu8Xfu2m+G2w+e9oekV74cvvOw9+tg3vU2bXvGee/6HZtmTJwe8xx//
lhn/7hPf9sbGDnuT86e8b37zUTNdy7340vPerTtz3vZdm83/J5/8vvfKKy+Y
cZYbOnPGbJf/S0tz3sEDH5lxllEZ50aHvbt3K96D+xXvd5Y9aLBSw7xW7PN7
Sw32oDbtd9bQrUuULd2omLozXrk14R2YPuDtHB3zDk+VvdXPiqlv3LbT7m/j
tOWu2+f3muvxoM114zxdKlW8i79eCt2+XTfNn7s+4p2Y/9C7eftyqn3opeMp
u7Pm70/9HltuGNrHneUe3C+3rZ7tPsedtLB9ybJ/WY9FJ6833QO3bvf2+bq7
nm457oFe35cN27DOWHu5JK9duFrxuXX4irflxFw823bLTi6Yuhk7ftnbcmyq
ahPRVtuP987VLYnZsd3jSwG3uwa7n6ssG9Z+/Lvf8w4OH/Dmlsa8yclT1edc
yRsY2G2Wm58b9tbWKwGPs8y9+9U2wS6/3JFzh7xt23xuPzdzxnD8lnd/av67
3H71ynnD6f94f8Wbmho109kO/+1zCGOsV5+1K7cmvdlrpwwT57kWwvhbvK75
NrOz3WbOjWdi+Jn9htllnIN3Tpe8scWlTOV1xvz7tx0MZbe18pZRJJ+IPSqr
PrP756P18u199Ntt3X4Wpz8e1Fss3+36FLlfrexPUdeEjm+3j0cv2/raYrUd
/KkZ5i2D6/dhu4aLsI3jUYw93Pdwt/mj0VZuVbzBS41c3HU+bwfn1yyR26tD
uP3lLe8Hfu0bd6aMwdbYZHnJe/vjIw08jx98oTJZ5/b5sSqbLHpPfO+vvWee
ecq7sz5rysD/znz4XZy+tDRprnkx/em5WeOTN+VU5s18/Pr44uXP//iX7xtu
ZxsuUzO8vTZr6mqfa3zZc8tL5tkdfU2UPZfTw7jbZnzaJ2G+/yRbvTnvHZyc
May+e2zB2261qxiHF4u4xtVOkI+/F7i9F55xaerAO229D971bruHcbUN7DZC
K/5QMWa397Xd57zTlvaYuue32/Uuar9C171b8pZvXTLGuL7nMJ6XvdP62Tds
wzbMte6zOu+toamyt2PU4fXhK91n7a5yfgi3z5zxFq9XvMmlecORaDmOzawa
ztx1atLoZmxNzZu7BgN/O9wMs8PajKNbQUtjuH3wVwGn4x+/V30e6z++efnp
YVt8+9j1a7Pmv/zt8Ah+9Qvlw7GaGLiVesPC2P5LlQR2r5gyhxf3pbqe4hhf
xv5FLQNT69hSP44/5vNiena3vwMUb/7962omslqrPs64crv/bEtnNv+6x7Hd
+2H7dtXW9O+F5HVp99q6mQ1r/Rrw21vt0xh10+6ulVti5bvmmblxrW3YhnXf
usvs5xbQIpQDPcwGrzdy+5Zjkw06mSefedZo2W07Nb9qNDLwOJwuVof1NY5/
HH27tDBw9+49m806aN+XbswH+nb86fjima//rC/fO+vgt8f3r+kwPv72tJwK
b8AdtNmkbQnjXnE4zH5kdletTaDvq40+ffk4s+pkokzfA7CsOvf262qa7+U8
/MY6lVuXcj47Omew1Of3SqmXb5Uv2u3Lds+V/50oWa9j18lua9jjYb7+bp+/
frKH+XiZGInqdeY/d8PbfPoGtMHoG7ZhvWrdY/abVRYyzF5l1IdKD1Mwu8Pt
8DfMHmb42/G1w/BGu1JleHztg2MzRpsOYzOdWFZ851u3v2KmEZ+K//3Uqd1m
+qHDe4y+Bh36nbVFo5Xnv7iddQYGtxqfPtNhf/zszBO3t+M6gdcx2H1q+UTA
JbAx/O5qYpL0J5qfVUeTltfRLaWNN42z+Po138t5eeP22lxPvaPdGMu4ZWlP
pfVPx5n73aFTx8Nm7DRthSiuV/1dFpOGwd2/h5lN23mu/GOdvv3YyyaG73Y9
ijb2abr8cF3fD8v92kvvmf627nH7h+c3mD2J2fG3w8noYDBYHA02Go69F8rm
v3Qc6E2YNjBx3fxH48GycLisfHPc+Nalj2fa/oHN3rbtP/bGJgbMf+axnOH3
9Vkzf/fuV8zw8GGfz6MsiWmzXiPo4okRhdmJs3XLkCYGnhG/p9HJtMNUB7Ul
8tThgTPMwu2tWJxWpJuG3y+Oy5VjpYjtuLrzdu9bXOxvFo019cZXv3xT1126
4xXm8+/2+c5i7dJ4fZHsYeN2roe55eaYkS/adVL0eaW8IvwjG1aUdZZtppeW
TNxpkEvl5IJv3WbkXrNaLhnGYe/9E8NG245OBGMcjm9Ytra8bSyzuDoaGPpz
xbXC5tfvnDfTKRN237z5Ge/1TU97r772pDH+a0gembSa7Ty+7LB1mDaycMj4
2++ZeKjmZfC5tjtfY579oL4uv8e1KcT96wla/3Zwu6zVPDJFG+9b6bjj6px/
f8uZ9MydigOOY9IH1rWSts0inldcL/m64Js4Pb+W17q9dF30g/VD3PDDxu1c
0/Cl/z7w94/xjWs3vRF7TK6gxZVztfy5n/b8dfzFs2xMcuvOjDd69YA3e33Y
nN/799Ll5Oa8D8/VeNLWsnebj3vUyCvJEB86fI0+RAZnX7s94c1fH/H5fXwp
shzmyc/O8uJ+/NfywTOdMhlSPmzPf+JTlcMRfzuGvz3pXN+7vxTJ7dqXLNcc
dVxYmTAxsFEamFY0L+3Qy7icbn8TsMdtnT+xsMQcpyu728+N9pr8ZjAm+R/b
kacRfdDw4l5vvDQUcKm2k9a31CoPsF1pWcR5NitrGXed1toqyevqOLh+S7uO
X0QWetj45WHidp6jJ2YqwT3F86Nyo/fbTr1kMN3RuV0Ndqly1MQkt5Lzc8OK
tvQMUr55vumcwvC8/0au7PNOLX5shuvrVxrWm12u69g3/OsprOY733bWz9Uo
3jbcXqn7zGFq5o2XRkzuwrCy8NWLy8XrYnfxOSytPDD6L3+8jG0fHt5hfO93
zf0bz7sPnHHe//b201xv67X8vmjFiQ1tb36WbCzu+vfrfur6MlnaDewj2qds
bY1uPzuyW1ptcGml7md3NSxx1upxYVs2vzfXvz49SZOStX6t5gbqzPlr1CD0
Ur7zXqhDP9rDwrW8Ky5X6vfk3Zp2bHRxKfC5m3v7IWqrFGlw+Uj1/ewyHsb0
2WvDXa/jw2rZv3On5xV4/OyvB0PPq20sw7Md/brN6/2WK4a6B/XvMLMzjsYF
nsbkC8cYx98uvpbf/aOL04bfpWufWJoI/OjYnfXpwO8uk37m8vVTgV/++mfn
g3aCOJ55MDtamjA+t/NY2FoQ9WW6tr4Y1D2JR1WmeI0ylHcmrn2QlrmlQXfL
ScvaaZbN2r6gTtn6d2oPp3Qq5k76FMUkwOm2La50x09m+7+j5rfD969zybZ7
NdYgqf69prHqhK2tzxk9XJpz2+/WS/vh5/qqte3X6/WTPsY27iniVO1lN6zR
bD/70KcDTUx3cmHUW7qR3t+exj+xYa1YNu7B8K+fLw2FMvuhmQ+9X00fCfTr
/aaHgdM/vLDsHZi67u05d8Xbd6Hi7bt03Xt/tNIxZoe94XA4Fz6X7xvmdX3h
jBO7SfwoGnD55PHFE3fKfDTstu/cNbG5tO6Mo0uB1WF4yiLfjLTu6GXi+NTt
BymJsbW8rSMR74vdo7g9q9lti7TsTy56vmkwzNpO8H23i6nqrrzxabm9W8/A
Rg10ltyM0vuXjME7GJzOOzh7PUq52xlxx83Vqeg6tNctqm/OqP9ZGLgf34NF
5Ujv5r77vtsrBbd1Vy3LuO7nq42WdZ12LN8mk46N+xAfu8kFsP7wfDvohLn3
Duw+VjrY4GOHOW6sTnmzv5n1zi1f22j39Izl4x+X208ufOQdnT3o7RyfDDi0
n3hdtvfiNe/Zdw56/+ufPOH973/6pPcv/t23vT/9zs+8XacX2s/uVj9LsDMs
vn531jCf+BpTX6dwtnzksCHT+M8yZ68MBLoXadblS7dzxtgxq3ZbgL5WpW+/
f2/RGHWB2fG537nV2PepWNge0m9plmvKjd8UM6vP1HxtzHo/rfj8+R+1zbD6
sB8cG7g9iz8+T11598DtSXks/XZNnRU6rVXIm8fD5Zubty8H31678b6Fueq5
/Rr7P9JxLWpbeWJf+5PH+6/OeY3rBx8W8Xtcy43Xd552yao3NXHK27Zti7E7
n11Nt16VodfulLyBfbu8F194znv2R894r7z8onf82GC1TitNyxNnCJ8xPHR4
v7dt61ve+OiJWBY392d1/uSlYbM8dvuzhyMf5hfVIr8pOlp2lqvcLj4W4ove
319rlo8xxEFXb4wa/cwnV5e8rWcXa/y50JfMvvVs2Xv/5Iz3z7/0Le/do1Mm
n+LApWXvkWfe8v7s+68apmc5fPK7xivmP755m+cpg2matyOG9Zs0ODVuR+cM
P8ObsDJtXrgbfze51scmfZ04y5C7kSFc7WtAFgP/LuvKZz41dcTbs+91w/LS
x8DntAFgWfG6uJ5tUybaGpZRWwGjHlgY49pxmFl4Paq/VOpLGyTP9Um55lvE
mq/RUR74tPr6InLiUAcdN9pAnJuksut5Qnxfvb0s54UYf9rKpRvj5h62OW89
Q5/jrfg8fV93a89I6WSKeV5nYwg4a6JyLKROFavM+nHNwqNh7ags343bocPZ
sGLNv97K3v378+Y6Ri9z18R1tVLuqvfEd7/tfelLXzL28Ufve2n87pXylPeV
r/x5sJ5tTz75vea45hqXEWvIfJZ75xebkn3on4fUr8t+9/znb+MeS2vtjgn4
IrX1i7P83C6z4077TcNuG9qeLUMXvP/5j75j9DGwOUwOy//nTXsNx8PlsPwz
mwe8Lz/ximF65rMs6zPv+69+aHz0X31qk/f63rOG38O2xbJh3E6fpHDmyOTe
QJuiXIzkc8GUs1HGf+Vhl/Ff9vFHPw+m0wagfPnXzbewmv8dTpfvHu5nqLyT
aODl52eb6p+J9eBT5WmUhjxJI2PzabRmPL+v3WZ/MXveNoDL5q3moHngDMOO
k92vlL0M7B7FqSx7qVQx8ViHp5eMBiX6eVnn9jzMUYTW29WkxGnLW7Ws7O3G
pyq/XBqOD/sm0U/vp6i+mtLsQ97zl/X4tKpXyro9f1vl2njJ+Npp/929O+dz
+93o+zKNLSxMNjD31772NS+R26vcjI+d5elbb/jkkDc9ec7buWNrUA5+eJev
/fiSSiZuX5i/1FC/r3/9P3ad2+1+xWBLrLRa18xs8Hm09dPzaMNca40/yLv0
sOSKYT9gc5j797/8lPejXxw0fnO07rA3rI3WHR7/ypM/9947Pu298P4xsywM
zrrMg+Xx17/84bDx3X80erXBt67twP1N3F61naNjAavj/0YrIl86PlvYWj5c
9O9MM8y9tljze5e8pfK48bEzj3H5fV22F8dLJyNtDNtQnkjpRBiyvOq2e89m
w+9oZ2B2+kUSx7OedMHKveIyKv2K1vUwrenX49b1fdzlwNdttxvS5lZvh9ns
buv63W8Wfhxtvc8pO7YW/zpsznFGI25zOsswTf2QaHk77zfcQR5E+e7zPPvr
bbR8z6B2xXq2Yrpu3fd+Wm639y3Lcch63Ip894pzuF7I7z4yV4+RLUrTH2dp
8/PYOib7XLS7ftduzZhvNGi7uGeUQ1QaGb/f4bzcvuq9sekVw8NPPfX9gI3R
zbjnu0FHVeXmxx57tJHPa4ZWBpbf8cEvQrjdXzc1t1fnvfnGq4EPX/VDN9PO
Yx57vVbfOafn/HwxGCyCr0L/R02cf2efKxvthA3Dsnz3zmfpGIO87WjYyfM4
sXTMm6qc9w5O1rQefZgrJszwpeM3h6l/vP2I93/+5d8anTtsDr8bPczQRTPt
4wu+Fh771199xnD60PSK99aBC8ZXz3ym/bM/fMzEt9rcTjn44f/VV34Qyu3v
nLpseBiehjXRI8HSvq5lOtC34CdHByKGN3lX7swFegzpZdQ3KkOmKY4Vvobj
pb9RGwDmNhxe08jAMPjexetjY4e9+fkxs46+B2x596dBn6pMUzn0zWraAbfm
jN5d7x1yvLuc3IoPWz5pN5dNmnVsbi8q/jVLeyOttki87i8bzipp/dVi5bW1
KwGzwx1hy6ZhwzDutvMoo9tft3Kiq93RSz4x17fMNwvFo9r1VP+k7vJ5tpUv
TqBSix+pb9c9/pVbl8w3FDf/etK51TeFes6l+r5n2cekPlvdMlvJRdOJ6wce
5z6B0SumX5rL1eO/UOi19+Uv/7+Ghc+dOeb9+PlnzThDmD4yX0+Vp3/yY3/Z
P/mTPzZsjVbd3GsWw9vHGl07Gpks3G7X7+zpo0ZDzzi+/k773JWLlFjJ4ZkZ
8+4kNlX+dl1b5JBp17VRRLm98tzbsOKNbz7t3UY6viD3vvLF7L10wtt2ztd0
GF7vYx+7DF86rP3OkQnD4ja//9M/eNRoYfC5o4H53/599Vn3n55rsB3Dc4bP
8dXD8QwxlqUce1uU/cTPdnnfeuG9hulbjvkxveRxVByoHS8qQ/chVlcedqNZ
WZ8NNPHyzcPoWp5xcT7zjW695seFxfGlw+Lzc8NmCIvbmhv0OVofn74dzyqf
Pdp7uB0tvevXxyjb1sLb7Gq0OWvlzNys9cXcYTkew3LVhPm/OX4cy1bbEWnr
nGfdKL7Jwz7S4ZB38Te3SobZ8vRnLW6Eb2AabGT+rDdaGfE+rZTNdwB8YRgM
DxMHfRr2iK/d7etIfS/W8xnVv20k9d8a9g3BPT/KFZ/2GNg+b13TOobiMpV5
57eXU+UndPnfrWfU9eTuXx4NUtQ1m0cvU+R1wDVcVBslna16w8N7A20MsaTD
pw4FPu2bN+LbB2H6dhj+6aef8v3hVa7muiB2leWJo+VdDr+n4vbq9JGRAbMc
2zH1OzkUbOfWanHtlyzHnH3Cp47PPUx/zb0LP/VS/CPXlTQKPAujdOMbeVs2
LN7SscKJ+UFv38Qx74OxKe+d4dkqY05UbarrvF0kt7/28Rlf81LlbP5jaGT+
5R9/19u0f9TwPLz96HNbzXQMn/pPdxz3Ts7d8L754+0N82B8O55VBv/D7N/5
6Y5wf/vpktG42zGNto6FIe9k+dThTLE52nP85PKpM5T2BSZVDhnaBaxLOYpf
HTl3KNDBwOhLS3OGo+Wrt9sFjNv5JZVjHqN/psn5U8E6uobQ68hnPzl5yrM5
lPUVM0pdivR5u3qYbnO3q/3PZ833ciu6Cb2H8uZNV7vIMHuVM27cnKryYHPc
q963vcLqDftQyy9DHWFZMbv8z9IY2WxvfzOw24duH6g6RnfW8rWLMDGu2hDu
9sXS3NOch6jt2LqSuGsmbHqY7j/rPiTNC1vG1mK1U2OPqd2ZR7eU59sE3P70
D54yHIxWhv+2f1vxqbR1Q8uGy6vsTI4XaWZsg7FZ5q7RMtbOfRZ/e3U6bQCW
w58v/31D/bqkc6ceey+WvR2jZcPw7jXPf45bN+rmGn1h2zksiEPqdp02rF8t
ng+IOR28hA949qHyr7tG+xd9C/5x9OlvDIx5bw6Om3H85+jXyQ2DDgadDPN8
rcv/Z7gdjQwsDqeTM/KlXSdNfCts7sal7qjpZMgzGcbt9JNKn0vSl0tjDi/D
3wyVP+b+/cWGfCV+7hc/tlQ5aVhXuR/R3GD4y+/dnzfLo10nTpVlFecK70tT
z7J1fc20WU7/w/pVVc5J5aXxfeCLQTsDPz7tAp/ZS2ZZ4kUVOyp/d9Gc3eyz
zm9uXGkWhk/K85iX27FW9AYYdeP7Mu87+FCswJD3jPpFkl9euvl2xpO224jR
Q6eMcezws2u/xcJqa7jaHh3vtNok9/xE5ZzUduvfiertPcbdNoTKQsMxPjZk
NGsMpyaOVrltj7d9+0+839ViEVW+fc24dUjDnq34xe162Br6MD98lG/eXk//
0eTDcVzD9vHNd120tm7a9ZfLUwFjw++wO4bv3Y5PDb3G3JztNYYnv6PWJ350
ff1GMyem5PaKXb8qv2/6+c+MPfLIX3Y0PlXXvWJQ12uaLniY+5Nh5UZvcjvX
wrtn68zOeFK+eXRZ5E6/m/DdLMw2/PUPu0WzAbzu8+RCc/9JfR6DGmboV9C7
wN//9zdf8P79t//e++5LO01cqfI54juH09HAEFeKj55p+ObpHxbOZ13yz6CL
R2fjcrtpI1y6bspxmX3L8cvemwfGjGZm+65XjF4FbTh8K7+3WF75XuQ7l77d
zgVja9vhbDhfPE4ZcLbyxfBfenWGyisjfQ2ML42J5oV9D1D7QbnlpduRPgef
PjGz7vXmtydaZ/JumGJv0zJ7q3G4cfd0q7oB9uXM/EIQk8F3Xd59WbTzRTN8
q+2ROBuv9UUh7bK0J/45qvftZPu3xdNGkxLh11bfp1o37Dj5yzR+l7B99irf
jcW058F9MPr46H7D50cObffeq3L7xQsHDbMfPbLTcPzA/reM/oLlWQZjOmwf
VrdOngvKW3e+HbjtiDRluMe+F7/rNNqqydUelsPRtjHyq99vzndaujJm+LxJ
r1LlaGlZsInlm0YzYmuzUnF7dRp+/KT6Xbww0vZjxX0pP4HLpQ9qz+Cw/lJ5
drXr2ZHF7Bg3mCBuWfJ02v3j+P2MN98HHIekGJYNexitmQlmK0tVhi2H+tcb
/hOHajF9v/WNGmaGv2v515WDnXhVm7mVu106eN2P9rr2UH3HuuzOuuJ1f1rJ
aNsZPzg5Y1gZvsU3LX25ndtR/TKJncXGtq5FfnA7/zo+c2JQpU83eSGr2xGv
Y2haVLZ87/K7Sxdjs7vyyah8+eLlm5cWh2ljYwNmW+1g7yzl0L6gzeLmmQkz
cXaYNr7OMcl1K04zH39f531P8Q5Af06sBzlF8mo6etmafdu+roR9P/vr/+KV
V0oBsysWkXliBvGD7X/3y6l4ldVG7gzzxSdp2qUlcv369jkK+P1O2Wij33rr
b03ukYW5kWB599zdpR+Dmv/9+vInwb777H4q9XeDtJakr9e+arv2tm09lc0l
7jFPa3b5Setyvtt9zdXrtRL4xfGx066yTboXxae6dbf1KsSncm1+dmfVfDNS
7Cia9CgmT+J26iftPPlpaAvYpvqx7W5qZcSvYfdaGMt32jgf9vt/1PSLHb08
/jS731JiEsKWyxuPtGH9bmKYijc0VQ4YM2BwuPz4ZTO+48RYlS39nDHnFire
wjViLJbMOnCo+Lbf2b2Tdmp2yRisRH9L+y9VTH+pjKMtUX+fMB8szbsX3hw8
tNXwNbyt/lRhUDE6LKq+UsXxtonp7dzww2P7jF5lZOGQt39i2JtbGgvy2CgW
VX50ypWPnfLVF6m9DfG6raNR/1E7PnjJs7m3Gz5y9oE+jKgT/9kP9a2axN82
w9ttBc6B369Tc9755Pw2i0E9ktsfyfd2VnZX7vde1LwU5y8re9PV804OP7vf
JXGd0YXfKYe+/6VLsf3fyhXpajZUptaJOp6ur13LqY3QWL+S4XL86hj+8+PH
9pgh/+1y1tfC84/Y9VH9WB9utzX69jeF1q6F+L69tD3VU9qrneNlY+a5OL0U
HG+uTyzq+0XUdrLuQ5G5YuKM7yTyWSuOm+8/fPeB0wf27Q7m853En26V8fmq
yf9ox6PC0gw1Dc1MXm4fPXs0KOf68mzjMta2uxWfKgtjdk1f7zLXXrpabsoD
PVkZi12HdxN92mJu36W99mzesG5YxTs6XWm4rgyz11gde+/Mr42+G64Xs/vX
jj9EHxKwaI3zu83D/WI8V3y/lH884V/pURSXKia24zVXrk3UcjIOBMvyLU39
ntq6FHE6z4LSjdOBz5zlbd860xZWJkz/SiyL2dp5m8FZl/owHX5nuLZeamoj
iPsVDztWbRPg38OuXjkf7LerF+8HC2Nr9lfxtXYbQOcoTtuuY5qm7ZDm3s76
fEe3jiam6PdCL71nyL2ND4v2mvqaStMmWF+ra4W0T64uW7Gs65aWJuwYhPnZ
TRzvZ3OBP3x2+oTxo0vPImNepTRu+J3ltb7qFaYVd/3M7v5evTLu6+Fr7B+W
C6eI8++2Yez2AUN8kpWaluPETNnbe2m5wVea1E+A/b2g1Xaeu776OQjLlZr/
+l71Xv7Zi4GuXXotbK6mi7jz2dXAHw/DUw/qRi4Y8iCaelb52daz1/tF+no0
s2PV6fjkYW60ME3L1XLAM5/lwsq5/VnJ+ONZJqx/p05ZWLw35yWsD4bYazWH
lrx+fZaMHh3W5jsdZbFtt190/JycY5bjmc97Nu31amLkN7TrbTPbf6BriOPN
cVfMU7fr6JuvY3evLbULw6bhV4fV7677/naX+bvNwnmMfQjb33YbfnX/2VLn
dOVvVO4YuN3t7x7NDNxe58E620tXrjhQm5vF9Ri+erjdzw8zHcyTL166FrGk
ylD7QNp41Xfx+rwZKgeldO3qN8ruP0p9vvaCNr0Vi9PIhE1/kDA/vWV7DsUZ
MXww0uCEz+6d1oK2S4OMzxTOUb+WTMPHDrPn6WfK5gCN2yxqj0fFekprq+nS
mqNLx3cOlzOE3+Fyu+ywOtlafG0jLOY06ZqA2elTmXFpgdx10lwXrtamnh80
/FuE/b3Cz5FV1yLJ8Lnruiyt1L95hO1T2m9F7r7w3SOuzyRpqe7fzdevcPhx
Xw3MxBNXuf3ctWvemfKn1rL+/N+ur3i2TmbpxmKQ19FYlZfRx5R/U/YqSzPe
3bVyPVY1qm5uTGvW+WmX6YBF+aE5jm6sapHb1DZ4J/JcsTXpcDl6Q5czhj4d
aFiOHNuttBc2rHXD10JcM9/ylFsUP4L0V1Hfc7plNjvwzIPh8a1Tbwwunyr7
PnWba2F3W/dtc7vJD1nrg8msUx23dTeZ2NZat2gNvTTm5H0k9pR7jPEdVq4m
8jYpr6M9PWlekrE8sanwa5gRj4ovHbt4YSgYZ7r07TA37Mvy6Gfkr5WeRfGk
to8czoa3Kcf219t9N4nzWY5+k9z88ZSj9oXaAn4em9kmHT3sDvMznZhY5Y1n
XXx85I0vgp3zrVdqedsuv/v9li5Vj1syt7dmxT0DyMHB86pbOlCbcYt4NsJY
6GDsdyPaGNiI6Yz7y+XXSds8Kl5XX0wu43JvEiOq70yKHcXQqBw88E5D3GnW
OsVp6MMY1zV8/Ypbteut+vFtL+qcxR0j+7/qaPfZa74tDO8N4mnR6NOOicof
E1YHd34WjRfr0qZDO4x/29UsFXVtp7nOuCbPXVsy3I7xHInqBw2bWx41Pvew
/Yc71OZ5GHyz6ERsrUhaU9uaPplaea4kXYecB/tZo+95tg5B7MTQ1q3n2a8N
a49x3+y9uBzkE1XOom7XK/weTmYErnk3tpJ8qdvPlMwwlE3tHDQ2q9c4PA3b
uuuyLbUDWs1lQznEjZKvkTyP5GgnbyN9KNH3kokZHfHjTMnLTi52Ny8M/8nX
/uRrHwXLpzETy1rdBvlm5H82OR1ruR3JH4N2hT5JxyYGTC50+ivS8Ppn5+t9
J1WXteNVYeTVm/OBb1w5JFkXVsd4RytPO6Z+UeUfV65IysIHJl26WN0uW4yu
HPIsp1zylCfdj7Tu6F0pg3LZF9oe1IfxuGuw3n9j61aUj599iyo/bhvFsHtx
zwX87OgTmuM1O//MKsL3jl/UfodKc+Ca0VavXwn0MmnMfoe7/mP0JrDoq6/+
TQOjY+JiNC6+ft73r8HEcH2Rx1p6ElcjH6UZQHMDM5N3Bn8//1V/pmNnT+81
+2drc+LM1cOY3P43FgyXsw21CTheasOwjbD8O7Zf087jo/aSzcZJx5Fzrfzs
sDI+7jzfXoo22k5o28XttCX4NjO1es20B7OUxXkmJqDd383SxvkWsq0c/mjl
sQ37flSUuXlfZIMTsw2sHuZvh9u7fd190U06GMa5TtCJKn9ab7d503GCuJ02
JPGo+OfC/O3Y+JXqtTlVMZytfkhZPvhmJA18AnuL77nWL13120DTS0uFsDvM
/ew7Bw2rk8sRPzt+8x+8ud8wPPvJ/uET/zd/9Xfeyx8OG95Wnhj5y//wkR+Z
XOysy/T3HV+9nVeGeqsvJ3JFkgdSOVrE7upPCcaV73tyad4wNLwrf7piGBmS
f50hDEyfR7A+Rpwp/597/oeBbdu22Rs6vN/EvIrj5V+X/oVtnRsd9nbu2maW
E3cr77s0L65mhnFxO30y/e5+OVhW/b/W9fbTAdvj86cdQf2LYOp2aG/CynRj
UjtrxT671J+pxnl29UIehrg6x82He/B5wexReU3E7U2xfg3bKRnORENic/g7
v/hRwLZwuvzFmhZX74rTB3ZU3pgsZsfKYnbud83nu0rUcSM+klyD+L/h6YU5
2uqfGq4Wv+s7AUPiWJmn4xHGzHYeRpicY0j5tv9e2nrlwdF64nF3v9zY2TSc
zvnleoDPlR+I6wJuh5fVhpKuimlx10Q7DWYfrxp1unRtOeD4rO3ZT0rTufKM
FJ1TqJsGt5es/E5F511Zrl4jaGFcZh+6fDrQ3YZp2xVvqvZiL+So/CKb2F06
9l7My9BsyYxA20PXHzGsMHkUs4uxo8qC+fddrPO79DRJ7M717vefUAl8/Hn1
MtQdXcw//9K3DHPLj6686n/0jZ94z2wZ9DU0l5a9f/aHj3l7zl0JuP65rYcN
52seZXz1qU3G3j85E/D620MXTT53cr2Tz92sM+H3o8q26aMJ7hPPKleL+k3y
/d4lw85hMZ9iaHI6wsrK4Yjt2fd6wOyPPPKI981vPuo9/vi3zDjGdDuPoxic
chiH71kO372dJ7HeF1MliG+Vnt5o5mvxrHaMLO0NNDKwu9oB0tMzZD/k+5dO
qFusHpYjpkg2z+Jrj99uvvs9Sd8Au49ccZcrx67fDn1Bq6Y8jmHTXQZq1jrX
/+MfF7PqP6wJv8J36J0Zh0XjnvV2TGUcb4ov4s5T3LfbLAxA+yxON69YUfgc
zT2xsvhfFhYmA20LzE27xtUScOxZRr51hmF6G4yclFpmbe1KpPYl7DxFHUfa
arC33+9p43XANhTvwJBYZVdXhakfrlavc7+O5eC4JF23Gh+vMbutnbGXRZ+B
v9f9XkAZyguV9RpJ6guon0w8hta3HeXjL7c1L/gJYHb4wmZ25duDIaR7X25D
u3CD//NfJ2k1Zb1zjJP5YXjOv+7g5aPTfn67f7i9ZPjbbk+iI8OnfjOhDxo7
xtqwdwZ2p2zpbZLWi9Op4GvHVw6nh2lfMPzksPfvf/kpw+yPPbfNsDb9qlLG
lqEL3j/9g0e9rz/7jlmOIZwOm9OvKn2v4qeH5f/osZ8YXj85d8PoY/6XP37C
LCNelu5E+c6VWx1f+um5WfPMFl8rX6Hd1xHz0JrAvHCw+U5eXUb8jeaG/0zf
tOkVM42+ltC/r6+Vvamp0aDvJcrSeuhw/vH+inf7s6ve5OQpb+bTUZOnnfos
LU2aclmHeWjh0eMoXpU8kiwD+7NtxllOdVEbZX1tzmh8jFa/2taQhidJO5PG
7Lw6RXN10eazT11zH1/nsOdPa7FN8CCamYa+WXJYO59trdbLjl8MY1Y3Zwm+
Z/gUVofZXZ2IrRUI07bHWdL3jDC+73a+ZunVlIeS44GvHH+6Ymnt3JRhxyzK
WFb8rvhPW/9ixw8UdR0p3hT/u61NVuyy7qluvK8Xq+0qm9v537gP5SZ9dFx7
sFvXTFeu05o2mWcZ/VCoHVrkvYN2h+MPg8Pr7w4vNuli0MtwTUkfw3VFe6vb
x2fDnHPZd/dHSv5ZrzM3bXlb6801yXd1mB62T1Me/B2UUdPCB/53pz8nbYOY
WXxEivfI629nu/SJCmOHadbxm3/7xQ8Mf//w7V8ZVmdZMTntabgdnzzsL40M
XA7vH51ZNZyuvlLR1MDv//brz3tD0ytmOj54yjJ69iq7TlVGTf5F+aiVv0X+
a3zv9+7PBzGnyteuWFIdV/gXFhc/iL8NV1e5eaEyaXzt+N7hZhja9cPD5ba/
ndhRzcdYnrLgf8af+N5fm+mvvPKCGZJLkrLVPqC8gYHdwboMn3zy+6YMW5+j
mFbaIeq3Ncz3noWt1bdSWD71XjHtjzRF6dZrz/OAe5v2t/LxocUOy2ee/nlY
6hl/vM18Yd9Cw/YRXocjpfOW311m+3yLfPZHMX1e/b/bHomraxo2RlcjzT66
eHQ1xNdKK+SWF1Vm2DR9z0BT4/dXWwmWVV9MayF+4aTjb+vgm2M5/D624Hc0
NVE6GX+9zl7PNrf3fv+vvWd+rgA/X0jRmmW4HR53NQcM3z3r64vhBZaZb1Ps
88NgtIFWlidM/7/jowPe1MQRb/LSsBnyH78Awz3VZ8up6vOYcXJupin7/nrz
Nzysd3zneSwbY8DbMPq5BXTsft+qTEfDcnCyHBk7eOV6xeR9Z/3SSn263Tdr
oJ2p8bvRl1+s566prPoaBtZpWDYHt3/npzuauJ37De0LvnA4G65mmX/x775t
mPsvf/Bm4J9nPeahf1H/qV9+4hWjoTlyecX44fHLUya6GbTsaNphetj+ey/v
MWUoTyKcjt4FzlR/o9KkMK2uT/G5HRaVVkWaGd4nxLOiWec/fnLxt2twNO8A
OB3uhs9heM2zuX3w0G7D4LC4GJ5lxOXbd232Rs4dCv4rF6X+44dnG2wL3z7b
YR38+4pzVdyr+m5iH/C7Y91k6TzWGc178c8Crgd8VLzj6AMGnYAMHQF651Z9
+l19N1g61yyMjR8ZbXaY/5hy7t1fDnKkJLUNXLPfHXn6K7djNaO+H2g5m1lb
aWNwfZA3lGuEmFr+q+5cH3cjcmQk6ZPs6bwj8OPTFvjV6QMN+ZSz+kztbyB2
P1LKJ4PZ17U77f79+dD8j0kMVhQXxOUBdZcLjvV6vY7t0GT0m/ka22LLJH/+
jvFPzTt++9mFJm6XVob3fLf3v5eM/Hhic4ayhdmR6j1/3rSFYHi4HAuLSWaa
eJ5y4rYXd5/2n59d1hkO4jlMn6yYf6xszvGZXm1TcbF8/PgAbdbnHdmKz13+
b3QssDVc/X4tzhSeJr+MtOiMo6lBm4YmHV08ddS8NwfHzbr8p7x3j04Z9v8n
//qvzFCxrfjwKRtupw3A9tlH+Fo+c8VuwuV2rnPle7FzzsDF4ngxu4bSiuOj
J7YUdiYWlVjTkycHAs37weEDge+b5bQsvK1x/H5oRVmP6fKt29yOHoZtbXn3
p+Y/bG63GeB2LSuf/q59280+4FfnGwE+OoboZNDmMw7Td4PZ+8OKewbAXPjX
1XcJ/2F0uGx6+bzxPfLf9tm6TNJ6v5rZLavvMa/GgvXQZpPLEQ2I8p/A8+Jm
m59bYQSbv+OOp+s7d3k23Kfs/7f7aHLnpT0esPpYQl/tUeva3Bx2PqQ31X+O
OQwfxa8mR/dq/PXXkJdz/YrxrXNd231vKc+Mn9+nZOIX+L+23qzzgQXgef9/
uTA/qjT5WdfTsUx7DIqwXmOeqPrcXV8uVB8DVw5cmDesvuvsBaOFUd4OMTuM
0Wpcf3/7g5sNzS2+cjib8Sgmz2rwPgxP2YcOvhu0A9gO/J/muum1aznZ2scW
8r2Lv11WD1tHPA7vRi1DuYGPPkVsq2vGr17lbLQqMPSrvzxt+PuvfvQLw97v
HZ82PnSYnrhThrA3epmnfv6x4W3Nw89udDOnF7x/8W8fN5oZyqbc776000wn
lhWNPNp/dDLwP/knWRdOV34YaSTUd5HYHVbn3YBfmnHln5GuhJhPrcvy4nZb
J4OP+979JWPyq4uln3nmKe/Q4T2B4VMXt3OspauB/fGrMx3u1vrKA6n/+Oht
HT3czvtWPnmxP+O792z2lDfRz1N/2Hwz6D4XZze3n9N2auXVZ01SDGMai9JM
Rz/LkhkFjsnDH1ksbU6RNBZ1DOF12pR2vnVM/7Vukg4kik/Tnrso7hDHqi+/
qD5abS2P/R0gbf5Et95JHJSkw8nahlJ+Sns91YM2BM91hmHHX5p8llc/XPW6
lAJeZ5x54vUoFm/ct7J357eXM+USjTK7L980uSnjYil6jUOKikvIu+0s373i
jPOCll0+xrC+GtHH5Pl2Fmf9Hi88e/mk8Y23O1897QGNw+ywPJb0zop7hnfC
sm+3WJ6ot/lrObzWfdO0KBZnupsjHj971HYa+oHKoZVhW/jDn9k8YPgdQ5+O
Px1mZz7xpOjg1RcTbI/PHPZmHhp4eB5/O3525ikXJP554lTRxpD/nf+mLVDz
6bM9OF5+cvnY/WNYCvjczh+jXJG2b97ukxRDQ4fP2o9PrXM7HA532/529C9i
8un5UW9s8rBheJaR7xwGl48cHzpluP52eBVtvtaBzynvu098O+B21kf/zrja
DSxPn61oYdbWm6+jcF5NF1/aK+buR3EsX9wzgxwyeX1Ddd9p+3WbcbqKYp+J
vsHlfo7CZoZyNf/SXqd9X2dZNun42/xmM4r9fSTMjx+lrekFCztnnA/Y3c6j
KS6H2U3/hhHffe6ZPufrvj0xvPJA4ufGyAWZ/1yUcl9rqgPMTp++6tcXfRp1
THvM4Dt0MeQ3Sav/LdrcnEi2RittXEmvGX5h+jVVjscofyDP0tJq/v0Ju36U
n7DbxyCPVUrnAx97t7aP7x0/fJo69MO16FvrDOHnW/LtgTXNcJbD7fYySdwe
xfi/q70jW80HKe0ZrK0c69LpaB4Gh9v/d9TyPIbN0z4wtHO3azrlazocX+e5
UuB7l5/dj1mdDWJVxffK8W587fcWA4YnZ7viOa9eOW+Wi9K3S6+Oxlx8Ld87
uhcxOJxtlyHmZ33bv04dySVDvknFnypOVRp5e/toc+B31qPOeXLHKPdOt5jc
5PBM2ReUz0dFWuv3PveX+pAv+rliv7N7JRYr7TNZdYfZ0cZELWP7Z7LkkVGu
fJvbuT6Ynuf9HNUHdxaGjNNYpNHtdOJcUUfYnb6b7P3TsnB70vEz/T8Z7Us5
iEVFAxaV4z+uPlHHw9aspDkH3B9heSjle89y/8B4Szfo02PY6K9NHG+N5e8W
oEmIOjbyB09WxkyeQ/pzJb5XucqVJ5Fx8iz4bYreeC4kHlN0ogujxvfm5mTn
/W90vKvFx7xSHmUX7bvvpBFbqphSo2GfO9+Vesjvbuty+uVbVbjl4/TGb53p
rf5+azbiXXU/wLdJdZBWJi+394KpryWOifKaY8p3rr6JpG9Xn0wszzLqMwkf
O/eHHc+qXIsY7IwphyPTWE79LMHcmJbXOioDvseHzrrkvsHsZZXHXTlqWI71
yV+jvJVsm3nkkcF3r5w5tDOI+4s737RD8M1jfAtjqHw63eJ2sXt3cke2fu+T
n8LtA6id9uB+OXWMXfj62dZLu3yUzhudM5oY8pa767AP8pnLj5g2djCq39K0
5uq/066TdAzi6q/ttfOdpu8DcTwMaxOrin7J5fakuvGcHav1Ya6+lbLGWUdt
w34nut9h0pRL+wF2t/md8axaM7d+sLPyjMPu7dIBwJi0Few2B9uF0ZUrcdlo
9z810/BdY91o09e/USVrJ2hf230oidmZ3s7+NMVJvd1nZxorB9oVmHlg/2av
G+01csrgb/c1M+muke4fu7rRzm2ML0/H2XG+7yKMXDHbz5Ss/p3iuZ12KD5s
kyuSvld7gMHzGO8S2BMG5XkG94rX5VOXlsY1//yUTO4VfIO+z7pc4/9ZSwc/
XeujdDbQ3DBOLCnbI/4TM2xtLaPlmKd8lHC2clAq93yQP746rvzvzFM+S+n1
YVxN15BrS7nbdW7ZH7G8csrgkzd9U772AzNkGuul4epucn03uF0a3jjNLYx0
/PJSz+okesHQZMDtaKvDvu3L7LjUduZWj+tvKY/leTd1+n0WFuOr9hTsbbcF
43jfaNhvLJj2Rx5e75Rx36rPJ8XPxmnto6+VxeZ+PD8daFtsqulv8q7//YK2
QlKO8l7goqTvD8Sb6j3Nt3186lw/5IPvdt11DNP2F9QLBrcfOfRegwa900ab
H619mmPbC9eojDZwY8xLPLPf/IcZb6ryX7x1kwOzXOWwmdh1ouzsrweNTVfO
OprMupFbEm6Hx5PKazWHe6+Y/ON2/hg75lS+dobSvMsXr//0W6S8iTAty1Ku
2B2WhtG1DbUVWE6xrm6bQPwt3mZ91Ul55cXwyrmu5dV/K7kdtSzzle9SfSup
b1f4W+M+mz9p5rNf2obbZytlsbzrp++U77s7PvZ4bjf586y+YsLmK55VuUDS
xLW2y0fXjRiguG/OyiGimFO+X4XlNEyqdy8979Mc/27qjfPEqGLk4jTfQq4N
G74NqzPTycd+avFwkD8mjf86j/apKKPOqiP1tX3v08v17z5wMboT5rFvdrwf
3OwyO+/9W6sLHd2fpOuIOpOPG+0xLFVEbpFsx3rZ9FVBPfFlouHx4+k/DZhd
Pnb8652sW5q6V27Umb3XODPKzp7+pcn/0q3to3fH58+9kLRsrxxT3c/cw3yj
MvdyBIdT3/PVNv+hmQPewOTR6rPv4+r6Zw2/Z2UMfAgHLg96ey6MeUPT1TJ+
eyVSY0PfStwnSf596cX7ndttNjba9fvzAZuLh8XV0rrz3/RzWuVu9bGKTx1e
hmVhZnzf2NjYgIlRtXMtkmdRfmzbdw37oz8hn4u2TVnD1euEoUz9oVK+PZ+6
Xb9zPmBttQvUryv1o3y082jxj8zuatC6kE+G+cr/KI1/FCPPTJ8w+xvWN1O7
jWPAe7N7Op303AubG79MAflX0m0zvW+w3X5PN6dKnD9cfSu5+um4Y5DmWPZK
PjdXv+HGDbZz29IRoUFnW+tr8ccwTX3E7uRpdPdtbe1KoDmBd/Ff23lk2m1Z
zjnc7eaP0fo2g9v15/kDX8oPz39pydXfq9abWm7WeXXqeos7j+o/h7wfe0wf
Xpu9o0fea9Iy5NEdxdbrbil4P3Lc0ffwLYKYU3jd1cVgveTTDnuO9cozJu6Y
c66PH/ug63XhGkub1ybMr9DpY23fyzL8FVHcfu7qQW/n+KS399KJyOXSGG2E
o7MHvanK+cC/R/nkcheT3a++v/kPj3OfJJX5sPjbTW4YK4+jckLKZw6X+/2f
lgI/vHK489/2o8PdcCx5YeBkmB0e57sU5vsO68dQxx5OJhaVHIxieIbie/ga
O3tlwDC63gvyp6vvJHhfzM5yNu9TP3Q8lCftjPz+Yl+mqx3Df46B3w/VbOg1
oPLYZ5g//DouXn+eJ8Y0TK/TmoYn3TNHedkLfQZX71W0IzATOcwx9UsDSxHL
qT5G0Zq0tr3itJDqN1F9brrz6VOJfaHe7Fvccc1yrCpGV+zvB/7UInIG2pbV
L2zve9Z17XdYVDysfYxc3XfetqO7vHI3fjIxZK41c1yd/gU47vjb6YOA/D/2
/qeLF8133/janeQ4V+pHHwnSxUS1K9SHqz3NzRUj/bg04zA9/6UlX7uTP9dN
3msyah7cBKO7cYIy/LHoGY4c2mp0FSyLVcqt5cehTsMzM4bNiTGFNew+Y2wT
r6OP6ee40G4b55dvKfA6faF2uz6Y0ZAdSa/XiYpd6ZTRvnS5/f695n7V5evG
t86zJGyZLMb6+PUbnt/rjXnd6UfVjtOGy+M5qFK/33LkgewVE/cqHlU5HhWz
qT5EpXlhnsaV0x1uZxl4WxoTDN81fSBFHUPlpRFDypfOuLj7lyfebNC0YPjL
tQ3GxfeaTjlMY12McZifeWhkxOn1tkr4txf5/G2+la5I3E59aK9EMbB89lo3
Kf9MEuPXc+elZ/E4Ps/fpgh/vpCTRO+ZrPlE0i7LNxqxLZy7fftPzDSMcTgK
dl+/7ftD6WeUeQzRn5w5+3HAr77GoZSYz8OvY2fimY4e2RloZah32jx8YWba
ptX1yS+o/NwwWq/k2GnFsuTnsXMBuvPjYizcbxvK3wjLYhxbrrerV5r91SzH
sRbzdva9m+78kstGeWOoK/kfGfKNgP1TX8UM+c/7OO7aifMLq93aTd9xPZ92
+nWIcViYvxTwOwYDwvdZtTXExZHPzWYNMbrJ9VblDrieXDxpn4ntzknebWul
vac8Mt3eh7z1Uq4krGv9D1Svca4xvg2hkeGbms0PYQzh55vIb67ehW0sXPMN
xsAXaOeRMf7zYT/fEn2oRpVbvtl6HsheMPmb0ZBI2+7rkOsxo+zvnTXfBy/W
Vg5EmFBlKDeL8sKkOT93HB+8ypdPHd6GwxnC4Pjd/bzC+4y/nXnS5mDieXG8
6QP18DYzLl079bR5OpyP698RHtTYF+5mXZvd1ZbIy8VuHXx/YD4/uL6TtHK/
5OV206/VXHF63LBy4Ot3fvGjoL8hGcyEFlz9Edm+RvmvxfbDw3tN/5f8h+Pt
52O3n+Vhxr6p7gz5H5aDWn31uOvzrD3764HA7z40ec5wWK/GRRZtrfq17e/U
UcxP24/rjm89ms6xFv/a7a6smpxWztODWj+qKiOsLLZ9eGYwYHc7/6M95Jqh
/YF16toRqxSlBYO30bK7fk5tQxqqpuMzvWT84sqLjkYZfyn+eOKbKNPkGErR
N6ZtaAeV95/cmbY/Myr3fZHPqV7XtrRqHEM/f0z369J0Hqucw7WTpLXv1feS
2DpKTz5+JV8uGbcdEMZPTMMHIL95wN/4z2s+9Dh2Z13Tbqa/1Ix9pvaK+cfJ
9zfCo/C4tO62n72xX6Y6XytGE4Pd4XafY5O1RlFG2WG6dk2D4XmfSOPOdqmH
8s7A1mJitSekaYHhWQZ9D/un5aLajQ+CYX1/7fnS9DDkPpRen28NefY9DbPr
PGQx9tXkLXb08Pm1Mo33MX6ksNwbcZb03kBXhcHe8j9PTZzKtI0oI7ei7bPP
W47b96XGYTXqjs+feofFl2Y9RnAh7G7zoZ7ryvvRvH6jZgKenM6oN+70+93v
P6gcxDEXVW7eOE+XHcNyx3BO7PYk51/fefDH7zb66bcSrwPlB5SWqR2M7JbJ
9RCVv53rimscX3snrwG/nsWde1gbzUvcMmG6q9HFpeBdGZf7FN9pUvlJhh8z
Kh5AudQ7fQ7aeU7abcQsdDN3TJLRpsDfFDaPa7GducHyGrzl54PMx3ZpuD3N
cg0+c5u94fbqf5g+qm8bruF+17mzH4ozVawMcZyK5cQfrlyOLqfrv/Qz0r3D
7rv3JOdIjOJGo0Wv1sPVqFMnhtqudO2wKL53O6ek6gefK7f7/kuVIP+jWF/b
037lvY4w8sLznJBeKM4P38p1TTxC1rrRHitWZ994P/OM4b1S1HNdrAMLRfU9
VIQpttDPC7RsuJj/5OeOWsf4rkvjgTYHXxvrsC56eubzn+nyletbQFJ93ONH
W4jyYCdfy19Mu6VdloeLbX+2q33XuyvNdZWW8duVf5JzP2xpMJQrUteM3/ft
SDCNfXPfzSyHVuX01D5TFsa1Jj19u9pQ1CmM2+H5ouMhspj6U2q1HO7vPPpm
8r1IZx63nPKEtFJHfLBRuhu/7/fOHfe8sbi94sNHC8U3kW7XI+748n2G9p57
zjt9rtPacq0/5Sh9eyfN5IWB10M06mLx2eXo9a9cr/Q9t9u8jM6irpep52v0
fe/TwXTb9yx/vPiXZaPyrETxsW2URxmwuDQxyvsiLmc5mBz73f2yxd71MpTf
nXXF7ZQpjTntDDfHI6b9zPPNQDlsFKNbdP52aXb8/+WGY0kbS98Q2m/Nz6E0
/UWmMThFecs78TzimLI96ealo2Fc8a62sSwGg4nTmQ7rw+ZhjM4ylBe3T8Mm
v0Vdu6McKPhf4SrK7af+xovg46S4U50/9UOV5lzn3Z8wP7v7X+1NxVno2qB9
qPPLfPzufPNR7iD/G0rZrLdr/2tB25F2mr412ddGO4zrjO8xru+dZ3Bzvpls
8RFoFvB/ws7wCn3QJPlClbOmiH1je2w/63poZOhXfPF68nVD+XlzSfaTHzvf
tRXOou3g/F7VtIcZ7b0on3sv2bKVExYj12PW3I7kg2S9kwsf1b5T52MP+lai
LR3G3Jr28YVkdjNamZp/vtsc3gq3S9OunCo2E0rbDQdL4y2+ln9bvneGyose
zp6lBn05uhifv+tsL38497VysbuaeVejHvTxVq0Dz3zWkU6GdQ9PlYM+lxR/
G1a/JO17mFGu6bPq/mLA/ByDGdPXZWv51tPUhW2yv3m2k69tUb+nlY+dWJTG
fFXp3+2K7ZOP0daCpDXXX5vVYCM4XMwNV/l5JbYbhtK8vPxEGfqGgLGf0uio
bDG/jsPOwQ/Mf9oSrefG6bzB0sQRuecljH/dd7ita4nm91Loum45GmblI7dc
O7dB1DbD9DD2du38/Jxj/df1F1UXxViTd7LIcxSWY44YZpff/Zxu/nL3U/jg
5fNEP4IGHHY+eOBt45ceHPrADNH3wljMo3zx/Oe1PpRa3TebFfPoJgYnykYr
k2ZZ9mPvxz8vLE70YWP5TvjiaRf2uj7GNe4BPx9d9+sSZVzT0nFhsHcWblcf
BfShdPXGaK587ion0KbH+NovXU1mGti+X33u8n/DsKZvpVqfSnbudmlNlHvG
1tPAx9KYs64YULnYxehRXJyGM+3l0zAm9VFeGuloqCtaEdiadoLaGEyzud/m
/zTXEcv5/a6WGr5L6JsDx4FjBr+L4cP24+qV87X+ZvOxPecor28/X5uifk9H
xXSFGawyO92s38TPKD7O+2yZLldya0A5BuhxXL07XEidxNN52hNRxncFaezh
cvlm8fGzHUxcWsT28mq785wH/JSK+1+s5Rhyc9lja+vx+pYi9j1Pv0pZj02n
9AF52o1R3yH0nWJq9VrkMsTW2uxOH1LkJgpbFj86/kN4HXayWYRtofmCgbk2
eFfu2f++d/iony+d4aGjW73Dp943/+M0J8ppkeTbdvP3UDf0MsSTprm2OCbU
N0vcjrgxa/5Y7Qvrw//kLmSc7xSd7g+qW9bqfcpx4tj3W34d2sC9rOmxjbh0
P/4iHWvExa7mYZSkmFIxeGU1uX7KR9OP3C6NiIa2L5xxu09SmfKa67988Jjy
t8CrlKk8kvXYz3r5rj7F6G3W6rlqtH58HsN6ebYGxx5XfC08vXRj3trXSi3/
XzNHp4n91DcHbUv57vWtgv5W1bcUvMpxUZ+sHB/1Q8WQeSwLv7d6jXfG6vcy
xxFehtOi7veFufGAzckJ47IHvvZ26wB60eLiDm1fc6vvNPpGH0vpN2xtfyre
e6Nlb+/FchBbJX2JhupDo6iY03b7JaO0vnHfd/zlGtmN/eYeUXsm7fbtbeLH
P3DgndRxzpyDxZXm+5Xp8Dp27to1s8xaiI6B79mwO1oZP6b5vHfzxoLxhZuY
57slw8N7TJzH24Y5pYVx6+HmKec/7f2wYwG7K6dKkdxK/dqdY2Rh7nzQhxPf
GqJ0ELC5cskPHfxF0OcT/le+O1BXtWGY53/785fpB38ydWQf4Wj1ldvO9i3H
6K3q+7VfNDJBHxPV65vz6uYQ6pVYgXBLxwlidvpG8tu/rVtcHkdN23cxWSej
3O/9yO2/q+VtsBnY9h1LNyOfMkO4mvlB7GqVh+FQ5Um3GV86FbE+5flxrb6+
XLGjymWjPDaYfP6N18GSt3pz3sQKi9X/8f6KiQm9/dnVapkrZj7vU9oAlKF+
k1gWbsfkZ5ce3/c31cv3dcV+nh233yUdLzG66sG2lGennqvdv37UPsCnzrGC
0efnx6wyS2aetK/qJ8p/PneWyTk2xBQoL08ct6d9toyPDTX0JSRdgL0M+97P
+Qk5Fus9mAMAo13VifwEPKdhQLbHPZW1T6U0y9h958Wt12q+dLutFLWtrDkK
tXxcn1FJZdjaGjeGGvambPXtxbkYr3G5psHpURZdh3JQB3LL2H5xmBNWx38V
pwMfvLTc8O7Bl43GLuw4UB5l8/yTxh3+a4XhKauT/lj8qNSX/cDHj1bIHuf4
pdEbad81Tpsob5xt+61sWB0Opa8j2h8M2Vfts769GF/Parq4lLTH6L3tLyTm
VuxFo11DuyNoq7bYL1z7LZkj6nkF7Od16yZ9S6g2vTbNjyNPLmvwUnQboJeN
uovFpY+BIf38I6WgjYzBxxpqHKaVf135XfC/s7785mJn8az87so/E91Wa/bL
T02Neo888og3MLDb1IFpMDvTtm3b7J0bHTbjw6cOBX25ujoQw+Ymd+6SsaUb
labyjx/7KPGc2zGgxn9o5aJXjvj68fO53d6Xer+ZlaCesLpyS+Kbl7+eaf6x
yp9fM9291tiHbBHcjt4DHYibb9HW85IvUX0jZX2GdMMvEbXNPHUpMtdh1DM9
7ltIu6wd+yVud6e54+57zNW2F8HzYUwfptHPeg1lMbRWfMfiuSBOj+Ny7JPr
vwmdDt/H1YltqZ8EWAw/e8P5Tsj9wjxY/fScr6sLW8Y+t3D24eozAp7Z8/Hr
vk7+6NZAh6Pc6bAwrDh5adgwm+2LhoNYhuX3mHw+52OPp70vrV6nodNTtDvS
XJvso583/m1jjHezT1CYmfPCNwH0UVHtEc4Tyxw6vN/bdfaC6T/2kOln7r2A
9VkmaXu6TnVu8bPvMXm78n9L6XY8AfdW/2ii4jkC/zrHE3/l/XvNDNaKDU2V
I2NKxd9puT3oP7XP4lPF1vjDMXznsNtQ9b56/PFved/85qMNpmnfeOwbhjt3
7dtuWFPcCSsrJ6T86RpSvt8uyKYft5e3uV3Trl+bbeL2sbHDhut5l6mdEWbr
66te+cZq8B9fO/tOWyBqHf+6nAx8/ZjplzKEddX2CIuBZbr88PqvdtPJkwOB
r532gDQ20iERO1C0pobtp88Xme7+tnPZhc3nmz/vX7g+apl+eOYWaUW1Q5L8
zXl8x522sH3IUk9pWex+fOt9Dnd//8LOddL+uevwLcv0EXDX962HMTnxzVgc
z6OZiTsu8u8naXSK0HWFlsu3z1tzxodra5CYJp8uGgkxvcal3cmiLWn1Xuj0
vcSxSYoLaJfB6TB32jYDdaV9BafaeigM/lf/WHH9WLE+5xb/Ou21/uHdaONY
zC2Ppl6+uzqaaA6mXT5Vrmkj1+s+9yIMbUtTf0uuv7063DWe3r/Zjzp3xWpK
kw1HYjt3bfO+9KUvxdrB4QPe9Pxo6LGA/6/fOR/4bqWDydJnUJhmPQu3w+Cv
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
X6+6/JZjE8F6QbuAaT3A51GGj71047Qx4kjVF+r2XXVuh3HxL2Ow7RPf+2uT
J1GMKg1M1PHGb0ybQHnhfX90OeiPCWaXfoZ56nMJhrVZXibmtvUwDGFo+Fl+
dfE45nK79O2URRyqfOc2t6ss/OusI25n39kW49/53pNBfWx9O2b3GRXG0lEa
FHf6g4bxui+fNhPsTu4EN897O9hd9UirS4fZlY+9yH52Nqz+Hkg6pln6euw1
e1j4vZX9ICY1y/setseHPRLCwuSLpM8k+5og9pTp2OD41uD9TR9LWeual0ta
bY+E1QEfLceh11nvYbSsOZLk+3enc53CUvjZ+/k5Zh+DvDpD2jBx71ze/8Sx
wu9+vqWMdYPRUjK7eZevh/eFKkYgVpXnCLGq6NqL4I9zC/F5XzQ9rH+nX18v
x/axZKYPXwnaiL0eo0qftbC78oWrP0/0MNLJ4ONWjkQ08EvlcSv+svH44Lv3
+8Gt86O4HkOjHnae7Vztis/E6n2ILAb50dk2XA4nY8TNUjfpX/C7K48jrM1/
eNyezrLEk7K+fOX+/DkzJJaVeFeNa//t/yyLNmfLuz81nO/31VRvq+hbQhGs
7E6jbMUSF83nfIeXlsc/J2HLxd/baNptXTvnEN1Mr/mGi34ud3Jb/doOelh4
vBOm/quyHNt6vxB+jAk6ZnztcTHizCeG1eSimRk0Nl19jof1g0bZrbJ21lyX
adfrhm1cz9HnRX0mR60nnXbUfPplehiYPeqYFR3bAbdzTIuOWW3uM9q3+D5Q
l0xM6u2C4u6S+kjSdOJm3PaENDDSxcStb7g9YdluGywNs6O3IOYUvQv6F5vb
4WL4UHln4NcopqSfTencMb9/VJ//1Peq7TMW26qfIqaR19BuQ2iIfxmj3aAy
NVSMKu0C5bL8nbWMmNquc1xe9wfOMu46YWWovVHvJ9Jm7XQx1Laf3OXlsOOt
49LqPWHaAeNL3v5Lzdu161OfF/++Un+Os9MngnzP+A7xncAibflmWMu/QvlF
ldkr7+R6m7D7ddmwzhn6mJFaP0XcP2nWsftTJS7R798sXqvGPUqOR54n8r3D
7jdvXw5dPmuuI9itlX4xw9Y3ffNe70w/wHHWK/dlr9QjixH/miYfTS+211ox
O2dYkftmtOrVY1pUvKryCMnq30Va5/A4Qw+Pn146eO79RPa2tOk+A/hGLGoc
77vr27r3XjVfI/0D40e38xIqfzvcDsejKzE5z6sMr5zo8HudJf3jC7PLxwyL
43u3+wgVIyq3TD1OtWRyktt+f3gUbbev7y6bZcg7w3T5mhmnvcF06q/+jdTP
k83qWXLHJzG1q0N54IwXkbM0Sutib4v8j7S54pZPMpjw1KzP7En919rcnmT4
+vDfmTzzNd+7clK3i9u7/TzuF+vHfDBfJLtc8XUefPuy41CTrnH6G/a/wTWe
6yzbhvNhd7j9xPyH3nhpyPjeo5ZPoyE3ffSNl42fnra71sOf2gp3J+kHslr9
2d39a+BhNvzBcCD5bZL6w4piW13Xbr/FadYtZB9yltvu5y46mTxaGRl5J0dG
BoxRDjmG1OcZ/RYTv5o1H0xaVsc/f3Lho0CvN3t92OR8kQ88kb1D8rcr33uv
s3gWw7cNX/N8hrmlV0nT7xK5aMTYmOn/rFoetvKbTwJuH1s4FMK5JaOnh7fh
bvKikGcSHYt/DhcNwyvu1T3HrKftivVpe/C9AGaXdh7/e1gfoEX2u+sa76Yo
n3UUD4flTU9TR/bbjknNYhxDvo/snxiu3hclb+lGurpGcXvYc2xx5Zzx//l9
sbf5XbDB7Rv2kBjPD3gddt97adk8q+HdC1f9ONWoa/3VV/8m6C+pFRP/Kwf8
e9VxW2cDL6eN+aQNMjhBzJf/XV26B/aNWLGiOLnV+/9B7dndD9zeK/2Duuzs
nocoRoUNycWeZVuGG6vX4VvVdx7rwvy91x9R941+sNJq1bmObE7HTp8dMKzu
Lgvf4X8ntlR5Yooy8rqTf8bOFwnDN+RVT8PdNX88+YeMT3K9//pCTWPKPSh/
tfxwaL6J15QRj+oauSDhRnQrrA+vHx7eEehalCcS9lbOE+496V1kXA/ymbv9
L1EW86LOt3Ilsu13fvGiWV7MLoti4Cz+afmaxddxTB2mk0myqG8B+lbB/nGs
iEFVrn3pifK2LQ5Ozpi22u6xBcPtadoa9f0KeQZEvDf5/g67L8yNBP23tMN6
gduz+lL0vZRjPz056i2b75urtfmrZhp257OrhdTvzp2yKY/4RHs6efnCpseZ
f72sWvXdsHYZGhk4V3187xz3Gd71NcPWfOcqbLulcfOtjLYALE/7m2c7z6G0
WhmTx+F0uUkT7+Zu/KJZP37vKvIZS/9N5EBhHL+u+kUlZzxaD/JSEmvJ/IW5
896mHe97hw7vN356WJN1WL4V33LWfW9HfqKiTX3NpmH3Q0d2GlZPs6zRzs8p
V01xzO5zRdnknznz6wHv7K8HvYnypK+LycjcWhYfO+XOLj+c3C4mtfOFw+/k
grS13vit0bTAjGhl8I8T86n8L8xTDnf87DC4YlH5PzYxEGhb6MeJ5chbM70y
7olPlX8F7mabDMPY1OVt1Z/2A8sqR00aLleumrRM/yDFMkaz36JORvuEdghG
RwuDBlV5Yzi+7K+bR8auZ5j/Xj6l7SZuumQ07ZPlpVrfI2mOl5Zrvq+jY8lK
hifMua8+T+h/UfpbWKDI52q3n5lZLcjnWOX1r33ta96unVs9sfC2bVvMtDc2
veIVxcawOWVyDuzp5Opk+qGDH6fe1uf3VryBfbuNbbB7ZwxOR+8+OLFs/PHu
/KmJU5H9nIXFMWftB4B2NyyPrxN2T9MXD2xeitDms03aI+3o+6ibXNxtzX2/
mLQyDM1xszQz6iMVjt+z/33DcWHXkfpxjYtvLcL6qZ1Fe4fjIR/64VPvm+Ok
aRqSQzJtmfjm/XgE/jdygZtvpBXj3glyumTRttR87ayrvBpwWFwemX41xYVi
0kkwznnwOc/Pi0K/QDAxvP672nTyNML4cLniQqVZZ9rl66eCHJP8x+B1tCz4
+TWNvO92P0swKUwvjpS/3s6pqFyRNudKL6P6mTrei76eXE162utKfmk04dKf
ypim+M587c76OLzOu5HvFMqlk4b3k/ZlbtmvaxYtj8qus3u6Z1jSsw5uL6o/
1X7WbLvczlDMDh/7y622bI3cXp/ezO2uH725LHzzblsjm3X/uD9sRl4YtDJZ
1rFj5LLcP+Sp2eNo6XNd+zfbE1uaqx3w+WqjhU37vAvXblgdulGPLph87knX
JixKHDa++G7XOc664V/Cn27nesz67YBjii6i3k5vZIP791qLHbQNPWAuH3lN
2y5fu+zotFXeQ6JxFyv6/R6VPDGvzZDwmnLK2Jpx9RUkXzksDnOLydWHE+No
2WF/eFy8rlzxGGxPHCkxqPLT2ywrzY0d06p2gvplRU8jdsdPb/f1VNQ1ZRvs
S1vH5l/++7md0mlw4nz97EucRsheVscpbfsjff3Cp7PP6ynftUk8wPNguEBf
ST+yu83tsDPjL//sxQZml/8de+qp7xsGZ/knnvjrBpP/210eX6zN7XD30z94
yvvx8896s59+ErQTmKbtc47R1jCuslie+jLUNLYVtU2WVb1U9kt//5PU18+G
RV/X9jTGaQMncTucjMaGvKytngN0xtI6pLVe/i42fHLI+/rXv24s8EVW+fgn
P37WTOM67gYvUxe2P3lpuGG828erU5b2msHv/vrrTxoNfCfr1svXtGtZ80JI
i6T2k2/F8xRGHphczG5xux2T6rOOX24/5GXPwu2+ViSGT8cGDEOyHP51/OPi
9Xv35wM+F2/buWLE9vKr21oaDeF24ldhftuPLl+/TExOu4F6wPmMs7zvZ/Z9
7Pip1cZQnpu83BrF1/isfb1m66Zclm6dyAt/buaM0bEcniobP74bP+qeN+nw
uTfX1ptz4Li5ffJbtmdFki8czUzeeDr5/7N8B+iWReVcF7fDuuJe+heQX5o8
ft/+9uNmGizMONwMhzMNJn7ssUfNehcvjMQuzzJiaKavXJsN/O1wCevL30+f
Y5TBOOVQLuWwvtoXMDjlRm1zYWGyoWyxPWV3+3z0onEf4DfnGTaw/y2jS0lz
XdEH6s7BDxK5HZ0N+nj16SRft62ZibpX3euXuMAifO69YnC77r93frHJMPra
nVIwjf79Grg9zPedxjceNz9k2tnTR+v39vwlb+eOrfVcfw+xDz6PD4a2JNx+
8cJQz9WtU8eM9rhix13LUm9p5ZvntcYP+OcfWOP0oZo5BjXExPvSydh2bqFx
mb616rHxWTeaU9Gwo61GSy0OtzUu8qvbJp84XA1fyy8On6ORkc9d4/C8zPez
lwNmF9cznaH6CKVeag+ITaWJwUeteNmo/Qs7r2l91TB7EXkebZ6mPnC5dOfY
mwfGqudoPjhfzIPf2X5SmX4uebsPlqKt2GfN+u05842TYdKy7A85KmCP92r9
EtOWxvgGQq5rhuSPoq+GT6425tLr5rM3ql0hbpc/W/wOU0tXwn7DwzAzTMwy
moefvJH1w5cXt8uklxG3y1ev/5QHX4u7Ye7xsSHzHYB2q6uTCdumuD2s7Hbp
Zfq1TyoM7hZ70/8B7K686hj/FR+Cjg4fO9PffPs5k/flzPxC4nXNuSMvjX1N
5m3z4oujHmn97u52eqmtLW5/8snvBb718dETZtrTTz9V5/aqXV+eNfz8yssv
mqHJwVGdTuzetq1vBcPXX3vJlKH18JO/+carpl0wPXnOX7bK4nFlutzOOobb
q/OOHxs022Cdjz96f+M7Vs12fPCS4yNuj/UqvxdhtH3Cc/YUxxL0rbprfDFd
nscEnt1ybMpwwHoI39l53PtCM+PWj/2r9evq83ldLyNmFzdL0y4mN3kbl08Y
g6OlV2EejP47pwzxtJaB1dG9Kxe7zeRMp10g3zPl2W0B1mG+NDOUSRtCPmQ7
vlbfCHy9u79/NqurHzeW1zmGh+NiTWEBfN1p8iVqnah5yje290Kd0w2jOwbL
o5nH5x7mk09bj6LZ3dbEtvpsUJ8vsCtMcjcmth0WF6sHfTCkvAe5nxdXevMZ
K26H2U0OwBor8B+2lS8bHzmcDA+L2+FhW6sSt7zN7ZoGg7v6dtVHrA3f27oY
xl1uj9qmuD2q7HYcT+XowadsM7ymce+10uen+nFuhy6beyBqnpsrRvka9a1q
bT1dXkXuW9q3rTK7DL+cn9cvuQ+dblja/RO3w8UMK0szZhyGh43F7fA14xgM
rnGuKZv9YW+G/GcdWF5tAOaxDv/hcrYVVibsbnO7Pa5tqR3AOOX2o989qx9Y
Maxor4m5dHOi0J4s6luQqwVXX6cye17RfaB20/C1h5+X1vjB1sOPXykm54vW
H5oK11iwH/jxdlT5weTl6lVuF59bQ3v/0P9H6SZgJ3Gv3d8p/m14Gm5H58LQ
9omL3W3ftbQv+N+lZxdvy2ev8lSOckL6ZU4HZWga9dJ/5aAxrH+rnqvd9AFq
7tt6X0gwN9N5vsLCmLiYWFLNt/M9qs2RJXbVzuFOmfjJZYbRR+pDm9OV44W6
4CNm3M8bUT+Wee4T2jL1PjeTLXm51p4Htq5F+eXgFXTuYX2rczwDXuf6dVld
secuy2vZmqZNfb70molln9m8z1v9hxXvt+srASfDzNKW+HkaVwMmli+cZfHN
Y+SMjFpe3C4ti3g6jtvPnTlm/Pnm22v1nKleblxq1DY7ze1cU4ptwrhuyFkC
pzJudI61eSdmyubbDb5nTPctGnCWxxhXX8HT5Yp57hP7tPWsrxGPqwvl6RsQ
6ya9z2m/cl46ff0V8X2CXBNp8svY1mt5V8TBaMj9e2/QcDdcbHM7bMx8s7+f
rxq/uZhZZbAu88jbwX/51hmXH528hvzHHx9XZhS3c0/SFoArWR7dO3XtR26P
vEaq73S4HN85LM53WUy5ZshHg+0xurLN5jrUf+WpKdq4j8ltQ3+9bvtXOdu6
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
l1Su2gPUBZ+7nevRzs+Opsevc2MMMXzDcVD/pQEnpz6mjfwOS+NPj8o5A7/j
p3/n1GXD77G8bm/D2R7tAjG7tiVuF0vH9a/k8n2rFpYvM87fPlE5Znh9eHGv
Gd5eq/tO7FjU2WvDZpqds2zvRYfXi2oLW7522gT4ObVd9g/9M9rldj93uSbf
H61YfdX6022/cNz3Wiyt7uNhzk0m07mzzzVtoG7XK41x/fH+4tyjVSrK167j
Ig19R85DlW/RwvYSs+fmm7jc60l52KOmWf/hanLJEBcOkwd5a2zNWNac8BHz
0Dgs37rU9XORbGWvUjpvuL3bddFzM+n6sXNJFfGsTXO9Zt2Oq39x+2gL2ybt
JvQxye2nfDzBt+6i/OymDIcRwvKvuOsEmpROMrq1XdtgEr6pn56rH5c0dWtg
tOrz18+bWAn0LjAzbA0v4x9HK2Nzu/Kya5pt8s3LX29rYaSTUQ5IliFOVXki
pXUXi9pxoYo5Fb+rvsqDzhA2grMbGDwrs4/4/nU3TjTOj832pZdJ3S6wmJ33
bRR3Z+kPNczy8rx8/nHcbvsCYPVKxPuCXOrEhPzy0qjJy8F1i97s4wvl1uLK
7Twyunf131pOGgX5s+0YRqYV7c8g5pY4W/Lk0CfOnrOLDf3cRMUnbliyca/Y
vnZieYkB7Xa9shp+dnIq5Vk37F3e6euJ/o7hrm4fxzzGsRqtvitGFzsTq847
9tkfPdMQR94u//jN258G/pFeNa4b5YaJ08fAoCXr3i46djkLE99dr+d67Cf/
SNgxs6eRp51crn5sfFJ52TlC+o8iuHnLsYlQDratm7liohjd1nJi5DZQ7rMs
x8VmQbhcuVhWrvl5YeQfl8HPMLW0MvjfbR2Ncrsrr6PiV/kPj8uXLp875aj/
Jc0jzlV+eOnX5UfmP3oYo3Hfs9k7Nzps/i8tTQYad3Qzvzy+0+jMo7QvSUwN
QyvfinKwpL0+7VyPmHTq+OPR1Jj5py4H07Uc425u+KL9560wv3Jk2m0IfQdI
8/zCt6hrd/vZGpuLs8NyO6Y1K/4ajuM+eHc4vBz7vnHvIYx1W/nmyX0Dg6lf
HF//cNT4VNHs85/4TvUvxbMfn3GpR/PK97px7dHeov1Frq9u1ydVnattOdpx
YnX0ZcMmX8b20ByovW58VyeGsNv1aMWKbuvEMl2V0WFU/O3mu18bNS0ji/u6
rj1BJ634Uvica4VxpvE/7juN8i1yj5d6qE2uc4v/OC4HUlF9nEQdmyjNfVQc
rfLCSHNpz6eP2fT5oLKwg5M3poDv6OLy9841vs95f19c8OMWu8XuYu8dlk+Q
epZv8p5fsjhzobGdkWEbdu4UHWf1SYqhebf5W3wubbrra5deRtNt3YyG6GFs
H7w9X22BxhwtJc/Np872qefgoa2G4RmnD1WWheMHBrcaNo7M25KC2+FomfLR
wK5JPm+WI67V7i9JdWccHQ11g98pj/aB9PJu2UUxe1y/S1l9+GrH2JqNJN8D
841vm3u2xuhRbB1qdv5Sh9m5X9FHuBoS5d9WX03idO5tvsfQ1nXzeev+T8fR
5cCXLkZnnBwrLn/x3lEMImyv5enDnvwih+e6/y7qV5Nephfze2JcD1wnb731
t4Fx7tUH6m6Td/otY26/Sv1iyqEtDus2K8bZF+n7Vre1S3AifM441wT/ye/Y
7XrluT7c6fh3Bi8te4MT5Zb9/3n6MWCbabdLLnb0L9g7OzZ7b3086G07Pm3q
T9sDXvf7TUu7/XSsMFXOpv/Iysbbz5QCf7Wfl7fGKOt+PxtFbzepTnYORxiC
9gr1Gpqq9+ne0J9SzjaMz22lpuMNg8HtMLE07cQaKv4UH7n4W/p0/OTqJ0nj
ytduMzrlKe5UsataDw09vnabc222VP+u6geK9TTd5J5ZK5l7AL82/P3mgbF6
TpIU3A6vo3PZdvh8YLtOTZpp8o+r/5mlpTnvH++vNB03jdv9JsHnMDzadWng
4Xryxk8urTRxtbQpbt549RlFeVn6QFXboTgffLZnDMdAnJ35OrXa6Ib1nXjV
tHm03eckubp3WPm5xeyXrkbzH/yFv9z2pSexFs/3sLzxrDc8vNd74b3DRkMD
w3f7nZXGevHb8IPa/Za0XLuZ7W6VSWBx8bn6E+Pbc3iOx7Lxv8P2ReXF7IbB
ZLABvncxPPm2/Vx+Ww3PwwaY72vdasbxxUb1Rd/NPO6uya/SyWupV4xvAzqP
OndR58w29FMs3842XKvPojB/eFaGvuvkWujU8zFtPYkZJw7w4oUhT33SvTEw
6m3a8b6xLdteNcxeNLfP1r6vbzk2ZSzs+3ZuRqZMq/9QDRv6+1yvxXnCyccm
2sfstA3Q7QxdMP/ZJnpNjjVs4h8Df76xAupSv9bKxvhmt/7bStUWqu+dZ8x7
Z3H1nPdJldtv3rlsxol1YVwcrnHmaRrL2MvNrYyYtjbL4I9nOmbyg+Lvv79o
aXbq14fP7csBw1Mvf7lyw7aOzSx5o8vLpu4sf2gKTizVzm0ptcHlW49Oev/j
H3zD+z/+4mlj//KPv+t96T896+0a8X27pv/TQ/u97//d66Yu2k/qpnE/FrZU
481SfbzW1to6PO+9vOeUKXdw4ro3v9zIHPX4mKXa+VDO9YpZVscl+blUDj2W
ccOinz+0T4xuKGhfpj8fxqrHa/tZv0213eSaqc/jXs2qTeV+opzDU35fub42
Kd26sPrdjO+hw7VrMayeip2+trJgfPXHqu+5m/Sl2IHnfivGu2r1Vn/pO+3z
345yF24se5s3/6335tvPe5MTw97otWtmWpYybt5ZNtc010RSPfvp2MN+VxfP
G2N8qTTlLcwOV1niUPWe2mY43+jHftu7fvovonENcm7sfneYxjnjfHH+lpbP
B9cq5495WHwewd61uPuuyGdHq/dvXLuW82W+5237iTkX3Heah/9Q789dpg+J
5cLP1YWry3X+Mt/IM77zU1gY2/mxiI3na+doyfK7t6Ee5BI3PvaSN1zTWNi5
JjW/yG3ev0ufZOWAh+fnzns/fv5HJn8tHMG5H6yed8YPDv/K+89PP+nt3vOm
d3phv+FTfORicJjVZnnmUa7M9/mWg/+mn7nadK4zf3ollEntdTVfHH+zet2N
1nzbcLffritZWqr0x4Myntt2OOBp2R9/60Xvmc0DZj7bfe6VN73Xt+4ybRD2
m/fs0PSKWdYwe+06gc/3XvBz0WC+nt3fzvde3uM9/pP3zDjziFFcX19pYvjW
ng122ywdZ7nHP20bwTXF6Iq9A8t6DQex5yVzb/ixA3Xj+GapFxwNG+XZpzx5
P/x+A5qfKaHHrMo00tt0w5+X9l3ysOUrLurYHZkc97bt2Wz4fWD4oGF3zffj
Q9Lcf5VUueeL8Ef3EvvDf2K+5v4ZN6wbxncSm/ls41lF26ven6l/7miTdbve
/Whx/TRlNc4NzB4W68v7aGvN/2X7kop6FhycKLfmp2uB28O+vXNMd42XI9fJ
us2m+Ncal/B+9/3rpab5RZv2Df7F137xwrCJcR8bPWzOI/xNW+zQyHZv18D7
pu9n8s7C7gMDbwUsLXbXuIa0CwJf/v06azNd/bTqv8/yZUsfsxxo7/31G7ld
xvtQ/u2G45XjmqGc//jMW4anxeDidniea579gutpx0xWznvbTkyb+fLL40dn
PQxu/3++85KZxzL8V05JplMm47QJ2C4Myny/r1T3vm6d520/frufQ+LVgNt1
PvLcz0bHXjI+Xj8mwNcd4TfHTkyXUvnN/djYkvFr5tmnPNw+uugfB+qedp2l
q+NGW4HuoN3nqV3WzpisXjbzXezquGF3XZNqwxaRtyTNuz3tce/F80MMNz5e
dBYb/vfuGce+F3Iztsui+u/upbZsnCXdu7S3xiLyVBFTN1egf1AmX347/eyB
hXAEev2ouh2aqrN7Gp42yx27ZDQ5744sem+hgwliYUvBtvl/dNppG7SxvYJd
vzZrNB/42eFxDG6nz7fjxwYNq49NnzH6FoYDA1u94XNDhuvtdVi+ztiVBg63
j52maX7dD+/73v3rsfl6Es+78/HPw7pFtKXMea8yOuz9F3/zmvGHY/A1//fW
chWiwUFHc3ByzkyDyWF11n1jcNT8Z1zzYHP+0xagHN7f/GceHP/Uzz82TL9n
dNGwvs4743Zsa/w9XPw9mLdMPU/gVPzatrbFtMMt/3kebm9ln+CmNH7vKMvD
7bBb3nqjASY3dtHndsPaa/pOfafDGm07j0S/fxPB/w43wh4cTzTVUb7fDSve
OO79pnXJytxF3yOu1j1uu504Hnz/aMdxc+2a8rJ3iFsb2H2k/g1+4Zr8veHn
dfXWkvfheCO/N8aIlhrmqVxpXdDcHJvb4w1dvhDsr75dtNO/7trY6EnD6epv
mb7XGD722KPeD3/4tJlO38swO8Y8OB9+Vx/Q6GoYpw8Jsbh/LZQtf3sl8LGL
5W2dDD5s+eUfmH4Yxr1Tp/ZX6zdgntdaRvoalc95cM9hXoPJYWqYHMaWjgWm
ht2ZB2fD5ujepX2Bt7ccnTDTWedf/flT3tGZVeNDZz0YHR86HI9GXuXA7SxP
O8HW0Ghf3Phk11dn8tasVIyuH61QK8836efd8lt9bvjfbJbrepkag+fSy1i5
ImkLZNGlF2XHEvuRK94Uz9fp7W5Ya4a/vdt1SDK927hHGV++Xdfz9IrfEX5H
Sz18ap9pC2344Dtj8rdvHO9mS5tzJq21616D29vdRoDBAi13h7jV5muNU4e0
db5yfcn08/jeuXJdd1vLVyfmYh56dfkZYXZ0+w3rRNSlU9z++hsvGXbTfxgc
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
vzsadvnXR6INSk06FGo04q8lJhRdi+oqwcnSy/gaqMrvgtbF6jviZ5cVHrdi
jme66jXxXkzWv5LfnZhLqxvbZ572NWNO44W/XnVjMXvPpv/hdTiecwzH8x+z
mrjtcfjoQ34vY3jvT/j7l3kxISvfDRmeSOPOm/S3cw9TS4n9H7T/tqq+3TTS
PdR2GlXOc3zz5Iuvu63+Xu5lu/vto8AZqg/HOwpditU8qpl3+ssCjbfXktcx
+hCqWTjo41DlXLEO+iR508va4HkyTlp3ji+MuZ7vpBlTDGrTuq461mTtoaa3
q8o8eTzcD3vn1TUv2ybyMPH84dsJfnPyoBxK35P8r/q8hvOzWk3S6Q6TuRwv
7DrziW03saTXl5N40um5UFtd77zFzjNtkFOSOkowu2JWzb8+BszJeU0055vN
qHVKrnbqLGFXlmcyrQqczvDcjePG9zDfuQ8PFvidVvI95h+n2PeNzrpL9AtU
h7XJONS1ZGEeUvo23GthzhlYPaadgethd6Z7P7xiW8XxDFeNZ+W6UMyorKN+
alP772qxEk84yOd3nbjUQfpRBmH43WFgDL1N1eecf4/U9XH1Wv8qsYXod2CL
2zw/bdMwtP2wCOsyjVGqL+LbieJktr+3ufX61ufNJvdvt+G3tr9i//cemrRj
I70RbZTtF7/0HwYRl9qrsf/9cPe4Xa9YokN60xhl1Nuymo3jCLOPo25tHLep
zJr09RcZ30U4b76/RT+WZxX+AuIIr91KcqvLeGfiU1IfoyinZZd/fYgabrPg
2zz8rBztxce/+jHEp04MKvxPP4B+jeqe2nqH/G2hivFe27jxsYzZVfeU/xMT
v7Dxx678vnXhxrHWXxYOmzEexpsO8nGF+QJhfRjf++n5zbumu/NGrmhtlN9d
cY2j4nY0LbJRn7tcS68z1Yiy3DMpd3POlKudXzgcbXvG721mh905v+J3OF/+
ev3uP/FB9s28zjMJv7zVyeIeaPocpm1OnEi0ZjybsH7qLIXWSz4ZPU+tDo/z
ZQ1L61nH4FLqVParN6lafyR5xibXIxzN+wcO4zjjOyd2g2s2qeEQ5H5p9y38
MwguReshHbblMWwz9p9P7msdPvK2MbgxXns51fGZPr7HuH76yseZf/3I7Bkb
xvZOH8j4n+3xvn3a4n9sP2H2ceP2tWocf84HDEOedww/PMZ/4iqp19SLHxkG
YjnpBEa9r00b+6W401H62QdxTTTdZp4fpgm9YK/L6bsi55D6BrA6uVJ1P5CD
xrSpwbsS3zl8AMfDqHAC+8e7kmGW6dAhj4hZPefBDTFm53tAXd0eXE8sKxoY
r1/PcrgfvZDkdRx2P6Wi4TM33ctX1zJmV30jmBu9zM59G+09DsuL22F5HQPm
h+vF5fjrNS/LY/KXY7wzlR9mRYtztfA4qy5qlm9lyMdT8aNbj120XDLK51hX
kz40c9cix4xrlO8WfB8pOs5wPJwOt2OKc5UfnmHT2LQZCN8kXCOGly627JnE
syHLldr080D9AVfbCW1Of37dFatbd0laCZaDQWE9xtXRkg/b8FX3kmem7LyH
di/N2TJ/5Yy9b4i1DeO0YAnj6/Y7SNys/Dj8V266Ip1LaOH7l20lRynX5dSV
G6a5wrJvQ+1rCIaPvbfF735/6XOEvF52PMbRl72ajGuEayHka4bxxRPHqjjL
0MT5TI/No/F+Gv+5TwaZG3FQxvHw+z7qnJqDuPab0tt4LWDsHu73vmb5u5/X
83P486h8MaqRtXHj463Dh3Ybe+/+aKH1x9m5NrtczRi4Q1ucMqq+zxtbOW4Y
iX/dmde0K1+Mxd+0n9NoZJayPGCJpuXQhUQnzLxl/vYOBhlTNi8yGBydjNfC
wNZZDGibuX0NpENT28wHL92UOF++eObXfwyGVz+A+ekLoLUR2zMu1MrIb697
hvMAS2aMPAjeKzDVUSWPIzkgyftI3kZyOVIrdZx977r2Ye65i8dy6ydJm0T/
iHcg55v8kuQjkY6mQ1vT5p/Ds5eM26UxQDtbVe+MVtbum0H35dvtw2B526H8
iXBglWdlHX+7/LL61XhpM5I6SsN7P1Y1tg2Wrrtc1XePauhevjlj15G0KeLq
oj4AcZ7Kd7n9nRfsl/mLOD3MlaI+HNcgWjL7/pP3fDyRfK/RNvhaouICtodz
rPuAe2Ljq09Gt2PU53bd8k1+9XC89ALE9fl57T4+vntkNUV5Tk9ZXqnuvkiR
HbdvruMTE9CE9nuQVpQXpt/4/PrLtvn6zZ+bnwPjO5KmcU4Zt3PXaxmri5e6
fOY+p5uvzT4mDOv97PC49tE/q9G0wIYddZ+svs1107141vfHEOYfRf7KJg1u
ht0xsbtYHf0Mhk/eG+PgOdVG8tyOweZYLAZVtZZYpvP6XeyYJ7kOr3boc/gv
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
awv/OMP4wWFruFzrxOcOz4vbGWZedPC0w3rkc8e3zzLsJ/0+dDPoeJjnzd+9
lH0fgNm1Hew7y7Deb4IY22Pz73ZpxeF29g8uVuwV19V0WgfQ9weHZV4zQx9D
1/awt2Pd1m3dhmdFedo1LeyTFPVFeJb7dwnvQtON9hmrfDfVD7IdsMOaZNWA
bzYf/ND8678/ccVyxNBfQd9OfOrUpaR21FrR91cxXQv4DcVs5O1mnLTN+Ffx
h8Pt4jmGk9qbVzNLllnKlpMWmmH08OjiD18+aIyPxmYlZ/jVrJ4T64rlRaJd
fOI+57JqgdLn4pdp0qSzrti9x7yWf/xassyKfznMj+iG21x+72/XjdmJSYXL
0bBn/vd0HniH6XC9cofa/dpelmUwaW749etj29kffrM+hstVpBzyzMP+cyw6
+iKpzod59O3A+86Vk1/HMvY8YJvpa2x/+4XkOlhYya3v2+IawI/qfY+qWc9z
CrY1Pp8+0JOvA3/wlumr1rf2vF2VvaPPgKCtIsvry1W1Mm6XfzvG7coZA4Mz
fGD/71vSnLCMdDLwMxwtdpYfnHbwm8t3Dz97v32ybcsd/nbNr3lo99ryZ60n
frbB1okGBmM9v/3NrzOfvvz9zENb9DXgWw373Dj028g75HkdrTuMzDT6eaqn
pGOovOhYcp3lx1VXMeV9jOVT4ZuK178QOztsLUxTtWJippz5w9iPdVu3cbUi
zv7fX93OLDbufiRGJq897mOmqS1yNu7d81ZX7kbMx6aWbQPmuZ33lelDxoAl
B2HG7kcvZBwktuFdrvc5uWbWQo6YOuavH2nRN/72iQ5tOu9NtO/yoet6VVwj
eUgUpwoTel87DJT4fk+0dp6eNc4kjyPMKQbFV45f1/JOpr52H5NKm1VqG9G2
9OlJbpvyXJRaV6V5U996B6/nzRO27cYrH09RfKfN97ni8BYL52VaZx8kWQd5
Mzkvnfu60PE9pIuF2tvI8eZ8hHzP8B2nacDnq297GicfA88U+IjtR1/Odwf6
L1UZSFrx3aevJn20S8v2n+vJx39WtmOJtnrlWunuByS1na/na6YascSPjX86
eQ8knA7LM85rXlZyzixnmhd4+O6928bITGc++oGaH62ODF86y9Cu2pSuRtzO
f84N88Pr8vHTpvztV27eNi36v3zrodYTG56zaXv3JXqePXu22Dxsv+XOaPcn
srbb242WSCzOvcB6lO+fXInej11Uj1A+b2lV9K2njqHHsb59UBOb/gH9ULZV
ed7R3ZMTUjkf66xnXVO+Nmz9PFY3NBuj3oY6Rg0t+EO299yN1v7jJ1oPt59l
PAfFzcs352wcOhbP0mXGvBcvnMrqYv321V9ZrNCfTu7rmO/vX17v4HaerawP
Dbw4fc/unTbu1VdfNmZnfnI/6lv9mvS3z1zv0jXzbr6bPrvxseNvFx+ZTmbI
dX1GaeH1hr/bNLw3jmWxo/Khx9j2ymLiQ4cR5UuHseFysTb/8eHnnp92f3Fy
79tZ7VTerdIac06keSlid2lhMK5n+eLhTNUKyvM35+0bFtYpKrIyDseUR9H7
v/OWE98zn+rL+hyMPueAvnHk5QOKrcPvt4+5feKJxzON8v37yxmrk9/y/PLN
dF1LpveGd6ZLdHgYPuKMGyvmI8HHyzIbXnrNmJ3/6Iwmz9yod52372fyQdJ/
gN2Vn9v6lCeSbxQY/QTmGew7YzljaPzc+MSlOUGTLgbnGa9cjRhsLd85y7Mc
88DHaFrk4ybWFH5nGLb1camcTxiee0tsrWOMf59zpG2Dr194/hepLudIx3x7
TlwwfvdaHHzw6GfgeOlyWCeMjS+bZwqxL1wryqUIJ1fxZyufKNoq6ZXQ5FS/
L5N8KrYt7fdoOE06KI27l/rl5aPu1089rvkW1+swPbhWRWteNs+4x2LkbR98
sCWosYYv6LV3D2bfEeevzhozk+sl+Xa5O+P2Mp849xXzsxy1S/HPTP8paRuW
D5eV9j+pH5JoHJmfedQOmsj7qU8MTci7H96wmCx8TfhB4Z8dZ5Zs/N7zt+yX
YY3D2Efphv14LDweozbfF4HXySFz7/P4eea4WT73WB73NWrhMVAMqbiP96OY
UAzJf8WEcg8wHl6X3x3/eYyrw3H4UbP+YvuY65pSzdGYRh39esjvTGM74Er5
nsX9Kz77qx35a5JxK8OxezxPT9KPmc864/HOXC2+7+C/Z/ic6eF8ectXMd93
kM1fOes0E4+2Lnz2memK+IXfyVkPyx+/ctu0FDBPki9x2dmNljQS+OT5T36S
Tm4P6/4sd41nefy6sCzaGeoZkdeR5xXszjVCLk1+Geb5o3EyeyZNXx15zZvO
c5XkWISJdaxhavYRHg/jTzGe2fAwsaH4wVkGXiZ/jHLJyFcOz8uvzjLK9wiX
P5L6k2jDckq250GLo3hStsnyurfH07bGsW2KS2Ve6kvxi3aGfgEmP7/a5puA
vsWoj2lM3H6mwPfENRdpX/j2RvyL16/4fItlplxq4n36RwmfJ+tUrALj6tQK
yzPpxLrPd/JOHjd+V576JtpavD3afVv3jde3friba/luDkfVWWde3hnaxyee
1w7PwzrnXOvAnxdjkZDbf/rTJ6Lcjs6F5yO+b/zgfENm/OVLp208WpjnfrnB
lme5F3/9nLG6uB0u1/JieD0XQm7H565tYT2qwTA5c6X1y00Trad++VLr16+/
3dp9+pqxOnVSGf/WvuM2bcfUGbOnX9xkxvg/fHTT5mVfmQd7ectO+94wTuwe
crvXHcv8OK6HA+fT2NQ1rBuKcbtyMH715SfON321y2BEWI7lYen59P7ifcyx
hLsZD0PF7hHP2z72ACa3PMlpTT+1Ky238r6I0TGGfR1A247Pe6uZ6O9xrwca
5LPTx43q2MLTcI5ienU+5D/vhdFjpm8q2bivb2fai2ef+Vmml4DVeY4o57cM
jrZaLm1GhBnhSHzGsBvLwXJvTbxkv9Jr0z78B0+yHAwLUxKLCetJow2Hci/y
f/sf97dOfHzdfLz8xy/+2ruHWo899UzrB48+br+TR8/YeOZhGj56pvFbVG9q
dJbst9fKFFqbo/2wdOor9Wk7x5e1ha49HM+2dNZkXU59QZ3r/Sbcrq+726K/
BhP73CuwP3qbYxevZ3GojIff3/vDxiSnUZqnSLGvsDXPJV/ToezYKr+P/Otc
j8pB4/sA8rOX5Zzsx8aR15s2ixtaZTqJon0Z9TZUsUHmSBnWcaCPG7s3quyX
9ONVjxW/cEIej3huh7vF6p7bpZmRZgV/xo9//KgxtWKNmMY4jGF+eXeK25nO
O1D6xVDvLm6nfe/75z3LNu48Ptv69ne/1/rO975vzE0bD//wUeuPvLIt0S4y
7Qc/etx43PxvT21o/WTDr+w/7K79FLfbd+w27+PjGjWPxrgdQxdT5ToRu6+1
HDtxbl+wnC7EhZLXRVr15NgsZlps3p3K2w4L+XbwgcvkE5fvvOjc7PjTmayO
Ehp4fPUr56W7jzW7dDaJCU2nM7+2Vbxb/xkY97eP8nmY6OKXsvher2mposfp
5dnL+ngOWA6/XZvsft7Ufn4wnucJ/7FHHnnYpvGsQj/BMnD4yy//pCN2Us8d
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
p+P2proP+d41jJZdGhNYm+OgY8HxQRdCvCd+es0H82P6T58Ijhc3c7xgf6+p
555W/dcVHVMF3X7X8yHNtf9557DWwXOD4+77CfjG8+pTEhOIpplcHvjO8cXC
c8rll5fnRMyOH16xlDyH7bnsnlkwN3niLca+3f8jlmail/oQqbbd/vObGs/Z
fuMLx/n9p/cdMQVoZ7Cby1crfWsoYifpXtDA9Ot/L7IiXTt9PHTx+NzxvxPP
mnd+YrEMVdhwnM/tWjOO9VrJA19k/vtXVVMc9ai3fRTHSv/RrojbMfMxn+2d
19+/tGi+e645WE+8l9WUEffxLlJ+kiKWTpel7TD/TdF5DIfxvVs/4QGq/+kt
3Ofpihw4t/hJmw0+ibax1gwegqfF7TD8//vVZ1lOEfgUY1h8yXgYdCL1L+ND
t9ygjz3aOvXJcus/PrphOir8+MQXMs+Lb7xjvM4w88fyROJnN2uzFP1e6e67
7+XOeqdVnnloS64sz0Tb6bAcbpf2xfLFt+/1GLdbLlanFYfZvV6G44OhA8H4
zzGV9pvYTfWF8NP7fZQ/XbzONvSjbWdZji+MDqujdeKcqF/g+wTkCD2dxjoW
PV9hcXL4weHl9SeTHCLK0Y3h+7Zrwd1zMLpqopre6kwfMe/idQ23n4tbj/Wf
M7BXvU0TPuoqeePFCeTQ4Rxx3Olbwd79soByPdbNQ1nV8pj9Rlpbjb4m6//4
r3Np/6vTN6PcNdLR1LtHHjxOGqWNq59dMYrU3cGolYMRh+Lr1Q9j/UXHh/m0
jcPYriqm51M/9S1ga5bv1aeeZ7z3trmYu8xf7vhRfu9S/zfzpMvSHn2MezVr
unpjWeWcfxDqf/p3smduzk8s3ut/Z98xVp4dO06u9LMeRG6HvfH5/uujPzBe
hUNhWXzDjJcmBHbVeFgcHzu1NeERNMvEACb1vP7NmF1GLKzXuSvvO8zOdw7V
bvK+YK8Lka+4Tr4U5UFf+TaeaEa6Yl8rcDs6mRi3w+esR8OK5UT3QhvSx7zw
/LOZoZvBFw/jo+9WXSP53mO+YIs7uNFf3nmWC/tOntt9nwCd/9GpbQN5ruOv
RYcjzt8yHfdpmM6l6es/jVMd5HtrHPSkMZO/XHnWe912npdhDpl6tmD69rxt
sPrJAbPD36xXw/rOA78rv01WIzGSQzKW/93bWox7GKattVw7MLDPCeiN3N1h
zcsyq8tyfv1hvm9v8I22K8Y6feUJ7sGa7IfRTt2c01UZscu/3oOJE+XHv/9f
1zpynuQdh/B8+P7NkUNbW6//4UhW42bUrDgoY/98H0nj+Z5S9VkMx4kR1jqz
Y+J2eJr/+Lnht58/81Nj7ktXTpk2BA2INB2MZxxsjgYELbzqhTEPbAurw61P
PvNcppMhLhW+F7drG2B2loHbpdPQuFhOmTqmWq+5zzrHvYovLdLJKN/Kb3/z
Yhe3m5bE+dtZXseF+ThWMHnCxcu2HvOrt5dhPtgdk9ZdunbP0mGdqF71Mr5t
2Ej1sLx+Rs+Ucx8ebG3e/GSlupxlOehjBrMpBpFrINShD8za6+lXi9X5PO6v
3sAojP4SrIve6YvP62+//O3ocGLT4be8/DjS2BTVOPX+cr7H6L3meR4OZzsw
pqHZUQ55nws+m7fgXaDrdZ3d14aRE5uYw37a8Nz84q+fs/h6ntfKEcg4799W
vGHeNeTjEYvWGVu/5/awHa59cbt/LlVZX9M2iPuHZ3UTPvcyrXpP7Jm2hW4n
poOJcTvj4Pvj5NlK3388B/nl+cX/+auzic99jbJoXn8JBj92ceW+DWNPZZ/e
WrT50NI8SNyOvv1Yu3/Ir/ztMBycrXr2GNoYWJ3pfjz/GQ9fK6ZV+QLJDR+b
n7a9vt387adnrf+A/xNfsvzMVWoN+eGQw5c+m+/KOV8YExTj9q9u2H9tP/sp
X3oRt+N/Rz8Ai5N/BeaXH16xvWhjlMtGx4iYgti2ReNJ3bRwXB1/fFHbGM8R
v13GTdfi3wP6MfO3D8u3UIPbYUKvBcFPTa0jmFe/YkU9k0Of4zhqAGTom9gn
3hkH9r/RVcOp7Niw72HeSe7NvPc3/n7WpWNCG3x38W3A6bTBL9eZ6Xy+SPLO
SLOep31hf2jfczu+93E+B6vZxtW/rpidvBwkVcxzs+roYNTY0TNb49CoUKNn
z+6dppv0vMy9QN17pjEPfnotB4/TNvPw65cPuT1vPdiPf/yovas1jO6SeTD+
U09oWMfe57ZqyuiDVa2BWmgNasfNVzx1Pssr6b9rlD0DN2583J6d+NZVE8Pq
17d/F2+cbV3+63Trj7Nza6f+Z7of5Ggkv7r4PDZvEafB8aaNOZXM+9bMtZXc
j2vhOJUY/EwMKHyN7Uvr5zIeflZuRPzD3tfLMwDOhnsUx0g+GNgUHzJMh+9e
8ZTKz45PN69Wk4/J5j5ge/K4MObHrfoN0Mddhpp3Y+h2P4RnJ5pCP57nI353
9h0mZx7a0fzKD6lh+e9ZTsNwPt8kDux/d6WeU2rK5xOr8aS6VzHf+qDrOlne
7b2bO8bBUsQINaUz0bnL08kMxNrXWtGzAQZn32Fy9OD8RxsO33pdfvaeSr8b
xHh3tfEiOWLYb/bX1zuNmfa7amwqbO77ODL8S9wTtBfqY+718P43H9b0gY7a
qus2GMOvXXcZYveGzfu96ETyuB1fqHxUDJNfS7UnZPjmmQajw9R+GvOyDNPx
2Ut34+eBzUNuL1oP7yb6Bn4Zvgtk9YPa43rxvQ/7+ZXHuvKHYOqTwfK8h+o+
/xvlduzQWcsJyTahbyeXDL8Y2+3zV81dOmbMDq/nXaf44j9cONS6e+9y8p2h
LC523CzUIWn7nV/uwPkFy/EY9sXC+qgxC2tsKZfPyPd7iMb15vMzisdi+QWl
FZf+WjppeBzD9+6PqfoBtFlVo8b26Hz3qpWRfj3x2V3qON/K5f77j9p8cuFE
y2scCp/tFeovsS7yq4e5GjvaUDvtX+JSlTsSpg/XQTvE1Sa1bPt/ftbl/ImJ
X5gvwPvbySlIzGjT/na7loaok8nbfjQccGt5fG2nofXA/67vnLFaRKvJVDcp
HO9jruSj99PzrlPpamL5iThmHHPao18Y07iUXf9+OueOc7By3a+uvtNqt7K8
KaZ3ul39nDRVN6yueQZGJ4pGhuGQhfFzm4a0zfPs2wvP/yL9fno2Wx6+/uLe
QpZ/gDbQkYnb+WUYX5nq2+E/8txetB6v0bE8zT/5XzYP41g335LX6n0A65Vy
xYmFjBGb0LWrHbXNf+JJLa91qtFivGqo7ti9y2zz5qcq6U5l3CeZXmaVaN2r
9IvePflJa+qScm1eb01dLNMxrvyH9zvWtUqOSxOm/PzsN/WOiAfl99V9p4yz
9ZwUq3c+dxcz3YlyOKpNtOkap3WI6zXszddThd1oc/ve/Wbheoue3ddun+wa
ZzlgHLd7nj58+aDVdZ1dOpvbZve1U/zcU12konqzyTFNdO7Eo6Kd4X3AsD++
0rbDl8qvU7T+Jt9rWj//5y4eM373DMr1ofpGTfE77fg8kAO1HH87rF3nmZpn
MCq6cdgRH72YdKUWaDPnaZDGdhdNxx+PJqX4Okry2MhvD5/nLaN+As9uH1Oq
vOxityrswTH23L5uvRvnYxDMLHYfV50NVhSXyng4nLqX0pPih8He/N2vMp+5
8otJpxL60MXtlpMsmI6W0vv7i9bj6/rIv896aZ/p9AHGKddME9ePzN5HOXkh
+TbMs17XMfPC02Ifn8su+03jJWO84k0aAeV+we9OG9Q8tf+pvXFw2vIYn5yf
aTP8HttmfOlV95X7xPoGxIDlvdNCH/fAuLHYlNOldD7XFr73ovMc07jzHUJ6
m7DdB8ak+Uq/Z/CfWFLP7J4bFUOK74x7IqZ/8ePE54zzdZfE6roPNF59CZg7
VmfI/4bm4zi7p63wNG0nrF89Jo/ly5gc8xq3cHyH3iWnPirMzPPF95/Ctgdp
5+GmG8kvw8Smev+z9dfSOm3435taL77W35+8ZDka7duX8jc2zfLt633HzEo/
BM6DKfEHN+2T4rglbS7Yevh+AVOOmt85b+jG2Ta0QOy/cXOq9YHb83QysHfM
F+/N12iiv8J+8z0ib/68bxzh+aBd5Y9HNyCWZ1ny02h+5ZgZ5TFezSY9As9n
jGul6XVw7lgP/sky3R3nddg53j1DS5dOP9THeyo+SVpHb+J2ONpztXIW4IcV
t+Mz13TxONP9+ovW49tHA89yykcs/z7jR31dYf1yu38mFNVKhe1gXrTiaE+0
DOOkAZChJe/QBFTVlae85PmJ9aouILVI1U/AHy/tzN+/vF7rOByfS2u5Ts9b
+7SrtsVM2mc/nO3LkHzSYb3T9z4qro3FtKIYFKbdi0x/98zajdmtyzL+m8Pr
aa68RNt+NWP4r778xJiOeaRZz6ulpPtArB7yeWh+uuncnT8Xzq7CzP6dEI6z
PCqplqX7WVDcH6hjYUwo202cbJ1v/bF2+jV8yQdTljF+nPiF6ddhNozp6IzJ
JfTaGxtaW3dusnNN3ALz6vhzTuB2jPpwVXxmdfobfl544fDspcY1NPQLqP2k
uNK3Jl4y7ou9G5q2MH/9sI19m5+ftVqj7LN863A6uheOCX0LrhHqalmsVHs+
+hrwMcwcMr1yuYiV+a2qE1JOyfCYy/eOxp31Wyxw+5zNXD7R2v7H/Um91ON7
WrvefbX1+tbn7RwybtMbz9g2839Ux3jd6lkTfvd+YlBjFtO3d213+xr3bG76
9zbL40v/8v5ypqlRbnX87vKHLy3OZdwu9saU5wE9jNYvfU1sPT6fvLQ40s8z
j/Q07x8d3TOnzKq8G8O4T/Y7pm+HIXwuIa8xt+sk9XUrr4uMftncjcuZ774u
F7LeP3x0s/XWvuOtX26aaD394iar840OmRreTMfnqfXWvRbpW9A+7b26Y1/r
tXcPtvYqP5/XwHstudOWD4NziQ+F1+nzw9uzi7fa/ZebrbdPddftgdlv3imv
QRJ7FxOXus7t1ztrDLTPMf26hNdX8ruYfsL4eSnTvRRdwyHPSxNTtKwYH72O
+gQ+D6K2ZeW8VtfSYOxTV0xqA88VmfQtncsu5PY5OmNQ82Juk28Cubr5tB1q
JB2d2mZsftrY6ozlcoQRGcc0MTo+dL9NvH8Uh8r0q1dmjN0PTP/RmH3jxscy
nTv30eH28wer6jPo5zsB62s8brV9rTf5raCeLRgXy8c9zHWTt3HqyFbT8chv
XcbXTIft8Z0fOjjRUQ8Xjk507m9a3Cl9P+U2K4tr9RbzjfP9Ba3M3kOTWdyv
OP7I7JnW5P7tFn+KL4r54HTYHYZnu9QO12jT8Rj+2hx2fuxBmPR4o96Ofvjd
a996qfeDL1Tfkmkr5HbN58+1n4df+FusDpcf2P/7TN+Czlzxp9LGi9stZ3J7
utqC3UNNTd560Opoe2BP6eNZN9uN1j3Mk7ZaLO/e8uNUZ1QadrGxvzf9tZC8
j69l/IzvO5k38Ydn/uGa7xv86y9v2Zmcz+9+Lzs/D//wUWNt2mXbYvtQZFwH
9Lnos8HptPWDHz1uNS8Zpl3zu+sbgfOte7YdCrdTO/Ojhdb15SXL0bih3Xd5
rt2H2X1uJf83vnKm9eMbk05m5Nw8TpYyfJKDLckP4xlPcalV2hK7w+O0w3XL
b9EyTMffvuNPZ2x+TN9rj88tZpqdkHPzfOXozjvv+YWs/9HU88XXco31K6r4
85kGD8E+6MrD6XM3jneNwweK/gDDL84wrH60zeiwO+2IsTiHcDlMXmWf4HX4
Hl5nGZ9bZtA1Dr8J9Eu8h3efvtq7bkbPNGlvGsjh3q8pbw1MOizdDL7+ftuA
x9lmGH7Pni1dfQ+ut7r7A/eH69h3YKK1/b3Nra27XjNex05+esW+E8jnDrfz
PYZ5Xnnlx8bucDtG/+Kt7a8Y48P1w8jNvlpj/+jDjq4fu2I+XpVnPD70MA/7
3Zw45TwOYrz0CUXnDR0O3w/1zIAH0bTA3Piw85bF7wtLK9cLfIU2XX5xGNtr
zuFzrkXP7eRrFOfB9vLPa/0wd9F6tC3ysfvczMyX971gENd4E/dA3b6w17uH
bYR9OM/0Ou+6PrjWzKfYwzsGhuYcwtR7z92w4V+//nbS19qxz74N8M5Z+uy2
9bWw5BtMopshBoHvJWwv3wTQw7NtnHeuCdreffqa1aPPuL29ni1TszYeX3zU
Hyqf7BC0MtKcf/FfC60PP73R+s73vm/beejicpvjiv3rebnaQ6MN/PfbPvjE
+H3yzFLUn/8gGucZfrbvUO3zTs5IrnNyO8qvMVFSC8FrZbBYTGrecsTJ4nOX
3571W56lzxKfiDQ80vEU8TCMLt89xvKXb14uXa6K0a/hXgxz31ieyBsrcbsa
DwfLp70y71VjbNiF8fy3nNrt+dCtwEHok6RXgs/lQ1fd+rLtpB3aoy22leNY
p9/CcmEOv359jLHly5756GbQwHv+7noeBXyOXn7PiQvGd+r/8S20MJ//EI1j
m5dHsknj3DXB7drmJrcX9qe/qtyS+N/RwOBTjxnMDtPD6RjjFMdqtVTbbI+/
Hq6H4ZmfcU1z9Wr3s682E1v1cp7CvOIhy4WaC94Ts4vLpnepUi9J+VzCekca
Vn4Xr0UXt6OJ8fOEy/pl8tbTvb5bXetsygZ53Ye6ln7aiY3Hx853Ha4jH8/K
/6g+vAa3w6icT3QyxKfC1VxHsDrnA1b3eUH5L37nP/0t9Phwu4bp0/mYaHgD
blcfQePRzeDzHyk3Wpxu8v0CjYy4nRg++h9nTx9rM8s++01yjC+3Zs990Lr9
1yutT65+1Dp+7EDr5o25LOYvXAZmpw/w5t4/td6dvtja8f751m937G9NTp1O
+y2jZ+dB2sH2vpOzXRzDfz8OnQysrDqq5FSHc4gXZTzcp/mxMH8M0zCWlT4G
07q0Hp9LRttw0PpmSQ0oDH7H2BbWD5f5PDVh3hgfQ8vv6Yt/TmK+Xbw4bbBu
n9O9856Pj/fTFSui2HNf65UckxxD9U9YZun6mcxnDb9LXy4fuHRJ6gMwrJr0
R1P9y9HUjx7G8CW+g7DvcNV85cyPVjnUQ5B3v863cfoHg471q8JV8pfgH+Rd
u/NPs1kcqxhdtaF8e2z/5ZszI48JjRnnk3MEV8vQmnvNfb9Gm4PuG/RuC6Zt
wX/PNW9arblp86/D4WFuyCLz885cXzRmx+eO7x3d7+j3dd16tSa/84X5bOSX
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
2lBfYVx9Z1W5nfhVjj8+9nHdlyKD3Zv6JlCmeVdOGridX2lzsDwuh9mxXmJP
xPxlPtpeGTnWps9zJ04Xt9dpW98ysuE0ti82L20X7R/LksNjHHLwlG0DrIQm
Gt25LFYvteic99s3YR2sk3WTiyQ2Hd+spq/8H/3xLbJev1XkLeN18Wrb5wby
9Uyb0MQUmTTu8Dv1l/CPw9Jvp3WX0O6SnwhWx9/OeeM8yq9EbhnG27ltX2uc
f2lqyAs585fz5gOl3V0nk9yPGP81XGlb4XbiBQ+dTYz/6NvF6Omwmavrs+Pk
J21mu9bRFr76T2+luTTa17xirTE06fjU4XP0Mox79NF/NR86PvW5j/9i455/
/hcZl+NvR+eet8zumXMWhys9O8fXD4+arQdtMDL8jLZlX9pPU14UOBqfuPQs
DMPXnr9ZHj87yysHDJxOfKm07NKv122T2NSyPO91jPUrdw7/y3JYxvz3vv+g
/oX1fyK6MOaropcflJmmOeV2OD/MU9mk4XuHF/+7AR/MunUa/aEqOSLxqzeV
43EUxvbTB+y3HXgJzbz3Kd9LNR8xLbzVWd3+ivngYfj9Jz6w3DP446lR5fU7
5Knx6ypjv7D/wHAee4iPm2CuIi7qV5MsXYPp1VJftHKweL8pbB/zo+Jf1brG
2efuax6Fhg6CeNJBadJ1XUkfEdZWim2jr8vE/1Efv6Lrp+5xwIhLunHnXFYv
KW8Z5Xbs8CM7Vh0GV0l7onxyGgdXk+NR+xbbj7JvNDCF2qXWkvK8qOZUUS1M
zybi8G1pXZ1wWe0DsbT0F2avTrfOXv+gdeXWdGvfufnWrjOfmD6GGkpXby62
ri2ftGm2nV/fTp9ly1k+R423b3tO/x7q27Pp7fmPXl60nI9wP+OOE5PbZkR+
D5xfsP/UoaWvou8O2x+APO4TaSwFehRf29Q05VOzpi+HsTmv/MLYml/8C3Mz
LE0Hv9v37s807qc+Wc54uaxN/OuYcj/yv4n9ZN3kpnnqly+1Hnvy6daGlzZZ
bpywnquZ07wpd6XPN285fRdWakeVaXfme8g13IThAx+WboXam7H4yXH3+4y7
KZ5UedexQ2nOfs/xMG/TOSOHbcrb3k8bISN3rSOigZdeBlaH2S2nTZvjyQ2v
mrZNbI+saH5xStl9M4i6puRU7ejrfJH41avmZQ3HeT4v29+qNojnSV6bnonx
H6JT8PVMsTCnqPzw1NDJ48s6rB9yeywvvGd1dBYMe8Yfl5jXOj722HWBv1nM
W7SOd850smfPOVL6tdRn7cdxP9H3CLebcUU6Thnff/rdJ/nPt59KasNitEt/
R34DbQfngWuZ4y77aOmI8fnFm8dai3dmW7f+dr41d/PPVlMJdk/qBSy07t+/
apZcgwtpe9371BWXmo5HC0O/gbqrDHPs7BvB0XPD1V6MqSkONeynabx80/r1
84tlydWI/hwWPnz5oNU0UqylagWhh+M6uPN5wvbifjE9bUgTQ39Sw/3uH+uA
2bk24PZfvrq19cgjD7d+8Ojj9r1J28E6tT2Kob18c3mlb8j1RH/w/nKWY16x
qlpOx8v79UdVk5O41GE9j/mFudY5vVnjmMZYXJoY1Scadw17FVNOmV6X9/lB
i/Qu9g3d5YaUbgZWDxmbXPJzl/LrZMqSGi6d136sj1AUbys/tmnov+j87v/l
/fr1I/s11sk+qQYC66bmmfLp8Z6//0VnPUq/fdItN5GLRj7IQdTMyvP5eyZW
rVEZNUxV41Tj0KfAzYyD52ExOOf4qQOt6eO7bR9oh+nEHGo5eJvxaFy0Xoap
z+q5/dNrZ7PlWUbLe25XW9JW0Ob7R3fZMoy/P6LvG1WZPdSsh3WxypbvqjmU
xl4OnatSrYkfByfnbffijbNmoQ8+9L3TRu2cL+lx8HoBYnSr1i6j/8m3Dq5l
fuVXh99l03PzbVs0lq/z3S75XbZ6Smje8dvD6mhxpi4tWEyx5ie/ZE/7vm6F
10VHHtD0+oCF8U8rNyMGt6PZUH4x3gvmVx/Q+YC/8bFj0uvA8Ru3TFo/A5bH
36/8li++8U5r5+RE+xm8p7Wp/Ux84fln7TkLs7/04nM2/MTPn7XlmJ825cun
H8B/rY8+wuKd5ZE8K48OWNsuIyc2fmBq5YxiP9eyweR5+hjigEe9fU0acal1
riGv28Y8t8PkVdrgPcm8+NqVZ8YbNZsYzzko+34dm86zjTamriT5KqvUgWSf
BuFPz7MiTXqR1obl7kZysI6672414j9fiSmtG/Moy+N22hVLw+mMg9O/ndZ+
kSnXn7S+5OX207VsVnfpytns+DFM7KLnduIU/TrUZ8jTycD5YXwkbRR9g43l
FWJcmX6r7Jquc03QL+ylDdXI8u/+UfhlY/Gu6Hbgi/BajOWt1P4zL/0Q2BWr
Vcc14HRpYpi2+6OFWmztfe0YzI59vJz8wvGLdxL/OgzPL3wHgyf3Uby/wnja
R2eDzoVr7N2ObyXXzYcPI/ZTw3bdKlh6fej4ZjlVjl0066iZNHO9SzM+CIOr
rWZZm6H1nUB+cXzm3/newwnDn1syH/yudydbz7afsfjkeV7/9jcvWv4lvhEQ
s01bzM9/9Da0D78zHm7XusTv8/PddU2H8f5CJzPodcjvG9ZuXbdmbJzqJA3y
urWawEd2WF+kSj1XnvfidPEy1+DM5ROleWFkrEd1xPYemjR2V954z+744dHS
wN1V+CT2LvbxofisGV8WwzksK2Pz2DT50YtyrehYDVvDLg0j/INfEd299Ph1
2vFMDP/C0crxp/x8+K9V55LxxBpyPF54/heZj1xczi/zw+fMi+EPr8rtbAsx
jGhgtA0sn8ft6ieoz0E/guXUXwjPk8/9GfYvxZP+WtZ3Fp8v1Mc+qJ26x70o
P1K4zT6equvbfMTnPWhTfhbqpmLbUo0t3E6sKvulvp+O6/0vEo0K3+X/ODtn
Blvzi7YcTXzGSqo7maeTUaxphKfYjrrfvvC1w+p8C+B7KFql5c//0lq4czqz
u/cump+d/2hm4HHuO3Qu8Pvfv/w0vZ8WMoYXs+84lWzbdKpJoH/it1kaetPG
kCd+FN9OHhCrxOFD/N4R43YYnfFwO+NhcGlp8MHzTOZ5ue/AztaBmRkbzy/z
ya8unXzI7Yy35257Xnz3LEe+RHK3wydN51SPmemhB+5vXzDmWQsajXE0rpWy
mkurwcrY1NeD4t2QxDcXtyk/OVzNsocOTpjm3/63+zr6/oN5nRGsrj6C4gR0
/UqjEuptpH//+K9zudwuFtf+ev9kTLPO/OOYI1B9iy/THPpFeVOv3Voq/Nae
cfsI9lPbre8BbMv9mv0kz+28D7y/HF+38oDA0eLsEx8cMXvzd7/KfOricvtm
G7T70YfT2f8ybtd076MPWd3/V39DjM72apvzjtm45KT3eWHi07t9uPQrVFtJ
/sFhcw+/xEaSu/2Vbe/Zf5gdznh770HrO50+eSSrlQqrw9JwLpwOo6OFSfTH
V1uTpy905L2QD7RL/xPJR61+DPGmbEMv353YNraJ7WO7rK9+Z9Z0MeRrx7cO
t+Nz57/F/i8k50A54VmWcehc0KrjhydXjGd02jud5v+B0+VfD/PEr9uDYzA6
LI0vXbpzOBs/O4xODKy078zHvcTvk888Z9PF8+J2WJ370HM7/ne4nRhcND+0
zzTGvbhpk+XyUw73YXD7wTaTaD3JMzA/p2S192D3sjA7GoIq+t91q2cc27Wi
O4rVq9F/ONvnwIHZq/jbZcqxGptGH+DW0ofWvnKVEvMxf+WM5YyPLSNuJR9N
mDeSax0r60upLpj2k/ZCXTvcPg58lHe+LA/OtcWO/kjR/ublxvDHdRT7m7fe
KtsS08mgU2eY76+KE4WnlWMGvvfmuR3fu9qVPh4Ne8jt9C9i3K5YU79dfnnP
7fQHQm6P1WUtO2+jNPpceZoZbXvsXPL+Nu6rWbulX/Pcbt/lv/s9+48G5NW3
/9DxjQaG5psQ2zp347JtL3ysmEFv1na7H2Lxd8dnbTkxumrb+Lw13hhH/7rq
Mbd65G3Gpl+Ozx/e3+by7tG30H+rL5PGnkovQxv412FwfOlJjprgGLlaTSvb
2X0s13n9wTbp2Xmuyl/+rW89ZL/KJc947it4W0zOPPLFP/zDfzNfuud2ftHS
wOz0CWj/2KVF6w/QNuOZPnVkR/aMgR2aroUkW7p+xrjk6NS2Dh/4yvNt0WIL
fG1W2Z1Ap1pFEwFbNlErZ906jW8lpt0oidHs5Rv0uJl0KuKrurnnYXJ/nMry
k4vL8anHNLvK9ai4VnE74/Dv0xegnwC/l52bsno80sn0cw61P4NgL69XKNMu
iN313+veR8mFeeeginYn5PZwHDVxLGd6+xqWdlxcDIPD0T6XtfQpqotprH51
NmsPjXzov/fcTnyplmfd6gvk+dulbVeMKv7+DU//tEsn06+NK/fD/Ph0h5VT
RuuA0z2343vX93e+B8Dq/MIQcPjk9BkbRlfDsrtPXzM2h+OZzjTGbT0wY7oZ
5sHnzjxMJ0+8zxEPZ8PUYV5Wf1xUw10x5mwT7amvALOzXp+HWxoe2sc/jiYG
g9nfn/+9+d21jr9+9p+tj+ZXcgHa94+2ddRvYhw1nJwxb6KL6a7ttG6JSSui
WE3PuRqvaU3kdRmlsQ/EnsLh8DZ8rnwv7CPj4XSuU8WxMh/szTSW5T5jOfoA
5rc/NWfTpGVnXtjer+f48T0duY3g6abzvCS8vsX8sz7+N+89hubMczs8z/50
6hnjvnmW0zsPLXIT+baLbJjxeeNhifaoSk6wtWLi9rq+dplid6XtKPIhSrsO
g6sOkveFK9cMnO71MpqHbVQen7DdKvwdbpd8873GDgwrx0zYvyjb1zLN+zjU
XSqzGLdjaMrFxGFsKL9wsaYvLc5l3I5fx+eRDOtgiqnF9CG34+OPLZ/H7WoX
xuc//Qrz0ac6jaJzF56fXuIDmrjmwnG+tmrs2o+NM/YchiY3XYf3t1N3iWNO
HVPYG60J7AurP/zDRzPdFf9hbxjDYinSODoMfY2PR/71628bZ/DrY46pyYqG
Hh950XGV1h7+Z3s4Pt6nLqaXSXtPPwLtDn50nRs0MzD70Su7jOHheaab1uWD
T6rrXNK4SPnd7Xc9d0zUqI9EbSNqI5ErXbGafHNRTSTqKVEnCa4b9fb2az6v
pfoiYnb84vjIpaPxGpgw/6WvK+vbC+eD6z2zw9Vev9Kv1eH1MptIay+Efvg8
w8eEz7Gp+pZVbTW87/sxnofDyt85TCO3fKJTSa5X8v3zq282cHev+XEOHvid
sTuadZ+zMDZvXv1UTfd1kmgLvhezwy1c8zH9UlEtI9/3pC/AO9D3FZgexqjW
1ZUUxZY2VcsJQzejbxqx+NtRX2dl56OOianhZ/QofjzDjIeF8WfjV4eZxVeM
R6vitegwvngerTx5I5WrUWzOdPzq0tmIy20b2rzNL/Mxv5ZHc8N4fPfZ/7QO
J8PfbfO+2j6w//djkcu9F9N9XTe2Es7n/T9o/22ok+GYf+uhh7JjLz5mOhz/
ne9933zlGP8ZB4/rGsFPP3kwyVMEk+/54Hzrl5smkmup/f/pFzfZMAyu8dLR
4CvHly7fPv5z+Jv7Vvp5459ziY5GGngsliOKeeS7pX2NJx4VZsfnjmbd83/d
POtZ7Gmb1cXv6z73bqPmEVxKLSTVKsVgeU3Dd/wP//jd7BvKqLe5aRO3Y8rF
Lv07PvRoXaYKxncsMfDVKzOtvXs3m7Yd1u73+YWOAv6HH7768pPe2nH1yjDV
hK7zTCTeb5zynawVW4vczrXKtyblcOEa5neFTxdsOv1ArivTkdzv7KflsTjL
cB0a/5fwWpgrJswZybZIEwNje77m//TxPWlseXWuDrcpXG7QPnNpXGI6e789
ml6UY97nCfHsfi/VxfJ+z4tDXY197pgmPBwf6seVM0SW5Ytpc7VyicTa0/gy
C5fPm0/T2J4v7i00Wn/J50MZ9TmqYpnPfZB66dS3zLrE7bC4mBrOhtlha4YZ
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
/7ksFhOi5dkf5mH/0K7A7OjaL1051dq7t5ouBPbGZy5Onzqyw7inbr0mloHf
4fjhnNNl+x6b1I7sZt7Yex1u61X/0WvevNVo8PDw+2HVDSYmXzp8TF/szd+9
ZLzM9xRMmvLQquQY6sfYln71RXk6Gaaxv3n1xXqtPRPySa/XeJX47nAcTH74
wqIxvFh8JT/FdWN3+tyxbxTSL8AGSV9g8H72YWtyvD6db3riXrEzOhfGqYZO
LB41j9u99lxcrphWvyz8HeN2rTucV7588tYwXjV5Qp9/FfPXYtGxL7v2/XSu
sw8XDrWm5iaN4YvWD1vHYjLyrousFtsX3dvtdV/4qFX3V9rwVeFzn1mJS1RO
SHJGqq/Mvvh9H2n+nHUbiA3z+Ye2g9hE4ijwu6OlsdoJd5M8NgyLkzu2s9d8
otLluHG0zfrxIWGqAcs9oP9aD9tD3vrJ4xfiNafS9tEAke+RfVSNpa++/KT1
1sRL1k8pOibwNTpy6o/iX2+q1g68h15nePxe3eiX9JvzetT7MAyjfwMfome9
tfRhq04sxKANNj5k/cMDXdNg9qL+Rixve5PGc+aVV37cVxtcY+SzkN/9htPX
sn9ob1hP1fu17Jr1ea7hZ3G0n0c+8bJ15c3jY37pg3gNe6iHSJ7LiYbA83oe
l9EWzB7Lbdk0Zw+77+5zxeDLzo5hqltHj5LH7djpk0ds/DPP/KyL6WH56eO7
k9zjjsthbqyM2/Gxx7h9aXEui5NlftXK64Xb885hTN+ed+3Flpffnf9F+cK4
rtBnw9l5cR5eIyJmZzl9+/Fxr9pmxuOnfv/SYhbXmccNY2WpnxFW9+PZfu5b
jpW/RyyPjPyTo972dWvEinSeTRtMW9V/jKZmPr1fxdP+ui3kePnN0/EwOe3Q
Jvsb5qRnPP5uz/EYdaZUU1jcHq6Xb09wN+9wvtuxj/jY8Xlv3bmp9Pgqb4ti
Q5s+5vQFDqb+xybrb/abo6/pNteqcV3hd0efzXHDQq32MAwO9yzOdyHYtZe2
uA6VJ2cQ/EW/AA16lXnLrjlxu+ZF5/7nk/usfVnV+6quDlf1j3SMLN411Y1X
bUfrVLysxvvjLn2MH+f5qEzXfO3WUld+KHFUv7knx8Hg3PeP7urQmSgW1Y/L
43b6ZNLQ+FhW1cJguZDbq/rb87hdnE49aKahpemH22Pmz3cs/jn0cYfjQ/Mx
zrH+QN71E3K73xbuF3LGwLSMg9W9hkvflpRHsYshxoDRQottF7Gppm+7luSL
5D/9Eeqyvn7obFavddTbvm7NGDw6rOff0altPS0HV8Pd+L+5v7r2I+TptF+J
b5379k6WAzZPJ50cA6uP2L7ury0vZesSt+87f8uG+cUOXly2+518juRJjMVv
krexI5YzEt/JulkH9Y4Gwe0y9DtobzgHPcWwNnkdRLi9KWZfrWxQx5Q7fFhG
DiB8zLD6oYMTdv4Y/vJe79/r5G8fxPlSzqVY7vaetvV+khvS55nZO32gNXP5
RGv7e5ttXTw7yvToxhft+egLVI3X8zp860Ok/m/PJgxn9SULfO0807RM7LhY
fsegbY3X9ofL+DqsSY7IxVp1MlfL/Uqcp/zXcDpcrHhQtORF3O4ZX9wt3YrX
tTTJ7fo+wLbi70d7Uzf3u7e8OIaycxhqY6quz78PtFyoZ/fzSKel8frPO1t+
OzQx8r+H9wnX7bbwO/9Mfg6XkVmq5w0ZnG/+yvM+eWbBvhXuPD47tn2PdevP
9Cwfhh1tM2O/Pl84l3cLvvj59NtWlz8+3S/86mG+nDCus4gXeR/xrHvllReM
/XlWq24o+RHJTYK2m3Fvb3vTfskjSI0izcez3r6tfp3EBpEHPclZ+DPLMf31
35ezdRjnD/gc8L2DPDRoVfgdRD6hMkMrBfuNs3Z7nI1j1+S3kzzDb8110pnT
ZtliGcijKUvqxpTF8y5ndWvDWGDG5cVHhG1UiRt+7w8ba/nBq5qPVfUMP7l/
u+Uqemv7K4W6evnracePD33doXntief4MNe9/A7mq7jXuTzjpfvV93Tvy/fb
otrn4ToUs+rH+fx8q4XBezFYl3hTOFj5WWBh9OPiZmo0SzMTW57nv/hZ+hqf
3wUu533hffowuN4h0r4w3f+PzQubosvxOeNZN9uI/qbKPnu9OOfWn2s/T1Eu
0NB37uep66spur6khQnH44cXz8Lm6tvG2sp0MoGNVQ68MD4vYuZjnzo/fn2O
dWvMQs3IIO3W0l8Glo9aGherc1yiTRG7lz03YFqee+Q1X6nfs8e+OZLLHG0L
x0+5tsh9LmaHw9HP8KzkG+mt9jNf+cL1/Ibhxe20BcfXzW/ej7EfR9t9Kfyo
5Owb1noTW8j87qvN9zZKw49CXOQw1oVfv5t9ly1ff5j3jpxCqvsYt6SuruXY
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
xNe7bGpd8KO+iaClj/fbQn1753RYHoZGvy4du+d286u3+20sLz28uB3+R9vC
vF98vpAtKy2MrRP9fHs642H3cB2D4HYZ/F5VM8Px5FkAq8P8l2/O2LJeR3Nk
bl/my2cZ1YtSjTSfp6POuR7367oXu5f6be/dvzFWzC4f8rj0lZp4b+fpY/z0
cH+lhSn6xqlpYnwfd9rrt9Ewnw2/8q/HzPcJwhzx5Ikk3zu6cK+TGTetid8e
6fTHbRvXbbA2zGfKwQr1YsZFS6P7tu63h+1vv1DKuvjmB5UPs2mjL3K0ze9V
69yGBovE9hXuPHdtwTQwxucxfwbMHujZ0Mvk1X3E8nzSHTU67i7VzrMxKpOO
iDydnIt9ByayvCll30M8+/lzobqr/PfD8HF5P7KY21keXzv8jDZEvnV08D4u
VRp3/OteJ8P8GMsyDj0abXr/+o3Fy62HHvpWNp9fxyC5XXbj7nljbn7z5uFb
An0umH3qyk771X/87PqvaZxn6spYPHD7/KoWa9V+gjd/zod9jQ9KXyM/+72G
96ff71devzOM4zOo4xvL51im5/Gxqsx/57Or0dyPWJ5WXfOqXlcv+0obLK+6
vXlxtXnHkvV+9MmK1r1D2z6GunYxeqbhWWf2B84G8QzIs6OO/0ahn8QngI+3
Ss565lV+s6rt0+fYvGfKtC95nCsOHva+92PwIboZ9DP1ll2w2LuQPciXN3FC
sUDX87ldFjyXWCZP6x6rqaG6M34cy7Md8HtRfuxxMFhOHKdxt5Y+NObmW4a4
G0OTIX+5953D/gyL9bm+8U/DkBwLjkG1+IFl43v0YnEWTnK9EBeKHxwfOozO
ulgmqeG0bJoxxitfDIYvnX3F5+6Xl5Zd44h54De2jqytlNs7h3s7/l3XU/t6
xn+O5S2j2FPP5zEr0s1zvmB/DQ+/xsLoTQymvDUaj0+VOqCnT+3J/Lbi5zp9
lX7zSmq94/QNoCnz+y9fuoYtr+/fEl5mGuejyM9ddMwVu9pLH5NtlF7d54wv
i1/TNJaxGsS3k30J3z1jx8TKI5/WTB277Vu3odgwnwP4oJS/nfjXWD3TQZly
rYfjipZR/7tqbaoPrlxubTt0wrTr8BNMhfHfGMp0J4d72v7R20K2H/Q90FTA
gEX+QJgxT6+rfI/G61WePZmPIRn2dWWqWF6tGbid7RjXOC/ZK6/82KzX5cP9
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
1lgOHD6cPuMUwuPg9rJ4/9RB2aLvAvdF+VeLcrD2Ox5Nmc/lsFg396XJe6p8
Bhf9f9v/N4YAh4X/sxSjR/8/5YQaY/aKBiaLMPuixu290lZkGDqZYci7NP9t
uN4xfscPvdK7FLWbzcd7h9ufW/5z49ot31O0jK4VnH3s6G5bZj38O7h+43tr
W2dPH7H1hz/5eJ6Xj4zyfvng/l22D9MUt//wrZXbueP9Vi9xOwZHvtt8/a9W
17wH993vN3E49sPvNn4E+6O/oV9Bf4BzhHuuGhevVwYmFnbHmsBbde5J0Xbe
+SJN86D7VFnHR4/SSVxTsHuT8TT8OcCL+3NtMncuuNdz2eDeptoQuL0TfQz8
epH/KX0BztG3LeblI1umY6dMXowUj9eLMHte++mF1cmRNCgb9LucF5+e8ZoN
R4Lx8SHF7CnW1PkVcYNjW2Cx/+7VVCsz6PPphYH5MLBZr3N9Vs67lKWn7lH/
IsXtNevGH9XuYVmfPdkGzm/8nib8N5j63nvvsWe4d2Z7iuHFld999902RetC
WbD9y794zp67yr2y8sV0WXXSJ0ATw/7i2ynHcq9xu8z0iPsvl+phci14b3mX
wdx1/VY5DzC68LrqYkqfYJjiycG394vbroIliB0zqHtR5DvaKQYqwiZ5MSxC
K4vXMe8rcK09f5LTCZ/8dKfhbfpFyr/VSX8DA++G2nrFhaG+rGvmmGU+ptK5
K/4iWHr21snS51WE2amD88LvNq8/EOYjyzLOK6scz4W47sLsRfEIhw1Ld+NH
OkjrJd6nHXnMLmw3aOy1wBJ8vsB/bljHBYbUuIfvHLrSeufA4vXfhXdFvwwu
a1QXnWHf//7zctyeaD/Un/D22msv9+T8/vAvc3btdfstyqNa2jaSd64nepno
fnDuwuQY9+rSxRO2jSmma5SGJhe3//CtTU3DnmyT9mYQuB0DY+OT0xHvjgV5
msDZwu78LzTNOjY8Dfw6+zBPWeYxfwxwfb/uR3FbvtFXvr3K/zbMYVnFqsah
69d1KR6it7zzC3nxonYNRqV8FtbP00SEPn7Hj+42DIsOnntdpu9mX/BqWHeW
T6xiVlI/bYrYMvQJpU05kGxn2WJOTr2RbmOKTwOxf/OeP9dyYfa8+Z1Kw068
mDz/R3TzHIe6u33GXFNeHB/0QvJDLYqX0inerBN7pmlM28TYYJ3+Sqd5ne50
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
vLNsB3NbrN0Is6uds8w3QD4jhuGjbfSxtM3jdrhO6r5x/YLVvSqJ30u/X/vT
15/a9k6K2zknje+BxcDfWpa2R/tQj3A7/QrK85xDnY6ePzx32LcifiR5UcHv
ncYB6qT9NKEfq9P2q15DL3X2deou6ldk+bbyrGkXm7ZusXb1k7vuat0XtfEV
a94123zgdJr7GnzOFH4Brv2FtyaMo4GXv33nqvWtMbC6dDJHLh2K9z9xrbXp
+I35epK4NHD5ll87Wmb9xX+es7gE8Pj2bRzCeCbheMBitSJt1GK1/vxbYltK
uB2Db6mcpyHpK1IevZ7Foi+qP4mXqdgmLOOrC+72uB0+nmXwKOWol/8w5Yhl
r3Jw8uLYlY/W4/aF+z9i/9JB43Zv07smFsRRYX53on+UKY8S3122gbmz8tZ4
A6/v3PHLTO5O+VsH/S73/PsI93Twst07MLbiRirPlOnDovtAvHvGMMhhS1vB
TxEcj4HVfZsnnqfl0DreXY7NKnEVm7a6Olx0NmU+vGA9aaOr1T2vkyHvK9oP
7jl4nPW8t+BwLWtcSrh9vu8d18OyOIA9MzuT84h1NyFuF+6mL8++9yV1C4tT
ZvOWt+0c4A/A7dpGWfh07cMx0dGo30F95oua4HavbxdHLxzvfQOyMOzaX71k
fqmMz61d+7ThePTuvMtZ73MTVpdP7qbdF8X6zDp2Xe1+v/sEefdH+phdZ+cs
1tdDjy9rbT0Wx9KaOvWlYfdnVr5l3PqTL7zSWr/zkGF1cPuqdz+0tke/EL4d
e2X1i63V61a0Tlz9xOphX/bRfFY98Prk6/vZsy/ZMmXX7zs78G9zrg1ZX6In
/6UlGAuyF9+sPBtV3N759cb+fPidVhrDcRqt0nyqLk8sfDvcuWLsgMWFxxk7
pyznwjcL7p1y5ifmcLvp25N6KUPdHrdn7j9kuB3uFr0FWBIcCJ70/3NflvVV
cBQGX/zx9ITx7WE8a5nl1Q5iOS7K72bSPtX3Sb+dGj92Wngfd1J9J63HfB1M
B5E/uAxDNYVFTMP83ZXSY9MfqsfTLtS3w7GLVxd3jq6da5GGpgi365sQx6TJ
59vFnaNf8HWzrClY67vb11K+Xbw6U7QxYCmwPVp2Yj5ifGfA9JS7dPl0IW7X
u5x3f5QbFQO/K0YlunnwO/OD/m7VbUdZbbRJzNx0nJhOtPthH/y2y6cEhy7c
Dl7nX8k6+oBoYsDTTOHk9567buvB4ORuoS19/JtYF8P8T+76SevC7HnD4yzv
OHA4sx7+46w3nVmC5ykPvpdufmyDs6UWU6af35ylhtvRvLS1qyrPJGh70zkx
+L64cty+G/DmxLLHnn3myQX6F/mbKqa9xZxJML/H7ejYhe+lmfG4fcH+iSZ2
mHA7Bq5uOgcndVaJd8L/hX+LxZcP4zRqfgje+a4s8HOy/LWJjhMcrpjzGstQ
3lWm/L8Ny386m2qLuG9g+yYx+/BoWOYNf1X48Obrno8n83rUf8ekTVc8JOlP
0LuLb7+d6GKE239wuB1f7PsTjMJ4nbTvIW73dYO7xZ0Tk5X+Pctgd691F/dO
nXybxNULz4ujl/aduB/d4HbGeja+91J0rgv9J8Dyim/TdJsaRPz2puou8pWu
u7/GjzqJlSOjDfCN0Ng135YFuD3h22XC1btOXLJ2SBuUFgyOnXwDd0WYXVid
8pQ78vnXtj9a96x6wPHyc73n3p+muvmBf5fHtqSsV9+QLPv+958vKdyOvoZ7
XMunOyjHN8nnuTSLcLPinchnVCYOXv/UELejf8eE+b0OHuwun0v2y8Lt7fs/
0ho23I7RxohD3VR9YPY8nr3I0N7w7HwO0kWB3X1MSpf3Aswe/us9xwyXLH6d
f6/GOpiC6+vqY4vKl42jlB2rSXyFn+qhy9ty48x0Z3OG0+HbZSzzfYAnh3vX
OBnr4d8pQ4wYpvDw4tvZzjK4mymYne8B3xKvk4nLbTZ9+3zdzxp3Dk/ONwld
OViJbWBw5oW12U55yjKdmFhp68nRpBx6lIfPZz1lxN2Hy3XGJsK8rvhc9EIn
UyWOTBNtrIwX74e+hX0VA72ba8vyKVHuaL4VyqXEvzSTb4+m8ONgafD1A488
vgC3M3b08+efaP2PZY/Zston+nj2gzuXHiavHuF0juf9XQf+TR7bkrLm/yP5
NmjcDobC97Nfx6sVy91bEEN2QXz3CIfDqWfFfTx2dHfr5V88Z1ibKTmqTN/+
zUXT04DVyfkJ9hanTjnGEFmGg2df9pm9ccG28d+GJ2vf/wMr311MmfZ40p3t
m73/9M53El/I8nySRab86PG/rZvzjf/n6LkXBXb3bTXB7/DtZRjAdPGBTyvY
S1qaOvdTx8rCL1X04UV4qo5muNKzj/ovveLbvYFNFrbT7Djs7eXmt/Gu0yeH
e4eHV6xViwef7Odj8nkDr6NN0TI8PDj9zu1rNq9z8vuA28N1WRaW0TtVp734
ZyoNTfPPpPi4RcZ3mhxW/Tgnf27e19qfb5XzBrOD3YuwehUcL40O50JOJGK1
pLlPk/+h4fYIM3vcThyZiemj1kZfXbfZ1oHFQ9z+TdR/hmeX/8TEltXWlwSj
s446yuoZ4/axDYP1+vvQ/n4PXicT+nt2lae0ghHfsaN8x4l/tDB/G+deNcdp
WCZrW56Vla+Jfxc8hwgXgf/BAmle28oWx8iAD4zjvywsA076+ONNxtlRLjTl
pCk7FvFQiFcIB8l+YJg650ncGXhPdBJYit0Xme6dNi4f4Kx7kccFguOlc2ff
Iv/gTnS3RTHy8jBJk3phf8x+cvzd2VyqjfHxaYgpVWX/je+9bHHTlTdV67O0
5OhXusHO3eYRQOMOfh/0PYdj2LljrfH/+NBeOLevbXsv9OtN8v1ZMdw7be9g
dsuj5L8vSXxFvptFuB0cDeYWFt/2yakUtxP3U7p2i5MazctPmvL4u4b1SPu1
/ciZMW4f29BYP79NYGb8jgb5fURzrniL8H558eyaMPDazoMfdR+jKNof/D/I
+9aszZm/rL6fWblay/YnPwv7xjg6G3+DG96ZeCXV9Phc8PN+fPnHEfbX+dbB
LuwD3mcfMD9aiX2X3jetxOWvZ9O4LHrGsTY8xrAjGQc+0e9zTQt0XYHFOcnj
OPAaC5efcCc8dx7vnmfz5eZzLodtwdeVd06sY1/lMSLWIjaM2rE6xrVfOLff
3h04d3IzKa5Mlf3BneBPsKjH6iFuR1tOOfTnnZ5rt7idc5XfKlb1/9R0v477
MI/Vr9l5oRuyOEQ94N+r9k2Fv335H76/toCj9+Wz5v3zKsqtxDbp2MNvi5bB
zGha4MK9ToZYj+BoxYVhinYdf2l0VcSQ4fuLvp1YMix/8tsLVg6MbjmaonqI
F5NVD/oZygm3++WBf3/HtqSs6e9B8bfiemtmz4a+HrPsfG514S+TZfyrGOsE
Mx47OmV9FXQuPr9a7eeU5GYeRLyN3tic+bWiLZQPrLh7cDiae7AQ2h34V9Yx
jxkuijCScDu4CdyvWNXhcdIYF9vWmb8qeATtu7S/1K38P9QDxtZ5oAU+eGBb
mnOS82KcoMo5UreOjabIsF3Cv+P3N7X7Y/Nf5V9B/HjlbF3z4Uy6ftDfhk7a
qeJhonsJNebcJzj1OAd4Ob73VjYG31mc9rm07/iDw6RV47PTbtgXX1DaiHLC
1B8/qn/NndRRRQvuy7/99pP2vtQ9pvlnn4pz4PItNOz5Vaw3Uxx/TJhdueIG
bcSIrKN3r47dF+Yi5Zq5F3Gs+rcNp4dl1K/BfEycLB/bOu2o6TiUPrYkU+Wh
LdP1+zgzTInB4OOhrwljcyUGv6FY7cq1xP+RZbTwirEuHI5mHY2Mj9mOEf9R
sdqJzb7u8LW0Hu3v69E8x3w34xzGNrZ+WT+/i+DkQetkem3ECGbc1Y+9gk8s
FuShDuIVuW/WYuHcwdqKM6d4deLNhcfhxxW/TuP0+M4yD0b35RQj49lnngr+
pXNtcfDAEuBqsDgGfqbPQFyBOL5lXA9cvOJpKIaO6sGfr8o5ErvD6wzg67lu
1asYIGD0N9+Lx2ofePhxy9nKtnVJfJZBfx86MsePcQ2KHaPtYHY497J2whhF
L+Ow5+F2tZ18fjneFuJ2tFe0aXJxzfdZuvOJ6Lf5+w1eJF9R3f3DcUzWoX3A
v9vj017FTu/EwMJoZkL/yrqaKcYUuC5ha+pTrHimaPz5N2hMQtvK+i74DcC7
S5NfdE7C0R5PC1P34n3ydfPcyW3ktxMPBkxO32066bfDQYGv0bDH/fgAr3ej
IwzGt6n75jcXUuy+58KkTTmuyiylnD1jG33r7z9huPj2pg1cduHsvtztcO+m
d6/zXUq+Y9L29dOvtjc2z0Nzv8DSwvCeR2cZ3hqMzvwPLm8jyyoHnqZOYWfw
sj+W8HZo8rHTuYDhlV9Gyz5vZBZuLztHaYHg8X/4/hvDd9TPPxpdPvMrXn+z
9diTy00rCecOX8R4L/OTx0eQc8dc+w5zYPGvJF/T4NthiNu/sb6cfLB53nG+
z+OGw6UT0bOmLPoRj9tpexh1gWGYpyxGe1rYNxgO81iOtok+jHXKd1u1Hsai
wGY8Y2EzbQO3U6fvB4BXGZfs5rybwqFcN3x7djvJPwZYWmMIXBuYmmU4dM+T
g+fR+jNl2b4BHYwzsO+BkmeSlYOsST/rkCf3uB0sDjb/JulzTycxYOGy+bbl
fTPS8egG/X48Flc/Urid+F55Zcc2tmG3/v4fhhO3NzVuiC6mzM8VXU6bbqbO
84q+aVV4ymE2vuXgVQxsJDzMMvoCr3+J42PMWhl4cWFqMHe7vr2dw/cxMlQ/
U/QxMulWhNu1jH5H8S1/f/uqbXvzjRWZuL3sHMW5m/YmwnW6bsYYMObR2vu+
BXz7s6+8bTz8SPLtSSwk/tHSw4hzz/IlqTqG7zUe3q+0Gx87j9uVh4hxF0zj
JvP+F/NtRfEoKCfcDlbXOArziqGudWlfsQS7d5IrvpOyVTAj+B38CR4/8sVF
y3+bFxMHThVfwg1JjjlySJIb3j8npl7jjn67m7xH1EdccKxbTArG5nzq7ofO
R5x56OMK5551faHPadVnyzPL49r9um7jutQxi710J44DiV6c5w+/zX/KtFEn
Zxfq1Z119B+sYaqbc9j62bXYF/X8jgXnNMbtYxsla/IdLv/OXh+4X2poxyxP
z66Or4f9ZTeuHq+8n+kGNCZY5VklPMRoa9zn0px1WQY+Cv1NwcxgKDCw4tF5
vj2O0z5nU2lWsnA7PGlWPDxhsTguzVxbPinhdnCZ+HyP28vOMcTt4DzlwpFZ
Hqsfvm1Nzhxvvbx6g3Hv7PPE8yvbtCUjY4k+hv82sWKwIt/BKtp0+bEyDePN
dINDhNWxize/mo8zYWM2820DvK3nSl+LefqYPPcsfTvnSL+M/YkhdOrSobRP
kIXbO8GcXHdR7J2695pzCOtDp7xm/S8Mr3vzfgnmF3LjZqp7ID+leFOmF4Px
QWKmKIcZWJd+QTfflG7y+cjgx8HccP91fEDlO6p7VYUL79Y4Zpm+vdtxiKzY
MFqf1X5ufX3Z+HWm4HYMPtvnSgr/Zf3Mb+n/sR+dvtCaPvdJYZmxjW3YrZff
mNCIA8l35wD64uj71q01Uc/q1U/YGICW0afnlQXfS7uOab1fV8d2HjpUPUZk
9K2Dpw/jWI6WzaU8JNzRD0meRnHl8NUhJgbngnfgw6U78Xy7xaC/eDzNF8W8
P55wOzEcwd7ewG1VcDtl0jxXGbg97xzVR+FYlFUdaCbA6/dbPslJO6Z0MhjY
b2RxO5b8A9XHrIohsmJFwtFTl3KrFpWva55vv/7179J5YWv6emo7PjdonF/0
RqrxCnG7Ypyjo+H5/mLF8ynm77fWnX4DOZ+8P2gWfgd/ayyP+d/+8wXD6LT9
j08ft3lND178bcp1SwchbYzXOjAPdvPHkX4E64Zrx+D4sW7bhGlkfvVSW1wZ
aVmK6ub8dQ3cX7jc9ZPPd4Tdq74j0tnkcfZV4uuUlcnaHsZ2V5nvbse6mAuz
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
9mv2XhPvESNGu/6J7Et57Ze1/8iaxqaG5B1r6t8UGnizV3UPi/USt/Nd519z
MMmrZ1xLnf+2z8/rjPfu6Gz+cdFW9hpPExMGjUx/ntGNrjh3Yv8VvcuDfn+X
lLlxZ/6vP3x/rbXv0vvGt4Ph855hiJvrYvK6uXX8MevsF57nAv/TEWtv/P9f
eGui9dd//ddm72w/YP98eDmte+zJZ9v5uEDTURaXJe/eeYPL3jj5kk27aQeU
l/6caVlM+CLtlY3ZJTmY4NXB7mhmLsyeTzl4Yk36vKqMI6QxeIbg+Q7KOsHt
YMoqz5t+VulxutE6Z/mlDsE9HVuJKabMIsftw+qX2pT1CrNfOLuvNTW12v4J
xCP32yaO1Phm5+nrku9EVrxL5Sfh+GdOHWjd+Z+XEy3mlPUfiMlg8dET60Q7
jg8q1s9nxXl/ceVYR/u25Y+PbN3By/PjGeNvbv8tuedgWvAPMdzB7Z3GHcp+
t5uLEdOJocFS7kqzIeJ56pjH7T/+yV02DwcHz6514Pb9F79O+T3zhzt4yebJ
G/f7O3Otf/3+q1Qzznwd+8O/fGnTW19fNv4arMyynnNYt8qH+6s8eD1Lw9Jp
u4h593dapy8fNLzu40PSz4B3999Z49xHKPZLL6wTnQz9nVA/lfXe8wzIOZR+
a5oe18j5H49tyG3IYrj36t8zs4h1Mk36tnoDL8f8erbm277ZncaVFYZP9p/I
iNcAvhWHBFan38BzpC/BP+SLK8ftP8O8xgN8XHXGWKgDXB7nQ1q3gFfvhd68
zMDs5CbsZF/ibqbx2IXVhyjH3ZKz5J+N5lv/WTj3Ir6923dd88SuCdfJpIeo
i9+8zyv+qW143V3vKJrH7eDzhx5fZnicdffdf3/rgUcet/W7Tlxq3XPvT209
+8DHE6OW7TeuX2g99dSylJ9fvvznhsG3bd1sdTC9++67zT78x/cMYxPvZdnP
/qG1ft1q24dyB/fvsnUsU9/t313NrXty0/rWo48+3Fq16lVbf/pUdzq7LPN9
Q7A6MWay2h79A7A7sSc1XmA+qgl2T7XqQ/C8+2V1rteXraKTYZwDrdLksTPZ
etNucXaw/6jF8lmy5vULgz6XQ2Pc3tk3tznMDva9cTXOM1R2z9Cm23Or854X
jOldCnKbrF79hJ1L4Tnn+q7OGXZhDPnSxeM2lUZFXCiYvh8x1bOMfkRejqY8
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
7s3mBwbeX7ki9tdiyv7aZ9nP/qF17MjHpiM13c3B44bPmQePrNq03ebB5qve
/dDmweeUUV+AbcIuzAsX99PAW/QxvHYWe/KFVwxT7zo7Z5wqmIvxAd/W2Ffb
1CfiPjHPeq6XfeDfwevsIw2M5/TVZ+O5UY72q+OqjtrxZcbfh56a9bcPxPFK
wNpoXF54852oT/qQrVu14f1M3H4g6tNNTB+1smBze3d2xf1rOHbqAau/uv4D
m0d3Q9lcvXzDBvZGB5OJvaN1vO8+jkyW9cI/dRgsjs/SHCcH1140ftqEyf80
67zR6IS5WlPuIImbVsc3FVxkcbKE0ce84tiGwYJ4kNdunWjToOflWMrSv3eC
42N8Nta3Z1rCpYPbzZ+v1/cnwEXSU2xwcW/Rt2/du7oNf2PgsnDfMDeA4sco
rszG916y+vJyAUivoXqIZ4JNbIl1MfuPbE81MnM3Lxi29Lid//Fdd/3EsDn6
GJbBocL66GRsnwirs4ze3S+/s/2AfeP5boNLXl23ufWTu+4yrCIMz3qwLuss
lkOEZwz7RjjF4+J+mnA7YwD0KTCwMufHNcyc/yrF5qaFiM6Za2RsgGXKc+3H
btxsw+30g9bvPGTce6gTYlnxZajvyOdfpxok5tkOblfdqoP4kb4OjU+gMdIx
tB7ND/0gX35TnzjbpWBwJ9zXn/7dg9Y2wNgYGN3j9lWbd1q5x59abuW2Hjpp
6+HbeR8Mt+85Fr9DOw6luJ3+7KBwe5YvC3b7d1dTbB7HT9zdZornTt6fpca5
d2JF8QWaPF9wOzqYrO3g9jC+O+Un9A+NsHeVeJBtcdZHjTMIfcWH1Gd8bF08
36hNojHPa79ZOvcijF5HA6+xdDuXMW6fNxenUz6SPf925NQPdlYbAHcTB93j
9ni8ZCFu93k2MfHqwu7Ed0Hjntc24Nu9v6OMOI+GH1a9arhyefS/BR9yjh63
o3kBPzOlDIaeJg+3sw9YU3XAGYJTwcBgDfhz4V3h9k17jhuGgcvmWMKUIZ/d
TxNuh/sEQ4N10ctoDADMLN7bdD0Rvudc0bCArZl/4a0JK+dxO1OtZ1/6ANqf
6wf72/5PP59u437znBizYT9fd1gHy5wD94zzZVl1s8x7ADbkulQenDiIMY3F
amBptCw//slddp+feum11r33/V36PsC9s/6l1e+mbXzL3k9tO1p3tOuebx8G
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
/1gzeQr+b9RnX9Qa8Zc3wxr9vpCk0UnK/ZSm5UEXT96lKLdSk8+JvikoZ26c
4fEnrF61siLmJXp6Yte04nyjNeb+5t2Mz5Pt7T01Fmz44nAYc2fgvOf2DjX8
XOH36XeqxqTCwTAw3Iv/nPeteBzfOMulrQlZ7Yq9G2knq6xWm+zPr7+eMc5G
145e5rsnNyvGp2J/bb67kNn1rYD26Av83PL8XIkMHY3bb4UNuW+9XuZulVZV
eVfhHuVFkr4BXleuJmmf4Dfqwe6wmVuGNhkGq9A7u2PayryEth0tOezuxpRx
rSr3UhP4KkuXC6tr24XiPM4Tr8evXz2xW+Lzis+vbyzKZatrC+Pq3rh6L/w/
0Z+GmWFk7hWmWZ9rTz2xt1tWdLv6BoSPXbnFMOpIF8N9Rw5elrO+mJ7/OvcO
Y1WT7ivzubtx9D23d461KL9BTYv367O+aZXLmslUMDva6DA+4g6bboYfv1EO
bjbLutuKx71spK0iOvt43VC/39zrGTeN/+Xa8ou+/vhAyM7Hjh4IZu9PBMOD
Azb/8UfE+4zHwY7Hw44vT7LKupfuzEbjgcTt+06PBQe/uhls3j9gPnj5WV2f
rGf59hvvQ7gZ37eujWxw4qExMWM7XT0L70Vp1BU7UmX47l1/e7yM+aw2WYd1
aWNgLCxDK0O+VManMq17j3n509XniB8P9x7b23u029g//szxWvfQovGaZf83
/2XlKuUaoG9gXr53WJwy5U6SfgF2I6ao+T3LY1rhLZfbXf8+24MFYfXf/5Dt
s3Lj+lXsd6PHn8DZ7B/cDvPZd5mM9V0NUFvG5xXYXhbbw85cR41DkY+cZfKT
oxGinOsJB/O9Cy079wPXXtPwMvX43kIbtK2y+Nj3PNuVNkf9Qxltos1hXTid
ZUyrr/jltX+1e4f+4OMnN6vuKb6pROdE53ExcXs5JntHxoJxx8DO43/KHbte
0+fuPDtayXkwLXlUW7mNejm3qLl+Z/onim2ZN19UrX3Ly+3S8sfra5ztfJ1P
GH6sdB42bwrj4+zds9PGzsI45JgK40uGrD02ejx4ezmxKl823/ytiVJf7o+P
jflXvPe2/Yb5Yn9u636+dUNUlzbx6bMdlv3kxZeCN5avNEbatLc38rcTr++1
pcsi3cxbH6ypqM873bN7ew0+hmt5P7qGXwzdCu9AuE1jR6mr9yvMTT3KxN7q
j6WVSW+R1iYxYChjGWVo3dGyw9xMX715ye51fPH489lX1tF9xC/3lbQ3tIXv
nXyrNmbc+b/w38TnbnrlxfSuTjC9k8JrcN0Y3fKqXpwbowq7y+8OI7k6YwxW
OnXzoemUufYsYz2m4Snxmrhd70U4DW6Xn/1xrH8l3Qx6jKqYi03Udsf5RXl7
aq7nvuPbcf2adPxJY0MxYkGJn/lv0V9btanLtCos415ASw63c72ZluYF6y2P
aVG9eDzJPNuF27m/NDaabbEPm/f321hY9PXcd7o/aQsfkmJDwu1Y/J3JGAaN
T1104zIdHu5Ubi+yf/hf8CvELS22kGv818N8AdVxLSvui9h67n61ku3wtzO2
sVPYvdFjgdmJcYm/GW5vVn7RmceXTb9eqx7MHs8T0+4cp/DJa//0aqSRgb0P
/vqLSON+9cqQLYfB4fNlb/7S4tngm4f1FRuHuJiKlcPyI+UY9LTV/+VBK4PN
0TKYP3/Lrgpul04G3zt1nlvyvJXLJ4/+Ie578Ta/pvguSaYyva/dMvgY3lWs
R36pI308+hv508XrijGW1aa+y2g9tDO3Zx8F7phS7nH8fFqPdtxj0rbpL7Kd
i1PngzO39pe1bnNtiAf5tXU78d01X1Z+R8qvKc7WmECYKNISS99c1hLLt0pd
WC5exnqsL300PnbFf9R7D187Y1PxcSf5RWXokeP+7yiWZJPOhbtf7vmJ9tm1
Tsj53gRuD+PjT9v/RX0umBu9icZ48j+DsZmmHF+3Yg7hG4eludbwNvcR5Un1
4mNSa22Xe6i7rLNRXCMYnn4kPiS4HYZnnvpsi/04Ojhi9wxxPMXt+s/fm7lo
uiybfjh3X+p+Wgzc7v5n6v3/xP/Hrbi387bNPbfr+FiwrfdssP3ocGR9l2cy
+/fcW/vOjQc7j42EGq54rMvyd8E0f/u2s+OlZ+T9ljIdug3FacT3fqrOMZzN
sEb5lng7tcdn5jsnVexbYvZaGpcwhk57tfzJNmv+cJgc/hZ741/Hr6448d//
bsrqskw8Lm4PtfCzkU9ebc7liH1s/RW06/A3y9EeJ3E70/AXz2bqw/eq77m9
8028XVWmuIFDk4n5jBRXKGnd1DbdMqdNvtd89yT0j1XE88h4pivvEv3YH76/
be9sl9Xd8Y/WZrv5q83Ge4n/IxphMROsJGaHvxRPRDoE+JzllKOP0VhE2sBn
L50y04l+r7J+lfGoxIuBDdPGpcpO30jIT5ozT2huc2JjRu/wTmW5FB7J+laQ
lk8rnvtI/THTtpd+d5fjwkhfzjPd/NxljbmmudZp9YpuV/X1LYjy7X2DFgty
7l38wHzvn37Rb/fSrcmrwfS9cecdf7uiP0jf3eV2/v8L0d/eaL+xUR1KJ52z
w5cfBK/8fGnw4+eWBD958aeRHRiZCLYP3zafOqbnEO8Y7jvWw5dI3d5yvnDu
8+6yrx5jfu9YaGFu3nCa5fQL1nb9el4ZT/mUmsG/9Vi9OhK+GTQrjyj98aQ+
RFq/Qsvx+cVjhbXfQg0MvnFpYuDt91e+G8anv3fT/OvkiKLeiRN7gqHBI5H/
XfHkQ03BrK2Hv17+TnE7OXHoD7zy+tKa3I6/fevBU4n1PbcvYJNfqtWaXuVm
dfwfubZZjm9IvDc3xiB6C/fX/sv3789tq93ntV1Wfvfy7tp6+KxxubQucLhi
t/PesvHEH+wyHydsLl8s/2fi8aFr1phWyhVTJG2bjEu1d2qJ1WhLsfqSzPLe
phxD233f7bpuTWyPawyPRHGDyjltKUNTonGk3eVcSLtjfDPHRcn1Cm23XIZe
S+MNku4JdOpPyvcM945ixuBXx7JYgzajY2ym7mo+rNn91YIm7u+E/524/e0P
19k4ZJ5XR6/NGlczD4Ns2HM0ODh62/zjLGfZlgMngjXb9xm3D1wP639++Eyw
seeY1WUZfvu9g9eCraW+Yf/FW8HOwyesrf1nL9s8251v1pucGDbNSavHUDbT
6GugZUcb073748R9z+vP1//ZbSOPL93NGdU5NmtadOV/ZR6/OqzOMp5p8qkT
H5JyjWM9cmRHVFaL29Gtv/Tq69HYvyxuh/HT6ntuX+DWjjF4ebdJPp+Rqap3
vRg+rpnxcSHntOewlrTtGlfo+knhnLT47IoNIpNeOdH/Wz7fihWjOtIlVz1z
S88v6RqyjmFRXcP5+A+Wr1Ph2PVNMO419bG59mJy/a+5V3S/WOzY6ftR7Bj9
x7O+4VSMm9DzZaHcP52wr+3avjumtrQPPGvgjF8se8eYGu4mVihjbt5atSb4
6c9eDZa+vdL4/MTl28b3z7/wYrDs/U8i3/zgxCObj9dlnmn4nG3w+8t3VxnH
bNy1P1jy/PNt4T104uTlnO/tNsK9cHNX1wdm8Du//5mSkzqvpeW0jhs+n9GZ
xo+hFYZOHW0L9xR+denc5YM3/ftrr0bad37henJP5eV2mJtpxpriQ8eXznSa
v52yeP1lK1abhrntzz5vTbWuMtNJ1949Op2qiWmplfN2u/+NeMwStF68t7m3
0eHY+NYO8B21zRwOmDftdgJ30mcgF3382Qa34fNN9N07tpjyrrt6npaaNL7z
fF651lx7xX6hj8d/lvuAX/UlqJfW36vNIdOV9027WTiPlfYRLu0EX3dTLef9
Fc+VhY8BnobF+cU+3LI7ODo2YewBy/cMXQ9eevW14LPte6Jl+OVXbdhuXI7v
nOXoZlQXLofb4fyRbx9bnT2nrwSb9oVx+vC901doB+uhdWd853xvt1GftesT
F8O3al/lm7s9G+bN+y4lHmz7bdbG6+BH13hSixfjxIDEb4U+hpgw1LF8sWWt
++lTfWX/RpjrBj1NmE9+1srwn6M35t5G80J8bPSGxHwkdt/67t4o/5KmYbik
+vGY4d4WtilWu3Iq8Uts9XhOp3mx8vM/ydeG3h2D1bWMetaPfNbegwXNfR8q
7st8XCe3n7BjJNRfo59xrxvXCDbjHZ2r3UXC7vNi0vyX/t/YfLEtfM6113hk
+35zMdRrSbfj1q9HuyqtzELidvYVLf+zdI9XxHCJjw9Nqa910MngC5dOBv87
v3tPXjC+xn+OLx3f+9buUGOAHoZ6n2zba9x+ePhyRV1s2/4vjds//nyPaWYo
o0+welNX27kdUx6fRv3ucHieWCxxHq5nO+cmjwT/MnU80rjgd2+XVr/zLCnm
+pyN3xCT528TzsG/wZg/5dQJx2jMRPP8dpfHdTCND1OxQuL1fRzIBW48U8v6
c66l4jguXX/IeJ1YjcwTr53rrfV0TyRdf7esIdYvv3/j8Z4w/O5xzTvTpp1+
ht6DdZ+34bvROK5Wa37dOMnuexoeQ+vu5j/SteI65YnR+Mz5Ittkuj48+zn3
jEMwdm/xdrnG+NndOOvu2MKk+vTpst5h3D9wfyVLTM/1URcAt9t/ZuDivPaf
Wm6xuI95x7zq3pS/HW7fX+7jEeuF5ehY4G7GqMLih85eDF586WfB8tVrg/1D
14334fYz1+8l1oXbYfu+0fGI99UfgNth+XayHjHA8b3XGwMdfoalT47vNZ7O
y+/1xGXhPct2sDMTB4Kp78aCgeEuY/d6tfqsV2uf5Wd3+xvsf2fGlkm2a1dO
1HWNfdwNbxXm8ByMBacTl11xHemnsQy/u3zu/NLv+3DPGXvv9JXH8FO/z3KU
X7F4EnC/2qlr38qxSpL8b4ovE/2nn4Tvbs/tofEuhI14tsJJ88m/kT6dGGvn
qnPTY7A83zxztdUB53NBW+y7hcYPz4eOCn86cV/QTOWpz/sJbXvSNzZiyug/
TnvucyHKmbpAvtE0O/Zpx5j06roOece8lvXtaM7RvDDuVNeRacafwt7EoobF
T16fsbGmLIPfV67dauyOvj1eF5bHn45eAH87rE8ZrM7yTd0HTUvTbqbDGKta
NO8oMc/hZ7E0BsPnWVc5ior43qmrPoJrW3d8FI1ZLXrccHst5k/j807TuadZ
vcxuz7YF4IvwNo/mPFPN3z5w3uL+wepufty+cgxmfsmDRKxm8pqSGwnfvGLF
axm/ystUt5aq/B4mVozuYXjdYsA9vlL1LOHXWHABvLdbbXpXnr81bP2x+eZf
l0tgxPuPxxOfSVwvxTSE2eI+eM/tzbkWnFdpUuBd08pI0+DwY1p8yXqNPgLX
uNZ4BpnL4jD6Eycu0fBkr+muqMe9gtEf1HF1UkzDWtfD/OzPwHOqmeMliMuo
nBHdTo4AfEKwu+LLoKfhfnKXKe4MsWzjdekPqF22wTKtwzLWO3alsXGVzTTY
/dTJXbl0M/i64/wsn3vR7RbhXzQxSdudmB02bm9G7tS8Y1UXgpFzqZ5zwrdF
nw/eW5VVaKHD8YT4yeFy5SrlO6V0L5SxnGXKmcS84vs//+62qIzcS5Q1NAai
tH/Hr809T8i7CrPfvD+c6CPw+vY5Uy5TTc/3trVN4rpj+Nh53vce2Zz6nILT
XG703N6gOfF+4Gf+m+G7YCrUaejbSIsYUv2xvPWTxqXK946/neeTW9/NB7FQ
uN2s0/cvh3Xa+a7Kj1rwerSb7VxTfPesOtKZJ/EzlqU7SXp3FvG5j88Mpm6X
PgPxLRmr2mh+WMaidu441Jzn6sbZumPeR772Dvi/e+sQU1z14dDXzjsd7pWf
HUbHdy7dDD51uPz/+r9/bn50Gf55uJ31pKlhTCvrYo1yO/sWv5+nvrtoDM87
XTFmfN80Zk7uoXndblkjI17fOzRmPndy7pw93xds2bLcDH9SfCwT7w5XP+O5
vcHrULoHYGe0J7wDxMDwrsXELueNbUUMeYy+GrydVyeTpFt/7Ly39X1G9aNx
Eu7+dwhHPutWoYfpgPPdELcP362Lq1plcN703bHMOuhK0tgZuzZTLE4N/YC8
Pnf6BFnb5rnOeFtyq9Z7DtDF9IzdCx4+Xhg6GPeZpenJ8SHLsVRvW4s+Pp63
anPedYw5RZOOviWM1R0uw2cOl+NXh8vhcXzwjF/F+N6Lnn1w4qEx/d9bDs4r
YV6fUlssayjGf3kfHz4OYziL1+VzJ94p80xbvIrFFvu7Q03aDOllYHe4feex
YeN1nucnBnYGBw+sT3xeoX3IzE/uLfc1yIrPAgdzjulXYUW3UUtXgy+c/kFe
7Q31k/ZTuZcw80GV6ysuUTymoH8GzJN12rluoP/Zbt5zjWckPms00Wl14PIs
ds6rcXetiM89afv42sX+7H9Rrb5rcLtitS9EM2Yv9V3qXT8ca3/Xc7u3SnPG
D9KvI2YMuhZ4XJp2xZORvx0Wx5/OPO9M/OnUOXXzkU3ThquRoS/gxqGpy0rP
YvkKvyvnOlcuFo1T6xq53fq8r8+YuXFgmt5+ObaM2qdP5fpg9Ww6eWKPsftg
wjdh4tvSX9S+dhQfdLjlYXb+O+ZzL/et4Ha+jxThd3RYeeMCRfdDDdZztTLi
CDdvg3Q+7r3m/e3PnsEsu8tx7XbHcojUilNWTxyzdnNe3C5f6rdnYxq7w8hZ
3I4VHbNZNDZknN1dXT0696JjVOfyKIa52OqNVdluu3P7QnDqxK6G2ojG6vln
mTfXuB/KPMRzTuNK4W3p22FxfOqK+QlHSf9COfXF9DA6yzQelTosc8cY1WXl
/Esug0w+mrF+gz2fFcvS39+5rco/2eI4ke61kRZC/S5ioOF7f+qMQeRdhZaG
cvO9l/dzMeVjavScD1yr/c5WTHW+hdhY1TK/5z3H4meNe1Vcdi2zeI9xri7P
J+WGUj3Fq9S7nHEP7vFkjoHw77oFb9w3jBndfeKi5VYibiPPe8aVMu6UsaRM
V9+PdzPLs6zdrJdk6E3gd/zWcU1hLX97PWNT+a+hvyFGTdyS4r3A127/wd3m
iYEddcWWEbMupPiOrt27M2bH3kgb3tfuLdNi8WSkb8fnztj8PhuDP+cvV0wZ
/OnSw3N/KT4ky2B7Nw5NU2L8O/2LqD3p8/07urCJdeAfxXhvqR7F4TS2ybMJ
3TMxA2D28RtnzOfONAaz80u9ijz2WKv3dSGbzg15Dx7Wfu/BxtTjV/FCpU1K
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
jtIWPM5yxZRxdezUZRvSu7OMfoOPKdPZVoRr8vjdXUP3Lv+na8qTZPPleIt5
+gXo3mF2+fVZx91/3tFZ39GVo0nPzKL5Ous9bzVN40+dcajKTVX03bBt27s1
35vid84fzKJzBgPT9/nl+oPGzvA08/JpqxxGpxyWhrdhdXzlxKikTlo9i01b
mmYsAloayjQeleNNW0+6ddpnOeXuermulX9Pdqy53I6WbVvvWXvnaH7Vhu3m
bye/En18fPMbe47Zu6r/ykxw+PyE+eKJ9866xGinvU37Bqwd7iHyLlHGLzmc
qCu//r5z47Ys/j9pR66f+Ta43fV7N3rM5HOtpZ3Hvw0/zHe8dni/FeNy85rF
aPf5UL05Bh/HrXt0OpqO52ESe/OelG+isjyMIaF2FAMSk/7QXadrJNTDUJ6V
68lbZ1kR/oTv6mFJ5eyp2m6ZpbQPWf0CuB1Wh92/vhTGnKHd3PufkGcTFqyX
3RWH3OVenSOWKa9o4vql43bzvCbVUeyYIqa4kLXqwe2ca/pU8e2z/2J1ODre
D+K4NJ5UPkvqiNfVXlI9sbmMstBnOpXZvq7fbud5s3s0O3Z70vX3vvfONJfb
yY2Efx0mh9nJl7pq/edz/vaR67YcX/xLr75mv9v2f2nfiMmv9PYHH9ty6eBs
TEuJ62kPnRztaez6/rOXTYvDuuRfahfPtcvwWW/71adNbZNxpHnYmOdb1/n8
WplGDWZnvH49OWqbYfhGfR56b02ztPvI9wsXhRVlGfxX9Ty3bj9I4KwyS2GK
2SLddZLfR1oZzbvcHuXJTLlnVW/HyFQFW9Ziv6Ry2kBrgxYXQ5sNe8hfjLYe
U/4h93jVJmXUYd3uMp+yP2hXin7XwIYGD5sRIxN9UZ51FCOn0Xui5dbEZ1HW
PZLL4v0//827YXO5nW+68PbKtVuD5avXVnE7OVDhc3Im4TvfefiEcbsx/eh4
8Nn2MBcqvnQ0NTA861PPxn+dG7flFh+2tGzFmk22vZ6h623huXYbGndNN+v7
ApqVWuwOr5O/Y3787lPG7HnjVDbbIj97pz1XvS1cS7uXPLMvCnMZzY2jl2Ww
OxqY+POJZUnLZfBoVXvEcjl9w7bNc7zI89DiuzixG803nHDfuseosaV5fbVJ
9eAMxsRKj0tsS+UWJUaNlsPw0foO27GfWp/YO9/OzhbWsbtGLHv87MTNVHx7
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
W337Zvnb5lxjbYdnVhTf0euKvbXD3PvP34fesILsLo15vewO1/J+OH3jXpVv
n1iR2pfDX09Z3X//w1Tp+Xnb1kUzz7Jov7VeC7jM5fbtB/qMjcXtMKKY+dw3
46aN0VhV3lPmey+Zy+3iftiaOow1pY60LsoRK/0L7ypj+X96xfzx6Gf4dXUy
anPFe2+babtp+nbFlcm6F9xzqfxI8Pfe4QnzlYvf4XDK6avIHw/TY+jgYX30
Q/jWYXiWo4lHX8P4VuP2sq/d/OOXsr8JZBnxhjg+uCdJG++53ZusWUwHw9Zi
d9e/nsc3DnPCnrAojPr51g32/0b7HWd2NC61YrDQV99y5GSwa2Ak9RuB9DYc
D/8/4qP0jIV94FrHR7+hKoZ7mdvRxMjX0P3Ftoi5//j7WSvjeaZyjpnl8l3w
fJSPHr6H0Zm+fvW8tYNfXfPUf/nll4KPP3o/WLLkx8GyZUubosOhz0LOKD/u
1FvHmOd1b64VfDbBWY3EInc5UnFtMNp2fe9shzrEPySWChpu/DGwmfQ1rWIy
uB1fC+NMFXOR7Xd1rSkx9YD5veFm+hLEbSQODGNW8ZMzXpQyWJ9f6jK+tPuL
zcbeB3/9RdCzL5yG7aWVCd9T++xY8bPzyzsNRmd9+P77J1NRm/LLU845Yj8p
Q0+UygalMvpEWceueJ0cP5oXY+/SPNoT+B32Zjnl0rrjU3cNPTzr/eWP37Wx
rDA/WhoYH598PL4i/bHf/3DXdEdFr5Wrr5I+BgbRWGb/3vUmE1tWjZOML0sy
h00xY+HSr2n4/q2sfXfqw6K52i0bPmP7flbmdrgUbr398HzE6uhj8sSAoQ38
7HA7DJrneSyfOmb+95nw2wLzSfV7ej5N5XYZfA5XWx/gj3PfFuV/7z281+b5
rsAvzG7n9uHk3LgfZwwQZTA6vE6b+OTRzDNNf4B6jXK7vk2mfYP05s2bt46w
gnlveLY1g91pA8bCh+1qnsXvO89cN3bGr40+Zevhs+aXj3TxLXyu4hOemKk8
TsY/8b6Ck+PHAkfDxU/KevwoJvvMFcuZpDryVdEHgc83bPww8sXD+srTzXeG
tJjs8e0WPee8lzN976XzCkPD2VwD/O7wMbHpYXFp2Ncd/MrmLXZ9yaiLNoa6
1MH3rjJ88Ohk4H0xO30I9ic1P1QO07cfjX12vwVpLG7R/l3DOVe9daTBd/Af
/twV7y03jpx+dCvYuuOjYN3Wj4KdPZus7NM1qy2G4qZSf5r5yGdcMliadVmO
T5z1Q7/6rHEoPl8MDn9a6tPTT6ce22U5saM2rF9j62PUQ/MBi8pXDYvSlvQm
+NzZR+ponTR/OGNFic+In7ponrvwfzSnv0/SBE1ODAefffaGxafhGZbG7Wyf
c2Wx9kvH73K6jl3HrO+Lqqd2OP9Mc77gf/E8xy9tjfz3GGXWX6rzfcT5qud5
4c1bS82PrfCWYkWeVYq11wxzfaP43xVfUD4P4/SBi8HeC9eMw6hfS6/dDGN/
4Mn4/sLTcPigE7/A4tbPXCxxwBHzhcP34nU4Hx99Em/jd3LjRjbrnOYxfeNI
M7gc3zl6dXzlm/f3B6+8u944ne8gxAmFx/G340+Hy6lrY1avPDCmpwyfPAxP
GRxPu7TPtdZYBs5zPfEf+S6i9e17wFjl+Ahp5ovc21HdBvuFPs9qB1qJC+E7
NNHSoRwb+tJ4mumPPlsZ+b0xOHPduo8jtpRmg2XwuOVWKK0Ln2u93bu2RdP8
an3+43CoGBSm1T7QrrTg8D3+Z5XBoWqPMrftuG/58qV+Y/bx62fmvgE0+bmB
nh1/Q2K5o5MRf+u4+H6g88dzj74J3E//iH3N4nb56TeVv0vOTI9Hy7hG+OTp
axXxt7vxLjlP5jdoJM+yN2+tMPd+9Pemt5gVeV41SyuD4dOGIfmVDVwLuRwO
Y3uKWwKbwYvUceMa1mO1uJ/yrP3esmW5cTnWtfMD43jeafwyrzLqpo0HyMpz
2mzjnBVhd5j37MQj4264nbG4aIXcvgz7jdYHjRDl6IVYh3OHvp11xfRobcT0
XF+1g0aGa1rvdcRHphiQ4Tt42o4r3g/I842mKTkBYu9+zwGdY2FcpveNGeFF
sfC7K982fTTxxOMxUeBNsab8xGJL+D+MlXI20mbD8FoP/7C4XfoX6UDwu+PH
l447rpNxuZ228fFrfbXtMio+efzgvb07WvYMQZeCnx2fexa369yxjOOUjx3e
Vo442uKXPoy0MGnczjmgnqul0fgejWFVedExw9RH0++Z3VvHmcaiar7FGgNv
C9OUFz5P3Xq+waYZsSJhLdrkVxps+dWlW+YXnoTz0G606jywrTzHJ07Piu0A
lzarj1OPSdPOOVNfCKvFyvJdh4w9m9q3uDQ1YMfnlo/P3Iy4XP0S5rnOLvdX
xfUvaLof1PejTb7HpN7DivPvaLFcS1yniF4mZcyF54HOMLgOvpOWBYOd4UyW
JzEjPmFxO8yJX1dM6uq13TLYHfv//vAo4naX9cWum6JxLdncXrHdmOYenzGa
d/Ton21YFlyZvW9t1Bq3msWxSXFn0NRLH5O6vhO//d53s9Eyjo3j5Tjpc1CH
801/Cd0+x0g5vnPXT+/O6/wotgz7yfmjHdpjmnUsRnyNY9TxRczux59660RL
y5na7v3y1llWoD8HM7WCM2FF6WGiHKnlbWbFl2+2ter45tvq0Y3X+tag/gC/
5LaN90uIA5SkMWrGvrnm5lly+wLcO+qnNHof5GburHe/95N0hKFrkS9Y8QTx
Aefldtc/TBl8ajkXbl2xPoDGYCpuCpoZuB3uDv3G96w+WhnXl1+L29Pa1nGQ
l2ng2ojp8+H3m/dvWn6lrP9eWowZ1qMvQBx3Nw4OvB4fh1oVJ6diXO69xOW5
xv/GltGW4s9UxHp0ytH1V40hrsHuntm9dbQl3Zee270lWF5OycN2sFvRnNz4
p5VDFT9qPK73fLH7s8DtnMt6zpXru4aNuQZcE75BuL57flnOr/pY/Go+KZcW
miHalxaqkWuk7Ukb445/YFvNuk9q/SfyxJ7wPvc2WOyaaFwkDAiDw9Mwdx5u
l69YMVKk25a2A62GYhkqjiGs73I7Rhn9B42PlUZb2m8YnW263J7WNu3xrQ9/
+/auT4NzEzeN2xkrm/VcgPUVZ0bPZ8VnZ17x3GF3xXVP4vZa28hbl28D9BeS
9Pj6ppGm6Q+3NZkrX6r7LrLY7J7ZvXWyeX+7t7wmLUGOuvZMz4jlDk89zplf
kHpidXc5fl2X3eeL2xVPsB5eLtpXaZXVExNd43FrjVst0p5Yvt7cSllt84vP
PX6s2m7SvVL4/sn4T9Q15tVb64xr5fK6Mw3zMb4UbQwMiMadZSPnTszl9ilr
WeBFadHhatVVrBf83coNpBiQaLlpF5P/l3bcthlzqjq0RRl14FzaZTl12E/m
iQOJDY0eicalRr7lMrPC1GhY0MjA40WYmbrkWSJ2O8YzndjlcK2etd29R238
bpFxrml1WQ6nu7Es+V6AXgaLx7gM4z2eDWPXpPjSWef0qS8yj/G73809lzlO
z+zeOt7iOZf8+8NbhqXxhXyoce1KmIsv+11Ri2Wz1ndjjkvn3oguOq+xrScZ
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
X+tqPc5/kXEG8xGbiH4ObBmPM4KePc7op2/tN//xo99dN+07+plGuR1te9fO
zcbcYvH/KHMoy2FN3asutz95EmpPbt/6urrst3eMJVx/e8/weOk+32S+drVH
eRFur+d7e9bYd845MWHYF8WFgbfRtIjVU7m9xrhUl9vRxszFownj0KAHYTrM
j1zsGReOSw25vVm5AIrsQ9H9zcvq7rzFfcTfE7cW/x873fi/8I5DnwJnc1/x
njh09qJNbz5w3P57MPSmXfuDn//i51YXbrb78zcX7P/36Y799jxc390bcftb
739i635Y4nDahr+T2nS5/cP1WxPrsAz231G6R/HDm//dc7s3bwvLcsaHxDS2
L3yeTyfmuUmzZuf/iXO79CYwMc88NOPM80vcEzH18tVrTdsrPoanKRfHs5xn
p9qD3Smv1b7KaYf1eQZTl5yvapdYiGybMubd9cg9Sv3nljxv66/ddSjiKDd2
Ydq4VF0fdDXkNlKuWOVx4p2CP7AZ41IXhZX/F/Qx8Et/W7rX03ztRXUxebjd
1berHtNoX2B2uBwte5zNp6euW70rXw+Xddx9Udl3NqZ61jhd/vZXXl9qzL73
5KgxfFFuL8Lsrq6d85rFn8RdR3duep+3lxmnv/jiC+YLz+J25uF7ytGyZ3E7
Y1CloWfMqtsvyMPBxFkR1xJfhv8XzA67c5xZOQEYS1o0ZnwnmBsrS3HibX4R
+9y5l3m+4i9H5wJ3o0+B21d+vC7yocvXzfMdhobB1+0+FPnCqff54dPmz6AN
fPXSvMDXrPfiSz8Ljgxfrmozzu0ry//xeJ0dBwdsmfoV+PxbqYlbkBbFzs8X
f8+bt3ZYXr2MjOeUxkl2GrfvODpovlzGOoqXxc48p/rKY/Pwk4vbeRfBy+b3
vhT6gvH/ykd+4spkZvtHz9+IfOzS0qgfQOxybZtl+NnxrVMnzu34xfHR89xm
/9S3+O7RnE61Vs5ZzPVHwxL44fmO2qz4lM+0lfML23SJ3W26/E2q6/xkcODr
88HAN0cruB0/e6PcrngyLrfH61GOfgZuv3njgvndpaERm694b7npaOB77me4
VZp46lDGdxxxO+3B7WhkxPNwe1p8ozwWjg1Oui9DfQy6duJWZnF76O+eNX37
7t3bzO8e6s7DeI34yuUbj3P7tSuD5m9n7CkxHlmX82VxIr+frpinTebZBvVd
Vs/ido1RdbUyjx6H/68Nu3fYb5YWSLmzWuEjb6VFuVHL1/NChh9hsRjnAa7m
Gb/0nfeN3fFl8/9bs2WH/afgc+qgf8ePfvxq2H+Ewz/cstsY3Ti/9B/kHUQ7
6371RcTtvC/E7aevTVW0+cGG7cbyLrd/svFXFXVoY9/xYfPD06fAz8/2Pvq8
23Tv7T6HHWWuBkF5rzy/e+tAK8ruWJF4M83286Zxu2LLwMZxrqaO9Neuvt0t
p13ap94/l33qPGez2t87MFShbcHoBzCPf/3j0nNZ5dLgwPAut9MeTC/djOrV
w+3kM2UfFV8GHzwMwfVqdv/pmTJxeny5WL5UvmPolvH7/uELxu/xGN71crv8
7TA28WPwmydx++jISfMRw9twOPHdpaeR711sL30N2hniSP70xRes/sZd+83P
bnH8Dp60+hi8zvhU+L2vgTHCaZq4omPc52KzJ8VWrxVvPR73fTZj3eRtZOVi
Ii5LUlyZMJ7MPvO713o+0jfJm++pnRbu57e2r25/7MhltCF3PdMMh/FkGOsp
DSWGhhw/On54tOk8z2FqYjTio0H/Qj04H308vnY98/HBH784kcjtMD7ffN02
pV139e3x7cL79AtYxn7id99bzm3d7vPXMca9nHQ/p8Tf9Oat3QabKN9NHs7G
754352Sz97UIt+Mv17PQYuqWytG7i9tPXb5TUc5x8Zu3fY0zog7s7RptM64f
/zzPWnQ6eja7/YHDZy+Y7p79wadPv4IY3nFuh8lr6bv5FoI+G0bHz658RKwr
n7u4vt33XL2WdQ5q5QpIOu5cOcnE76Vf2L3n4rVIx4y+vV7dg/ztYvOsHKlp
+VRdDXtSG+4yxlX0lccW4FdnWjZy+6GVu+MR9F/Pd13uRlquuM89KX5MUjzF
TrEsXzgcC7czPtVdjh99+/Dt4LPdO5sWi6tTLO5bj66v5/by+PZwLM++kW/n
YhNcCOMV4PMWr9v/73LoU4fte8txVxXvhXpuHASMMk1b/IOv5+qyvqut4X2j
OA1uHdpw90XxbNp97jrOzs59b2V66+kb7d8nb97SrMwlVbGyy8vjxn0NA6Fz
hwl5Fv3+aTgujne3m7+y2fuayu1l/wHPTXE1fm1pTmBnmBvduqtvV1v4wWlj
bTk+XlyHntQ+OhxYHEPfAnNTnza7j56xbeBH1xjXJD8+rC6tDXXoH7j+ds4l
PI7vPA9vi2vVD3vyfTXvNysPUzvNjZ2pvkjaNwnVqdD5u7qYgv8TzV+Yud9Q
/lT52+tdP87tteqjz6C/ofHKWcfKfQ5/KrY0+hb9t2nHYtRcDMcAsIx28cvS
NuUTM+EyVxfDMurTLnqTVvJ1K9sdKsfvd/OJsg7j/OB2zl+enEihJX0fqJ3D
dX5s1q6TNDIRr3v9QMpzprrPqmXkP9W7g+c7PnqXnaN6OcaN5KmXtS/tPk8d
a9K3K26H97V763SLMXrms7lcxrsfDTX+XaZ5fyveIO9mypq9n0X87fge8H1L
uyI+5lshTE056+Fvd/UslCkmTFb7+DeIGeOu645pxcfOPP50sfg/x8azotVR
34L9oq7m4Xv3W2aReCouz6aVz0d8llYb9x78mMWh1FFfkr4Wy+rRh8m0Lu/h
RrioGdzOmFPGqqIJL7o+HJ3mT+f9Tnk4zvlupi49r7l5NhnPWZSla33XaNZ4
z1rtEAudeO4ut/O8c8emkn+p1na+/92UaeyTjNjyRdnd1d403qcJxwsQkx5d
DMcU5X7zzF7cSgzI8wJ/N78HLiaPBfHWBhOn+/va2zNuYhd4CU2G6+fVcuWw
1K+7fs08RynGN35YnBgtJ69PR9P4tGEQfplnOYyvsaT40WFsq3d00Exx2LUO
OkLqhHkpZiq2ldY+daSFYX2WK4Y7v8yzHCMGl3zvapc8omyP9dlH+ge0RxnT
boxE23YTr+FC97nrGGr5j5UDmH4k3y3c+7eRex+DRetlo0a5vRnG9wLp48IY
ovFzV3mu3W9pRXjSZXasvn3NZu1mcXs9zAvbom/feupq0H/jqPnka61DjJx4
n19GnJui3M45xppzHmaN2dmX3rFbdh9wHfG9e79tAYtilIT+W3/uOsw0/tSm
fRwZb8++pbGPy+LkACImIXZjetpiwcPx/dfCuDTo5Ivk8jQ/comJzc5XTlOu
fNG7Rqcr+hDwL+au42ot4GzKu5314tvK1X7C+vGyeLthfqTq/XPbwpodF+ZZ
8LfnMfqV6LngEfp6Wfdu0Xufd3A9uVexTuD2NP7LOnZ88NK8pPnh3f5AEqek
sSLfDSYnr1jepR8s51s+dq0n7nqa1dMOuhj87ZsP9hu3o6P59z/U+h4zp4lR
LijiALnLOQecjzvfXo3G67LsyeNbNg37K0YmMXSoS6wc1/K0xXgDzrnaUsyd
0esngr6rD2wcKron8kqRf4l5N8aMtxRztRZed9F5VnF9JoO8eW28eVvIVot/
FEfctSePJ2PvvPA7s97zjK18FnzBzTQY+8saPLWoLcNP4t6DoWZ7qmFud7Xu
8kHXGhca/x/c/T9fB4Nn99fNl0njVIuul1aH/2Ce88D/FJ7DOA+cX+nis9ZL
YljiOxJTPYrR9PzzFvexFrvLv5zXz1yrXr38j88dH/W+0VvG7uPTecfexrk9
XEZeKM6BzgfnhnJiV7L8s3UfR2XErGedJN/9zL3xmm2tWruiqi1i3TMPq+88
Plq1/t6zV3zunjzPJcUEb/e+eKs219fumd3bYrGM8X3wUZFY7xVMM1s7fkrS
9vDvNztHa6eY78skm8ZjpN2H6GMYn8v3HmnhG+Z2zBnngc+dGOnvr3wnisPI
fUw8dpaFccMr73HiOCqeTBFjW2gWiP1IvHbiQ/LLfC2dO/tFTib2CW18OrvW
Zu9GLL49fL3wILmW0HZjxLQMY9orB22t+I71lFcvqzdGI+NxpXHnGGFa5WBC
z//o0bWUODrJ3E6fBb0MOni05hZ7v7QM1jb9ypGe4OmTqeD998OxMvjb4XNM
zE0OK+6JetpSG8Sn/+LolzZeBz/79r5wfY7T+9y9LWiriCHjud3bIjLnnifO
osZEPvm+NrPDVGll6BuK7Afa5fC9O6eB8az7bFucv+NxHbkXuR/oP4Za+JnE
9RrdNuMc4OZwXPPPgqelex9G/vpSyDgXbJzhHDuL29Pi0WT5hOEwuDvkshXW
jhiX6Sw/ehK3a1txHzzcvtt0XqHN6cruWpw7Ld89Ol2Y8ePcClPKN6xl6Dng
SWk3yI+04r237Vi3/erTSANCHdYnVxPcj319acjKYHCYmHU2rP/EWBWWlQYn
qU3WqUcjjp8enztaGeLKbD193did5YxlRTsjDQ1x4OcYPpnbw28QZ4PuL7bZ
MYmvxdo6fvG1tDP0c/CNL3trqXF63rZ+/8OdaD/IKetyO+vv+fJ0sHrTzmjc
/Jod+z23Z5lnwc43ado1NrXd++PN23xa2fe4c2QiOHLlSnBjOtQn4DeP8zsM
dfdR6ENL0tHIph+G/lFXN5M2lpVlbltsQ/N8t8cH3yw9d63xtK2O1fIs6NKL
HkNi/yvlWevmOmUsBfeCxk5bO016RqdxO0Z8xji3M482hnrkWRoY2GPsjJ9+
Yvq2leOfZx6fOvNXvh62nEviaXG3u43/MF34PWN48iy57bC8cn7W4s8wTd9C
yy1v0BeHgk+37wsOXbhtPG5jrs9eDT7Z+kWwbtch65Mr7vuOvkFbjpFzta8c
izrvuRs6uy/YsmV5cPLEjuDEib3GzWgv0vzk8DbHjDaE3LIvvviCcSnHI+b/
tHTscDjtqC1xKAwKp0rrAZdmtSkOLzreletm2pHS/YVmBnbX2GXY/cytAxG7
M3b1j7+fSuV29ot9Yr9Hzp2oYm2OweV2+Jr1dfz0ge49ms3VFtw+8/hysHbz
6qgtt12tv2Nfj/nZPbfXMMUnaSYPSm/j+bL518qfU2+L1Fxfp8tl+OmIv4f+
NZ6vCabK45e3d+L305Huhv4A7SmnEDHK0tctj7Mqj4+Vnl4xvV379kEYd+Ty
nZDz4BTLY3HlQTRN/Ef8tm4OUuoyrtRisA9PGOMoXk27r0snWb19jqT1Mn3m
jn7L7fPVXC+vxZ7z3E/idjQr/MLHLrdjTMOoyn0KM4vBp797GOXcEudTZ+OG
tRXcDpu7Mdvz5GPSPONINQ3jaZo8quRMtTxkr7xm9zgxjVTGfhCnFKYnF7Ad
R6k+dS0PQYnj8cHnPX/4hrHTp76IdO2ckzRu55xhmj929IBtFx8yemzX/yyO
Z5p28S9rPdWFr7PajPvRi/jdaZtcReRh2rB7h/ng43XwtcPtYRz7ZG6nj8G3
AaaHyvdJFrezrr67HDjQHRw5NWzHAncntcV6rn+d41QMmTi3a336AZ7bCz4f
msGEbj5Pr5Wfn+vnWrv3x5u3VlqGznjX+fr17vXbbPC/X/sg+JO/eCGyv12y
PDg1ctFi28R1OvAXehv5zIm1/l/+x8vG4sRz/9O/fd1yLNEXUZ4q8f1nh0aC
//Z3S82o99//15vBpr4xK2vW+U3LLdTJRpzGRr4R2Pm9OBXFamdZXvZ2fe9m
LfC123W5NBNxO1p24vWveG95xOr8wvNwFRyNr/unL75gTA6rU/ZtqS+qOP/w
NO0kaWzULxCjS/cim54aL8ztfb85az7z99ZsCrXP1+4Zr8PlLOd7FftG+f7h
C8Gm/QO2HF879fG7F8nBqOMZG+0137t4E18w/nd4nl+4kv2EG/Gni+vHyucV
BhWLx2Oz4DevXG/WdCLi9qw2kzQwRbUzsDuxIYm/ksT+6N2JA0+7SdyuZep7
sL8sS+N2dO1J41I5rqS28K273M52NU8fyOV2LX/+hReD15a+Zeuv+HST9Una
/XzpWJN/vFmxBZvdnrfsc5007c3bM2xR/ibnGUPez1rvuiyuz1NW7bufDf7r
X78ajN+ai2/2xeF+Y/fpR7O2X+JudAEYPnIxOYwOgyuf9Nb+S/YbP16WsZ3V
3aej/NPvdx2P1lU/QHHh3e1oH9LK4maxKM9PVX3TaPc1b4Up/r/yvtox1+ED
qcgn1ox9i7Xj6mTQvmhavnHxO6wOd2Nw8LI3f2maGcrke4flKYepqfPUuadd
fzsMzjw6GtYR++LnL8rtTHMMqzd12fzxq5P2y/ZfW7rM7LnnlpiPfeDipPE7
TK9+BuvVw+36j0qzAldLl654KXAnrAlzilXFkcQ1dP3rcW7XeqZb/346Okdw
e2qb0TjYanYvwu2KDYl/OmmsKzxM/4gcTewD16ByXHGo8ecYFZeRddh3N14k
GnbmGUvKb9wU85HjCo8tbGvm0S1ri/EDaGTw/Q9P9Adnr/UG16bPR+1qO8Rx
J64McSGJmXPgq5ue2709m+bmYfLc7m2xmfzvZc5RPib8pvhh8W+jeSnyPizi
94LX8bH/8fcPonfh+Yujxu3/9nTWOBCuXr6lN/jRq58Ef/PTVTYtjQvszXJ8
7fjOKSPfknuMaoPtwPX0ATQG8uef9pivEq5mPbWH4Z+nbtY+5PVTt1vzru8O
zWqP80fuXe4TjVNoqs6lAXNjt4d5gUN+drkd/oLJ5fOE28XsaNwx/KNnzhyx
9aWfYR35TZl3NTLidnG+q29HY4PPm+XnJm5GPM6+UM541Sxup96FmTluh83F
7GjcMXzrLGcZzL735GjQMzzeBG4Px9p+Wu6PwNLSoUvjQgwUlslfTJniFWZx
u3zorIs+O+L2EidntZn23CnC7jAxx4r2hPskXk6sGY0JyNb5ZZvGvOK/T6tD
ble09Whz8PEzBlVl8Drru0ab8TboYyjuI7/ogHwOIW/PrPn4nd4Wu5X1xml+
T9hWuXFk0pzzvoTtmZY+Pq/epu/4CdOtnDh7xky+9rPnwngTX9+dNUaGlfGt
Y9Tf8eWIsfpP3ttu7I0//Werdpkl6V7wVS5df9DYnTroaljHGH502n4p/6sl
K2wbW0v2Zz96I9gxNBmtq33YWt6HdQfP2brxbelbQJI1k53d7WhsMMfh5s/S
NuP+/2Zsm21eK/MMYxlY3m5m1z7AK+Qecnna5XbmXd0C3C52hrvF3uJyaV/g
aMaSyo89mKjZuBfVR2PDOstWhMz73JIlxtYu29MG+vRa3O765eVTZ5oxqZjt
76791hbcDserDtxeRA+W/H8NORt9Bn53ft0YkPiFpe9GEy9OJ3YMyzUPj2te
uYbw59OWdDKKJ5PU5qOUXFLyuRfxG8C6oc99X2J+LtqTRhy2ryeODTEmiU+T
VQc9vZhcuno4HoszO8vC8bKV3xjkW1d/1et+vXnz5m0RWZzjnfGs8sW7GhJ3
Osy3Go4pjb+fFPNP7/oPNuw0Tn/tvfVmaN2Zv3PHiTdXmr45fcO07vjnXa6H
peFnGJxpdDDdMZZW/lP84/jk//7nayN+ZxlsS7/E/PElJj8wesfsx8u3mP+d
/gH8zlhWDHb/8394K/hk32AVt9MWfvyeweuJRlk9ce9hLvbV3R79CfaHPgjn
CHswM27n6NDobdP+s02OLal/UWubXMOsWPuK/y9m74gxQuXvp4oR4nI7OnP8
5b97/H+iZcbUZR86ehfYHe7FKFOsGDibesSPYX7brzYZmz99Us2QcDttsT4a
dBgfjoah8YujO2f/YHnKYHv6FLSPbkbbguE1zT67+8H4097SvUSb2l+mByce
BZ8fPBktg9fRzlDGdvOex2wWLcctHO0Nxm+cSSzLXjY3nhUfvvI3KSb83FjU
6vVha/zgefzqeetwLYgLGb9nZOSs0nmhTr3x47MM/zosjv3w9Ftj9zivu4ZP
Xuu6fQmYnX6G+dnb/V/05s2bN2/ts/J4QZfls0ycj59X+SrF7XPvmXBMKj53
910Oy8Pw/2nx8x5YPpG//MeQ7SmDr797NGllTNOPgK01PtXVksOWsDK8DtvD
r+hhYG/07nD5r7/+V9PEsD7s7xpsTtswPONY0ckwzXbj29LxdvUnjz+zGBEJ
62RZtP97+8zc+Ddw/Euvvp64HXiw52Q4bpL14n2ZPKb+Wfa+1a9pb4XJ154U
dz1PvtR43BflS3WXwW3uPNvCxHP84uufuD9rHA0v95XjHe0uXwd+tZz7C6Pu
7G+rY88k7R/18KmqDYx+nL65uMvd7ec9j3lYE8bsPbK5IV7Fn04uIVd3I423
Wy/8ljeTm9nFs3nqoslB405cdzTv8XLLoXV52gz9CbmN8u5DPbldk3QxST73
+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
2szPTo0klhP757+aODX1U8nlrnFxuHv3+2tjXzwsbj6XYB79GOYRUye/Juua
3hddluaac34mt/Oetqnq3pNlVlffT0vuUT9+84ESfI3PBGaFa+17DLaFceHi
323YJ3Ft4tbclyx78b2PnczMsv/ZtL9qGf8tGk//1fJNVTH3eu1RsR3x+O/9
bJmwNuvjcUmqx9LoeXh5eXm1WnAo8Qo4HB6//tdSnF+eV+aZcXdi7DoOF98+
NWVZh2Vx7L1WHlIrB7q2QWN9/I42PR60UUU+Gc3Ncnr2aDA4vbea2xuNSxYk
njlysj9Yv25N8OqrL0kew1s3GotHVzP1tpqxa2VbvDNJ40o11qwca3pklHuT
mBb+TJtnUmXmVK+u0Tonx9NpaiRp/SX8OO8e/bzM7WEeRsaLSr5IwyOERk7u
Cz7Y/Ubs/advg29IGZ++TKM1pPS66Pele2RavP20h7btORVOJ3JF9P1kTEHH
x7X6PAr3hWDWZRv3iX9EOdZcjhcFPv7hoy8He0auSBz8zT1DEidn2aMrt8oy
26MCV/9y2SbnMt3O5W2p1x4k41s/m5S2iN+m/H8Ht7++e1CWuc6z0fPwarPs
muVeXg+4tkp8bi6q7ROOt6N2q3IBPG7HI5TheYXblfGJxeOd0eVaS8r0xVd8
v0x+L7/fGeUNsI/Xzu/j1iheqXVBp24OS8z95NTFynUbHfddEG7/zW9+E2zZ
vLHMmF3B4sWLheHrxd3TCCattRyehcdhVRiWuDpiGu8LvhLNk2Kyuxl7xyNP
PnnGxebR1zBrmRJvt5f39+2I26BjYzUP5Dvdm8QXrs9n6p17ljzvWUQfgjjj
h8fHgt8+tyx47LFF8rnyOdOvkNpMw9Vx+O3DM3K/w/ZIp+N1+O6VZW+n62g+
Db6zOm3GO82cGzXrTBvjZnx8vtiCr3/x/IbgkSdeczIr8+BZuBafy6+Xvx38
+Mk1Mr+WD51l3//5cucy5WSWs16W9nAPMv+nv31T2sX2tAvvy3Pr9iT6aho9
D6/2qiJ/YkH+X728Winl9pCZ52LfCwyO6tWZwltjMwTxemTW6bRj7xUxkag+
qf6v2+zeNm6P4n08T9BzwRf9t7uXxEOs/Yqm21WAmCJelLt/mw0mLnwRLFv2
fLBi5fJcuD2ND0ZFfBofCmyOVwTmN2PPmoMxiYH37HnHGadOiuPD3DY346dn
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
lyo55YvM7VG7+I7B6XzXGYvK9wndi35r8LaTV0bj7+SWMbf38vLy8vIqtMy6
TVoL3OTYiN8bYUe24Xl1VkaA3eH0PLkdXlZu12fqudQmTXmNeSXWDi9QXwdO
Hyz3T6iVavv5WXZy6uLC9p3gpSYZPu3ngr89Kd5+f2mB2+/OXxUm573mrVdu
h8kl53iZsfHvM4bUFW/nlXw8vGd8p9Qo2rUtOH9uSN7r/nR7pvG7t4rbJb9N
0bm93D6tzUCeWWVz+n/kkOE9cfZrfz0X3PrbhfjcvFfGy8vLy+u+UJ0486cT
pbBGSTSdpe6Arosvth4T/O98NecRkycnpHrd8/DJEPMnnws+GeJyxBCZjq9F
i66zemQ01o6+iXLS8V7ZHY5Xnh+aHqn6rDqWm78Bfs/C7UnxdmWuTjN5Ov5d
4Hbew9iaw97kdt7jeV+y5Im4lqzkOS8ztxlv13XIvaK5VqhNhL9G+wT43Wkb
+2aa8a6t4nbG00rO1MGJ1txjzX7HBielfZqrnbj6xb+kq8/FmHm27/Q5eLkl
da+jsZrkXslSPzTrttw/rJ8kM9djvX2kaWetdbPsx8vL68GXMKD814W/Cfw2
EBvXukjqbeF/bWJuLhi9Gs4TL3gdhmMd1mWfYa6LxnlBY+944ptlj5jRh8PY
9/y9kjC8tLmF/9uaH97kdlPkRIHb8cfAG/RTmLcz4T+C/bXDk+9USoZvhNvt
OqIms2tuxDT7ZNzEyJVDMi4UUeOomftGxyTU43bGh2rMG/8573llWvPYcx4j
J/vF14LgcF5hcGLpuj0MjgcG/ifPIp55ahPRlkOHu2SZ1lZi24W8j7cq9pMX
txNvl+dTRY25R/WTYB38Mdwrmu+xnsh74+PtxROfJ/kVyRVErkWtR0rdUvII
1eJZ3ZbxDWxLvkZqkX44POXM046E78vLyfmYJHI01srNyDG7P5uUdTl2rTZy
r7I/XddsE8fQZVpPtdOfh5eXV4cUxW1t9oKz+e2QPMfXwzi7/f925WbY968Z
8418NTCy+tmLIPW3h+c6Kxxy5VZJcry0vF5qdE3S1r0k/o6XRsemapttf35H
6+LW8dFk5XZyOdJfIbc5OdmV25XVs3A7nG6Pj8irpmo9dnflVuccGd96Yuij
YHDgfclPYy7HL9MnOeEXtofbYXqmdZwqr3i3v707Y/R17OO6ppsXx4nvx4LV
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
           "], {{0, 424}, {750, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
          Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {750, 424}, PlotRange -> {{0, 750}, {0, 424}}], 
        TraditionalForm]], 
      PolygonBox[{{20.047213829697363`, -15.593446069022615`}, {
       151.80651619858583`, -15.593446069022615`}, {151.80651619858583`, 
       58.864869049474905`}, {151.80651619858583`, 58.86486904947491}, {
       20.047213829697363`, 58.86486904947491}, {20.047213829697363`, 
       58.864869049474905`}},
       VertexTextureCoordinates->{{0., 0.}, {1., 0.}, {1., 1.}, {1., 1.}, {0.,
         1.}, {0., 1.}}]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{125.45465572480813`, -0.7017830453231095}, {
         151.80651619858583`, -0.7017830453231095}, {
         151.80651619858583`, -15.593446069022615`}, {
         125.45465572480813`, -15.593446069022615`}, {
         125.45465572480813`, -0.7017830453231095}}]},
       "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
       "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, "Equirectangular", "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, "Equirectangular", 
      "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["Country", "Afghanistan"], 
        Entity["Country", "Armenia"], 
        Entity["Country", "Azerbaijan"], 
        Entity["Country", "Bahrain"], 
        Entity["Country", "Bangladesh"], 
        Entity["Country", "Bhutan"], 
        Entity["Country", "Brunei"], 
        Entity["Country", "Cambodia"], 
        Entity["Country", "China"], 
        Entity["Country", "ChristmasIsland"], 
        Entity["Country", "CocosKeelingIslands"], 
        Entity["Country", "Cyprus"], 
        Entity["Country", "EastTimor"], 
        Entity["Country", "GazaStrip"], 
        Entity["Country", "Georgia"], 
        Entity["Country", "HongKong"], 
        Entity["Country", "India"], 
        Entity["Country", "Indonesia"], 
        Entity["Country", "Iran"], 
        Entity["Country", "Iraq"], 
        Entity["Country", "Israel"], 
        Entity["Country", "Japan"], 
        Entity["Country", "Jordan"], 
        Entity["Country", "Kazakhstan"], 
        Entity["Country", "Kuwait"], 
        Entity["Country", "Kyrgyzstan"], 
        Entity["Country", "Laos"], 
        Entity["Country", "Lebanon"], 
        Entity["Country", "Macau"], 
        Entity["Country", "Malaysia"], 
        Entity["Country", "Maldives"], 
        Entity["Country", "Mongolia"], 
        Entity["Country", "Myanmar"], 
        Entity["Country", "Nepal"], 
        Entity["Country", "NorthKorea"], 
        Entity["Country", "Oman"], 
        Entity["Country", "Pakistan"], 
        Entity["Country", "Philippines"], 
        Entity["Country", "Qatar"], 
        Entity["Country", "SaudiArabia"], 
        Entity["Country", "Singapore"], 
        Entity["Country", "SouthKorea"], 
        Entity["Country", "SriLanka"], 
        Entity["Country", "Syria"], 
        Entity["Country", "Taiwan"], 
        Entity["Country", "Tajikistan"], 
        Entity["Country", "Thailand"], 
        Entity["Country", "Turkey"], 
        Entity["Country", "Turkmenistan"], 
        Entity["Country", "UnitedArabEmirates"], 
        Entity["Country", "Uzbekistan"], 
        Entity["Country", "Vietnam"], 
        Entity["Country", "WestBank"], 
        Entity["Country", "Yemen"]}]], 
    "BasicGeoRange" -> {{-12.2089772, 55.4804001804523}, {26.0362730282832, 
     145.817457}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "StreetMap", GeoServer -> {"Wolfram", "AllowProviderChange" -> True}], 
      GeoCenter -> GeoPosition[{21.63571149022615, 85.9268650141416}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoModel -> "ITRF00", GeoProjection -> "Equirectangular", 
      GeoRange -> {{-15.593446069022615`, 58.86486904947491}, {
       20.047213829697363`, 151.80651619858583`}}, GeoRangePadding -> None, 
      GeoServer -> {"Wolfram"}, GeoZoomLevel -> 3, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{20.047213829697363`, 
   151.80651619858583`}, {-15.593446069022615`, 58.86486904947491}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.713105110367879*^9, {3.713105152259308*^9, 3.713105192617181*^9}, 
   3.713105238353477*^9},ExpressionUUID->"b4d5c2e1-ae6d-4ff6-9130-\
ab52523d5326"]
}, Open  ]],

Cell["\<\
Get \[OpenCurlyDoubleQuote]BorderingCountries\[CloseCurlyDoubleQuote] from \
CountryData for Asia and create edge rules of the form Country1 \
\[UndirectedEdge] Country2 if Country2 is a bordering country for Country1.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009630463231*^9, 
   3.748009630464342*^9}, {3.7480101936360807`*^9, 
   3.7480101936378117`*^9}},ExpressionUUID->"feb89614-3ce6-46b7-8c99-\
0534025358e8"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"Flatten", "[", 
        RowBox[{
          RowBox[{
            RowBox[{"Thread", "[", 
              RowBox[{"#", "\[UndirectedEdge]", 
                RowBox[{"CountryData", "[", 
                  RowBox[{"#", ",", "\"BorderingCountries\""}], "]"}]}], 
              "]"}], "&"}], "/@", 
          RowBox[{"CountryData", "[", "\"Asia\"", "]"}]}], "]"}]], "Input"], 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"7ba5f9c3-7ed1-4c60-b484-5450ae2da5a5"],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["SimpleGraph",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SimpleGraph"],
  FontWeight->"Bold"],
 " to create a ",
 StyleBox[ButtonBox["Graph",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Graph"],
  FontWeight->"Bold"],
 " without duplicate edges. (Graph can be used as well, but it will have two \
edges for each pair of countries). Use ",
 StyleBox[ButtonBox["Tooltip",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Tooltip"],
  FontWeight->"Bold"],
 " for ",
 StyleBox[ButtonBox["VertexLabels",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/VertexLabels"],
  FontWeight->"Bold"],
 " to help identify each country easily."
}], "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009630463231*^9, 
   3.748009630464342*^9}, {3.748010194909687*^9, 3.748010285862885*^9}, {
   3.7482779133747168`*^9, 3.748277927380279*^9}, {3.7482786502779818`*^9, 
   3.748278658116*^9}},ExpressionUUID->"d5b07808-409b-4b35-9cee-b13759914a3c"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"g", " ", "=", 
        RowBox[{"SimpleGraph", "[", 
          RowBox[{
            RowBox[{"Flatten", "[", 
              RowBox[{
                RowBox[{
                  RowBox[{"Thread", "[", 
                    RowBox[{"#", "\[UndirectedEdge]", 
                    RowBox[{"CountryData", "[", 
                    RowBox[{"#", ",", "\"BorderingCountries\""}], "]"}]}], 
                    "]"}], "&"}], "/@", 
                RowBox[{"CountryData", "[", "\"Asia\"", "]"}]}], "]"}], ",", 
            RowBox[{"VertexLabels", "\[Rule]", 
              RowBox[{"Placed", "[", 
                RowBox[{"\"Name\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}]], 
     "Input", CellChangeTimes -> {{3.748010080106139*^9, 
      3.748010112987093*^9}, {3.7480101900496273`*^9, 3.748010191790448*^9}, {
      3.748010256001644*^9, 3.7480102981599483`*^9}}, CellLabel -> 
     "In[133]:="], WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"2245afbd-ab03-4602-bb56-fe65eb69abcc"],

Cell[TextData[{
 "Highlight the country with the maximum number of neighbors sharing a border \
(vertex with greatest ",
 StyleBox[ButtonBox["DegreeCentrality",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DegreeCentrality"],
  FontWeight->"Bold"],
 ")."
}], "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009637713048*^9, 
   3.7480096399753942`*^9}, {3.74800968583156*^9, 3.748009716238389*^9}, {
   3.748010433244265*^9, 3.748010433245079*^9}, {3.748277935192527*^9, 
   3.7482779370523767`*^9}},ExpressionUUID->"c1aa5c59-f95f-4a92-ae75-\
fa28ca07c06f"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[{
     Cell[
      BoxData[
       RowBox[{"degreeC", " ", "=", " ", 
         RowBox[{"ReverseSort", "[", 
           RowBox[{"AssociationThread", "[", 
             RowBox[{
               RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", " ", 
               RowBox[{"DegreeCentrality", "[", "g", "]"}]}], "]"}], "]"}]}]],
       "Input", 
      CellChangeTimes -> {{3.748009743473085*^9, 3.748009823747167*^9}}, 
      CellLabel -> "In[134]:="], 
     Cell[
      BoxData[
       RowBox[{"HighlightGraph", "[", 
         RowBox[{"g", ",", 
           RowBox[{"Keys", "@", 
             RowBox[{"Take", "[", 
               RowBox[{"degreeC", ",", "1"}], "]"}]}]}], "]"}]], "Input", 
      CellChangeTimes -> {{3.74800972108375*^9, 3.748009728254792*^9}, {
       3.748009834578617*^9, 3.748009898459491*^9}}, CellLabel -> 
      "In[135]:="]}, WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"e2f3f3a7-21ea-4d49-945f-092e92da7d6e"],

Cell["\<\
Explore another graph centrality measure to look for another country that is \
well-connected to all other countries.\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009637713048*^9, 
   3.7480096399753942`*^9}, {3.74800968583156*^9, 3.748009716238389*^9}, {
   3.748010434643085*^9, 
   3.748010469289946*^9}},ExpressionUUID->"b18434d9-3ce7-4df6-a41e-\
ad7b3ae5c150"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[{
       RowBox[{
         RowBox[{"otherC", " ", "=", "  ", 
           RowBox[{"ReverseSort", "[", 
             RowBox[{"AssociationThread", "[", 
               RowBox[{
                 RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", " ", 
                 RowBox[{"ClosenessCentrality", "[", "g", "]"}]}], "]"}], 
             "]"}]}], ";"}], "\[IndentingNewLine]", 
       RowBox[{"HighlightGraph", "[", 
         RowBox[{"g", ",", 
           RowBox[{"Keys", "@", 
             RowBox[{"Take", "[", 
               RowBox[{"otherC", ",", "1"}], "]"}]}]}], "]"}]}], "Input", 
     CellChangeTimes -> {{3.748010353728385*^9, 3.748010366782262*^9}, {
      3.7480104070790586`*^9, 3.748010424339591*^9}}, CellLabel -> 
     "In[142]:="], WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"03ab8bb6-93a0-476c-a23c-0dddfd5f6001"],

Cell["\<\
Find the communities in the graph to see which countries are geographically \
close together.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.747578594845845*^9, 3.747578629897319*^9}, 
   3.748009986860374*^9, 
   3.748277945539773*^9},ExpressionUUID->"26642524-c24d-467c-a68b-\
915f0b03f910"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"CommunityGraphPlot", "[", "g", "]"}]], "Input", 
     CellChangeTimes -> {{3.747578137450749*^9, 3.747578144291679*^9}}, 
     CellLabel -> "In[136]:="], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"94ea844b-9033-4e91-a5fb-07ab1a5880cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete solution", "Subsubsection",
 CellChangeTimes->{{3.747578388392598*^9, 3.747578425352194*^9}, {
  3.748009496251357*^9, 3.748009496609754*^9}, {3.748009999604439*^9, 
  3.748010009347801*^9}, {3.7480105122265778`*^9, 3.748010518697011*^9}, {
  3.7482779635727177`*^9, 
  3.74827796366711*^9}},ExpressionUUID->"67a0e0e5-7724-4c2d-b12d-\
4510afc601b7"],

Cell["\<\
Get \[OpenCurlyDoubleQuote]BorderingCountries\[CloseCurlyDoubleQuote] from \
CountryData for Asia and create edge rules of the form Country1 \
\[UndirectedEdge] Country2 if Country2 is a bordering country for Country1:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009630463231*^9, 
   3.748009630464342*^9}, {3.7480101936360807`*^9, 3.7480101936378117`*^9}, {
   3.74827797068294*^9, 
   3.748277971243573*^9}},ExpressionUUID->"c637a399-d0d8-4674-87b6-\
12c1cbe83d35"],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"#", "\[UndirectedEdge]", 
      RowBox[{"CountryData", "[", 
       RowBox[{"#", ",", "\"\<BorderingCountries\>\""}], "]"}]}], "]"}], 
    "&"}], "/@", 
   RowBox[{"CountryData", "[", "\"\<Asia\>\"", "]"}]}], "]"}]], "Input",Expres\
sionUUID->"f8b66abb-0bf4-45ef-9e3c-9436114e99d9"],

Cell["\<\
Use SimpleGraph to create a Graph without duplicate edges. (Graph can be used \
as well, but it will have two edges for each pair of countries). Use ToolTip \
for VertexLabels to help identify each country easily:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009630463231*^9, 
   3.748009630464342*^9}, {3.748010194909687*^9, 3.748010285862885*^9}, {
   3.7482779765226717`*^9, 
   3.748277980067235*^9}},ExpressionUUID->"7c170c35-2b07-4be1-983a-\
be697cf5d01f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", 
  RowBox[{"SimpleGraph", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"#", "\[UndirectedEdge]", 
         RowBox[{"CountryData", "[", 
          RowBox[{"#", ",", "\"\<BorderingCountries\>\""}], "]"}]}], "]"}], 
       "&"}], "/@", 
      RowBox[{"CountryData", "[", "\"\<Asia\>\"", "]"}]}], "]"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.748010080106139*^9, 3.748010112987093*^9}, {
  3.7480101900496273`*^9, 3.748010191790448*^9}, {3.748010256001644*^9, 
  3.7480102981599483`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"1aeb62ea-6828-41f0-8569-ba904c908a0f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "HongKong"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Macau"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "EastTimor"], 
       Entity["Country", "Indonesia"], 
       Entity["Country", "Egypt"], 
       Entity["Country", "GazaStrip"], 
       Entity["Country", "Israel"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "PapuaNewGuinea"], 
       Entity["Country", "Iraq"], 
       Entity["Country", "Jordan"], 
       Entity["Country", "Kuwait"], 
       Entity["Country", "SaudiArabia"], 
       Entity["Country", "Syria"], 
       Entity["Country", "Lebanon"], 
       Entity["Country", "WestBank"], 
       Entity["Country", "SouthKorea"], 
       Entity["Country", "Oman"], 
       Entity["Country", "UnitedArabEmirates"], 
       Entity["Country", "Yemen"], 
       Entity["Country", "Qatar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Estonia"], 
       Entity["Country", "Finland"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Norway"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Greece"]}, {
      Null, {{6, 7}, {5, 7}, {46, 48}, {19, 21}, {25, 5}, {25, 7}, {8, 9}, {1,
        5}, {1, 6}, {1, 7}, {39, 44}, {31, 37}, {19, 22}, {24, 25}, {24, 6}, {
       24, 7}, {8, 11}, {9, 11}, {1, 2}, {2, 24}, {2, 25}, {2, 27}, {2, 28}, {
       2, 29}, {2, 5}, {2, 22}, {9, 12}, {2, 12}, {24, 12}, {27, 12}, {29, 
       12}, {12, 50}, {12, 51}, {12, 54}, {12, 55}, {12, 56}, {11, 59}, {2, 
       26}, {2, 23}, {29, 45}, {33, 34}, {34, 39}, {34, 44}, {46, 47}, {34, 
       43}, {19, 20}, {2, 20}, {20, 21}, {20, 22}, {12, 52}, {11, 58}, {12, 
       57}, {34, 42}, {39, 42}, {43, 42}, {42, 11}, {39, 41}, {46, 41}, {49, 
       41}, {41, 47}, {41, 48}, {12, 53}, {32, 33}, {32, 34}, {32, 35}, {32, 
       36}, {31, 18}, {18, 21}, {17, 18}, {1, 4}, {2, 4}, {30, 31}, {16, 2}, {
       1, 3}, {8, 3}, {9, 3}, {3, 4}, {3, 11}, {3, 6}, {13, 14}, {16, 14}, {2,
        14}, {14, 28}, {14, 4}, {40, 41}, {3, 38}, {38, 39}, {38, 40}, {38, 
       41}, {38, 42}, {38, 11}, {8, 10}, {9, 10}, {10, 12}, {10, 11}, {13, 
       15}, {2, 15}, {14, 15}, {20, 15}, {15, 21}}}, {VertexLabels -> {
         Placed["Name", Tooltip]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.175330096523796,
           2.6290130941192866`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {8.945510624275666,
           2.2580082229255822`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.272239472429343,
           2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.964880291634211,
           2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.281816482546042,
           2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.486579349461005, 3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.443009261839985, 3.2027191601926184`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.735256857352663, 2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.335624270628159, 2.8367957807370434`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.689325541527592, 3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.303337277408497, 3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.964880291634211, 2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          9.382546717092186, 2.8220600164081877`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.272239472429343, 2.017037026767733}, {6.000384926250906,
           1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {7.281816482546042, 
          2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {6.735256857352663, 
          2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.281816482546042, 2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.934033600001854, 3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {8.934033600001854, 
          3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {7.486579349461005, 
          3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {7.486579349461005,
           3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.750362185836261`, 2.824854263487823}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.614459511237069`, 3.2983411159415965`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.689325541527592,
           3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.303337277408497,
           3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.217143105202477,
           4.9519038621943094`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          6.9157007769481496`, 4.486228157529736}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          7.5707959882312075`, 4.641249887943768}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.166201902505318,
           4.300674514531985}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.551914639679471,
           5.067233292537589}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.903137664650651,
           4.922848890060684}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.154337454719593,
           4.670484308323797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.891378398984895,
           4.8328499991571325`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {5.03616873408509,
           1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.4538877577631188`, 0.9577980657514507}, {
          2.0959138219959117`, 1.179025803686988}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          0.8138077088649824, 0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.707107761950306,
           2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.902661226725587,
           2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.157730417991998, 2.924305609143709}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.303337277408497, 3.805210566821737}, {5.600186248025635,
           4.500514355288878}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.861665380132091}, {0.8138077088649824, 
          0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.8138077088649824, 0.8288713813257371}, {
          0.12967045258268062`, 0.3887512635726389}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.967353393863903`, 2.491284324254797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.262050051858715`, 2.812686708901881}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.315123659101236`, 2.3445692498286306`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.967353393863903`, 2.491284324254797}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.473853401084465`, 1.149816025872234}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.473853401084465`, 1.149816025872234}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.50420009483992, 0.07596117782007639}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.907767142062674`, 0.5940238961947859}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.686733302715762`, 2.350680662420862}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[
         TooltipBox[
          DiskBox[{7.540590328912305, 2.252459792413597}, 0.0810704299075887],
          TemplateBox[{"\"Afghanistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Afghanistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.175330096523796, 2.6290130941192866}, 0.0810704299075887],
          TemplateBox[{"\"China\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "China"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.945510624275666, 2.2580082229255822}, 0.0810704299075887],
          TemplateBox[{"\"Iran\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iran"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.272239472429343, 2.017037026767733}, 0.0810704299075887],
          TemplateBox[{"\"Pakistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Pakistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.822335055457, 2.16934137418661}, 0.0810704299075887],
          TemplateBox[{"\"Tajikistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Tajikistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.964880291634211, 2.3921407322410393}, 0.0810704299075887],
          TemplateBox[{"\"Turkmenistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.281816482546042, 2.411399828355326}, 0.0810704299075887],
          TemplateBox[{"\"Uzbekistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{9.382546717092186, 2.8220600164081877}, 0.0810704299075887],
          TemplateBox[{"\"Armenia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Armenia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.85623213531272, 3.092364805211339}, 0.0810704299075887],
          TemplateBox[{"\"Azerbaijan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.934033600001854, 3.370518358724916}, 0.0810704299075887],
          TemplateBox[{"\"Georgia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Georgia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.072108910424673, 2.682007647592574}, 0.0810704299075887],
          TemplateBox[{"\"Turkey\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkey"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.486579349461005, 3.945186471685176}, 0.0810704299075887],
          TemplateBox[{"\"Russia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Russia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.29940804111117, 1.2425560500553965}, 0.0810704299075887],
          TemplateBox[{"\"Bangladesh\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Bangladesh"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.000384926250906, 1.7869367172336963}, 0.0810704299075887],
          TemplateBox[{"\"India\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "India"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.03616873408509, 1.8271879937030473}, 0.0810704299075887],
          TemplateBox[{"\"Myanmar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Myanmar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.688780469487735, 2.1781257050984695}, 0.0810704299075887],
          TemplateBox[{"\"Bhutan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bhutan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{1.4538877577631188, 0.9577980657514507}, 
           0.0810704299075887],
          TemplateBox[{"\"Brunei\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Brunei"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{2.0959138219959117, 1.179025803686988}, 0.0810704299075887],
          TemplateBox[{"\"Malaysia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Malaysia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.082658983946148, 2.068744120041775}, 0.0810704299075887],
          TemplateBox[{"\"Cambodia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Cambodia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.707107761950306, 2.1074339194160765}, 0.0810704299075887],
          TemplateBox[{"\"Laos\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Laos"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{3.6640272513952965, 1.6344281349906187}, 
           0.0810704299075887],
          TemplateBox[{"\"Thailand\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Thailand"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.902661226725587, 2.416542035710417}, 0.0810704299075887],
          TemplateBox[{"\"Vietnam\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Vietnam"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.443009261839985, 3.2027191601926184}, 0.0810704299075887],
          TemplateBox[{"\"Hong Kong\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "HongKong"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.157730417991998, 2.924305609143709}, 0.0810704299075887],
          TemplateBox[{"\"Kazakhstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.735256857352663, 2.5376605878968155}, 0.0810704299075887],
          TemplateBox[{"\"Kyrgyzstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.335624270628159, 2.8367957807370434}, 0.0810704299075887],
          TemplateBox[{"\"Macau\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Macau"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.689325541527592, 3.4430270774050706}, 0.0810704299075887],
          TemplateBox[{"\"Mongolia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Mongolia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.71034955183646, 1.8446473635708633}, 0.0810704299075887],
          TemplateBox[{"\"Nepal\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Nepal"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.303337277408497, 3.805210566821737}, 0.0810704299075887],
          TemplateBox[{"\"North Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "NorthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{0., 0.861665380132091}, 0.0810704299075887],
          TemplateBox[{"\"East Timor\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "EastTimor"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.8138077088649824, 0.8288713813257371}, 
           0.0810704299075887],
          TemplateBox[{"\"Indonesia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Indonesia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{14.458587066900096, 2.492537521066502}, 0.0810704299075887],
          TemplateBox[{"\"Egypt\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Egypt"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.967353393863903, 2.491284324254797}, 0.0810704299075887],
          TemplateBox[{"\"Gaza Strip\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "GazaStrip"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.090009057617289, 2.3327128595783533}, 
           0.0810704299075887],
          TemplateBox[{"\"Israel\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Israel"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.262050051858715, 2.812686708901881}, 0.0810704299075887],
          TemplateBox[{"\"Libya\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Libya"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.315123659101236, 2.3445692498286306}, 
           0.0810704299075887],
          TemplateBox[{"\"Sudan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Sudan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.12967045258268062, 0.3887512635726389}, 
           0.0810704299075887],
          TemplateBox[{"\"Papua New Guinea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.89616936938009, 1.8236455120196444}, 0.0810704299075887],
          TemplateBox[{"\"Iraq\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iraq"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.167399065850478, 1.8109660303777533}, 
           0.0810704299075887],
          TemplateBox[{"\"Jordan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Jordan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.473853401084465, 1.149816025872234}, 0.0810704299075887],
          TemplateBox[{"\"Kuwait\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Kuwait"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.077500256130426, 0.8544413246191869}, 
           0.0810704299075887],
          TemplateBox[{"\"Saudi Arabia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.686733302715762, 2.350680662420862}, 0.0810704299075887],
          TemplateBox[{"\"Syria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Syria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.546803521373038, 2.599261490130686}, 0.0810704299075887],
          TemplateBox[{"\"Lebanon\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lebanon"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.986786362940466, 1.868455689033428}, 0.0810704299075887],
          TemplateBox[{"\"West Bank\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "WestBank"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.600186248025635, 4.500514355288878}, 0.0810704299075887],
          TemplateBox[{"\"South Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "SouthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.50420009483992, 0.07596117782007639}, 
           0.0810704299075887],
          TemplateBox[{"\"Oman\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Oman"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.765675996985788, 0.2249019675950441}, 
           0.0810704299075887],
          TemplateBox[{"\"United Arab Emirates\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{12.211868621959413, 0.}, 0.0810704299075887],
          TemplateBox[{"\"Yemen\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Yemen"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.907767142062674, 0.5940238961947859}, 
           0.0810704299075887],
          TemplateBox[{"\"Qatar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Qatar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.217143105202477, 4.9519038621943094}, 0.0810704299075887],
          TemplateBox[{"\"Belarus\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Belarus"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.9157007769481496, 4.486228157529736}, 0.0810704299075887],
          TemplateBox[{"\"Estonia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Estonia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.5707959882312075, 4.641249887943768}, 0.0810704299075887],
          TemplateBox[{"\"Finland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Finland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.166201902505318, 4.300674514531985}, 0.0810704299075887],
          TemplateBox[{"\"Latvia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Latvia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.551914639679471, 5.067233292537589}, 0.0810704299075887],
          TemplateBox[{"\"Lithuania\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lithuania"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.903137664650651, 4.922848890060684}, 0.0810704299075887],
          TemplateBox[{"\"Norway\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Norway"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.154337454719593, 4.670484308323797}, 0.0810704299075887],
          TemplateBox[{"\"Poland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Poland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.891378398984895, 4.8328499991571325}, 0.0810704299075887],
          TemplateBox[{"\"Ukraine\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Ukraine"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.750362185836261, 2.824854263487823}, 0.0810704299075887],
          TemplateBox[{"\"Bulgaria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bulgaria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.614459511237069, 3.2983411159415965}, 
           0.0810704299075887],
          TemplateBox[{"\"Greece\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Greece"], "Tooltip"]& ]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.748010105886457*^9, 3.7480101137528963`*^9}, {
  3.748010294999625*^9, 3.7480102990793123`*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"511c7ed0-60a2-49a9-a85f-abb950d2cbff"]
}, Open  ]],

Cell["\<\
Highlight the country with the maximum number of neighbors sharing a border \
(vertex with greatest DegreeCentrality):\
\>", "ItemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009637713048*^9, 
   3.7480096399753942`*^9}, {3.74800968583156*^9, 3.748009716238389*^9}, {
   3.748010433244265*^9, 3.748010433245079*^9}, {3.748277984242654*^9, 
   3.7482779861543217`*^9}},ExpressionUUID->"d3e88e91-adae-4633-ab0b-\
3754889df3ac"],

Cell[BoxData[
 RowBox[{"degreeC", " ", "=", " ", 
  RowBox[{"ReverseSort", "[", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", " ", 
     RowBox[{"DegreeCentrality", "[", "g", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.748009743473085*^9, 3.748009823747167*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"5506eebf-bd54-4f65-84dd-a7028fca5b82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"Keys", "@", 
    RowBox[{"Take", "[", 
     RowBox[{"degreeC", ",", "1"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.74800972108375*^9, 3.748009728254792*^9}, {
  3.748009834578617*^9, 3.748009898459491*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"922ec239-6609-4f71-a9ab-7c350b33b220"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "HongKong"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Macau"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "EastTimor"], 
       Entity["Country", "Indonesia"], 
       Entity["Country", "Egypt"], 
       Entity["Country", "GazaStrip"], 
       Entity["Country", "Israel"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "PapuaNewGuinea"], 
       Entity["Country", "Iraq"], 
       Entity["Country", "Jordan"], 
       Entity["Country", "Kuwait"], 
       Entity["Country", "SaudiArabia"], 
       Entity["Country", "Syria"], 
       Entity["Country", "Lebanon"], 
       Entity["Country", "WestBank"], 
       Entity["Country", "SouthKorea"], 
       Entity["Country", "Oman"], 
       Entity["Country", "UnitedArabEmirates"], 
       Entity["Country", "Yemen"], 
       Entity["Country", "Qatar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Estonia"], 
       Entity["Country", "Finland"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Norway"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Greece"]}, {
      Null, {{6, 7}, {5, 7}, {46, 48}, {19, 21}, {25, 5}, {25, 7}, {8, 9}, {1,
        5}, {1, 6}, {1, 7}, {39, 44}, {31, 37}, {19, 22}, {24, 25}, {24, 6}, {
       24, 7}, {8, 11}, {9, 11}, {1, 2}, {2, 24}, {2, 25}, {2, 27}, {2, 28}, {
       2, 29}, {2, 5}, {2, 22}, {9, 12}, {2, 12}, {24, 12}, {27, 12}, {29, 
       12}, {12, 50}, {12, 51}, {12, 54}, {12, 55}, {12, 56}, {11, 59}, {2, 
       26}, {2, 23}, {29, 45}, {33, 34}, {34, 39}, {34, 44}, {46, 47}, {34, 
       43}, {19, 20}, {2, 20}, {20, 21}, {20, 22}, {12, 52}, {11, 58}, {12, 
       57}, {34, 42}, {39, 42}, {43, 42}, {42, 11}, {39, 41}, {46, 41}, {49, 
       41}, {41, 47}, {41, 48}, {12, 53}, {32, 33}, {32, 34}, {32, 35}, {32, 
       36}, {31, 18}, {18, 21}, {17, 18}, {1, 4}, {2, 4}, {30, 31}, {16, 2}, {
       1, 3}, {8, 3}, {9, 3}, {3, 4}, {3, 11}, {3, 6}, {13, 14}, {16, 14}, {2,
        14}, {14, 28}, {14, 4}, {40, 41}, {3, 38}, {38, 39}, {38, 40}, {38, 
       41}, {38, 42}, {38, 11}, {8, 10}, {9, 10}, {10, 12}, {10, 11}, {13, 
       15}, {2, 15}, {14, 15}, {20, 15}, {15, 21}}}, {VertexLabels -> {
         Placed["Name", Tooltip]}, GraphHighlight -> {
         Entity["Country", "China"]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.175330096523796,
           2.6290130941192866`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {8.945510624275666,
           2.2580082229255822`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.272239472429343,
           2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.964880291634211,
           2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.281816482546042,
           2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.486579349461005, 3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.443009261839985, 3.2027191601926184`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.735256857352663, 2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.335624270628159, 2.8367957807370434`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.689325541527592, 3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.303337277408497, 3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.964880291634211, 2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          9.382546717092186, 2.8220600164081877`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.272239472429343, 2.017037026767733}, {6.000384926250906,
           1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {7.281816482546042, 
          2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {6.735256857352663, 
          2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.281816482546042, 2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.934033600001854, 3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {8.934033600001854, 
          3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {7.486579349461005, 
          3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {7.486579349461005,
           3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.750362185836261`, 2.824854263487823}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.614459511237069`, 3.2983411159415965`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.689325541527592,
           3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.303337277408497,
           3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.217143105202477,
           4.9519038621943094`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          6.9157007769481496`, 4.486228157529736}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          7.5707959882312075`, 4.641249887943768}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.166201902505318,
           4.300674514531985}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.551914639679471,
           5.067233292537589}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.903137664650651,
           4.922848890060684}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.154337454719593,
           4.670484308323797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.891378398984895,
           4.8328499991571325`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {5.03616873408509,
           1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.4538877577631188`, 0.9577980657514507}, {
          2.0959138219959117`, 1.179025803686988}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          0.8138077088649824, 0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.707107761950306,
           2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.902661226725587,
           2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.157730417991998, 2.924305609143709}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.303337277408497, 3.805210566821737}, {5.600186248025635,
           4.500514355288878}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.861665380132091}, {0.8138077088649824, 
          0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.8138077088649824, 0.8288713813257371}, {
          0.12967045258268062`, 0.3887512635726389}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.967353393863903`, 2.491284324254797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.262050051858715`, 2.812686708901881}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.315123659101236`, 2.3445692498286306`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.967353393863903`, 2.491284324254797}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.473853401084465`, 1.149816025872234}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.473853401084465`, 1.149816025872234}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.50420009483992, 0.07596117782007639}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.907767142062674`, 0.5940238961947859}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.686733302715762`, 2.350680662420862}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[
         TooltipBox[
          DiskBox[{7.540590328912305, 2.252459792413597}, 0.0810704299075887],
          TemplateBox[{"\"Afghanistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Afghanistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
           DiskBox[{6.175330096523796, 2.6290130941192866}, 
            0.0810704299075887]},
          TemplateBox[{"\"China\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "China"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.945510624275666, 2.2580082229255822}, 0.0810704299075887],
          TemplateBox[{"\"Iran\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iran"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.272239472429343, 2.017037026767733}, 0.0810704299075887],
          TemplateBox[{"\"Pakistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Pakistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.822335055457, 2.16934137418661}, 0.0810704299075887],
          TemplateBox[{"\"Tajikistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Tajikistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.964880291634211, 2.3921407322410393}, 0.0810704299075887],
          TemplateBox[{"\"Turkmenistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.281816482546042, 2.411399828355326}, 0.0810704299075887],
          TemplateBox[{"\"Uzbekistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{9.382546717092186, 2.8220600164081877}, 0.0810704299075887],
          TemplateBox[{"\"Armenia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Armenia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.85623213531272, 3.092364805211339}, 0.0810704299075887],
          TemplateBox[{"\"Azerbaijan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.934033600001854, 3.370518358724916}, 0.0810704299075887],
          TemplateBox[{"\"Georgia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Georgia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.072108910424673, 2.682007647592574}, 0.0810704299075887],
          TemplateBox[{"\"Turkey\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkey"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.486579349461005, 3.945186471685176}, 0.0810704299075887],
          TemplateBox[{"\"Russia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Russia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.29940804111117, 1.2425560500553965}, 0.0810704299075887],
          TemplateBox[{"\"Bangladesh\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Bangladesh"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.000384926250906, 1.7869367172336963}, 0.0810704299075887],
          TemplateBox[{"\"India\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "India"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.03616873408509, 1.8271879937030473}, 0.0810704299075887],
          TemplateBox[{"\"Myanmar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Myanmar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.688780469487735, 2.1781257050984695}, 0.0810704299075887],
          TemplateBox[{"\"Bhutan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bhutan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{1.4538877577631188, 0.9577980657514507}, 
           0.0810704299075887],
          TemplateBox[{"\"Brunei\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Brunei"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{2.0959138219959117, 1.179025803686988}, 0.0810704299075887],
          TemplateBox[{"\"Malaysia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Malaysia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.082658983946148, 2.068744120041775}, 0.0810704299075887],
          TemplateBox[{"\"Cambodia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Cambodia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.707107761950306, 2.1074339194160765}, 0.0810704299075887],
          TemplateBox[{"\"Laos\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Laos"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{3.6640272513952965, 1.6344281349906187}, 
           0.0810704299075887],
          TemplateBox[{"\"Thailand\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Thailand"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.902661226725587, 2.416542035710417}, 0.0810704299075887],
          TemplateBox[{"\"Vietnam\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Vietnam"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.443009261839985, 3.2027191601926184}, 0.0810704299075887],
          TemplateBox[{"\"Hong Kong\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "HongKong"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.157730417991998, 2.924305609143709}, 0.0810704299075887],
          TemplateBox[{"\"Kazakhstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.735256857352663, 2.5376605878968155}, 0.0810704299075887],
          TemplateBox[{"\"Kyrgyzstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.335624270628159, 2.8367957807370434}, 0.0810704299075887],
          TemplateBox[{"\"Macau\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Macau"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.689325541527592, 3.4430270774050706}, 0.0810704299075887],
          TemplateBox[{"\"Mongolia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Mongolia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.71034955183646, 1.8446473635708633}, 0.0810704299075887],
          TemplateBox[{"\"Nepal\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Nepal"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.303337277408497, 3.805210566821737}, 0.0810704299075887],
          TemplateBox[{"\"North Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "NorthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{0., 0.861665380132091}, 0.0810704299075887],
          TemplateBox[{"\"East Timor\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "EastTimor"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.8138077088649824, 0.8288713813257371}, 
           0.0810704299075887],
          TemplateBox[{"\"Indonesia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Indonesia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{14.458587066900096, 2.492537521066502}, 0.0810704299075887],
          TemplateBox[{"\"Egypt\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Egypt"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.967353393863903, 2.491284324254797}, 0.0810704299075887],
          TemplateBox[{"\"Gaza Strip\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "GazaStrip"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.090009057617289, 2.3327128595783533}, 
           0.0810704299075887],
          TemplateBox[{"\"Israel\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Israel"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.262050051858715, 2.812686708901881}, 0.0810704299075887],
          TemplateBox[{"\"Libya\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Libya"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.315123659101236, 2.3445692498286306}, 
           0.0810704299075887],
          TemplateBox[{"\"Sudan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Sudan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.12967045258268062, 0.3887512635726389}, 
           0.0810704299075887],
          TemplateBox[{"\"Papua New Guinea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.89616936938009, 1.8236455120196444}, 0.0810704299075887],
          TemplateBox[{"\"Iraq\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iraq"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.167399065850478, 1.8109660303777533}, 
           0.0810704299075887],
          TemplateBox[{"\"Jordan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Jordan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.473853401084465, 1.149816025872234}, 0.0810704299075887],
          TemplateBox[{"\"Kuwait\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Kuwait"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.077500256130426, 0.8544413246191869}, 
           0.0810704299075887],
          TemplateBox[{"\"Saudi Arabia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.686733302715762, 2.350680662420862}, 0.0810704299075887],
          TemplateBox[{"\"Syria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Syria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.546803521373038, 2.599261490130686}, 0.0810704299075887],
          TemplateBox[{"\"Lebanon\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lebanon"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.986786362940466, 1.868455689033428}, 0.0810704299075887],
          TemplateBox[{"\"West Bank\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "WestBank"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.600186248025635, 4.500514355288878}, 0.0810704299075887],
          TemplateBox[{"\"South Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "SouthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.50420009483992, 0.07596117782007639}, 
           0.0810704299075887],
          TemplateBox[{"\"Oman\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Oman"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.765675996985788, 0.2249019675950441}, 
           0.0810704299075887],
          TemplateBox[{"\"United Arab Emirates\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{12.211868621959413, 0.}, 0.0810704299075887],
          TemplateBox[{"\"Yemen\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Yemen"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.907767142062674, 0.5940238961947859}, 
           0.0810704299075887],
          TemplateBox[{"\"Qatar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Qatar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.217143105202477, 4.9519038621943094}, 0.0810704299075887],
          TemplateBox[{"\"Belarus\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Belarus"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.9157007769481496, 4.486228157529736}, 0.0810704299075887],
          TemplateBox[{"\"Estonia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Estonia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.5707959882312075, 4.641249887943768}, 0.0810704299075887],
          TemplateBox[{"\"Finland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Finland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.166201902505318, 4.300674514531985}, 0.0810704299075887],
          TemplateBox[{"\"Latvia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Latvia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.551914639679471, 5.067233292537589}, 0.0810704299075887],
          TemplateBox[{"\"Lithuania\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lithuania"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.903137664650651, 4.922848890060684}, 0.0810704299075887],
          TemplateBox[{"\"Norway\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Norway"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.154337454719593, 4.670484308323797}, 0.0810704299075887],
          TemplateBox[{"\"Poland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Poland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.891378398984895, 4.8328499991571325}, 0.0810704299075887],
          TemplateBox[{"\"Ukraine\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Ukraine"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.750362185836261, 2.824854263487823}, 0.0810704299075887],
          TemplateBox[{"\"Bulgaria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bulgaria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.614459511237069, 3.2983411159415965}, 
           0.0810704299075887],
          TemplateBox[{"\"Greece\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Greece"], "Tooltip"]& ]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.748010319040354*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"6879e7b0-31d0-41d1-9db8-085fbb7099fd"]
}, Open  ]],

Cell["\<\
Explore another graph centrality measure to look for another country that is \
well-connected to all other countries:\
\>", "SubitemNumbered",
 CellChangeTimes->{{3.7163039665572643`*^9, 3.716304002077334*^9}, {
   3.72601802314506*^9, 3.72601805365343*^9}, 3.747578429051272*^9, {
   3.7475784685743217`*^9, 3.747578557861665*^9}, {3.748009637713048*^9, 
   3.7480096399753942`*^9}, {3.74800968583156*^9, 3.748009716238389*^9}, {
   3.748010434643085*^9, 3.748010469289946*^9}, {3.74827799024205*^9, 
   3.74827799083425*^9}},ExpressionUUID->"586456cf-a497-4218-82aa-\
c070846201d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"otherC", " ", "=", "  ", 
   RowBox[{"ReverseSort", "[", 
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", " ", 
      RowBox[{"ClosenessCentrality", "[", "g", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"Keys", "@", 
    RowBox[{"Take", "[", 
     RowBox[{"otherC", ",", "1"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.748010353728385*^9, 3.748010366782262*^9}, {
  3.7480104070790586`*^9, 3.748010424339591*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"afaa70e5-ba58-4b99-bd40-19525c17379f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       Entity["Country", "Afghanistan"], 
       Entity["Country", "China"], 
       Entity["Country", "Iran"], 
       Entity["Country", "Pakistan"], 
       Entity["Country", "Tajikistan"], 
       Entity["Country", "Turkmenistan"], 
       Entity["Country", "Uzbekistan"], 
       Entity["Country", "Armenia"], 
       Entity["Country", "Azerbaijan"], 
       Entity["Country", "Georgia"], 
       Entity["Country", "Turkey"], 
       Entity["Country", "Russia"], 
       Entity["Country", "Bangladesh"], 
       Entity["Country", "India"], 
       Entity["Country", "Myanmar"], 
       Entity["Country", "Bhutan"], 
       Entity["Country", "Brunei"], 
       Entity["Country", "Malaysia"], 
       Entity["Country", "Cambodia"], 
       Entity["Country", "Laos"], 
       Entity["Country", "Thailand"], 
       Entity["Country", "Vietnam"], 
       Entity["Country", "HongKong"], 
       Entity["Country", "Kazakhstan"], 
       Entity["Country", "Kyrgyzstan"], 
       Entity["Country", "Macau"], 
       Entity["Country", "Mongolia"], 
       Entity["Country", "Nepal"], 
       Entity["Country", "NorthKorea"], 
       Entity["Country", "EastTimor"], 
       Entity["Country", "Indonesia"], 
       Entity["Country", "Egypt"], 
       Entity["Country", "GazaStrip"], 
       Entity["Country", "Israel"], 
       Entity["Country", "Libya"], 
       Entity["Country", "Sudan"], 
       Entity["Country", "PapuaNewGuinea"], 
       Entity["Country", "Iraq"], 
       Entity["Country", "Jordan"], 
       Entity["Country", "Kuwait"], 
       Entity["Country", "SaudiArabia"], 
       Entity["Country", "Syria"], 
       Entity["Country", "Lebanon"], 
       Entity["Country", "WestBank"], 
       Entity["Country", "SouthKorea"], 
       Entity["Country", "Oman"], 
       Entity["Country", "UnitedArabEmirates"], 
       Entity["Country", "Yemen"], 
       Entity["Country", "Qatar"], 
       Entity["Country", "Belarus"], 
       Entity["Country", "Estonia"], 
       Entity["Country", "Finland"], 
       Entity["Country", "Latvia"], 
       Entity["Country", "Lithuania"], 
       Entity["Country", "Norway"], 
       Entity["Country", "Poland"], 
       Entity["Country", "Ukraine"], 
       Entity["Country", "Bulgaria"], 
       Entity["Country", "Greece"]}, {
      Null, {{6, 7}, {5, 7}, {46, 48}, {19, 21}, {25, 5}, {25, 7}, {8, 9}, {1,
        5}, {1, 6}, {1, 7}, {39, 44}, {31, 37}, {19, 22}, {24, 25}, {24, 6}, {
       24, 7}, {8, 11}, {9, 11}, {1, 2}, {2, 24}, {2, 25}, {2, 27}, {2, 28}, {
       2, 29}, {2, 5}, {2, 22}, {9, 12}, {2, 12}, {24, 12}, {27, 12}, {29, 
       12}, {12, 50}, {12, 51}, {12, 54}, {12, 55}, {12, 56}, {11, 59}, {2, 
       26}, {2, 23}, {29, 45}, {33, 34}, {34, 39}, {34, 44}, {46, 47}, {34, 
       43}, {19, 20}, {2, 20}, {20, 21}, {20, 22}, {12, 52}, {11, 58}, {12, 
       57}, {34, 42}, {39, 42}, {43, 42}, {42, 11}, {39, 41}, {46, 41}, {49, 
       41}, {41, 47}, {41, 48}, {12, 53}, {32, 33}, {32, 34}, {32, 35}, {32, 
       36}, {31, 18}, {18, 21}, {17, 18}, {1, 4}, {2, 4}, {30, 31}, {16, 2}, {
       1, 3}, {8, 3}, {9, 3}, {3, 4}, {3, 11}, {3, 6}, {13, 14}, {16, 14}, {2,
        14}, {14, 28}, {14, 4}, {40, 41}, {3, 38}, {38, 39}, {38, 40}, {38, 
       41}, {38, 42}, {38, 11}, {8, 10}, {9, 10}, {10, 12}, {10, 11}, {13, 
       15}, {2, 15}, {14, 15}, {20, 15}, {15, 21}}}, {VertexLabels -> {
         Placed["Name", Tooltip]}, GraphHighlight -> {
         Entity["Country", "Russia"]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.175330096523796,
           2.6290130941192866`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {8.945510624275666,
           2.2580082229255822`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.272239472429343,
           2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.964880291634211,
           2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.540590328912305, 2.252459792413597}, {7.281816482546042,
           2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {6.822335055457, 
          2.16934137418661}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.486579349461005, 3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.443009261839985, 3.2027191601926184`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.735256857352663, 2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.335624270628159, 2.8367957807370434`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.689325541527592, 3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.175330096523796, 2.6290130941192866`}, {
          6.303337277408497, 3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.272239472429343, 2.017037026767733}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          7.964880291634211, 2.3921407322410393`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          9.382546717092186, 2.8220600164081877`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.945510624275666, 2.2580082229255822`}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.272239472429343, 2.017037026767733}, {6.000384926250906,
           1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {7.281816482546042, 
          2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.822335055457, 2.16934137418661}, {6.735256857352663, 
          2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.281816482546042, 2.411399828355326}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.964880291634211, 2.3921407322410393`}, {
          7.157730417991998, 2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.281816482546042, 2.411399828355326}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.85623213531272, 3.092364805211339}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          8.934033600001854, 3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{9.382546717092186, 2.8220600164081877`}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {8.934033600001854, 
          3.370518358724916}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.85623213531272, 3.092364805211339}, {7.486579349461005, 
          3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {
          10.072108910424673`, 2.682007647592574}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{8.934033600001854, 3.370518358724916}, {7.486579349461005,
           3.945186471685176}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.89616936938009, 1.8236455120196444`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.750362185836261`, 2.824854263487823}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.072108910424673`, 2.682007647592574}, {
          10.614459511237069`, 3.2983411159415965`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.157730417991998,
           2.924305609143709}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.689325541527592,
           3.4430270774050706`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.303337277408497,
           3.805210566821737}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.217143105202477,
           4.9519038621943094`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          6.9157007769481496`, 4.486228157529736}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {
          7.5707959882312075`, 4.641249887943768}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.166201902505318,
           4.300674514531985}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.551914639679471,
           5.067233292537589}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {7.903137664650651,
           4.922848890060684}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {8.154337454719593,
           4.670484308323797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.486579349461005, 3.945186471685176}, {6.891378398984895,
           4.8328499991571325`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {
          6.000384926250906, 1.7869367172336963`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.29940804111117, 1.2425560500553965`}, {5.03616873408509,
           1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.03616873408509, 1.8271879937030473`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.688780469487735, 2.1781257050984695`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.000384926250906, 1.7869367172336963`}, {
          5.71034955183646, 1.8446473635708633`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          4.707107761950306, 2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5.03616873408509, 1.8271879937030473`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.4538877577631188`, 0.9577980657514507}, {
          2.0959138219959117`, 1.179025803686988}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{2.0959138219959117`, 1.179025803686988}, {
          0.8138077088649824, 0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.707107761950306,
           2.1074339194160765`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.082658983946148, 2.068744120041775}, {4.902661226725587,
           2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          3.6640272513952965`, 1.6344281349906187`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{4.707107761950306, 2.1074339194160765`}, {
          4.902661226725587, 2.416542035710417}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{7.157730417991998, 2.924305609143709}, {6.735256857352663,
           2.5376605878968155`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{6.303337277408497, 3.805210566821737}, {5.600186248025635,
           4.500514355288878}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.861665380132091}, {0.8138077088649824, 
          0.8288713813257371}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.8138077088649824, 0.8288713813257371}, {
          0.12967045258268062`, 0.3887512635726389}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.967353393863903`, 2.491284324254797}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.262050051858715`, 2.812686708901881}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{14.458587066900096`, 2.492537521066502}, {
          15.315123659101236`, 2.3445692498286306`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.967353393863903`, 2.491284324254797}, {
          13.090009057617289`, 2.3327128595783533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{13.090009057617289`, 2.3327128595783533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.167399065850478`, 1.8109660303777533`}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.473853401084465`, 1.149816025872234}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10.89616936938009, 1.8236455120196444`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          11.686733302715762`, 2.350680662420862}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.167399065850478`, 1.8109660303777533`}, {
          12.986786362940466`, 1.868455689033428}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.473853401084465`, 1.149816025872234}, {
          12.077500256130426`, 0.8544413246191869}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.50420009483992, 0.07596117782007639}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.077500256130426`, 0.8544413246191869}, {
          12.907767142062674`, 0.5940238961947859}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{11.686733302715762`, 2.350680662420862}, {
          12.546803521373038`, 2.599261490130686}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.765675996985788`, 0.2249019675950441}}, 0.0810704299075887]}, 
        {Arrowheads[0.], 
         ArrowBox[{{12.50420009483992, 0.07596117782007639}, {
          12.211868621959413`, 0.}}, 0.0810704299075887]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[
         TooltipBox[
          DiskBox[{7.540590328912305, 2.252459792413597}, 0.0810704299075887],
          TemplateBox[{"\"Afghanistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Afghanistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.175330096523796, 2.6290130941192866}, 0.0810704299075887],
          TemplateBox[{"\"China\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "China"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.945510624275666, 2.2580082229255822}, 0.0810704299075887],
          TemplateBox[{"\"Iran\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iran"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.272239472429343, 2.017037026767733}, 0.0810704299075887],
          TemplateBox[{"\"Pakistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Pakistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.822335055457, 2.16934137418661}, 0.0810704299075887],
          TemplateBox[{"\"Tajikistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Tajikistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.964880291634211, 2.3921407322410393}, 0.0810704299075887],
          TemplateBox[{"\"Turkmenistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.281816482546042, 2.411399828355326}, 0.0810704299075887],
          TemplateBox[{"\"Uzbekistan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{9.382546717092186, 2.8220600164081877}, 0.0810704299075887],
          TemplateBox[{"\"Armenia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Armenia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.85623213531272, 3.092364805211339}, 0.0810704299075887],
          TemplateBox[{"\"Azerbaijan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.934033600001854, 3.370518358724916}, 0.0810704299075887],
          TemplateBox[{"\"Georgia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Georgia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.072108910424673, 2.682007647592574}, 0.0810704299075887],
          TemplateBox[{"\"Turkey\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Turkey"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
           DiskBox[{7.486579349461005, 3.945186471685176}, 
            0.0810704299075887]},
          TemplateBox[{"\"Russia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Russia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.29940804111117, 1.2425560500553965}, 0.0810704299075887],
          TemplateBox[{"\"Bangladesh\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Bangladesh"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.000384926250906, 1.7869367172336963}, 0.0810704299075887],
          TemplateBox[{"\"India\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "India"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.03616873408509, 1.8271879937030473}, 0.0810704299075887],
          TemplateBox[{"\"Myanmar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Myanmar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.688780469487735, 2.1781257050984695}, 0.0810704299075887],
          TemplateBox[{"\"Bhutan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bhutan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{1.4538877577631188, 0.9577980657514507}, 
           0.0810704299075887],
          TemplateBox[{"\"Brunei\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Brunei"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{2.0959138219959117, 1.179025803686988}, 0.0810704299075887],
          TemplateBox[{"\"Malaysia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Malaysia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.082658983946148, 2.068744120041775}, 0.0810704299075887],
          TemplateBox[{"\"Cambodia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Cambodia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.707107761950306, 2.1074339194160765}, 0.0810704299075887],
          TemplateBox[{"\"Laos\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Laos"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{3.6640272513952965, 1.6344281349906187}, 
           0.0810704299075887],
          TemplateBox[{"\"Thailand\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Thailand"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{4.902661226725587, 2.416542035710417}, 0.0810704299075887],
          TemplateBox[{"\"Vietnam\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Vietnam"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.443009261839985, 3.2027191601926184}, 0.0810704299075887],
          TemplateBox[{"\"Hong Kong\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "HongKong"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.157730417991998, 2.924305609143709}, 0.0810704299075887],
          TemplateBox[{"\"Kazakhstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.735256857352663, 2.5376605878968155}, 0.0810704299075887],
          TemplateBox[{"\"Kyrgyzstan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.335624270628159, 2.8367957807370434}, 0.0810704299075887],
          TemplateBox[{"\"Macau\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Macau"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.689325541527592, 3.4430270774050706}, 0.0810704299075887],
          TemplateBox[{"\"Mongolia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Mongolia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.71034955183646, 1.8446473635708633}, 0.0810704299075887],
          TemplateBox[{"\"Nepal\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Nepal"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.303337277408497, 3.805210566821737}, 0.0810704299075887],
          TemplateBox[{"\"North Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "NorthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{0., 0.861665380132091}, 0.0810704299075887],
          TemplateBox[{"\"East Timor\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "EastTimor"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.8138077088649824, 0.8288713813257371}, 
           0.0810704299075887],
          TemplateBox[{"\"Indonesia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Indonesia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{14.458587066900096, 2.492537521066502}, 0.0810704299075887],
          TemplateBox[{"\"Egypt\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Egypt"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.967353393863903, 2.491284324254797}, 0.0810704299075887],
          TemplateBox[{"\"Gaza Strip\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "GazaStrip"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{13.090009057617289, 2.3327128595783533}, 
           0.0810704299075887],
          TemplateBox[{"\"Israel\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Israel"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.262050051858715, 2.812686708901881}, 0.0810704299075887],
          TemplateBox[{"\"Libya\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Libya"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{15.315123659101236, 2.3445692498286306}, 
           0.0810704299075887],
          TemplateBox[{"\"Sudan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Sudan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{0.12967045258268062, 0.3887512635726389}, 
           0.0810704299075887],
          TemplateBox[{"\"Papua New Guinea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.89616936938009, 1.8236455120196444}, 0.0810704299075887],
          TemplateBox[{"\"Iraq\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Iraq"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.167399065850478, 1.8109660303777533}, 
           0.0810704299075887],
          TemplateBox[{"\"Jordan\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Jordan"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.473853401084465, 1.149816025872234}, 0.0810704299075887],
          TemplateBox[{"\"Kuwait\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Kuwait"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.077500256130426, 0.8544413246191869}, 
           0.0810704299075887],
          TemplateBox[{"\"Saudi Arabia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{11.686733302715762, 2.350680662420862}, 0.0810704299075887],
          TemplateBox[{"\"Syria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Syria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.546803521373038, 2.599261490130686}, 0.0810704299075887],
          TemplateBox[{"\"Lebanon\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lebanon"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.986786362940466, 1.868455689033428}, 0.0810704299075887],
          TemplateBox[{"\"West Bank\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "WestBank"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{5.600186248025635, 4.500514355288878}, 0.0810704299075887],
          TemplateBox[{"\"South Korea\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", "\"country\""},
            "Entity"]],
         Annotation[#, 
          Entity["Country", "SouthKorea"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.50420009483992, 0.07596117782007639}, 
           0.0810704299075887],
          TemplateBox[{"\"Oman\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Oman"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.765675996985788, 0.2249019675950441}, 
           0.0810704299075887],
          TemplateBox[{"\"United Arab Emirates\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
            "\"country\""}, "Entity"]],
         Annotation[#, 
          Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[DiskBox[{12.211868621959413, 0.}, 0.0810704299075887],
          TemplateBox[{"\"Yemen\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Yemen"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{12.907767142062674, 0.5940238961947859}, 
           0.0810704299075887],
          TemplateBox[{"\"Qatar\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Qatar"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.217143105202477, 4.9519038621943094}, 0.0810704299075887],
          TemplateBox[{"\"Belarus\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Belarus"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.9157007769481496, 4.486228157529736}, 0.0810704299075887],
          TemplateBox[{"\"Estonia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Estonia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.5707959882312075, 4.641249887943768}, 0.0810704299075887],
          TemplateBox[{"\"Finland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Finland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.166201902505318, 4.300674514531985}, 0.0810704299075887],
          TemplateBox[{"\"Latvia\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Latvia"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.551914639679471, 5.067233292537589}, 0.0810704299075887],
          TemplateBox[{"\"Lithuania\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Lithuania"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{7.903137664650651, 4.922848890060684}, 0.0810704299075887],
          TemplateBox[{"\"Norway\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Norway"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{8.154337454719593, 4.670484308323797}, 0.0810704299075887],
          TemplateBox[{"\"Poland\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Poland"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{6.891378398984895, 4.8328499991571325}, 0.0810704299075887],
          TemplateBox[{"\"Ukraine\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Ukraine"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.750362185836261, 2.824854263487823}, 0.0810704299075887],
          TemplateBox[{"\"Bulgaria\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Bulgaria"], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          DiskBox[{10.614459511237069, 3.2983411159415965}, 
           0.0810704299075887],
          TemplateBox[{"\"Greece\"", 
            RowBox[{"Entity", "[", 
              RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
            "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
           "Entity"]],
         Annotation[#, 
          Entity["Country", "Greece"], "Tooltip"]& ]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.748010425730412*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"df0f6561-e966-4917-9426-8b8e50c40285"]
}, Open  ]],

Cell["\<\
Find the communities in the graph to see which countries are geographically \
close together:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.747578594845845*^9, 3.747578629897319*^9}, 
   3.748009986860374*^9, 
   3.748277994563924*^9},ExpressionUUID->"44af3ae8-9941-4654-b679-\
0b7b87d659e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.747578137450749*^9, 3.747578144291679*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"2fb8fa50-84c1-4af6-b1a4-a99663aaf86a"],

Cell[BoxData[
 GraphicsBox[{{
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{11.238206039360929`, 2.166835427055554}, {
       11.238206039360929`, 2.581610884572244}, {11.076419283196703`, 
       3.036725366297962}, {10.661643825680013`, 3.036725366297962}, {
       9.566482082791754, 2.689928606932319}, {9.195094613081706, 
       2.2557932342562244`}, {8.883959001707375, 1.7043413859555168`}, {
       8.883959001707375, 1.2895659284388268`}, {8.927839590095338, 
       0.7444336079755279}, {9.274518593525901, 0.1830765743771762}, {
       9.689294051042591, 0.1830765743771762}, {9.917007117522125, 
       0.26204581357397416`}, {10.156477714539824`, 0.5975475954417967}}, 
       SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{4.723578014128792, 1.7449023792519816`}, {
       4.723578014128792, 2.1596778367686715`}, {4.027231781653908, 
       2.6885335140721476`}, {3.82897979367112, 2.8064316232048565`}, {
       3.41420433615443, 2.8064316232048565`}, {2.6575610933491363`, 
       2.286689125882674}, {2.6575610933491363`, 1.871913668365984}, {
       2.7360749005827127`, 1.439887295482468}, {3.409486453054772, 
       1.0204529130179352`}, {3.824261910571462, 1.0204529130179352`}}, 
       SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{5.3297174992012195`, 3.7308619268822607`}, {
       5.584615601070898, 3.848251233433471}, {5.716706587382442, 
       4.089965437990635}, {5.716706587382442, 4.504740895507325}, {
       5.668021130756827, 4.761389705260303}, {5.4391580230007985`, 
       4.889334576983326}, {4.373239804937405, 4.929980197409273}, {
       3.9584643474207146`, 4.929980197409273}, {3.9584643474207146`, 
       4.515204739892583}, {4.296511017598425, 3.873964631367423}, {
       4.555912161535158, 3.5885445154526794`}, {4.970687619051848, 
       3.5885445154526794`}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{6.652253453753666, 1.9591241079457187`}, {
       7.067028911270356, 1.9591241079457187`}, {7.71383971818152, 
       2.1702107384658262`}, {7.8078366354264865`, 2.8330300532348884`}, {
       7.8078366354264865`, 3.2478055107515784`}, {7.399297999321951, 
       3.4137376257519825`}, {6.984522541805261, 3.4137376257519825`}, {
       6.702361100603659, 3.0590394102287424`}, {6.652253453753666, 
       2.3738995654624087`}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{5.787856581857822, 0.37810955246469524`}, {
       5.954951676438171, 0.7725182430455816}, {5.954951676438171, 
       1.1872937005622717`}, {5.480778176151904, 1.483699314920887}, {
       5.066002718635214, 1.483699314920887}, {4.697215947211374, 
       0.8414488874613847}, {4.697215947211374, 0.4266734299446945}, {
       4.960413003844327, 0.12814431278510977`}, {5.375188461361017, 
       0.12814431278510977`}}, SplineClosed -> True]]}, 
    {EdgeForm[GrayLevel[0.5]], FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{0.17589419122044783`, 
       1.5975888952355115`}, {-0.20738772875834507`, 
       0.7792964054915942}, {-0.20738772875834507`, 0.364520947974904}, {
       0.08324351501112917, -0.20738772875834507`}, {
       0.49801897252781935`, -0.20738772875834507`}, {1.1175370940491582`, 
       0.7841581828065894}, {1.1175370940491582`, 1.1989336403232795`}, {
       0.590669648737138, 1.5975888952355115`}}, SplineClosed -> True]]}}, {
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     BezierCurveBox[{{5.580468853099477, 0.5854972812230403}, {
      5.008261255462932, 1.043303811216112}, {4.715175998492883, 
      1.4032277526612007`}, {4.422090741522835, 1.7631516941062892`}, {
      4.032209284348371, 2.1657720174366406`}},
      SplineDegree->2], 
     BezierCurveBox[{{5.580468853099477, 0.5854972812230403}, {
      5.962922595920241, 1.1286541790611286`}, {6.2618287914508315`, 
      1.4746067316087736`}, {6.560734986981421, 1.8205592841564184`}, {
      6.859641182512011, 2.1665118367040637`}},
      SplineDegree->2], 
     BezierCurveBox[{{5.580468853099477, 0.5854972812230403}, {
      5.008261255462932, 1.043303811216112}, {4.715175998492883, 
      1.4032277526612007`}, {4.422090741522835, 1.7631516941062892`}, {
      4.516190285370447, 1.9522901080103265`}},
      SplineDegree->2], 
     LineBox[{{5.580468853099477, 0.5854972812230403}, {5.167800732602672, 
      0.33553204154345484`}}], 
     LineBox[{{5.580468853099477, 0.5854972812230403}, {5.747563947679826, 
      0.9799059718039267}}], 
     LineBox[{{5.580468853099477, 0.5854972812230403}, {5.38328009869082, 
      0.7098159034701792}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {4.516190285370447, 
      1.9522901080103265`}}], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.422090741522835, 1.7631516941062892`}, {4.715175998492883, 
      1.4032277526612007`}, {5.008261255462932, 1.043303811216112}, {
      5.167800732602672, 0.33553204154345484`}},
      SplineDegree->2], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.22328433051904, 2.608956868075597}, {4.41435937668971, 
      3.0521417187145534`}, {4.605434422860379, 3.4953265693535096`}, {
      5.1223297704428745`, 3.9382496556406057`}},
      SplineDegree->2], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {4.075025674057745, 
      1.750410731956187}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.528272793794276, 
      1.7037023949236576`}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.844569096713328, 
      2.035598995616606}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.3756781045670157`, 
      1.9862873505449756`}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.414515818419558, 
      2.2905304057743683`}}], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.621592064912775, 
      2.5990438944465115`}}], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.422090741522835, 1.7631516941062892`}, {4.715175998492883, 
      1.4032277526612007`}, {5.008261255462932, 1.043303811216112}, {
      5.273390447393559, 1.276311586162542}},
      SplineDegree->2], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.422090741522835, 1.7631516941062892`}, {4.715175998492883, 
      1.4032277526612007`}, {5.008261255462932, 1.043303811216112}, {
      4.904603675969719, 0.6340611587030396}},
      SplineDegree->2], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.8198440528955633`, 
      2.4811457853138026`}}], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.22328433051904, 2.608956868075597}, {4.41435937668971, 
      3.0521417187145534`}, {4.605434422860379, 3.4953265693535096`}, {
      4.763299890293503, 3.7959322442110244`}},
      SplineDegree->2], 
     LineBox[{{4.032209284348371, 2.1657720174366406`}, {3.8990132366037185`, 
      1.6521043501334018`}}], 
     BezierCurveBox[{{4.032209284348371, 2.1657720174366406`}, {
      4.22328433051904, 2.608956868075597}, {4.41435937668971, 
      3.0521417187145534`}, {4.605434422860379, 3.4953265693535096`}, {
      4.50389874635677, 4.081352360125768}},
      SplineDegree->2], 
     BezierCurveBox[{{6.859641182512011, 2.1665118367040637`}, {
      6.273778458226619, 2.112956404530629}, {5.687915733941229, 
      2.059400972357195}, {5.1020530096558385`, 2.0058455401837607`}, {
      4.516190285370447, 1.9522901080103265`}},
      SplineDegree->2], 
     BezierCurveBox[{{6.859641182512011, 2.1665118367040637`}, {
      6.560734986981421, 1.8205592841564184`}, {6.2618287914508315`, 
      1.4746067316087736`}, {5.962922595920241, 1.1286541790611286`}, {
      5.747563947679826, 0.9799059718039267}},
      SplineDegree->2], 
     LineBox[{{6.859641182512011, 2.1665118367040637`}, {7.001099854972026, 
      2.571643161883634}}], 
     LineBox[{{6.859641182512011, 2.1665118367040637`}, {6.909748829362004, 
      2.8516516814703974`}}], 
     LineBox[{{6.859641182512011, 2.1665118367040637`}, {7.278425706577449, 
      2.5637331258394926`}}], 
     BezierCurveBox[{{6.859641182512011, 2.1665118367040637`}, {
      7.652887799147685, 2.2436872570867807`}, {8.166944733073066, 
      2.0560484847125453`}, {8.68100166699845, 1.8684097123383099`}, {
      9.09134673046572, 1.4969536571971718`}},
      SplineDegree->2], 
     LineBox[{{4.516190285370447, 1.9522901080103265`}, {4.075025674057745, 
      1.750410731956187}}], 
     LineBox[{{5.167800732602672, 0.33553204154345484`}, {5.38328009869082, 
      0.7098159034701792}}], 
     LineBox[{{5.167800732602672, 0.33553204154345484`}, {4.904603675969719, 
      0.6340611587030396}}], 
     LineBox[{{5.747563947679826, 0.9799059718039267}, {5.38328009869082, 
      0.7098159034701792}}], 
     LineBox[{{5.747563947679826, 0.9799059718039267}, {5.273390447393559, 
      1.276311586162542}}], 
     LineBox[{{5.38328009869082, 0.7098159034701792}, {5.273390447393559, 
      1.276311586162542}}], 
     LineBox[{{5.38328009869082, 0.7098159034701792}, {4.904603675969719, 
      0.6340611587030396}}], 
     LineBox[{{7.001099854972026, 2.571643161883634}, {6.909748829362004, 
      2.8516516814703974`}}], 
     LineBox[{{7.001099854972026, 2.571643161883634}, {7.191910270563606, 
      3.2063498969936375`}}], 
     LineBox[{{7.001099854972026, 2.571643161883634}, {7.278425706577449, 
      2.5637331258394926`}}], 
     LineBox[{{6.909748829362004, 2.8516516814703974`}, {7.191910270563606, 
      3.2063498969936375`}}], 
     LineBox[{{6.909748829362004, 2.8516516814703974`}, {7.278425706577449, 
      2.5637331258394926`}}], 
     BezierCurveBox[{{6.909748829362004, 2.8516516814703974`}, {
      6.568704605082822, 3.2563130058341643`}, {6.08657966020284, 
      3.4836252224363116`}, {5.604454715322857, 3.7109374390384584`}, {
      5.1223297704428745`, 3.9382496556406057`}},
      SplineDegree->2], 
     LineBox[{{7.191910270563606, 3.2063498969936375`}, {7.278425706577449, 
      2.5637331258394926`}}], 
     BezierCurveBox[{{7.191910270563606, 3.2063498969936375`}, {
      6.568704605082822, 3.2563130058341643`}, {6.08657966020284, 
      3.4836252224363116`}, {5.604454715322857, 3.7109374390384584`}, {
      5.1223297704428745`, 3.9382496556406057`}},
      SplineDegree->2], 
     BezierCurveBox[{{7.278425706577449, 2.5637331258394926`}, {
      7.652887799147685, 2.2436872570867807`}, {8.166944733073066, 
      2.0560484847125453`}, {8.68100166699845, 1.8684097123383099`}, {
      9.09134673046572, 1.4969536571971718`}},
      SplineDegree->2], 
     BezierCurveBox[{{7.278425706577449, 2.5637331258394926`}, {
      7.652887799147685, 2.2436872570867807`}, {8.166944733073066, 
      2.0560484847125453`}, {8.68100166699845, 1.8684097123383099`}, {
      9.40248234184005, 2.0484055054978794`}},
      SplineDegree->2], 
     LineBox[{{7.278425706577449, 2.5637331258394926`}, {7.506451989423175, 
      2.3775984672241712`}}], 
     LineBox[{{7.278425706577449, 2.5637331258394926`}, {7.6004489066681415`, 
      3.0404177819932334`}}], 
     BezierCurveBox[{{5.1223297704428745`, 3.9382496556406057`}, {
      5.160094939680546, 3.27276513827109}, {5.197860108918217, 
      2.607280620901574}, {5.235625278155887, 1.941796103532058}, {
      5.273390447393559, 1.276311586162542}},
      SplineDegree->2], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {4.763299890293503, 
      3.7959322442110244`}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {4.50389874635677, 
      4.081352360125768}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {5.509318858624097, 
      4.29735316674898}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {4.967390489001127, 
      4.655978125835871}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {5.460633401998482, 
      4.554001976501958}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {
      5.2317702942424535`, 4.681946848224981}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {4.750029316121408, 
      4.489694945563533}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {5.377227872312553, 
      4.055638962191816}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {4.873736266015466, 
      4.246553204440424}}], 
     LineBox[{{5.1223297704428745`, 3.9382496556406057`}, {5.172719817607371, 
      4.350483963058231}}], 
     LineBox[{{3.616874181813117, 1.2278406417762802`}, {4.075025674057745, 
      1.750410731956187}}], 
     LineBox[{{3.616874181813117, 1.2278406417762802`}, {3.528272793794276, 
      1.7037023949236576`}}], 
     LineBox[{{4.075025674057745, 1.750410731956187}, {3.528272793794276, 
      1.7037023949236576`}}], 
     LineBox[{{4.075025674057745, 1.750410731956187}, {3.844569096713328, 
      2.035598995616606}}], 
     LineBox[{{4.075025674057745, 1.750410731956187}, {3.8990132366037185`, 
      1.6521043501334018`}}], 
     LineBox[{{3.528272793794276, 1.7037023949236576`}, {3.3756781045670157`, 
      1.9862873505449756`}}], 
     LineBox[{{3.528272793794276, 1.7037023949236576`}, {2.9434626293410577`, 
      1.647275024240813}}], 
     LineBox[{{0.3832819199787929, 1.3902011664771665`}, {0.9101493652908133, 
      0.9915459115649345}}], 
     BezierCurveBox[{{0.9101493652908133, 0.9915459115649345}, {
      1.4184776813033744`, 1.1554781897339041`}, {1.9268059973159355`, 
      1.3194104679028738`}, {2.4351343133284966`, 1.4833427460718434`}, {
      2.9434626293410577`, 1.647275024240813}},
      SplineDegree->2], 
     LineBox[{{0.9101493652908133, 0.9915459115649345}, {0.5661222817008387, 
      0.5235027715185037}}], 
     LineBox[{{2.8649488221074813`, 2.079301397124329}, {3.3756781045670157`, 
      1.9862873505449756`}}], 
     LineBox[{{2.8649488221074813`, 2.079301397124329}, {2.9434626293410577`, 
      1.647275024240813}}], 
     LineBox[{{2.8649488221074813`, 2.079301397124329}, {3.414515818419558, 
      2.2905304057743683`}}], 
     LineBox[{{3.3756781045670157`, 1.9862873505449756`}, {
      2.9434626293410577`, 1.647275024240813}}], 
     LineBox[{{3.3756781045670157`, 1.9862873505449756`}, {3.414515818419558, 
      2.2905304057743683`}}], 
     LineBox[{{5.273390447393559, 1.276311586162542}, {4.904603675969719, 
      0.6340611587030396}}], 
     LineBox[{{4.50389874635677, 4.081352360125768}, {4.16585207617906, 
      4.722592468650928}}], 
     LineBox[{{0.29063124376947425`, 0.}, {0.5661222817008387, 
      0.5235027715185037}}], 
     LineBox[{{0.5661222817008387, 0.5235027715185037}, {0., 
      0.5719086767332491}}], 
     LineBox[{{10.445139706780104`, 2.4460742784306966`}, {
      10.445925421953326`, 2.16129543968214}}], 
     LineBox[{{10.445139706780104`, 2.4460742784306966`}, {9.938365168711648, 
      2.0825102427882674`}}], 
     LineBox[{{10.445139706780104`, 2.4460742784306966`}, {
      11.030818310602584`, 2.374223155813899}}], 
     LineBox[{{10.445139706780104`, 2.4460742784306966`}, {
      10.869031554438358`, 2.829337637539617}}], 
     LineBox[{{10.445925421953326`, 2.16129543968214}, {9.938365168711648, 
      2.0825102427882674`}}], 
     LineBox[{{9.938365168711648, 2.0825102427882674`}, {9.59685476941314, 
      1.6033621958619544`}}], 
     LineBox[{{9.938365168711648, 2.0825102427882674`}, {9.40248234184005, 
      2.0484055054978794`}}], 
     LineBox[{{9.938365168711648, 2.0825102427882674`}, {9.7738698115501, 
      2.482540878173974}}], 
     LineBox[{{9.938365168711648, 2.0825102427882674`}, {10.101713294258921`, 
      1.6528322399774797`}}], 
     LineBox[{{9.09134673046572, 1.4969536571971718`}, {9.59685476941314, 
      1.6033621958619544`}}], 
     LineBox[{{9.09134673046572, 1.4969536571971718`}, {9.135227318853683, 
      0.951821336733873}}], 
     LineBox[{{9.09134673046572, 1.4969536571971718`}, {9.464843986349878, 
      1.0687547936047403`}}], 
     LineBox[{{9.09134673046572, 1.4969536571971718`}, {9.40248234184005, 
      2.0484055054978794`}}], 
     LineBox[{{9.59685476941314, 1.6033621958619544`}, {9.464843986349878, 
      1.0687547936047403`}}], 
     LineBox[{{9.59685476941314, 1.6033621958619544`}, {9.40248234184005, 
      2.0484055054978794`}}], 
     LineBox[{{9.59685476941314, 1.6033621958619544`}, {10.101713294258921`, 
      1.6528322399774797`}}], 
     LineBox[{{9.135227318853683, 0.951821336733873}, {9.464843986349878, 
      1.0687547936047403`}}], 
     LineBox[{{9.464843986349878, 1.0687547936047403`}, {9.808774267340302, 
      0.6479986390084647}}], 
     LineBox[{{9.464843986349878, 1.0687547936047403`}, {9.70961938876378, 
      0.46943354233231926`}}], 
     LineBox[{{9.464843986349878, 1.0687547936047403`}, {9.949089985781479, 
      0.8049353242001418}}], 
     LineBox[{{9.464843986349878, 1.0687547936047403`}, {9.481906322284246, 
      0.3904643031355213}}], 
     LineBox[{{9.40248234184005, 2.0484055054978794`}, {9.7738698115501, 
      2.482540878173974}}], 
     LineBox[{{9.808774267340302, 0.6479986390084647}, {9.70961938876378, 
      0.46943354233231926`}}], 
     LineBox[{{9.808774267340302, 0.6479986390084647}, {9.949089985781479, 
      0.8049353242001418}}]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{5.580468853099477, 0.5854972812230403}, 0.06912924291944836]},
       TemplateBox[{"\"Afghanistan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Afghanistan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{4.032209284348371, 2.1657720174366406}, 0.06912924291944836]},
       TemplateBox[{"\"China\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"China\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"China\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "China"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{6.859641182512011, 2.1665118367040637}, 0.06912924291944836]},
       TemplateBox[{"\"Iran\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Iran"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{4.516190285370447, 1.9522901080103265}, 0.06912924291944836]},
       TemplateBox[{"\"Pakistan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Pakistan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{5.167800732602672, 0.33553204154345484}, 
         0.06912924291944836]},
       TemplateBox[{"\"Tajikistan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Tajikistan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{5.747563947679826, 0.9799059718039267}, 0.06912924291944836]},
       TemplateBox[{"\"Turkmenistan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Turkmenistan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{5.38328009869082, 0.7098159034701792}, 0.06912924291944836]},
       TemplateBox[{"\"Uzbekistan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Uzbekistan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{7.001099854972026, 2.571643161883634}, 0.06912924291944836]},
       TemplateBox[{"\"Armenia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Armenia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{6.909748829362004, 2.8516516814703974}, 0.06912924291944836]},
       TemplateBox[{"\"Azerbaijan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Azerbaijan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{7.191910270563606, 3.2063498969936375}, 0.06912924291944836]},
       TemplateBox[{"\"Georgia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Georgia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{7.278425706577449, 2.5637331258394926}, 0.06912924291944836]},
       TemplateBox[{"\"Turkey\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Turkey"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.1223297704428745, 3.9382496556406057}, 
         0.06912924291944836]},
       TemplateBox[{"\"Russia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Russia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.616874181813117, 1.2278406417762802}, 0.06912924291944836]},
       TemplateBox[{"\"Bangladesh\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Bangladesh"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{4.075025674057745, 1.750410731956187}, 0.06912924291944836]},
       TemplateBox[{"\"India\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"India\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"India\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "India"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.528272793794276, 1.7037023949236576}, 0.06912924291944836]},
       TemplateBox[{"\"Myanmar\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Myanmar"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.844569096713328, 2.035598995616606}, 0.06912924291944836]},
       TemplateBox[{"\"Bhutan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Bhutan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1, 0.6, 0.7], 
        DiskBox[{0.3832819199787929, 1.3902011664771665}, 
         0.06912924291944836]},
       TemplateBox[{"\"Brunei\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Brunei"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1, 0.6, 0.7], 
        DiskBox[{0.9101493652908133, 0.9915459115649345}, 
         0.06912924291944836]},
       TemplateBox[{"\"Malaysia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Malaysia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{2.8649488221074813, 2.079301397124329}, 0.06912924291944836]},
       TemplateBox[{"\"Cambodia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Cambodia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.3756781045670157, 1.9862873505449756}, 
         0.06912924291944836]},
       TemplateBox[{"\"Laos\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Laos"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{2.9434626293410577, 1.647275024240813}, 0.06912924291944836]},
       TemplateBox[{"\"Thailand\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Thailand"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.414515818419558, 2.2905304057743683}, 0.06912924291944836]},
       TemplateBox[{"\"Vietnam\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Vietnam"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.621592064912775, 2.5990438944465115}, 0.06912924291944836]},
       TemplateBox[{"\"Hong Kong\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "HongKong"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{5.273390447393559, 1.276311586162542}, 0.06912924291944836]},
       TemplateBox[{"\"Kazakhstan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Kazakhstan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.2, 1, 0.6], 
        DiskBox[{4.904603675969719, 0.6340611587030396}, 0.06912924291944836]},
       TemplateBox[{"\"Kyrgyzstan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Kyrgyzstan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.8198440528955633, 2.4811457853138026}, 
         0.06912924291944836]},
       TemplateBox[{"\"Macau\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Macau"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.763299890293503, 3.7959322442110244}, 0.06912924291944836]},
       TemplateBox[{"\"Mongolia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Mongolia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.14, 1, 0.9], 
        DiskBox[{3.8990132366037185, 1.6521043501334018}, 
         0.06912924291944836]},
       TemplateBox[{"\"Nepal\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Nepal"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.50389874635677, 4.081352360125768}, 0.06912924291944836]},
       TemplateBox[{"\"North Korea\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "NorthKorea"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1, 0.6, 0.7], 
        DiskBox[{0.29063124376947425, 0.}, 0.06912924291944836]},
       TemplateBox[{"\"East Timor\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "EastTimor"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1, 0.6, 0.7], 
        DiskBox[{0.5661222817008387, 0.5235027715185037}, 
         0.06912924291944836]},
       TemplateBox[{"\"Indonesia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Indonesia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{10.445139706780104, 2.4460742784306966}, 
         0.06912924291944836]},
       TemplateBox[{"\"Egypt\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Egypt"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{10.445925421953326, 2.16129543968214}, 0.06912924291944836]},
       TemplateBox[{"\"Gaza Strip\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "GazaStrip"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.938365168711648, 2.0825102427882674}, 0.06912924291944836]},
       TemplateBox[{"\"Israel\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Israel"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{11.030818310602584, 2.374223155813899}, 0.06912924291944836]},
       TemplateBox[{"\"Libya\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Libya"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{10.869031554438358, 2.829337637539617}, 0.06912924291944836]},
       TemplateBox[{"\"Sudan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Sudan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.1, 0.6, 0.7], 
        DiskBox[{0., 0.5719086767332491}, 0.06912924291944836]},
       TemplateBox[{"\"Papua New Guinea\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"", 
         "\"country\""}, "Entity"]],
      Annotation[#, 
       Entity["Country", "PapuaNewGuinea"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.09134673046572, 1.4969536571971718}, 0.06912924291944836]},
       TemplateBox[{"\"Iraq\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Iraq"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.59685476941314, 1.6033621958619544}, 0.06912924291944836]},
       TemplateBox[{"\"Jordan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Jordan"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.135227318853683, 0.951821336733873}, 0.06912924291944836]},
       TemplateBox[{"\"Kuwait\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Kuwait"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.464843986349878, 1.0687547936047403}, 0.06912924291944836]},
       TemplateBox[{"\"Saudi Arabia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "SaudiArabia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.40248234184005, 2.0484055054978794}, 0.06912924291944836]},
       TemplateBox[{"\"Syria\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Syria"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.7738698115501, 2.482540878173974}, 0.06912924291944836]},
       TemplateBox[{"\"Lebanon\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Lebanon"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{10.101713294258921, 1.6528322399774797}, 
         0.06912924291944836]},
       TemplateBox[{"\"West Bank\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "WestBank"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.16585207617906, 4.722592468650928}, 0.06912924291944836]},
       TemplateBox[{"\"South Korea\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "SouthKorea"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.808774267340302, 0.6479986390084647}, 0.06912924291944836]},
       TemplateBox[{"\"Oman\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Oman"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.70961938876378, 0.46943354233231926}, 0.06912924291944836]},
       TemplateBox[{"\"United Arab Emirates\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"", 
         "\"country\""}, "Entity"]],
      Annotation[#, 
       Entity["Country", "UnitedArabEmirates"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.949089985781479, 0.8049353242001418}, 0.06912924291944836]},
       TemplateBox[{"\"Yemen\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Yemen"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0, 1, 0.8], 
        DiskBox[{9.481906322284246, 0.3904643031355213}, 0.06912924291944836]},
       TemplateBox[{"\"Qatar\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Qatar"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.509318858624097, 4.29735316674898}, 0.06912924291944836]},
       TemplateBox[{"\"Belarus\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Belarus"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.967390489001127, 4.655978125835871}, 0.06912924291944836]},
       TemplateBox[{"\"Estonia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Estonia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.460633401998482, 4.554001976501958}, 0.06912924291944836]},
       TemplateBox[{"\"Finland\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Finland"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.2317702942424535, 4.681946848224981}, 0.06912924291944836]},
       TemplateBox[{"\"Latvia\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Latvia"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.750029316121408, 4.489694945563533}, 0.06912924291944836]},
       TemplateBox[{"\"Lithuania\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Lithuania"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.377227872312553, 4.055638962191816}, 0.06912924291944836]},
       TemplateBox[{"\"Norway\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Norway"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{4.873736266015466, 4.246553204440424}, 0.06912924291944836]},
       TemplateBox[{"\"Poland\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Poland"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.8, 0.6, 0.8], 
        DiskBox[{5.172719817607371, 4.350483963058231}, 0.06912924291944836]},
       TemplateBox[{"\"Ukraine\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Ukraine"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{7.506451989423175, 2.3775984672241712}, 0.06912924291944836]},
       TemplateBox[{"\"Bulgaria\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Bulgaria"], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Hue[0.07, 1, 1], 
        DiskBox[{7.6004489066681415, 3.0404177819932334}, 
         0.06912924291944836]},
       TemplateBox[{"\"Greece\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"", "\"country\""}, 
        "Entity"]],
      Annotation[#, 
       Entity["Country", "Greece"], "Tooltip"]& ]}}},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.74801033356173*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"e3c9463b-5217-4e63-9e65-27a4e9c8d29b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"2fc57a81-64d5-44b1-a4b9-bc2f0eeb6d37"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Geographics ", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.7162167688916903`*^9, 3.716216771314136*^9}, {
   3.716259624938788*^9, 3.716259630032078*^9}, {3.717186272577386*^9, 
   3.717186277933543*^9}},ExpressionUUID->"805a5fda-c872-4f69-ba95-\
d238b735bdcb"],

Cell["\<\
Superimposing geographically distributed data on maps can provide insight \
into the relationship of the data with the geography of the place.\
\>", "Text",
 CellChangeTimes->{{3.7260191419720993`*^9, 
  3.7260191889185963`*^9}},ExpressionUUID->"075999cc-ce9f-41a1-b7d0-\
e090e41767ba"],

Cell["\<\
Plot the location of earthquakes of magnitudes 7 or higher around the world \
since 1980:\
\>", "Text",
 CellChangeTimes->{{3.7163040705762*^9, 3.716304086550828*^9}, {
   3.7260191923502483`*^9, 3.726019203938463*^9}, {3.7260853913572063`*^9, 
   3.726085392909671*^9}, 
   3.748278004746396*^9},ExpressionUUID->"f6a034fa-6e1f-4dcb-aaa2-\
2c708085f4c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"quakes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"EarthquakeData", "[", 
      RowBox[{"All", ",", "7", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1980", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2018", ",", "9", ",", "30"}], "}"}]}], "}"}], ",", 
       "\"\<Position\>\""}], "]"}], "[", "\"\<Values\>\"", "]"}], "//", 
    "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GeoGraphics", "[", 
  RowBox[{"{", 
   RowBox[{"Red", ",", 
    RowBox[{"PointSize", "[", ".01", "]"}], ",", 
    RowBox[{"Point", "[", "quakes", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.71629848759023*^9, 3.7162985296014633`*^9}, {
   3.716298567057564*^9, 3.716298604947999*^9}, 3.716298675900887*^9, {
   3.716298817303697*^9, 3.716298817787775*^9}, {3.716298898141047*^9, 
   3.716298924578253*^9}, {3.716304056393265*^9, 3.716304057736122*^9}, {
   3.726018901171365*^9, 3.726018926335678*^9}, 3.72608418823757*^9, {
   3.7260848867162457`*^9, 3.726084903112115*^9}, {3.72608504809944*^9, 
   3.7260850493435917`*^9}, {3.7260854982158213`*^9, 3.726085501826089*^9}, 
   3.726085628515703*^9, {3.747578649366783*^9, 3.747578650105707*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"21a41204-d543-4b0d-9d52-ae9e09fe0f4c"],

Cell["Plot the frequency of such earthquakes around the world:", "Text",
 CellChangeTimes->{{3.726085380968689*^9, 
  3.726085401421912*^9}},ExpressionUUID->"047ddf24-789d-4f3a-91c9-\
0df1260aaa28"],

Cell[BoxData[
 RowBox[{"GeoHistogram", "[", 
  RowBox[{"quakes", ",", "50", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726085288767605*^9, 3.726085289759982*^9}, {
  3.726085348866593*^9, 3.726085361343649*^9}, {3.7260855082771063`*^9, 
  3.7260855176574783`*^9}, {3.7260856422199163`*^9, 
  3.726085657081066*^9}},ExpressionUUID->"116a7cbd-2332-4b7b-b096-\
466acb4baa62"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9d7c3ee1-3d3f-40ed-9996-d49542dfa6c0"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Visualisations in Time", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.716259262411326*^9, 3.71625926671128*^9}, {
   3.717186315639369*^9, 3.717186339234973*^9}, {3.8329439769162083`*^9, 
   3.832943977299232*^9}},ExpressionUUID->"a7d0cba7-fd6a-46da-9ea2-\
51c2d857430e"],

Cell[CellGroupData[{

Cell["DateListPlots", "Subsection",
 CellChangeTimes->{{3.716303477393111*^9, 3.716303483595152*^9}, {
  3.717186492407836*^9, 
  3.717186496357576*^9}},ExpressionUUID->"6724b996-1146-40a7-b2ad-\
bc64fa89aed5"],

Cell[TextData[{
 "A special type of scatter plot is plots that have time on the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "d5e7c0e0-4c91-4fbd-aacf-35378ed5406f"],
 " axis and show the change in values of a variable with time on the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "5be56997-c992-47ea-832d-c265ce13826f"],
 " axis. These provide insight into the trend of the data."
}], "Text",
 CellChangeTimes->{{3.726019276227827*^9, 3.7260193380127163`*^9}, 
   3.726019404054805*^9, {3.726085696634493*^9, 3.726085753577092*^9}, {
   3.748278015985223*^9, 3.748278031989799*^9}, {3.7482820309761963`*^9, 
   3.748282031856201*^9}, {3.748603198278515*^9, 
   3.7486032173075333`*^9}},ExpressionUUID->"fb2dc44b-3354-4b76-9f52-\
de8d5a181538"],

Cell["\<\
The following plot shows the daily and weekly mean temperature and humidity \
of Champaign, IL, in a year:\
\>", "Text",
 CellChangeTimes->{{3.716303504424118*^9, 3.7163035234393682`*^9}, {
   3.72601941973915*^9, 3.726019433039138*^9}, {3.748278041970433*^9, 
   3.748278046936454*^9}, 3.748603180646714*^9, {3.8321599101769733`*^9, 
   3.832159916447164*^9}},ExpressionUUID->"7964d11b-ef3a-4438-bbc1-\
2d5a065563b8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"minTemp", " ", "=", 
    RowBox[{"WeatherData", "[", 
     RowBox[{"\"\<KCMI\>\"", ",", " ", "\"\<MinTemperature\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2017", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2018", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        "\"\<Week\>\""}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"maxTemp", " ", "=", 
    RowBox[{"WeatherData", "[", 
     RowBox[{"\"\<KCMI\>\"", ",", " ", "\"\<MaxTemperature\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2017", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2018", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        "\"\<Week\>\""}], "}"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.713103139102002*^9, {3.7131031741793413`*^9, 3.713103194998414*^9}, {
   3.7162592825426617`*^9, 3.716259306414886*^9}, 3.717186445971192*^9, {
   3.726019352742138*^9, 3.726019387021027*^9}, {3.747578678694108*^9, 
   3.747578695445024*^9}, {3.747578731311734*^9, 3.747578773827466*^9}, 
   3.747578824885212*^9, {3.7475788898088503`*^9, 3.747578908925538*^9}, {
   3.747581751818152*^9, 3.7475817585980053`*^9}, 3.748010783727888*^9, 
   3.748010885003503*^9, {3.748565536657325*^9, 3.748565537024425*^9}, {
   3.7486033833773003`*^9, 3.7486034078182707`*^9}, {3.7486036606217537`*^9, 
   3.748603663809003*^9}, {3.748604392222541*^9, 3.748604398859351*^9}, 
   3.748604534168229*^9, 3.748604609215728*^9},
 CellID->1625699269,ExpressionUUID->"9c7823a5-6da6-4272-83da-75d90c3c9da0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data\>\""}], "}"}], 
    "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<ChampaignWeather.mx\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.748604536099018*^9, 
  3.748604605434211*^9}},ExpressionUUID->"fb2f748d-f6c0-4680-ae73-\
b580f8634330"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minTemp", ",", "maxTemp"}], "}"}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
   RowBox[{"TargetUnits", "\[Rule]", "\"\<Fahrenheit\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "LightBlue", ",", "Blue"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.74860344301153*^9, 3.7486036146185713`*^9}, {
  3.74860367956404*^9, 3.74860372764705*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"c0359a51-9022-4ae7-97fc-70910ba077b0"],

Cell["Compare it with similar data from a decade earlier:", "Text",
 CellChangeTimes->{{3.748603154816012*^9, 
  3.748603170190321*^9}},ExpressionUUID->"2ca40e6a-02b8-4698-9f3b-\
acabefaad3d6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"minTemp2007", " ", "=", 
    RowBox[{"WeatherData", "[", 
     RowBox[{"\"\<KCMI\>\"", ",", " ", "\"\<MinTemperature\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2007", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2008", ",", "1", ",", " ", "1"}], "}"}], ",", " ", 
        "\"\<Week\>\""}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"maxTemp2007", " ", "=", 
    RowBox[{"WeatherData", "[", 
     RowBox[{"\"\<KCMI\>\"", ",", " ", "\"\<MaxTemperature\>\"", ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2007", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"2008", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
        "\"\<Week\>\""}], "}"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.748603637463313*^9, 3.748603641309989*^9}, {
   3.7486037762324553`*^9, 3.748603779142623*^9}, {3.7486038523261642`*^9, 
   3.748603867171451*^9}, {3.748604422350318*^9, 3.748604427459209*^9}, 
   3.748604623203289*^9},ExpressionUUID->"9ce50725-7deb-4075-8f8f-\
241ee8ffb7a7"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"minTemp", ",", "maxTemp", ",", 
     RowBox[{"TimeSeriesShift", "[", 
      RowBox[{"minTemp2007", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "\"\<Year\>\""}], "}"}]}], "]"}], ",", 
     RowBox[{"TimeSeriesShift", "[", 
      RowBox[{"maxTemp2007", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "\"\<Year\>\""}], "}"}]}], "]"}]}], "}"}], ",", 
   " ", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       TagBox[
        TemplateBox[{"6", "\" items\""}, "RowDefault"], "IconizedNameLight"], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["\"Sequence\"", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1536", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[
    Joined -> True, Filling -> {1 -> {2}, 3 -> {4}}, FillingStyle -> Directive[
       Opacity[0.3], Orange], TargetUnits -> "Fahrenheit", 
     PlotStyle -> {LightBrown, 
       Darker[Orange], 
       Directive[Dashed, 
        Darker[Brown]], 
       Directive[Dashed, 
        Darker[Red]]}, 
     PlotLegends -> {
      "Min Weekly Temperature 2017", "Max Weekly Temperature 2017", 
       "Min Weekly Temperature 2007", "Max Weekly Temperature 2007"}],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.74860344301153*^9, 3.7486036146185713`*^9}, {
   3.74860367956404*^9, 3.74860372764705*^9}, {3.7486037888966837`*^9, 
   3.7486038267564363`*^9}, {3.74860388189946*^9, 3.7486038862805977`*^9}, {
   3.7486039949366417`*^9, 3.748604120537624*^9}, {3.7486041679656353`*^9, 
   3.748604386053267*^9}, {3.748604474471323*^9, 3.748604476004314*^9}, 
   3.748604637619977*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"d12c29ba-b5ac-4676-b4a3-87a1405e602b"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Note:",
 FontSize->18,
 FontColor->GrayLevel[0.5]]], "Subsubsection",
 CellChangeTimes->{{3.748604801338201*^9, 
  3.748604839531341*^9}},ExpressionUUID->"3b9b36b0-8f62-4391-9577-\
ab1fb03a85c9"],

Cell[TextData[{
 StyleBox[ButtonBox["Iconize",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Iconize"],
  FontWeight->"Bold"],
 " is helpful in hiding extraneous details from your code:"
}], "Text",
 CellChangeTimes->{{3.748604801338201*^9, 3.748604841096158*^9}, {
  3.832159932328458*^9, 
  3.83215994200347*^9}},ExpressionUUID->"de259517-415b-4cf0-b451-\
8f6e119fdc37"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"Expression", 
     TagBox[
      TemplateBox[{"6", "\" items\""}, "RowDefault"], "IconizedNameLight"], 
     GridBox[{{
        RowBox[{
          TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["\"Sequence\"", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["1536", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"]],
  Sequence[
  Joined -> True, Filling -> {1 -> {2}, 3 -> {4}}, FillingStyle -> Directive[
     Opacity[0.3], Orange], TargetUnits -> "Fahrenheit", 
   PlotStyle -> {LightBrown, 
     Darker[Orange], 
     Directive[Dashed, 
      Darker[Brown]], 
     Directive[Dashed, 
      Darker[Red]]}, 
   PlotLegends -> {
    "Min Weekly Temperature 2017", "Max Weekly Temperature 2017", 
     "Min Weekly Temperature 2007", "Max Weekly Temperature 2007"}],
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.748604678666499*^9, 3.748604686494648*^9}, {
  3.7486047407772083`*^9, 
  3.7486047782606993`*^9}},ExpressionUUID->"7dd83e33-f7cc-4946-a70d-\
cef734a111d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0a8bfd77-a836-4206-b0c0-425f593fe3db"],

Cell[CellGroupData[{

Cell["Tools for Visual Exploration: Visualisations in Time", "Section",
 CellChangeTimes->{{3.695911268160224*^9, 3.695911286693244*^9}, {
   3.69591132297021*^9, 3.6959113320741587`*^9}, {3.6965972727366*^9, 
   3.696597279691826*^9}, 3.696603064458644*^9, {3.716207639409047*^9, 
   3.716207659343873*^9}, {3.716259262411326*^9, 3.71625926671128*^9}, {
   3.717186315639369*^9, 3.717186339234973*^9}, {3.832943992900441*^9, 
   3.8329439932437077`*^9}},ExpressionUUID->"79068509-70d8-4bed-9f6a-\
1e728dbe9bf0"],

Cell[CellGroupData[{

Cell["TimelinePlot", "Subsection",
 CellChangeTimes->{{3.716303477393111*^9, 3.716303483595152*^9}, 
   3.71718650196833*^9, 
   3.832159950921507*^9},ExpressionUUID->"b29cbf3d-2c91-44b1-9ea3-\
f62048fa4afc"],

Cell[TextData[{
 StyleBox[ButtonBox["TimelinePlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimelinePlot"],
  FontWeight->"Bold"],
 " shows when events occur relative to each other:"
}], "Text",
 CellChangeTimes->{{3.726019477996443*^9, 3.726019493471031*^9}, {
  3.7482780574976683`*^9, 
  3.748278066439834*^9}},ExpressionUUID->"375c682c-d14f-4df6-a421-\
cf4f5ba5534e"],

Cell[BoxData[
 RowBox[{"TimelinePlot", "[", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"RandomEntity", "[", 
     RowBox[{"\"\<DeepSpaceProbe\>\"", ",", "10"}], "]"}], ",", 
    "\"\<LaunchDate\>\"", ",", "\"\<EntityAssociation\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7260785995669518`*^9, 3.7260786235664797`*^9}, {
  3.726078662013438*^9, 3.7260787004833307`*^9}, {3.726078799390519*^9, 
  3.726078833935512*^9}},ExpressionUUID->"0f936046-cfb4-497d-b90d-\
7e067e770b20"],

Cell["\<\
The following code creates a TimelinePlot of the earthquakes of varying \
magnitudes in Asia-Pacific countries in September 2018. It can be used to \
explore the timeline of occurrence of different magnitude earthquakes in a \
particular region:\
\>", "Text",
 CellChangeTimes->{{3.716303528607068*^9, 3.716303589016549*^9}, {
  3.726019496685487*^9, 3.726019620837665*^9}, {3.726084526199749*^9, 
  3.72608452909413*^9}, {3.726084748999282*^9, 3.7260848254157047`*^9}, {
  3.747582193950939*^9, 3.747582204610373*^9}, {3.7482780826246758`*^9, 
  3.7482780971749477`*^9}, {3.7482820577349253`*^9, 3.748282057919335*^9}, {
  3.83215995837564*^9, 
  3.832159958759603*^9}},ExpressionUUID->"f0c64f95-6ff5-44bc-bfc6-\
f7d6e3768968"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"earthquakes", " ", "=", 
     RowBox[{
      RowBox[{"GroupBy", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{"#", "[", "\"\<Magnitude\>\"", "]"}], "]"}], ",", 
            RowBox[{"#", "[", "\"\<Period\>\"", "]"}]}], "}"}], "&"}], "/@", 
         " ", 
         RowBox[{"Values", "[", 
          RowBox[{"EarthquakeData", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             TemplateBox[{"\"Asia\[Hyphen]Pacific\"", 
               RowBox[{"EntityClass", "[", 
                 RowBox[{"\"Country\"", ",", "\"AsiaPacific\""}], "]"}], 
               "\"EntityClass[\\\"Country\\\", \\\"AsiaPacific\\\"]\"", 
               "\"countries\""},
              "EntityClass"], "]"}], ",", "All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2018", ",", "9", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2018", ",", "9", ",", "30"}], "}"}]}], "}"}]}], "]"}],
           "]"}]}], ",", 
        RowBox[{"First", "\[Rule]", " ", "Last"}]}], "]"}], "//", 
      "KeySort"}]}], ";"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"Get", "[", "\"\<earthquake.mx\>\"", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.7162955484492197`*^9, 3.7162955701199493`*^9}, {
   3.716296070051387*^9, 3.716296072745268*^9}, {3.7162961222884912`*^9, 
   3.716296144762175*^9}, {3.7162962193253193`*^9, 3.716296248697998*^9}, 
   3.716296729102087*^9, {3.716297106465502*^9, 3.716297131034363*^9}, 
   3.716297251628747*^9, {3.7162972884519577`*^9, 3.716297293471047*^9}, {
   3.716297327276567*^9, 3.71629733568788*^9}, {3.716297387159252*^9, 
   3.71629739226014*^9}, {3.716297429535001*^9, 3.71629743575042*^9}, {
   3.716297510341453*^9, 3.716297541858086*^9}, 3.7162975797517023`*^9, {
   3.716297689144335*^9, 3.7162976900292883`*^9}, {3.7163036417978563`*^9, 
   3.716303716032187*^9}, {3.7163038249957047`*^9, 3.7163038748069553`*^9}, {
   3.747581959848686*^9, 3.747581975803235*^9}, {3.747582147774293*^9, 
   3.74758215843979*^9}, {3.747590571283359*^9, 3.747590630846486*^9}, {
   3.747654173842535*^9, 3.7476541879527607`*^9}, 3.7476560411116247`*^9, {
   3.74765607867828*^9, 3.747656082142655*^9}, {3.7476573193795652`*^9, 
   3.747657329736826*^9}, {3.748604874622068*^9, 
   3.748604889810405*^9}},ExpressionUUID->"0d702f5d-4e56-4219-a760-\
6642b6424d77"],

Cell[BoxData[
 RowBox[{"TimelinePlot", "[", 
  RowBox[{
   RowBox[{"Values", "@", " ", "earthquakes"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       TagBox[
        TemplateBox[{"3", "\" items\""}, "RowDefault"], "IconizedNameLight"], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["\"Sequence\"", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["568", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[PlotLegends -> LineLegend["Rainbow", 
       Keys[$CellContext`earthquakes], LegendLayout -> "ReversedColumn"], 
     PlotStyle -> "Rainbow", PlotLabel -> 
     "Earthquakes in Asia Pacific, Sep 2018"],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162955484492197`*^9, 3.7162955701199493`*^9}, {
   3.716296070051387*^9, 3.716296072745268*^9}, {3.7162961222884912`*^9, 
   3.716296144762175*^9}, {3.7162962193253193`*^9, 3.716296248697998*^9}, 
   3.716296729102087*^9, {3.716297106465502*^9, 3.716297131034363*^9}, 
   3.716297251628747*^9, {3.7162972884519577`*^9, 3.716297293471047*^9}, {
   3.716297327276567*^9, 3.71629733568788*^9}, {3.716297387159252*^9, 
   3.71629739226014*^9}, {3.716297429535001*^9, 3.71629743575042*^9}, {
   3.716297510341453*^9, 3.716297541858086*^9}, 3.7162975797517023`*^9, {
   3.716297689144335*^9, 3.7162976900292883`*^9}, {3.7163036417978563`*^9, 
   3.716303716032187*^9}, {3.7163038249957047`*^9, 3.7163038748069553`*^9}, {
   3.747581959848686*^9, 3.747581975803235*^9}, {3.747582147774293*^9, 
   3.74758215843979*^9}, 3.747590571283359*^9, 3.748604903057435*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"848f4b2f-113b-403a-b8e3-87a2d6f0c450"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"73a441d3-2a08-4702-aff0-144c25826aee"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.716126885885209*^9, 3.7161268900336657`*^9}, {
  3.716130342352017*^9, 3.716130345500107*^9}, {3.717186557510303*^9, 
  3.7171865765537252`*^9}},ExpressionUUID->"7e7c4617-910f-42df-ba26-\
faed5ec183bf"],

Cell["\<\
The summary of contents covered in this section can also be used as EDA \
checklist. Systematically sift through the data and try the following:\
\>", "Text",
 CellChangeTimes->{{3.717186579815672*^9, 3.7171866330049677`*^9}, {
  3.748278103678117*^9, 
  3.748278103782486*^9}},ExpressionUUID->"0863e72a-d8cd-40a5-9435-\
1f52f23e6ced"],

Cell["\<\
Generate summary statistics for each independent variable/feature.\
\>", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
   3.716127086703072*^9, 3.716127087167088*^9}, {3.716127136462447*^9, 
   3.716127174050098*^9}, {3.7163027611668*^9, 3.716302771850192*^9}, 
   3.748278109654736*^9},ExpressionUUID->"d30aa49d-1f64-4117-9e08-\
aad225d00cc5"],

Cell["\<\
Look at pairwise relationships between variables\[LongDash]correlation and \
scatter plot matrices.\
\>", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
  3.716127085608142*^9, 3.716127092356298*^9}, {3.7161303556587048`*^9, 
  3.7161303584371634`*^9}, {3.716302778611766*^9, 3.7163027871770163`*^9}, {
  3.74827811243011*^9, 
  3.748278120933669*^9}},ExpressionUUID->"d194d50a-b962-4123-a425-\
0c762a540d79"],

Cell["\<\
Plot distributions of all variables. Start with single distribution and \
single variable, go on to joint distributions of pairs of variables.\
\>", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
   3.716127085608142*^9, 3.716127092356298*^9}, 3.716130355893403*^9, {
   3.716130386957144*^9, 3.716130416683227*^9}, {3.7163001380677223`*^9, 
   3.716300158719996*^9}, {3.7163028249235907`*^9, 3.716302830848284*^9}, {
   3.7482781289493837`*^9, 
   3.748278147988603*^9}},ExpressionUUID->"fb31b415-89f0-44f6-8b99-\
581bb3522be1"],

Cell["\<\
Overlay plots and graphs to compare distribution shapes to histograms.\
\>", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
   3.716127086703072*^9, 3.716127087167088*^9}, {3.716127136462447*^9, 
   3.716127141591679*^9}, {3.716130419008342*^9, 3.716130429553897*^9}, 
   3.7163001354308968`*^9, {3.716300179933262*^9, 3.716300190518086*^9}, {
   3.7163028338396387`*^9, 3.7163028474873343`*^9}, {3.748278150028674*^9, 
   3.7482781554290733`*^9}},ExpressionUUID->"5a19e154-5af4-4039-bead-\
a243ad2f61f8"],

Cell["Plot time series of data to see trends in time.", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
  3.716127086703072*^9, 3.716127087167088*^9}, {3.716127136462447*^9, 
  3.716127141591679*^9}, {3.7161304457840967`*^9, 3.716130445784419*^9}, {
  3.716302862454536*^9, 3.7163028637029343`*^9}, {3.748278158724393*^9, 
  3.7482781593646097`*^9}},ExpressionUUID->"4ab3b1df-6ef1-459d-beab-\
e2d1de6b70c3"],

Cell["Visualise clusters to identify outliers.", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
  3.716127086703072*^9, 3.716127087167088*^9}, {3.716127136462447*^9, 
  3.716127141591679*^9}, {3.716130446209852*^9, 3.71613046577568*^9}, {
  3.716300197723229*^9, 3.71630023899152*^9}, {3.748278162987747*^9, 
  3.748278165252358*^9}, {3.83294401289997*^9, 
  3.8329440151559277`*^9}},ExpressionUUID->"5bec158f-7e9c-4a3c-aa9c-\
da785f8002ac"],

Cell["Look for obvious errors or gaps in data plots.", "Item",
 CellChangeTimes->{{3.7161269299398317`*^9, 3.71612698797876*^9}, {
   3.716127086703072*^9, 3.716127087167088*^9}, {3.716127136462447*^9, 
   3.716127141591679*^9}, {3.716130446209852*^9, 3.71613046577568*^9}, {
   3.716300197723229*^9, 3.716300256286004*^9}, {3.7163028781255627`*^9, 
   3.7163028806784897`*^9}, 
   3.748278167532304*^9},ExpressionUUID->"ddbbb05c-622b-4752-9610-\
bcd3f40d70eb"],

Cell["\<\
The checklist for EDA should help explore the (real) data collected, identify \
user stories to make sure the downstream analysis has a real purpose, help \
formulate the right questions, provide clues about what algorithm to use down \
the line and tweak your project workflow to include tools identified for use. \
\>", "Text",
 CellChangeTimes->{{3.7162878770184526`*^9, 3.7162878821354103`*^9}, {
   3.716287974456531*^9, 3.7162879753412457`*^9}, {3.716291330455521*^9, 
   3.716291426285286*^9}, {3.716291528556011*^9, 3.716291653626143*^9}, {
   3.716291700406498*^9, 3.71629181576814*^9}, {3.746980400517421*^9, 
   3.746980402814581*^9}, 3.7482762917231083`*^9, {3.748276397497602*^9, 
   3.748276397640131*^9}},ExpressionUUID->"486e83cf-7db1-4d6d-9fd2-\
e79a32aa269e"],

Cell["\<\
Exploratory data analysis, while using many statistical tools, does not \
comprise any formal statistical modelling and inference.\
\>", "Text",
 CellChangeTimes->{{3.7469804104788237`*^9, 3.7469804138629913`*^9}, {
   3.7480107354548597`*^9, 3.748010746382058*^9}, {3.7482781777317467`*^9, 
   3.748278184428008*^9}, 
   3.8329440271319513`*^9},ExpressionUUID->"3721c3d8-7262-4e3a-8f62-\
d8100e1a3b4c"],

Cell["\<\
While similar tools may be used for data visualisation, EDA is done toward \
the beginning of analysis, while data visualisation is done toward the end to \
communicate results of analysis. With EDA, the purpose of the graphics is for \
you to understand what is going on.\
\>", "Text",
 CellChangeTimes->{{3.7469804104788237`*^9, 3.7469804138629913`*^9}, {
   3.7480107354548597`*^9, 3.74801074786078*^9}, 3.748276294353889*^9, {
   3.748276504334508*^9, 3.748276504604747*^9}, {3.748278191595364*^9, 
   3.748278198539248*^9}, {3.832944032075904*^9, 
   3.83294403669913*^9}},ExpressionUUID->"7b5d4098-17eb-47cc-9e84-\
dd99dafb659f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"38ced598-efe8-4d4d-a4ab-e84be6adc83a"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{
  3.720192656070273*^9},ExpressionUUID->"fdfdc3e9-3805-42cf-8575-\
6a3e1a44da1a"],

Cell["Some useful resources on exploratory data analysis:", "Text",
 CellChangeTimes->{{3.7208968822021227`*^9, 3.7208968899175253`*^9}, {
  3.7208970226011887`*^9, 3.72089707403358*^9}, {3.747740585581036*^9, 
  3.747740596016468*^9}, {3.748278212346554*^9, 
  3.748278216794572*^9}},ExpressionUUID->"36b1a869-531a-4ebb-a638-\
35ec9505a146"],

Cell[TextData[{
 "Chapter on ",
 ButtonBox["Exploratory Data Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.stat.cmu.edu/~hseltman/309/Book/chapter4.pdf"], None},
  ButtonNote->"https://www.stat.cmu.edu/~hseltman/309/Book/chapter4.pdf"],
 " from the book ",
 StyleBox[ButtonBox["Experimental Design and Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.stat.cmu.edu/~hseltman/309/Book/Book.pdf"], None},
  ButtonNote->"http://www.stat.cmu.edu/~hseltman/309/Book/Book.pdf"],
  FontSlant->"Italic"],
 " by Howard J. Seltman."
}], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, 
   3.747740603495596*^9, {3.747740662916061*^9, 3.7477407340214663`*^9}, {
   3.747740792291828*^9, 3.747740792293251*^9}, 3.7482782538177423`*^9, 
   3.7482821046382*^9},ExpressionUUID->"eb19f5e3-e801-4d10-9042-25d0ae57e0b6"],

Cell[TextData[{
 ButtonBox["Exploratory Data Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.itl.nist.gov/div898/handbook/eda/eda.htm"], None},
  ButtonNote->"https://www.itl.nist.gov/div898/handbook/eda/eda.htm"],
 " chapter from the ",
 ButtonBox["NIST/SEMATECH e-Handbook of Statistical Methods",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.itl.nist.gov/div898/handbook/"], None},
  ButtonNote->"http://www.itl.nist.gov/div898/handbook/"],
 "."
}], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, 
   3.747740603495596*^9, {3.747740662916061*^9, 3.7477407340214663`*^9}, {
   3.747740793441395*^9, 3.74774081187297*^9}, {3.7477408705168657`*^9, 
   3.747740870891327*^9}, {3.747740923268879*^9, 3.747740961028399*^9}, 
   3.748278256289802*^9},ExpressionUUID->"f74322f1-1bb5-4624-b56e-\
a25da600c362"],

Cell[TextData[{
 "The ",
 ButtonBox["Chart Chooser",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://extremepresentation.typepad.com/files/choosing-a-good-chart-\
09.pdf"], None},
  ButtonNote->
   "http://extremepresentation.typepad.com/files/choosing-a-good-chart-09.\
pdf"],
 " from ",
 ButtonBox["The Extreme Presentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://extremepresentation.com"], None},
  ButtonNote->"https://extremepresentation.com"],
 " method by Andrew Abela."
}], "Item",
 CellChangeTimes->{{3.720195156378017*^9, 3.720195173287033*^9}, {
   3.720896902934773*^9, 3.720896904811886*^9}, {3.722965036516416*^9, 
   3.722965089536593*^9}, {3.747740787416065*^9, 3.747740791922085*^9}, {
   3.747740967414336*^9, 3.747740968897706*^9}, {3.747741004043212*^9, 
   3.7477410474732037`*^9}, {3.74801061871441*^9, 3.748010618715426*^9}, {
   3.748010651012025*^9, 3.748010651012865*^9}, 
   3.74827825920964*^9},ExpressionUUID->"1acb42a2-b684-4f36-81dc-\
4e3b4d48e4a8"],

Cell[TextData[{
 "A collection of statistical visualisation functions, with links to more \
detailed examples, can be found on the ",
 StyleBox[ButtonBox["Statistical Visualization",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/StatisticalVisualization"],
  FontWeight->"Bold"],
 " guide page."
}], "Item",
 CellChangeTimes->{{3.720195156378017*^9, 3.720195173287033*^9}, {
  3.720896902934773*^9, 3.720896904811886*^9}, {3.722965036516416*^9, 
  3.722965089536593*^9}, {3.747740787416065*^9, 3.747740791922085*^9}, {
  3.747740967414336*^9, 3.747740968897706*^9}, {3.747741004043212*^9, 
  3.7477410474732037`*^9}, {3.74801061871441*^9, 3.748010618715426*^9}, {
  3.7480106514132032`*^9, 3.748010655587957*^9}, {3.748278305889695*^9, 
  3.748278307432229*^9}, {3.832160061172441*^9, 3.8321601200428143`*^9}, {
  3.832944047747566*^9, 
  3.83294404802841*^9}},ExpressionUUID->"455a205d-5976-4ffe-a266-\
f52ee862c0e0"],

Cell[TextData[{
 "The tutorial ",
 StyleBox[ButtonBox["Numerical Operations on Data",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/NumericalOperationsOnDataOverview"],
  FontWeight->"Bold"],
 "."
}], " can help with understanding more about this unsupervised learning \
technique.", "Item",
 CellChangeTimes->{{3.8321601553321257`*^9, 
  3.832160166307817*^9}},ExpressionUUID->"dc8ff3bc-155e-4be9-83b4-\
2d85df359f9d"],

Cell[TextData[{
 "For more functions for cluster visualisations, please refer to the \
collection of functions at ",
 StyleBox[ButtonBox["Cluster Analysis",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ClusterAnalysis"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.720195156378017*^9, 3.720195173287033*^9}, {
  3.720896902934773*^9, 3.720896904811886*^9}, {3.722965036516416*^9, 
  3.722965089536593*^9}, {3.747740787416065*^9, 3.747740791922085*^9}, {
  3.747740967414336*^9, 3.747740968897706*^9}, {3.747741004043212*^9, 
  3.7477410474732037`*^9}, {3.748010619233376*^9, 3.748010624119906*^9}, {
  3.748010671932612*^9, 3.748010691059087*^9}, {3.7482782418421087`*^9, 
  3.748278244889979*^9}, {3.832160178812749*^9, 3.832160192996922*^9}, {
  3.832944053563568*^9, 
  3.832944053812264*^9}},ExpressionUUID->"34c057e0-71a0-4a69-8a42-\
842b9d9b95c4"],

Cell[TextData[{
 "For more information on using Geo* functions, refer to this tutorial on ",
 StyleBox[ButtonBox["Geographics",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/GeoGraphics"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.720195156378017*^9, 3.720195173287033*^9}, {
   3.720896902934773*^9, 3.720896904811886*^9}, {3.722965036516416*^9, 
   3.722965089536593*^9}, {3.747740787416065*^9, 3.747740791922085*^9}, {
   3.747740967414336*^9, 3.747740968897706*^9}, {3.747741004043212*^9, 
   3.7477410474732037`*^9}, {3.748010619233376*^9, 3.748010624119906*^9}, {
   3.7480106715890913`*^9, 3.748010671589593*^9}, 
   3.748278249585719*^9},ExpressionUUID->"fff6eb51-5465-4c5e-a056-\
f3f9f972a6a4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1274, 936},
WindowMargins->{{174, Automatic}, {Automatic, 0}},
WindowTitle->"Exploratory Data Analysis",
WindowStatusArea->None,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.5, 0.12 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 
             81, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.11 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 81], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {50, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 48], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 70, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               26, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 20, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "Text", MenuSortingValue -> 1400, 
          MenuCommandKey :> "7", FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]]], 
         Cell[
          StyleData["Item", "SlideShow"], 
          CellMargins -> {{
            0.165 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], None]], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{
            0.18 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{65, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]]], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{
            0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{105, 12}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            CurrentValue[{StyleHints, "ColorSet", "Text1"}]]], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{
            0.2 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{81, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.17 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{105, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.195 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
          AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, NumberMarks -> False, 
          CounterIncrements -> "Graphics", 
          ImageMargins -> {{43, Inherited}, {Inherited, 0}}, Arrowheads -> 
          0.04, Dashing -> None, CapForm -> "Square", 
          JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
          1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
          Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
          EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
          BackFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, GraphicsColor -> 
          GrayLevel[0], PointSize -> Absolute[3], Thickness -> Medium, 
          Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Working", StyleDefinitions -> 
           StyleData["Graphics", "SlideShow"]]], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Graphics", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 $CellContext`RGBColorRGBColor[
                 1., 0.592156862745098, 0.10196078431372549`]]]]], None}, {
            None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {7, 8}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{66, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]]}, Closed]]}, 
  Visible -> False, FrontEndVersion -> 
  "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"be0566f2-1b38-459f-9832-ad0ab27bd6b5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[619, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"14604517-6feb-4e13-8f66-de82046873a0",
   CellTags->"SlideShowHeader"],
  Cell[16495, 299, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c47dcd9d-1eba-4d3b-b4fa-25e33f4a9a5f",
   CellTags->"SlideShowHeader"],
  Cell[19900, 385, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8405b209-d28b-45b2-931b-4073cba952da",
   CellTags->"SlideShowHeader"],
  Cell[24787, 506, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7b9f193c-d742-4d75-845a-c542f7ee5c4d",
   CellTags->"SlideShowHeader"],
  Cell[30092, 635, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30b62db4-213b-4814-a015-bfa5fb79e6c5",
   CellTags->"SlideShowHeader"],
  Cell[344107, 6161, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"00d42450-93eb-42ff-a02a-5b00cbcd3c59",
   CellTags->"SlideShowHeader"],
  Cell[349038, 6301, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4ca85288-d769-4534-8808-f33da23acf90",
   CellTags->"SlideShowHeader"],
  Cell[504200, 9794, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5c953a07-9018-4765-8425-b27589ffabda",
   CellTags->"SlideShowHeader"],
  Cell[561842, 11070, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e826b6e-a9ce-446d-a3de-0cf675f13b00",
   CellTags->"SlideShowHeader"],
  Cell[672884, 13592, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fbd35e63-67b0-4d51-b5d9-4cf2f4e6deec",
   CellTags->"SlideShowHeader"],
  Cell[695269, 14006, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"98c2fd85-de8f-4e9d-b1d6-a42128fcc3fd",
   CellTags->"SlideShowHeader"],
  Cell[983923, 19366, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"64a529af-e292-453c-8441-75eedcef2022",
   CellTags->"SlideShowHeader"],
  Cell[1019388, 20297, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0fe6a7ad-355d-43f2-90f6-8d6984ff4803",
   CellTags->"SlideShowHeader"],
  Cell[1022488, 20387, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"aab617ae-983c-4daf-89ce-ad3402cbcbf6",
   CellTags->"SlideShowHeader"],
  Cell[1025170, 20467, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e693c60e-7d6e-4a93-a073-2cbd308e9b9f",
   CellTags->"SlideShowHeader"],
  Cell[1132129, 22325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3865346d-798e-455d-8635-a8ea4dc9a5e3",
   CellTags->"SlideShowHeader"],
  Cell[1527547, 29990, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2fc57a81-64d5-44b1-a4b9-bc2f0eeb6d37",
   CellTags->"SlideShowHeader"],
  Cell[1530881, 30072, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9d7c3ee1-3d3f-40ed-9996-d49542dfa6c0",
   CellTags->"SlideShowHeader"],
  Cell[1541726, 30345, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0a8bfd77-a836-4206-b0c0-425f593fe3db",
   CellTags->"SlideShowHeader"],
  Cell[1548953, 30510, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"73a441d3-2a08-4702-aff0-144c25826aee",
   CellTags->"SlideShowHeader"],
  Cell[1554933, 30641, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"38ced598-efe8-4d4d-a4ab-e84be6adc83a",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1591283, 31468}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[619, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"14604517-6feb-4e13-8f66-de82046873a0",
 CellTags->"SlideShowHeader"],
Cell[758, 27, 14970, 250, 68, "WolframULogo",ExpressionUUID->"30c15938-e485-48e0-892d-5da749eec6a3"],
Cell[CellGroupData[{
Cell[15753, 281, 276, 4, 250, "Title",ExpressionUUID->"e8f9c554-cb6f-4173-a8aa-b8b2804e79af"],
Cell[16032, 287, 414, 6, 73, "Subtitle",ExpressionUUID->"4fafb478-a50e-4dcc-ad4b-a0a08b8f220e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16495, 299, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c47dcd9d-1eba-4d3b-b4fa-25e33f4a9a5f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16642, 305, 384, 6, 115, "Section",ExpressionUUID->"d24997a9-5edb-42ac-981e-bd8b0e0496b0"],
Cell[17029, 313, 309, 4, 32, "Item",ExpressionUUID->"24dd416c-f5cf-418a-b8d2-4d7c26bceb64"],
Cell[CellGroupData[{
Cell[17363, 321, 360, 6, 32, "Item",ExpressionUUID->"4b6b2f27-1c07-40a6-9c34-d43170b75c1c"],
Cell[17726, 329, 644, 10, 25, "Subsubitem",ExpressionUUID->"73d04eef-0295-4fb5-9ad1-ed1b1349469a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18407, 344, 283, 5, 32, "Item",ExpressionUUID->"45c9974c-502c-448a-86bf-baee58ff9b7b"],
Cell[18693, 351, 293, 5, 25, "Subsubitem",ExpressionUUID->"3b929cc9-1931-4a5a-9900-57434172b996"],
Cell[18989, 358, 349, 6, 25, "Subsubitem",ExpressionUUID->"704da457-eab3-44a0-bb00-503ea3ada3bd"]
}, Open  ]],
Cell[19353, 367, 262, 5, 32, "Item",ExpressionUUID->"88f4d739-da3e-4503-a90e-0c0de7b210e3"],
Cell[19618, 374, 233, 5, 32, "Item",ExpressionUUID->"5a8e8405-691d-4b72-ae80-194574dcef49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19900, 385, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8405b209-d28b-45b2-931b-4073cba952da",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[20047, 391, 448, 7, 115, "Section",ExpressionUUID->"a91452c9-8055-4923-901a-48b28c0922d7"],
Cell[20498, 400, 498, 9, 32, "Item",ExpressionUUID->"2c4274ee-84a3-431f-b9a6-72cca56a1b09"],
Cell[20999, 411, 429, 6, 32, "Item",ExpressionUUID->"fbf746dd-333a-40b7-b382-00af0afd8773"],
Cell[21431, 419, 657, 11, 32, "Item",ExpressionUUID->"a6110565-071e-423b-8138-39fda977caa2"],
Cell[22091, 432, 539, 11, 32, "Item",ExpressionUUID->"adf355ad-92bb-4f80-b560-d73fb33da7d6"],
Cell[CellGroupData[{
Cell[22655, 447, 236, 4, 79, "Subsection",ExpressionUUID->"82b8f80b-38b1-48f9-bd36-5a4ca16897bd"],
Cell[22894, 453, 434, 9, 27, "Subitem",ExpressionUUID->"40ccaf63-a0af-48f8-a5c1-1ac68a73ac38"],
Cell[23331, 464, 235, 4, 27, "Subitem",ExpressionUUID->"32fbb47a-fda7-43b4-a27e-3c391f98150a"],
Cell[23569, 470, 212, 4, 27, "Subitem",ExpressionUUID->"c65394c6-0990-4a06-8426-fe06de26c546"],
Cell[23784, 476, 151, 3, 27, "Subitem",ExpressionUUID->"89502705-dabe-4e6f-849e-65a89f5a1820"],
Cell[23938, 481, 288, 7, 27, "Subitem",ExpressionUUID->"eb370606-3e21-4af9-9b9e-dd28e5ff24e5"],
Cell[24229, 490, 497, 9, 35, "Text",ExpressionUUID->"62cc12d6-a613-4e1a-a718-b16876909a01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24787, 506, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7b9f193c-d742-4d75-845a-c542f7ee5c4d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[24934, 512, 251, 4, 115, "Section",ExpressionUUID->"987aaf11-193e-408f-9691-7315a872558e"],
Cell[25188, 518, 312, 6, 35, "Text",ExpressionUUID->"a1dd3c86-f861-4119-a603-5a796061d81f"],
Cell[25503, 526, 249, 4, 32, "Item",ExpressionUUID->"c6184208-268e-4b39-8d69-9ea05707bb5c"],
Cell[25755, 532, 423, 8, 32, "Item",ExpressionUUID->"a1b1c83c-8aff-47c1-880b-85fb49bc684c"],
Cell[CellGroupData[{
Cell[26203, 544, 172, 3, 79, "Subsection",ExpressionUUID->"6a2427f4-f388-40f2-b851-3cf65f853910"],
Cell[26378, 549, 328, 6, 35, "Text",ExpressionUUID->"fb31f242-7a4d-41c1-ae29-4e3500a2a75c"],
Cell[26709, 557, 311, 5, 32, "Item",ExpressionUUID->"f592bfb9-eff4-47ae-b87c-d56dbdffe76b"],
Cell[27023, 564, 421, 6, 32, "Item",ExpressionUUID->"dd759a1f-53b0-4b54-bc46-a53cd31d5016"],
Cell[27447, 572, 315, 5, 32, "Item",ExpressionUUID->"a7e2f21e-fbd1-4864-ae5e-80dc9b5ce415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27799, 582, 218, 4, 79, "Subsection",ExpressionUUID->"d5ad80e1-c6b4-4771-ab78-8af3083b88ad"],
Cell[28020, 588, 457, 9, 35, "Text",ExpressionUUID->"c5d690a3-28b9-46df-aa1a-52b0c947d499"],
Cell[28480, 599, 433, 6, 32, "Item",ExpressionUUID->"a7c22ca7-d70a-49ee-bfec-39643b27d728"],
Cell[28916, 607, 421, 6, 32, "Item",ExpressionUUID->"8bedbe0c-6194-4f4f-9a85-000e106db00c"],
Cell[29340, 615, 287, 5, 32, "Item",ExpressionUUID->"a8697bfd-e00b-4078-8820-89db7d8ed9bf"],
Cell[29630, 622, 401, 6, 32, "Item",ExpressionUUID->"c8a8e245-6ce5-4bda-8611-6b0a466b5f8c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30092, 635, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30b62db4-213b-4814-a015-bfa5fb79e6c5",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[30239, 641, 273, 4, 115, "Section",ExpressionUUID->"e94541f6-8b53-4636-a9bf-b62c2ca84409"],
Cell[CellGroupData[{
Cell[30537, 649, 352, 9, 79, "Subsection",ExpressionUUID->"13e61e73-6ee3-4a76-b9db-2500608640d3"],
Cell[CellGroupData[{
Cell[30914, 662, 343, 7, 30, "Input",ExpressionUUID->"ba53f1ce-7638-4910-baa9-77578b47facc"],
Cell[31260, 671, 440, 6, 56, "Output",ExpressionUUID->"d46a189d-bd58-467b-b07d-c99a2eb3b2db"]
}, Open  ]],
Cell[31715, 680, 325, 8, 30, "Input",ExpressionUUID->"a0238c3e-8365-4e81-8eee-06f27628b117"],
Cell[32043, 690, 245477, 4032, 153, "Input",ExpressionUUID->"35e26714-4c6a-4823-88b2-6452212b1d7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277557, 4727, 170, 3, 79, "Subsection",ExpressionUUID->"39eb4690-0ecd-489c-86be-b2e7c75e2f6b"],
Cell[CellGroupData[{
Cell[277752, 4734, 476, 7, 46, "Subsubsection",ExpressionUUID->"ba8cd748-8dce-4a11-9bc1-9669c16ea37f"],
Cell[278231, 4743, 792, 22, 35, "Text",ExpressionUUID->"c8faffad-57bf-4ae1-8a56-71e03c5e3dbc"],
Cell[CellGroupData[{
Cell[279048, 4769, 665, 15, 30, "Input",ExpressionUUID->"075a3c9f-2f13-42d3-8a48-cd1ec771f44e"],
Cell[279716, 4786, 853, 13, 56, "Output",ExpressionUUID->"639094d9-32d2-4d3d-a35b-089e6dce89db"]
}, Open  ]],
Cell[280584, 4802, 206, 4, 30, "Input",ExpressionUUID->"66bf9e4e-1e4c-4bf5-a4ed-64032b09f71f"],
Cell[280793, 4808, 219, 4, 30, "Input",ExpressionUUID->"ed12545a-d604-4903-af5c-7fcc2934d3d1"],
Cell[281015, 4814, 816, 15, 35, "Text",ExpressionUUID->"5bb1d23c-85dd-43ec-ab27-a9d46d1fd924"],
Cell[CellGroupData[{
Cell[281856, 4833, 3674, 84, 178, "Input",ExpressionUUID->"5dfdcb68-bce0-44dc-ac99-a661330b17d8"],
Cell[285533, 4919, 2182, 55, 137, "Output",ExpressionUUID->"c9851df6-61db-4f04-a30b-3a90d49619a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287764, 4980, 377, 7, 46, "Subsubsection",ExpressionUUID->"a4183b54-017e-4f20-8ced-c8d0f134c96d"],
Cell[288144, 4989, 361, 8, 35, "Text",ExpressionUUID->"b53de5bc-8adb-46fd-947c-85d1c1ece66e"],
Cell[288508, 4999, 409, 10, 30, "Input",ExpressionUUID->"2e32c074-f777-4a8c-b956-1597b4c634bd"],
Cell[288920, 5011, 206, 4, 30, "Input",ExpressionUUID->"39cb8d4c-9f82-4301-b5da-f237ecfc4424"],
Cell[289129, 5017, 210, 4, 30, "Input",ExpressionUUID->"7abc4fed-8f14-4c8d-a492-8b8215788063"],
Cell[289342, 5023, 555, 11, 35, "Text",ExpressionUUID->"73ad8cda-79b8-4554-bc7e-92072a4f4caa"],
Cell[CellGroupData[{
Cell[289922, 5038, 3306, 80, 178, "Input",ExpressionUUID->"6bfa0129-3397-42ae-af69-61e0ff74af3f"],
Cell[293231, 5120, 6042, 200, 393, "Output",ExpressionUUID->"e08a99a8-0cb9-4db7-97f2-2583278e69ed"]
}, Open  ]],
Cell[299288, 5323, 201, 3, 35, "Text",ExpressionUUID->"ac1f2ad4-4317-407c-ad5d-5fe40bffa328"],
Cell[CellGroupData[{
Cell[299514, 5330, 347, 6, 30, "Input",ExpressionUUID->"a039650f-70a1-42f2-8440-8350940010ab"],
Cell[299864, 5338, 44158, 814, 307, "Output",ExpressionUUID->"cdb7b23e-ead9-4f20-941c-475e20c13129"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344107, 6161, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"00d42450-93eb-42ff-a02a-5b00cbcd3c59",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[344254, 6167, 273, 4, 115, "Section",ExpressionUUID->"d18cb9d0-209b-4029-9afb-7b8f9b4beaa6"],
Cell[344530, 6173, 322, 6, 35, "Text",ExpressionUUID->"bfc05010-d308-4f28-b54e-db5aafe8d3b9"],
Cell[344855, 6181, 346, 7, 30, "Input",ExpressionUUID->"066c168a-7c7a-44bd-ade1-75c6466614c5"],
Cell[CellGroupData[{
Cell[345226, 6192, 165, 3, 79, "Subsection",ExpressionUUID->"955de123-592c-4957-8743-672d479a0e8b"],
Cell[345394, 6197, 310, 6, 35, "Text",ExpressionUUID->"2579d0db-6218-4c91-b7fa-028f9da09cab"],
Cell[345707, 6205, 689, 15, 30, "Input",ExpressionUUID->"2b6be051-c450-404c-9650-1f3fe57389b4"],
Cell[346399, 6222, 436, 11, 30, "Input",ExpressionUUID->"537d3e3c-4b36-489c-bf74-7c38c5bb57cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346872, 6238, 161, 3, 79, "Subsection",ExpressionUUID->"6bf99995-031f-40e0-9d8b-df29180bed24"],
Cell[347036, 6243, 266, 6, 35, "Text",ExpressionUUID->"ee94c91d-7323-4e6a-8c83-6196b810c0e9"],
Cell[347305, 6251, 649, 15, 30, "Input",ExpressionUUID->"b107a59a-b9b4-4d25-b56d-f1e291ad02a7"],
Cell[347957, 6268, 236, 4, 35, "Text",ExpressionUUID->"9dac2bf2-1d9c-4770-839c-e876a50c2e7a"],
Cell[348196, 6274, 444, 11, 30, "Input",ExpressionUUID->"bf132707-f694-4853-afab-b8b3fa4be016"],
Cell[348643, 6287, 334, 7, 35, "Text",ExpressionUUID->"e4103daf-1198-4c67-883d-820ec1effaa7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349038, 6301, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4ca85288-d769-4534-8808-f33da23acf90",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[349185, 6307, 430, 6, 206, "Section",ExpressionUUID->"e78ae0fe-9b27-4489-9bec-a397b81bb977"],
Cell[349618, 6315, 741, 12, 58, "Text",ExpressionUUID->"ad2598b2-a0f3-43b7-98e6-c166155cc454"],
Cell[CellGroupData[{
Cell[350384, 6331, 523, 10, 46, "Subsubsection",ExpressionUUID->"53186095-fb2d-4548-8143-f667641e9a27"],
Cell[350910, 6343, 433, 10, 35, "Text",ExpressionUUID->"8fb9cf79-54b4-44cd-a59c-324572157c63"],
Cell[351346, 6355, 478, 12, 30, "Input",ExpressionUUID->"4e13150a-4bf3-4ebe-b2a0-633daea6149e"],
Cell[351827, 6369, 373, 9, 30, "Input",ExpressionUUID->"50838178-f192-4c76-afc8-be851d706c97"],
Cell[352203, 6380, 360, 7, 35, "Text",ExpressionUUID->"5216a60d-807c-448c-b40d-3be119e2edd9"],
Cell[CellGroupData[{
Cell[352588, 6391, 3633, 97, 220, "Input",ExpressionUUID->"242476b4-d07c-48de-90f7-6cb76d95fa9c"],
Cell[356224, 6490, 35248, 705, 260, "Output",ExpressionUUID->"0da46074-afb6-4f99-bc47-d91eb944149f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[391521, 7201, 440, 9, 46, "Subsubsection",ExpressionUUID->"e5a9c3be-6085-4bb5-b592-a4c9dcfbf442"],
Cell[391964, 7212, 282, 7, 35, "Text",ExpressionUUID->"136aa0ed-5fff-4222-8e4b-2af592078b34"],
Cell[392249, 7221, 364, 10, 30, "Input",ExpressionUUID->"c168a254-b198-444e-8545-e9964ba4727f"],
Cell[392616, 7233, 357, 7, 35, "Text",ExpressionUUID->"fbc7a220-8f65-4b98-a119-51c114d1df38"],
Cell[392976, 7242, 825, 22, 30, "Input",ExpressionUUID->"60e4df93-d7dc-4839-b893-7592d68bf06c"],
Cell[393804, 7266, 372, 8, 35, "Text",ExpressionUUID->"97c538d3-ce54-4513-b641-a37ceb548907"],
Cell[394179, 7276, 790, 23, 30, "Input",ExpressionUUID->"040fbd65-1fe8-454b-9418-5db45626c5c3"],
Cell[394972, 7301, 362, 7, 35, "Text",ExpressionUUID->"d6e81fcc-633b-4e2b-b5f1-6fe9aae65ea8"],
Cell[CellGroupData[{
Cell[395359, 7312, 833, 23, 30, "Input",ExpressionUUID->"001b0630-27b4-491e-8edf-af049051d132"],
Cell[396195, 7337, 107932, 2449, 428, "Output",ExpressionUUID->"d5fd9c06-798c-409e-8169-b39272c4f9ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[504200, 9794, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"5c953a07-9018-4765-8425-b27589ffabda",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[504347, 9800, 421, 6, 206, "Section",ExpressionUUID->"8f24224d-00aa-4434-a333-47e9991d8aeb"],
Cell[CellGroupData[{
Cell[504793, 9810, 205, 3, 79, "Subsection",ExpressionUUID->"6dcaaa2d-b5dc-4edc-9a0f-11bf66af4634"],
Cell[505001, 9815, 322, 8, 30, "Input",ExpressionUUID->"4b344e5d-f1b0-4ed5-a2cb-2fb1e437c9b7"],
Cell[505326, 9825, 398, 9, 30, "Input",ExpressionUUID->"bbdbacd9-64ea-4890-9062-679cb39e393c"],
Cell[CellGroupData[{
Cell[505749, 9838, 327, 6, 46, "Subsubsection",ExpressionUUID->"8d0d306b-63bb-42d5-9d3b-2d3bac20d358"],
Cell[506079, 9846, 233, 4, 35, "Text",ExpressionUUID->"e3c168ce-23fb-48f9-8c85-0782b6966638"],
Cell[506315, 9852, 583, 11, 35, "Text",ExpressionUUID->"45573c5e-8ec2-4518-b5bc-b298f1194313"],
Cell[506901, 9865, 558, 11, 30, "Input",ExpressionUUID->"25d6c74b-59d1-47ee-9090-fd3c0164d45a"],
Cell[507462, 9878, 283, 7, 30, "Input",ExpressionUUID->"b68db777-9c51-4abd-9b84-3358fb62d9be"],
Cell[507748, 9887, 331, 7, 35, "Text",ExpressionUUID->"0bac6be0-4ce4-4268-bb00-50ab1f6099a3"],
Cell[508082, 9896, 383, 12, 30, "Input",ExpressionUUID->"6ece4d8c-f808-462e-86d1-16468e28c2f7"],
Cell[508468, 9910, 293, 4, 35, "Text",ExpressionUUID->"7b9e4cfc-ebd3-4cac-b1d3-e68cdc4f49fa"],
Cell[508764, 9916, 449, 13, 30, "Input",ExpressionUUID->"c5d35395-d148-45ed-8842-7207dde8ed5c"],
Cell[509216, 9931, 451, 13, 30, "Input",ExpressionUUID->"10821996-033c-4485-b83c-b6b9e424ced5"],
Cell[509670, 9946, 373, 7, 35, "Text",ExpressionUUID->"a9362ca1-0cb4-4e28-a1a0-01120d9b83bb"],
Cell[CellGroupData[{
Cell[510068, 9957, 1594, 41, 94, "Input",ExpressionUUID->"b88cdfd4-b496-4489-a499-731f14478b2f"],
Cell[511665, 10000, 20103, 452, 262, "Output",ExpressionUUID->"6352d9da-3682-478f-9803-8700eba799dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[531817, 10458, 440, 7, 46, "Subsubsection",ExpressionUUID->"91f33095-e5b0-4164-a7ba-14908ac933ed"],
Cell[532260, 10467, 365, 7, 35, "Text",ExpressionUUID->"0a366906-f987-4b35-950c-913f8cc9b7a7"],
Cell[CellGroupData[{
Cell[532650, 10478, 1328, 29, 52, "Input",ExpressionUUID->"47dad401-0d68-4138-b71b-ee1fb04424db"],
Cell[533981, 10509, 27776, 552, 142, "Output",ExpressionUUID->"3c363d65-c8c6-4cc8-b38f-2b46358ab4e3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561842, 11070, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"8e826b6e-a9ce-446d-a3de-0cf675f13b00",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[561989, 11076, 407, 6, 115, "Section",ExpressionUUID->"452dbdfd-b8df-4f2c-9ecb-47673c69eb9e"],
Cell[CellGroupData[{
Cell[562421, 11086, 269, 4, 79, "Subsection",ExpressionUUID->"b6a40ec6-5f5b-4428-b9af-dc2a84b79425"],
Cell[562693, 11092, 366, 7, 35, "Text",ExpressionUUID->"25b73370-fb40-4d0f-be85-aadbae92ef03"],
Cell[563062, 11101, 439, 11, 35, "Text",ExpressionUUID->"2c12efa5-5aed-4d06-b0d4-17ac8a8dc3bd"],
Cell[563504, 11114, 272, 7, 30, "Input",ExpressionUUID->"8da5c06d-69e2-4ebc-81fa-f34ee9cbc7eb"],
Cell[563779, 11123, 332, 7, 35, "Text",ExpressionUUID->"6b8008f4-e7e6-47b1-87c7-206db10b2c68"],
Cell[CellGroupData[{
Cell[564136, 11134, 1727, 41, 73, "Input",ExpressionUUID->"4c0ba876-f2a7-4617-b3e8-6070e1eb36a2"],
Cell[565866, 11177, 57147, 1261, 206, "Output",ExpressionUUID->"8120bb14-da46-498a-9c53-3a6602be9b42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[623062, 12444, 264, 4, 79, "Subsection",ExpressionUUID->"9e02dc2c-394f-4971-9e70-108a2668522d"],
Cell[623329, 12450, 459, 8, 58, "Text",ExpressionUUID->"6c074e69-a8eb-4f0e-b7b3-1c556fcd6238"],
Cell[623791, 12460, 702, 20, 73, "Input",ExpressionUUID->"aca0325d-6694-4299-8e47-cf46b3802b3f"],
Cell[624496, 12482, 549, 10, 58, "Text",ExpressionUUID->"bc41a0ee-3b79-43ce-a6d0-15ae59866f8b"],
Cell[CellGroupData[{
Cell[625070, 12496, 1983, 54, 94, "Input",ExpressionUUID->"4c8e7842-d209-430c-b447-88f83c1c9272"],
Cell[627056, 12552, 45755, 1032, 264, "Output",ExpressionUUID->"780f44d2-3fb7-4f89-a4b1-6555617dcd1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[672884, 13592, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"fbd35e63-67b0-4d51-b5d9-4cf2f4e6deec",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[673031, 13598, 461, 7, 206, "Section",ExpressionUUID->"f27fb5a2-4148-4026-827e-a3a30c810a4b"],
Cell[673495, 13607, 389, 7, 35, "Text",ExpressionUUID->"de4ce1ba-0311-4a58-a662-ff25b69f5cee"],
Cell[673887, 13616, 852, 23, 73, "Input",ExpressionUUID->"d3f33e2e-8975-446b-b571-bc21eab4ae1d"],
Cell[674742, 13641, 512, 10, 35, "Text",ExpressionUUID->"4640cb8e-1cad-4e27-b11a-741169e3dd78"],
Cell[CellGroupData[{
Cell[675279, 13655, 1734, 40, 52, "Input",ExpressionUUID->"81feb77b-ee49-46ad-8d6b-083c05212b4a"],
Cell[677016, 13697, 18192, 302, 243, "Output",ExpressionUUID->"f00683f7-076e-46ca-bbb1-43cda824d6d0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695269, 14006, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"98c2fd85-de8f-4e9d-b1d6-a42128fcc3fd",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[695416, 14012, 432, 6, 206, "Section",ExpressionUUID->"4e7f29eb-01db-4701-93b5-f2ecb99a8e17"],
Cell[695851, 14020, 447, 9, 35, "Text",ExpressionUUID->"efcc0f47-ce6a-447c-ac45-b036a4aca2e7"],
Cell[CellGroupData[{
Cell[696323, 14033, 1141, 23, 94, "Input",ExpressionUUID->"c35ff38f-75c2-4e3f-a0ee-71232e16b47a"],
Cell[697467, 14058, 286395, 5301, 223, "Output",ExpressionUUID->"a98aad51-ad89-485b-b993-f66fae479c13"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[983923, 19366, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"64a529af-e292-453c-8441-75eedcef2022",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[984070, 19372, 502, 7, 115, "Section",ExpressionUUID->"ff1372dc-8068-4154-9813-552ef52f6ad0"],
Cell[984575, 19381, 472, 12, 35, "Text",ExpressionUUID->"4f87038d-1e0f-455b-9b88-3ed8ac828f68"],
Cell[985050, 19395, 662, 15, 58, "Text",ExpressionUUID->"6c1f835f-b771-468b-91c7-0faf179aec8f"],
Cell[CellGroupData[{
Cell[985737, 19414, 554, 11, 30, "Input",ExpressionUUID->"102915b4-4e46-4fc8-a19b-87c16fb19f13"],
Cell[986294, 19427, 33033, 863, 362, "Output",ExpressionUUID->"4416421a-32fa-48ca-aa74-bb0fd4711f83"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019388, 20297, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0fe6a7ad-355d-43f2-90f6-8d6984ff4803",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1019535, 20303, 285, 4, 115, "Section",ExpressionUUID->"0985bc11-1478-45c2-a430-0c8e778abe43"],
Cell[1019823, 20309, 289, 7, 35, "Text",ExpressionUUID->"acb0657b-83a2-4fab-a71e-5c374a63b704"],
Cell[1020115, 20318, 500, 11, 52, "Input",ExpressionUUID->"e9240655-730f-4644-9015-d41301328e08"],
Cell[1020618, 20331, 406, 8, 35, "Text",ExpressionUUID->"231ac1b7-0584-4d31-a3d0-fdbfcf8eb5bb"],
Cell[1021027, 20341, 970, 26, 94, "Input",ExpressionUUID->"82928b74-d7ea-45a1-89fd-206c3c611a3a"],
Cell[1022000, 20369, 439, 12, 52, "Input",ExpressionUUID->"618aadd1-48fa-4ff0-bab9-f88d712a24b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022488, 20387, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"aab617ae-983c-4daf-89ce-ad3402cbcbf6",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1022635, 20393, 346, 5, 206, "Section",ExpressionUUID->"e645c297-52c5-4200-a870-f2bb3e7ab399"],
Cell[1022984, 20400, 165, 3, 35, "Text",ExpressionUUID->"1b268886-3856-44bc-a6ef-02341eb2fe13"],
Cell[1023152, 20405, 207, 5, 30, "Input",ExpressionUUID->"f2ab5bbd-0a77-4226-8184-2559ff4f15ec"],
Cell[CellGroupData[{
Cell[1023384, 20414, 164, 3, 79, "Subsection",ExpressionUUID->"51505091-daaa-4f4b-a6fa-cdae75ddcc6e"],
Cell[1023551, 20419, 291, 6, 35, "Text",ExpressionUUID->"61a27de3-45d0-4236-8ff5-fe5148b96132"],
Cell[1023845, 20427, 315, 5, 30, "Input",ExpressionUUID->"0a30117e-c8a7-4bc9-94ec-aed7387ab498",
 CellID->302722683]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024197, 20437, 160, 3, 79, "Subsection",ExpressionUUID->"f95b73d4-c302-4a52-b0bf-3c11b182f786"],
Cell[1024360, 20442, 447, 9, 35, "Text",ExpressionUUID->"0ce29c5c-79ad-4ce4-8a62-700acb687157"],
Cell[1024810, 20453, 299, 7, 30, "Input",ExpressionUUID->"ac3f4bad-e6ef-4aac-843e-36c994728ee3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1025170, 20467, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e693c60e-7d6e-4a93-a073-2cbd308e9b9f",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1025317, 20473, 518, 7, 206, "Section",ExpressionUUID->"54b9860b-7203-4564-89da-6ae98a8de88a"],
Cell[CellGroupData[{
Cell[1025860, 20484, 191, 3, 79, "Subsection",ExpressionUUID->"95d58ef3-a6dd-4c8c-b6b9-6bbb1f97a2a1"],
Cell[1026054, 20489, 1010, 25, 58, "Text",ExpressionUUID->"266064de-2731-437f-991c-570ddc08b7b9"],
Cell[1027067, 20516, 410, 8, 35, "Text",ExpressionUUID->"de7ea8f3-852e-44b7-b2ad-4a124313620d"],
Cell[1027480, 20526, 104588, 1792, 105, "Input",ExpressionUUID->"403576b4-03da-4d68-95f8-9f64cea6304c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132129, 22325, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3865346d-798e-455d-8635-a8ea4dc9a5e3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1132276, 22331, 497, 7, 115, "Section",ExpressionUUID->"0f35e67e-28e0-4b6b-aba8-856c890b6ccd"],
Cell[1132776, 22340, 475, 8, 58, "Text",ExpressionUUID->"f21bd566-9b40-4ae0-a5b7-db8eff15b2d6"],
Cell[1133254, 22350, 480, 10, 30, "Input",ExpressionUUID->"e97de6f5-8699-4308-aea5-9e0d7918497c"],
Cell[1133737, 22362, 296, 5, 30, "Input",ExpressionUUID->"f658a868-30ed-4a00-b4a0-34da273eec62"],
Cell[CellGroupData[{
Cell[1134058, 22371, 205, 4, 79, "Subsection",ExpressionUUID->"8f7f4eeb-5c5e-49f6-a4a4-6a63f5fcbf1f"],
Cell[CellGroupData[{
Cell[1134288, 22379, 408, 7, 46, "Subsubsection",ExpressionUUID->"c7c420ee-21e9-48b4-b665-5c87e3f38f0c"],
Cell[1134699, 22388, 399, 7, 35, "Text",ExpressionUUID->"5e6ae713-0c14-4d02-9bb3-f92ff05d8e87"],
Cell[1135101, 22397, 254, 4, 35, "Text",ExpressionUUID->"4d32d418-80f1-4c24-834e-9818cb6c3bb6"],
Cell[CellGroupData[{
Cell[1135380, 22405, 754, 17, 40, "Input",ExpressionUUID->"c7aeb3f3-6dd2-4664-953f-7821ed6b9446"],
Cell[1136137, 22424, 192679, 3198, 254, "Output",ExpressionUUID->"b4d5c2e1-ae6d-4ff6-9130-ab52523d5326"]
}, Open  ]],
Cell[1328831, 25625, 601, 10, 32, "ItemNumbered",ExpressionUUID->"feb89614-3ce6-46b7-8c99-0534025358e8"],
Cell[1329435, 25637, 926, 24, 42, "Text",ExpressionUUID->"7ba5f9c3-7ed1-4c60-b484-5450ae2da5a5"],
Cell[1330364, 25663, 1139, 29, 53, "ItemNumbered",ExpressionUUID->"d5b07808-409b-4b35-9cee-b13759914a3c"],
Cell[1331506, 25694, 1436, 33, 42, "Text",ExpressionUUID->"2245afbd-ab03-4602-bb56-fe65eb69abcc"],
Cell[1332945, 25729, 722, 15, 32, "ItemNumbered",ExpressionUUID->"c1aa5c59-f95f-4a92-ae75-fa28ca07c06f"],
Cell[1333670, 25746, 1361, 33, 42, "Text",ExpressionUUID->"e2f3f3a7-21ea-4d49-945f-092e92da7d6e"],
Cell[1335034, 25781, 550, 10, 25, "SubitemNumbered",ExpressionUUID->"b18434d9-3ce7-4df6-a41e-ad7b3ae5c150"],
Cell[1335587, 25793, 1282, 30, 42, "Text",ExpressionUUID->"03ab8bb6-93a0-476c-a23c-0dddfd5f6001"],
Cell[1336872, 25825, 300, 7, 32, "ItemNumbered",ExpressionUUID->"26642524-c24d-467c-a68b-915f0b03f910"],
Cell[1337175, 25834, 712, 18, 42, "Text",ExpressionUUID->"94ea844b-9033-4e91-a5fb-07ab1a5880cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1337924, 25857, 364, 6, 46, "Subsubsection",ExpressionUUID->"67a0e0e5-7724-4c2d-b12d-4510afc601b7"],
Cell[1338291, 25865, 650, 11, 32, "ItemNumbered",ExpressionUUID->"c637a399-d0d8-4674-87b6-12c1cbe83d35"],
Cell[1338944, 25878, 387, 10, 30, "Input",ExpressionUUID->"f8b66abb-0bf4-45ef-9e3c-9436114e99d9"],
Cell[1339334, 25890, 644, 11, 53, "ItemNumbered",ExpressionUUID->"7c170c35-2b07-4be1-983a-be697cf5d01f"],
Cell[CellGroupData[{
Cell[1340003, 25905, 819, 20, 30, "Input",ExpressionUUID->"1aeb62ea-6828-41f0-8569-ba904c908a0f"],
Cell[1340825, 25927, 46471, 991, 148, "Output",ExpressionUUID->"511c7ed0-60a2-49a9-a85f-abb950d2cbff"]
}, Open  ]],
Cell[1387311, 26921, 596, 10, 32, "ItemNumbered",ExpressionUUID->"d3e88e91-adae-4633-ab0b-3754889df3ac"],
Cell[1387910, 26933, 419, 9, 30, "Input",ExpressionUUID->"5506eebf-bd54-4f65-84dd-a7028fca5b82"],
Cell[CellGroupData[{
Cell[1388354, 26946, 379, 9, 30, "Input",ExpressionUUID->"922ec239-6609-4f71-a9ab-7c350b33b220"],
Cell[1388736, 26957, 46535, 993, 148, "Output",ExpressionUUID->"6879e7b0-31d0-41d1-9db8-085fbb7099fd"]
}, Open  ]],
Cell[1435286, 27953, 594, 10, 25, "SubitemNumbered",ExpressionUUID->"586456cf-a497-4218-82aa-c070846201d1"],
Cell[CellGroupData[{
Cell[1435905, 27967, 683, 17, 52, "Input",ExpressionUUID->"afaa70e5-ba58-4b99-bd40-19525c17379f"],
Cell[1436591, 27986, 46536, 993, 148, "Output",ExpressionUUID->"df0f6561-e966-4917-9426-8b8e50c40285"]
}, Open  ]],
Cell[1483142, 28982, 300, 7, 32, "ItemNumbered",ExpressionUUID->"44af3ae8-9941-4654-b679-0b7b87d659e7"],
Cell[CellGroupData[{
Cell[1483467, 28993, 220, 4, 30, "Input",ExpressionUUID->"2fb8fa50-84c1-4af6-b1a4-a99663aaf86a"],
Cell[1483690, 28999, 43772, 982, 186, "Output",ExpressionUUID->"e3c9463b-5217-4e63-9e65-27a4e9c8d29b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1527547, 29990, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"2fc57a81-64d5-44b1-a4b9-bc2f0eeb6d37",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1527694, 29996, 503, 7, 206, "Section",ExpressionUUID->"805a5fda-c872-4f69-ba95-d238b735bdcb"],
Cell[1528200, 30005, 296, 6, 35, "Text",ExpressionUUID->"075999cc-ce9f-41a1-b7d0-e090e41767ba"],
Cell[1528499, 30013, 364, 8, 35, "Text",ExpressionUUID->"f6a034fa-6e1f-4dcb-aaa2-2c708085f4c9"],
Cell[1528866, 30023, 1334, 28, 52, "Input",ExpressionUUID->"21a41204-d543-4b0d-9d52-ae9e09fe0f4c"],
Cell[1530203, 30053, 198, 3, 35, "Text",ExpressionUUID->"047ddf24-789d-4f3a-91c9-0df1260aaa28"],
Cell[1530404, 30058, 428, 8, 30, "Input",ExpressionUUID->"116a7cbd-2332-4b7b-b096-466acb4baa62"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1530881, 30072, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9d7c3ee1-3d3f-40ed-9996-d49542dfa6c0",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1531028, 30078, 512, 7, 206, "Section",ExpressionUUID->"a7d0cba7-fd6a-46da-9ea2-51c2d857430e"],
Cell[CellGroupData[{
Cell[1531565, 30089, 210, 4, 79, "Subsection",ExpressionUUID->"6724b996-1146-40a7-b2ad-bc64fa89aed5"],
Cell[1531778, 30095, 793, 16, 35, "Text",ExpressionUUID->"fb2dc44b-3354-4b76-9f52-de8d5a181538"],
Cell[1532574, 30113, 428, 8, 35, "Text",ExpressionUUID->"7964d11b-ef3a-4438-bbc1-2d5a065563b8"],
Cell[1533005, 30123, 1790, 35, 52, "Input",ExpressionUUID->"9c7823a5-6da6-4272-83da-75d90c3c9da0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1625699269],
Cell[1534798, 30160, 444, 11, 52, "Input",ExpressionUUID->"fb2f748d-f6c0-4680-ae73-b580f8634330"],
Cell[1535245, 30173, 710, 17, 30, "Input",ExpressionUUID->"c0359a51-9022-4ae7-97fc-70910ba077b0"],
Cell[1535958, 30192, 193, 3, 35, "Text",ExpressionUUID->"2ca40e6a-02b8-4698-9f3b-acabefaad3d6"],
Cell[1536154, 30197, 1228, 27, 52, "Input",ExpressionUUID->"9ce50725-7deb-4075-8f8f-241ee8ffb7a7"],
Cell[1537385, 30226, 2227, 52, 39, "Input",ExpressionUUID->"d12c29ba-b5ac-4676-b4a3-87a1405e602b"],
Cell[CellGroupData[{
Cell[1539637, 30282, 219, 5, 43, "Subsubsection",ExpressionUUID->"3b9b36b0-8f62-4391-9577-ab1fb03a85c9"],
Cell[1539859, 30289, 373, 10, 35, "Text",ExpressionUUID->"de259517-415b-4cf0-b451-8f6e119fdc37"],
Cell[1540235, 30301, 1418, 36, 37, "Input",ExpressionUUID->"7dd83e33-f7cc-4946-a70d-cef734a111d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1541726, 30345, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0a8bfd77-a836-4206-b0c0-425f593fe3db",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1541873, 30351, 512, 7, 206, "Section",ExpressionUUID->"79068509-70d8-4bed-9f6a-1e728dbe9bf0"],
Cell[CellGroupData[{
Cell[1542410, 30362, 208, 4, 79, "Subsection",ExpressionUUID->"b29cbf3d-2c91-44b1-9ea3-f62048fa4afc"],
Cell[1542621, 30368, 378, 10, 35, "Text",ExpressionUUID->"375c682c-d14f-4df6-a421-cf4f5ba5534e"],
Cell[1543002, 30380, 502, 11, 30, "Input",ExpressionUUID->"0f936046-cfb4-497d-b90d-7e067e770b20"],
Cell[1543507, 30393, 738, 13, 58, "Text",ExpressionUUID->"f0c64f95-6ff5-44bc-bfc6-f7d6e3768968"],
Cell[1544248, 30408, 2532, 53, 110, "Input",ExpressionUUID->"0d702f5d-4e56-4219-a760-6642b6424d77"],
Cell[1546783, 30463, 2109, 40, 39, "Input",ExpressionUUID->"848f4b2f-113b-403a-b8e3-87a2d6f0c450"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1548953, 30510, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"73a441d3-2a08-4702-aff0-144c25826aee",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1549100, 30516, 251, 4, 115, "Section",ExpressionUUID->"7e7c4617-910f-42df-ba26-faed5ec183bf"],
Cell[1549354, 30522, 345, 7, 35, "Text",ExpressionUUID->"0863e72a-d8cd-40a5-9435-1f52f23e6ced"],
Cell[1549702, 30531, 384, 7, 32, "Item",ExpressionUUID->"d30aa49d-1f64-4117-9e08-aad225d00cc5"],
Cell[1550089, 30540, 448, 9, 32, "Item",ExpressionUUID->"d194d50a-b962-4123-a425-0c762a540d79"],
Cell[1550540, 30551, 568, 10, 32, "Item",ExpressionUUID->"fb31b415-89f0-44f6-8b99-581bb3522be1"],
Cell[1551111, 30563, 544, 9, 32, "Item",ExpressionUUID->"5a19e154-5af4-4039-bead-a243ad2f61f8"],
Cell[1551658, 30574, 435, 6, 32, "Item",ExpressionUUID->"4ab3b1df-6ef1-459d-beab-e2d1de6b70c3"],
Cell[1552096, 30582, 470, 7, 32, "Item",ExpressionUUID->"5bec158f-7e9c-4a3c-aa9c-da785f8002ac"],
Cell[1552569, 30591, 461, 7, 32, "Item",ExpressionUUID->"ddbbb05c-622b-4752-9610-bcd3f40d70eb"],
Cell[1553033, 30600, 787, 12, 58, "Text",ExpressionUUID->"486e83cf-7db1-4d6d-9fd2-e79a32aa269e"],
Cell[1553823, 30614, 413, 8, 35, "Text",ExpressionUUID->"3721c3d8-7262-4e3a-8f62-d8100e1a3b4c"],
Cell[1554239, 30624, 645, 11, 58, "Text",ExpressionUUID->"7b5d4098-17eb-47cc-9e84-dd99dafb659f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1554933, 30641, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"38ced598-efe8-4d4d-a4ab-e84be6adc83a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1555080, 30647, 131, 3, 115, "Section",ExpressionUUID->"fdfdc3e9-3805-42cf-8575-6a3e1a44da1a"],
Cell[1555214, 30652, 342, 5, 35, "Text",ExpressionUUID->"36b1a869-531a-4ebb-a638-35ec9505a146"],
Cell[1555559, 30659, 880, 19, 32, "Item",ExpressionUUID->"eb19f5e3-e801-4d10-9042-25d0ae57e0b6"],
Cell[1556442, 30680, 875, 19, 32, "Item",ExpressionUUID->"f74322f1-1bb5-4624-b56e-a25da600c362"],
Cell[1557320, 30701, 1011, 25, 32, "Item",ExpressionUUID->"1acb42a2-b684-4f36-81dc-4e3b4d48e4a8"],
Cell[1558334, 30728, 921, 18, 32, "Item",ExpressionUUID->"455a205d-5976-4ffe-a266-f52ee862c0e0"],
Cell[1559258, 30748, 425, 11, 32, " can help with understanding more about this unsupervised learning technique.",ExpressionUUID->"dc8ff3bc-155e-4be9-83b4-2d85df359f9d"],
Cell[1559686, 30761, 875, 18, 32, "Item",ExpressionUUID->"34c057e0-71a0-4a69-8a42-842b9d9b95c4"],
Cell[1560564, 30781, 729, 15, 32, "Item",ExpressionUUID->"fff6eb51-5465-4c5e-a056-f3f9f972a6a4"]
}, Open  ]]
}, Open  ]]
}
]
*)

