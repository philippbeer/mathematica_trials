(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    819263,      16365]
NotebookOptionsPosition[    726138,      14759]
NotebookOutlinePosition[    760530,      15505]
CellTagsIndexPosition[    760275,      15495]
WindowTitle->Data Wrangling
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c8311887-3777-40c4-92e3-ace772fe7322"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/w/qQILY
    "], {{0, 100}, {450, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{268.015625, Automatic},
  ImageSizeRaw->{450, 100},
  PlotRange->{{0, 450}, {0, 100}}]], "WolframULogo",ExpressionUUID->"0b65b87d-\
f176-4318-a73b-e5dca538125a"],

Cell[CellGroupData[{

Cell["The Multiparadigm Data Science Workflow", "Title",
 CellChangeTimes->{{3.720193284509671*^9, 3.720193288595942*^9}, {
  3.726941915180914*^9, 3.726941915962871*^9}, {3.746978317832979*^9, 
  3.74697832889117*^9}},ExpressionUUID->"a3fac058-6446-4a1e-afb8-\
fb0aba3c885a"],

Cell["Data Wrangling ", "Subtitle",
 CellChangeTimes->{{3.7201933391803827`*^9, 3.720193342066636*^9}, {
   3.726941908757318*^9, 3.7269419228992167`*^9}, {3.727530497787223*^9, 
   3.72753049862645*^9}, {3.746978334559821*^9, 3.7469783397495947`*^9}, {
   3.746978389172802*^9, 3.74697839249957*^9}, {3.746978464274922*^9, 
   3.746978477269431*^9}, {3.746978896607975*^9, 3.746978899912188*^9}, 
   3.746979419588716*^9},ExpressionUUID->"db45a0ed-c9a7-4ee8-9168-\
0f7d2f97983e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e62b1bf0-51f7-472b-a090-9a45160f0ba2"],

Cell[CellGroupData[{

Cell["Learning Objectives", "Section",
 CellChangeTimes->{{3.71994775976054*^9, 3.7199477622405987`*^9}, {
   3.720191968879251*^9, 3.720191974055264*^9}, {3.720894915481367*^9, 
   3.72089491754312*^9}, {3.720897534619431*^9, 3.72089753512813*^9}, 
   3.7269459274619637`*^9, {3.727461147456134*^9, 
   3.727461151826571*^9}},ExpressionUUID->"8746985c-2ea9-4400-9945-\
78a1eaa0ee28"],

Cell[CellGroupData[{

Cell["Import real-world data from different sources", "Item",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
   3.714747301281357*^9}, {3.716311689931362*^9, 3.716311689931787*^9}, 
   3.716332980056714*^9, {3.7481907781510553`*^9, 
   3.748190778471286*^9}},ExpressionUUID->"14368d9e-57e8-4d85-94bf-\
bf22dde9d0c8"],

Cell["Data files", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 
  3.716311709384921*^9}},ExpressionUUID->"a658f483-0ff3-4588-b2f3-\
04694d6c08c8"],

Cell["Databases", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 3.716311714660286*^9}, {
  3.716494848098151*^9, 
  3.7164948480989656`*^9}},ExpressionUUID->"009300c8-4bee-482c-bb13-\
c47254d10ca2"],

Cell["Curated data", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 3.716311714660286*^9}, {
  3.716494849103779*^9, 
  3.7164948540235577`*^9}},ExpressionUUID->"a23f8955-76f2-4cc1-ad42-\
615206103e4a"],

Cell["External APIs", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 3.7163117269871073`*^9}, {
  3.716332925032133*^9, 3.716332928869689*^9}, {3.716494855991405*^9, 
  3.716494857814856*^9}},ExpressionUUID->"92414e6c-8d7a-49db-8e43-\
9f6bde5cb126"],

Cell["Web scraping", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
   3.714747301281357*^9}, {3.716311691889625*^9, 3.7163117269871073`*^9}, {
   3.716332925032133*^9, 3.716332934948193*^9}, 3.716489339227565*^9, {
   3.716489770392281*^9, 3.716489772212966*^9}, {3.7485248596549387`*^9, 
   3.7485248633945227`*^9}},ExpressionUUID->"242c9a45-e3f2-48c4-a418-\
46c8e49fbb44"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Convert raw data into computable format ready for analysis", "Item",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.7163329907783937`*^9}, {3.747743345216186*^9, 
  3.7477433470449457`*^9}},ExpressionUUID->"565e1340-e9ef-4ff5-873c-\
717bf690d049"],

Cell["Lists", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332994862082*^9}},ExpressionUUID->"c1f7757d-dcb3-416f-bfd5-\
1dfc27ecbbb5"],

Cell["Associations", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332997975765*^9}},ExpressionUUID->"c4f975c6-d178-4d63-a8dc-\
3f9141cec702"],

Cell["Datasets", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716333000655501*^9}, {3.7165549351034107`*^9, 
  3.716554935103931*^9}},ExpressionUUID->"6069711c-c8ba-4297-89bd-\
aae4d0b2156a"],

Cell["Entities", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716333000655501*^9}, {3.7165549371456957`*^9, 
  3.7165549428053913`*^9}},ExpressionUUID->"2b7d3b15-4494-4d37-aaec-\
2ab46e179153"],

Cell["Time series", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716333000655501*^9}, {3.7165549371456957`*^9, 3.716554947090851*^9}, {
  3.748190788894597*^9, 
  3.748190789750929*^9}},ExpressionUUID->"10019a6d-1460-4d8d-ac1f-\
5058ba07632d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9c04473b-7dca-4b27-8ff0-4055a3ec6b09"],

Cell[CellGroupData[{

Cell["Data Wrangling", "Section",
 CellChangeTimes->{{3.726100679281666*^9, 
  3.726100684762286*^9}},ExpressionUUID->"6f0dfda0-0fb9-43a3-b332-\
798d26c0539a"],

Cell["\<\
Process of importing raw data and converting it into a suitable format for \
downstream analysis\
\>", "Item",
 CellChangeTimes->{{3.7163331022210493`*^9, 3.716333144837919*^9}, {
  3.716333436451544*^9, 3.716333445392411*^9}, {3.716489796550709*^9, 
  3.716489803376237*^9}, {3.716554974557404*^9, 3.7165549821132793`*^9}, {
  3.748002427346202*^9, 
  3.7480024275577106`*^9}},ExpressionUUID->"726b1e21-8fb1-42cb-ab3f-\
337b6497b7d9"],

Cell["\<\
Sometimes requires \[OpenCurlyDoubleQuote]hacking skills\
\[CloseCurlyDoubleQuote] to organize and clean messy data into an informative \
manageable dataset\
\>", "Item",
 CellChangeTimes->{{3.7163332982691193`*^9, 3.7163333582153673`*^9}, {
  3.716333474620988*^9, 3.71633350464447*^9}, {3.7257212646259127`*^9, 
  3.725721276857532*^9}, {3.748002411530857*^9, 3.748002415477749*^9}, {
  3.7480024895381937`*^9, 3.748002490783133*^9}, {3.748190799542444*^9, 
  3.748190803566378*^9}, {3.748524878497116*^9, 
  3.748524886149289*^9}},ExpressionUUID->"f30af88f-a0dc-469a-af83-\
c1bd42fc018c"],

Cell[TextData[{
 StyleBox["Goal is to create code for semi-automated tools",
  Background->RGBColor[1, 1, 0]],
 " that would make the process easier the next time the workflow is used"
}], "Item",
 CellChangeTimes->{{3.7163332982691193`*^9, 3.7163333582153673`*^9}, {
  3.716333474620988*^9, 3.71633350464447*^9}, {3.7257212646259127`*^9, 
  3.725721276857532*^9}, {3.748002411530857*^9, 3.748002415477749*^9}, {
  3.748190808686514*^9, 
  3.748190816101922*^9}},ExpressionUUID->"c6485def-1e03-4a96-8dd9-\
0b37e91b1b1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"7741b3a0-fdc4-4efc-b94a-68f75deac27e"],

Cell[CellGroupData[{

Cell["Importing Data from Files", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
  3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
  3.7147473183963823`*^9}, {3.716333541688272*^9, 3.716333544309671*^9}, {
  3.7481908216137466`*^9, 
  3.748190821917824*^9}},ExpressionUUID->"335fbe46-061b-476e-bfc3-\
19c65ed92bce"],

Cell["\<\
Import data in various formats from existing data files on your local system.\
\>", "Text",
 CellChangeTimes->{{3.709319229801581*^9, 3.7093192638683443`*^9}, {
   3.714747330196*^9, 3.714747333883751*^9}, 
   3.725721318994625*^9},ExpressionUUID->"9c9d89da-cd1b-41f4-9fec-\
da594074a8c4"],

Cell[CellGroupData[{

Cell["Formats Associated with Typical Data Files", "Subsection",
 CellChangeTimes->{{3.714747797170611*^9, 3.714747805252125*^9}, {
  3.725721430337029*^9, 
  3.725721443973271*^9}},ExpressionUUID->"d75b6b69-8704-418a-91fc-\
08cd1ab3b1ee"],

Cell[TextData[{
 "Text and numeric data: ",
 StyleBox[ButtonBox[".txt",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/Text"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".csv",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/CSV"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".tsv",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/TSV"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".xls",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/XLS"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".xlsx",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/XLSX"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.714747861304538*^9, 3.71474789143143*^9}, {
   3.7147479406081038`*^9, 3.7147479434879417`*^9}, {3.716489422560405*^9, 
   3.716489434197668*^9}, {3.7257214487586727`*^9, 3.725721448759568*^9}, 
   3.725722470679138*^9, {3.7257226772995443`*^9, 3.7257227186441708`*^9}, 
   3.7257247935410423`*^9, {3.7481908313516483`*^9, 
   3.74819083352649*^9}},ExpressionUUID->"ddaca001-3a45-4485-84f7-\
635c7c168b90"],

Cell[TextData[{
 "Images: ",
 StyleBox[ButtonBox[".bmp",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/BMP"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".jpeg",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/JPEG"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".png",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/PNG"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".tiff",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/TIFF"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".svg",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/SVG"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.714747948817048*^9, 3.714748005923065*^9}, {
  3.71474811500946*^9, 3.7147481162398043`*^9}, {3.725722599915381*^9, 
  3.725722652909752*^9}, {3.725723189699457*^9, 3.725723189707943*^9}, {
  3.725724545095871*^9, 3.725724564772849*^9}, {3.725724741262371*^9, 
  3.725724761901587*^9}},ExpressionUUID->"f36c38e7-6c1f-4714-978f-\
565e6f45755e"],

Cell[TextData[{
 "Structured web data: ",
 StyleBox[ButtonBox[".html",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/HTML"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".json",
  BaseStyle->"Link",
  ButtonData->"paclet:/ref/format/JSON"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[ButtonBox["xml",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/XML"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.714747905527865*^9, 3.7147479383922586`*^9}, {
   3.714748074201138*^9, 3.714748075904883*^9}, 3.714748143866241*^9, {
   3.725724810831336*^9, 3.725724824212551*^9}, {3.725724918801795*^9, 
   3.725724942022664*^9}, {3.7257249732002163`*^9, 3.725724973210421*^9}, {
   3.748190835630404*^9, 
   3.748190837741881*^9}},ExpressionUUID->"1a524723-fb17-4da7-85bd-\
9bdecd79fce5"],

Cell[TextData[{
 "Archives: ",
 StyleBox[ButtonBox[".zip",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/ZIP"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".gzip",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/GZIP"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox[".tar",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/TAR"],
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.714747948817048*^9, 3.7147480127947283`*^9}, {
  3.714748043715178*^9, 3.714748047194702*^9}, {3.7257250097912073`*^9, 
  3.725725027527652*^9}, {3.725725079163354*^9, 
  3.725725104018106*^9}},ExpressionUUID->"f70bfdae-7fef-49c6-bfe5-\
b94cd22d6075"],

Cell[CellGroupData[{

Cell["Domain specific ", "Item",
 CellChangeTimes->{{3.714747948817048*^9, 3.7147480127947283`*^9}, {
  3.714748043715178*^9, 3.714748086578567*^9}, {3.71633357045682*^9, 
  3.716333591161174*^9}, {3.7257251148784943`*^9, 3.725725114888802*^9}, {
  3.7481908401649303`*^9, 
  3.748190840268817*^9}},ExpressionUUID->"afdf9c28-c44d-49dc-bec6-\
58a7ae49b822"],

Cell[TextData[{
 "Chemical & biomolecular formats: ",
 StyleBox[ButtonBox["MOL",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/MOL"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Affymetrix",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/Affymetrix"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["AgilentMicroarray",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/AgilentMicroarray"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["FASTA",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/FASTA"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["GenBank",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/GenBank"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["...",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ChemicalDataFormats"],
  FontWeight->"Bold"]
}], "Subitem",
 CellChangeTimes->{{3.714747948817048*^9, 3.7147480127947283`*^9}, {
  3.714748043715178*^9, 3.714748086578567*^9}, {3.71633357045682*^9, 
  3.716333591161174*^9}, {3.72572515095922*^9, 3.725725183088791*^9}, {
  3.72572521932843*^9, 3.725725254207322*^9}, {3.725725292452013*^9, 
  3.725725328203444*^9}, {3.7257253647917547`*^9, 3.7257254693352947`*^9}, {
  3.7481908427110243`*^9, 
  3.748190846270389*^9}},ExpressionUUID->"4a1eb9f1-6fa1-4a1c-8ce6-\
26e13574c26a"],

Cell[TextData[{
 "Geospatial formats: ",
 StyleBox[ButtonBox["ArcGRID",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/ArcGRID"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["GeoTIFF",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/GeoTIFF"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["GeoJSON",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/GeoJSON"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["GPX",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/format/GPX"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["...",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/GeospatialFormats"],
  FontWeight->"Bold"],
 " "
}], "Subitem",
 CellChangeTimes->{{3.7093192435215883`*^9, 3.709319249587201*^9}, 
   3.7171796931009197`*^9, {3.725725557501086*^9, 3.725725702212658*^9}, {
   3.748190851470957*^9, 
   3.74819085177393*^9}},ExpressionUUID->"77c79e1e-4c94-4b1c-9d6f-\
9206581ac35f"],

Cell["Many others", "Subitem",
 CellChangeTimes->{{3.7093192435215883`*^9, 3.709319249587201*^9}, 
   3.7171796931009197`*^9, {3.725725557501086*^9, 
   3.725725708276576*^9}},ExpressionUUID->"5dcff817-2235-4ff9-a07a-\
6fcea6d2c8f2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formats Supported in the Wolfram Language", "Subsection",
 CellChangeTimes->{{3.725721328789056*^9, 3.725721338869722*^9}, 
   3.832155201275014*^9},ExpressionUUID->"f05fb453-9f19-42c6-a845-\
21579b7301a5"],

Cell[BoxData["$ImportFormats"], "Input",
 CellChangeTimes->{{3.7147477261661053`*^9, 3.7147477387251987`*^9}, {
  3.7147481548720713`*^9, 3.714748210487956*^9}, {3.717179697299984*^9, 
  3.717179710627249*^9}, {3.725721350866354*^9, 
  3.725721359388826*^9}},ExpressionUUID->"74a85c7a-ef27-4b8c-8d62-\
42f1baa2685b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0c7b13fd-7306-41f9-9812-4332bb917311"],

Cell[CellGroupData[{

Cell["Importing Data from Files", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
  3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
  3.7147473183963823`*^9}, {3.716333621794992*^9, 3.7163336225290194`*^9}, {
  3.748190869510098*^9, 
  3.74819086979596*^9}},ExpressionUUID->"00f50b97-ee01-4a31-a6df-\
abb3a0b5eed8"],

Cell[CellGroupData[{

Cell["Set Up", "Subsection",
 CellChangeTimes->{{3.725327811088356*^9, 
  3.725327816315167*^9}},ExpressionUUID->"7ce934f8-bfe0-405c-992b-\
477599288645"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8291985187728014`*^9, 
  3.8291985722827597`*^9}},ExpressionUUID->"ff04ef96-d15a-4451-878a-\
62ff034b020f"],

Cell["Set working directory:", "Text",
 CellChangeTimes->{
  3.6992697457019463`*^9, {3.704547447744219*^9, 3.70454745807546*^9}, {
   3.7253275913291483`*^9, 3.7253275999069557`*^9}, 
   3.748190883755527*^9},ExpressionUUID->"6dcce662-4c06-426f-bfee-\
1c6f442ac724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<data\>\""}], "}"}], 
    "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.725327619929886*^9, 3.74775846563505*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"e2a643b6-f2a2-401a-b12f-d405702e22ea"],

Cell[TextData[{
 "List the names of the files in a selected directory using ",
 StyleBox[ButtonBox["FileNames",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/FileNames"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{3.725327644933176*^9, 
  3.74819088853166*^9},ExpressionUUID->"8d72cc6a-0e2f-4401-a7a4-9311a31551f1"],

Cell[BoxData[
 RowBox[{"FileNames", "[", "]"}]], "Input",
 CellChangeTimes->{{3.572256003245813*^9, 3.57225604002569*^9}, {
   3.71474863751816*^9, 3.714748637995047*^9}, 3.716506184454939*^9, 
   3.725726847192174*^9},
 CellLabel->
  "In[392]:=",ExpressionUUID->"bc7c271f-edb5-414f-b5c5-923726940e5c"],

Cell[BoxData[
 RowBox[{"FileNames", "[", "\"\<*.csv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.572256003245813*^9, 3.57225604002569*^9}, {
   3.71474863751816*^9, 3.714748637995047*^9}, 
   3.716506184454939*^9},ExpressionUUID->"a8bd46c6-6704-4b23-9ce1-\
ec33d471e281"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Files Residing Locally on the System", "Subsection",
 CellChangeTimes->{{3.713180133154656*^9, 3.71318017920829*^9}, {
   3.714747632012187*^9, 3.714747639370597*^9}, {3.7163349264926233`*^9, 
   3.7163349346580963`*^9}, 3.7163350555181437`*^9, {3.71649045400314*^9, 
   3.716490465101804*^9}, {3.748190892170957*^9, 
   3.748190901802999*^9}},ExpressionUUID->"aea4b45d-2baf-4e77-ba8f-\
e005445c64d2"],

Cell["Import data files from the local \[OpenCurlyDoubleQuote]data\
\[CloseCurlyDoubleQuote] directory.", "Text",
 CellChangeTimes->{{3.7257260012851686`*^9, 3.7257260218743267`*^9}, {
  3.7257268884816313`*^9, 3.725726889193304*^9}, {3.74819090768287*^9, 
  3.748190908658937*^9}, {3.7482801061570187`*^9, 
  3.7482801097550364`*^9}},ExpressionUUID->"3b574df1-da4e-4ae0-9dbc-\
43bf8dc2d249"],

Cell["\<\
Type in the filename (with complete path) or from menu Insert \
\[FilledRightTriangle] File Path ...: \
\>", "Text",ExpressionUUID->"4cbf65e1-6bec-48ab-ad79-317e39ff77d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stockdata", " ", "=", 
   RowBox[{"Import", "[", "\"\<stockdata.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713179725854505*^9, 3.7131797277138844`*^9}, 
   3.713179872309906*^9, {3.713180190984524*^9, 3.713180212967452*^9}, {
   3.714747697633564*^9, 3.714747699422113*^9}, {3.716334580634026*^9, 
   3.716334603000952*^9}, {3.716334817645433*^9, 
   3.716334820274775*^9}},ExpressionUUID->"174e95f7-7a2a-4e82-bebc-\
ca97518fa64d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citydata", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<cities.xlsx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716334608729247*^9, 3.716334610535879*^9}, {
  3.7163348230375233`*^9, 
  3.716334880361836*^9}},ExpressionUUID->"c02720ec-1fad-45e5-a155-\
6ea04fd5a135"],

Cell["Take a peek at the data:", "Text",
 CellChangeTimes->{{3.725726880639374*^9, 
  3.725726886627387*^9}},ExpressionUUID->"d0d5803d-ef3f-4702-9b8a-\
d76ae10e1369"],

Cell[BoxData[
 RowBox[{"stockdata", "//", "Shallow"}]], "Input",
 CellChangeTimes->{{3.725726891770527*^9, 
  3.725726904830649*^9}},ExpressionUUID->"d9ee1cd2-3317-4d38-aa9b-\
bd9e33383fa7"],

Cell[BoxData[
 RowBox[{"citydata", " ", "//", "First"}]], "Input",
 CellChangeTimes->{{3.725726912424214*^9, 
  3.7257269643932667`*^9}},ExpressionUUID->"67d87aa5-284a-4fb6-b9fa-\
422233315e27"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Files Residing on the Web", "Subsection",
 CellChangeTimes->{{3.716334937565003*^9, 3.71633494058184*^9}, {
   3.7163350581807632`*^9, 3.716335064348764*^9}, 3.7164904809655848`*^9, {
   3.7481909219463243`*^9, 
   3.748190924938258*^9}},ExpressionUUID->"4c12ca88-a4e3-41f5-af21-\
25efbd743745"],

Cell["Import files from the web directly using the URL:", "Text",
 CellChangeTimes->{{3.725727022658745*^9, 
  3.72572703748925*^9}},ExpressionUUID->"57f89277-6f16-46af-8e9b-\
4a8dbf536a7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"financeData", " ", "=", 
   RowBox[{
   "Import", "[", "\"\<https://go.microsoft.com/fwlink/?LinkID=521962\>\"", 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"00acc484-25e4-41f0-b0da-c2073660f622"],

Cell[BoxData[
 RowBox[{"financeData", "//", "Dimensions"}]], "Input",
 CellLabel->"In[49]:=",ExpressionUUID->"e7b88e36-7195-48e3-ac1a-752b650ec7bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check File Information before Actually Importing", "Subsection",
 CellChangeTimes->{{3.714748918052372*^9, 3.714748947585826*^9}, {
  3.725727089774335*^9, 3.725727105683216*^9}, {3.748190932105755*^9, 
  3.7481909458896437`*^9}, {3.748190985362327*^9, 3.748190985440316*^9}, {
  3.748601681134706*^9, 
  3.748601681736362*^9}},ExpressionUUID->"05c65baa-e5dd-431b-9339-\
24ca0d9ca2fb"],

Cell["Examine the elements that are available for import:", "Text",
 CellChangeTimes->{{3.725727136811507*^9, 3.725727150217379*^9}, {
  3.748002563289042*^9, 3.748002566244598*^9}, {3.748190988856168*^9, 
  3.7481909894242353`*^9}},ExpressionUUID->"c3317a7f-b5f1-4659-91e3-\
9199f093924f"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<https://go.microsoft.com/fwlink/?LinkID=521962\>\"", ",", 
   "\"\<Elements\>\""}], "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"31a6b9aa-eb15-4e8e-927f-9370609cab57"],

Cell["Import the element of interest:", "Text",
 CellChangeTimes->{{3.747756349511055*^9, 
  3.7477563644536037`*^9}},ExpressionUUID->"75891c3e-1970-427d-a471-\
f67017ef87e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"financeData", " ", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<https://go.microsoft.com/fwlink/?LinkID=521962\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Sheets\>\"", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"3e2e3e9a-6afb-4bad-b1e6-bd49bb6e0b3f"],

Cell[BoxData[
 RowBox[{"financeData", "//", "Dimensions"}]], "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"41bbd847-62b1-4fbc-8f51-2720f17a9009"],

Cell["A summary of information about the file itself:", "Text",
 CellChangeTimes->{{3.725727152781176*^9, 
  3.7257271878484163`*^9}},ExpressionUUID->"4bc77f71-b381-4736-ac95-\
ebc0bbd228d7"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<stockdata.csv\>\"", ",", "\"\<Summary\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716489960541111*^9, 3.716489964782175*^9}, {
   3.716490076893526*^9, 3.716490144287724*^9}, 3.716490192094705*^9, 
   3.747758433627656*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"cef129c4-3d06-47f1-98c9-ad32f03d4461"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Saving and Importing Intermediate Results in the Wolfram Language\
\>", "Subsection",
 CellChangeTimes->{{3.725727303378655*^9, 3.725727326000058*^9}, {
  3.7481909968797607`*^9, 
  3.748191008471349*^9}},ExpressionUUID->"ec2f7295-b179-40fe-b131-\
d3740cc148dd"],

Cell[TextData[{
 "A useful approach to save mid-pipeline restructured data is to save Wolfram \
Language expressions in files using ",
 StyleBox[ButtonBox["Save",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Save"],
  FontWeight->"Bold"],
 " or ",
 StyleBox[ButtonBox["DumpSave",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DumpSave"],
  FontWeight->"Bold"],
 ". The saved files can be read in again at a later session using ",
 StyleBox[ButtonBox["Get",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Get"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.716335379826095*^9, 3.716335381400613*^9}, {
  3.7164929638643913`*^9, 3.7164930918427477`*^9}, {3.716493139706471*^9, 
  3.716493139710923*^9}, {3.716494160237914*^9, 3.7164941602428217`*^9}, {
  3.725727333532481*^9, 3.725727375649679*^9}, {3.7257274875275173`*^9, 
  3.725727502899559*^9}, {3.7257275718736067`*^9, 3.725727583497465*^9}, {
  3.747567321537368*^9, 3.747567412088563*^9}, {3.747567933854857*^9, 
  3.747567944150741*^9}, {3.7481910158007812`*^9, 
  3.7481910307835283`*^9}},ExpressionUUID->"fc3c90af-7f17-42b9-9813-\
20b68f2e4bc2"],

Cell[BoxData[
 RowBox[{"financeData", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "10"}], "]"}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"f6522dd3-0bee-4d7b-ada9-e096c6f33a85"],

Cell[BoxData[
 RowBox[{"financeDataSamples", " ", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{"financeData", ",", "5"}], "]"}], ",", "100"}], "]"}]}]], "Input",
 CellLabel->"",ExpressionUUID->"68e3d048-7992-4b33-afe0-4c4a4ebcdff2"],

Cell[BoxData[
 RowBox[{"DumpSave", "[", 
  RowBox[{"\"\<financeDataSamples.mx\>\"", ",", "financeDataSamples"}], 
  "]"}]], "Input",ExpressionUUID->"24510101-16a4-4454-812b-dec09f42c604"],

Cell[BoxData[
 RowBox[{"Clear", "[", "financeDataSamples", "]"}]], "Input",ExpressionUUID->"a6804ea9-f6a9-4452-9289-993f6c1bfd43"],

Cell[BoxData[
 RowBox[{"FindFile", "[", "\"\<financeDataSamples.mx\>\"", "]"}]], "Input",Exp\
ressionUUID->"dcec907f-7d42-47cd-90cf-04f72f5c9593"],

Cell[BoxData[
 RowBox[{"<<", "\"\<financeDataSamples.mx\>\""}]], "Input",ExpressionUUID->"e1ea2574-1ea2-4887-97d6-b403b0502311"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"c4af0b17-dc1a-49cb-a1c6-e1c9068fa1d2"],

Cell[CellGroupData[{

Cell["Importing Data from a Database", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.714749634726173*^9, 3.7147496389407387`*^9}, {
   3.725730865212603*^9, 
   3.725730865514154*^9}},ExpressionUUID->"5fa5b826-9b17-449e-8eb2-\
10992ab756de"],

Cell[CellGroupData[{

Cell["Set Up", "Subsection",
 CellChangeTimes->{{3.7257300377964373`*^9, 
  3.725730039458955*^9}},ExpressionUUID->"fd3cb6b0-0005-4a2e-a9d1-\
599c84f66f01"],

Cell["\<\
DatabaseLink contains a number of example databases. Install them as follows:\
\>", "Text",
 CellChangeTimes->{{3.725730070906144*^9, 3.725730091300312*^9}, {
  3.7257301344960938`*^9, 
  3.725730181679365*^9}},ExpressionUUID->"b92a7ef0-72eb-46cd-98e0-\
2dceb0725e75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "DatabaseLink`DatabaseExamples`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DatabaseExamplesBuild", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.714765698960204*^9, 3.714765699306169*^9}},
 CellTags->"databaseExamples",
 CellLabel->"In[1]:=",ExpressionUUID->"46b7dd98-add6-4f8b-bfef-42057229b656"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Connecting to an SQL Database", "Subsection",
 CellChangeTimes->{{3.7131953401038427`*^9, 3.713195352316354*^9}, {
   3.714765488411426*^9, 3.714765506121314*^9}, {3.716494231719722*^9, 
   3.71649425141201*^9}, 
   3.748191064831608*^9},ExpressionUUID->"e55a9ed0-fd31-4978-af6f-\
e7ce7f4551bf"],

Cell["Load the DatabaseLink package:", "Text",
 CellChangeTimes->{{3.716494347659135*^9, 3.716494360064908*^9}, 
   3.725730419110517*^9},ExpressionUUID->"be236ee4-875b-4cd0-b78c-\
a0af2123be9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{3.716494263855549*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"8f4c0ac8-4cfc-4006-9447-e04d0ae4abc7"],

Cell["\<\
Open a connection to the database (the \[OpenCurlyDoubleQuote]publisher\
\[CloseCurlyDoubleQuote] example database):\
\>", "Text",
 CellChangeTimes->{{3.7164943660170097`*^9, 3.7164943729080467`*^9}, {
  3.716506371191174*^9, 3.716506379980502*^9}, {3.7165067881758223`*^9, 
  3.716506814797758*^9}, {3.717180215511177*^9, 3.717180215835534*^9}, {
  3.7257303987042503`*^9, 
  3.725730417510541*^9}},ExpressionUUID->"08d1657a-38d8-4d29-8eac-\
fceca4374ca1"],

Cell[BoxData[
 RowBox[{"conn", "=", 
  RowBox[{"OpenSQLConnection", "[", "\"\<publisher\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.716494263855549*^9, 3.725730426078787*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"19c25da8-6bd7-4793-a549-31af1d0aaa36"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Information from the Database", "Subsection",
 CellChangeTimes->{{3.7164943838101063`*^9, 3.7164944123481092`*^9}, {
  3.748191071869053*^9, 
  3.748191075149143*^9}},ExpressionUUID->"8458ed31-2ebf-4624-98da-\
4a5c390d7b86"],

Cell["Check the names of the tables in the database:", "Text",
 CellChangeTimes->{{3.7164944223382874`*^9, 3.716494436323555*^9}, {
   3.716506819837802*^9, 3.7165068261898127`*^9}, 
   3.725730433245996*^9},ExpressionUUID->"9791a66c-8995-4302-b5a5-\
9b343476cc01"],

Cell[BoxData[
 RowBox[{"SQLTableNames", "[", "conn", "]"}]], "Input",
 CellTags->{"b:3.1", "Ex--21943492438155078303,64"},
 CellLabel->"In[5]:=",
 CellID->27124,ExpressionUUID->"ef5ea58b-6253-42f5-ad4d-73dcf154c3cb"],

Cell[CellGroupData[{

Cell["\<\
Using Wolfram Language functionality to select rows of data from a table\
\>", "Subsubsection",
 CellChangeTimes->{{3.716494473221841*^9, 3.716494496305584*^9}, {
  3.716494663552472*^9, 
  3.716494672053854*^9}},ExpressionUUID->"431f9c73-5f93-4f0e-a626-\
874ccc66f1e7"],

Cell[CellGroupData[{

Cell["\<\
Select a few rows from the \[OpenCurlyDoubleQuote]SALESDETAILS\
\[CloseCurlyDoubleQuote] table showing the column headers:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7165068988396482`*^9, 3.716506934310789*^9}, 
   3.716555131870565*^9, 
   3.72573044634993*^9},ExpressionUUID->"6fd7e021-af7d-4f09-98db-\
73a3a8e12f5b"],

Cell[BoxData[
 RowBox[{"SQLSelect", "[", 
  RowBox[{"conn", ",", "\"\<SALESDETAILS\>\"", ",", 
   RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"\"\<MaxRows\>\"", "\[Rule]", " ", "5"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7147657583682613`*^9, {3.714765792021305*^9, 3.714765795818323*^9}, {
   3.7165068801871643`*^9, 3.7165068832967987`*^9}, 3.716555131871121*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"648f8c4d-dbcc-4c6e-8a5c-277f31980df0"],

Cell["\<\
Select the titles as well as quantity ordered in each sales order (final goal \
is to compute the total quantity ordered for each title):\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7165069951135902`*^9, 3.716507031600024*^9}, 
   3.716507140328558*^9, {3.716507380872633*^9, 3.7165074070558033`*^9}, {
   3.725730455230695*^9, 3.725730519484375*^9}, {3.748190594197421*^9, 
   3.7481905944169827`*^9}, 
   3.748191124461659*^9},ExpressionUUID->"186970fa-aae8-4048-9e3e-\
3f141d419893"],

Cell[BoxData[
 RowBox[{"data", " ", "=", 
  RowBox[{"SQLSelect", "[", 
   RowBox[{"conn", ",", "\"\<SALESDETAILS\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<TITLE_ID\>\"", ",", "\"\<QTY_ORDERED\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7147657583682613`*^9, {3.714765792021305*^9, 3.7147658233806057`*^9}, {
   3.714765853779509*^9, 3.714765854937508*^9}, 3.714765887954249*^9, 
   3.716494581403434*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"e1cf16c5-97ae-413b-8a46-a81b31660be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Use Wolfram Language code to group the sales orders by title and sum the \
quantities across orders for each title: \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716507051212441*^9, 3.7165070841939783`*^9}, 
   3.716507215667355*^9, {3.7165074147905703`*^9, 3.7165074631089373`*^9}, {
   3.716507582021309*^9, 3.716507595244*^9}, {3.725730554013838*^9, 
   3.7257305570182858`*^9}, {3.7481911369870253`*^9, 
   3.7481911381712637`*^9}},ExpressionUUID->"0bae2f6d-aad9-48df-8a4b-\
c56593287c27"],

Cell[BoxData[
 RowBox[{"data2", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"Total", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"GatherBy", "[", 
    RowBox[{"data", ",", "First"}], "]"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714766354218075*^9, 3.714766432401528*^9}, 
   3.716494650657811*^9, 3.716507130725142*^9, 3.716507215667849*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"1741b17f-7058-4377-b6d0-e8290edcb6ef"],

Cell["Visualise the total sales for each title:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725730561371745*^9, 3.725730575498024*^9}, 
   3.7257306224690533`*^9, 3.7477605524331827`*^9, {3.7481907228617067`*^9, 
   3.748190726148733*^9}, {3.8329385825161037`*^9, 
   3.832938582636146*^9}},ExpressionUUID->"042885af-e226-47a9-8380-\
cc1bf0ecd653"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"data2", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"data2", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "Below", ",", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714765898585672*^9, 3.714765944821094*^9}, {
   3.7147660007164*^9, 3.71476601854148*^9}, {3.714766065978792*^9, 
   3.714766122467805*^9}, {3.714766196227559*^9, 3.71476621583561*^9}, {
   3.71476631614776*^9, 3.7147663250030537`*^9}, {3.714766418636056*^9, 
   3.714766508189384*^9}, {3.714766557379628*^9, 3.714766589537101*^9}, {
   3.71476665033529*^9, 3.714766663461076*^9}, 3.716494650658338*^9, 
   3.716507130725586*^9, 3.716507215668173*^9, {3.747760137474577*^9, 
   3.747760146823915*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d4b175a4-5fd0-4bd2-bad7-2a464d465b03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using SQL to select rows of data from a table", "Subsubsection",
 CellChangeTimes->{{3.716494678039164*^9, 3.716494688849362*^9}, {
  3.716507331323863*^9, 
  3.716507334428444*^9}},ExpressionUUID->"d1fda108-8e5b-4de7-a724-\
ad92368fb8bc"],

Cell[CellGroupData[{

Cell["\<\
Use SQL directly to group results by title and add up the quantity ordered in \
each group:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7165073576254787`*^9, 3.716507370792862*^9}, {
  3.716507472607527*^9, 3.7165075338648*^9}, {3.725730666593438*^9, 
  3.72573067074338*^9}},ExpressionUUID->"25b70bef-a0bd-4f0d-90b1-\
c1cf585a14bb"],

Cell[BoxData[
 RowBox[{"data3", " ", "=", 
  RowBox[{"SQLExecute", "[", 
   RowBox[{
   "conn", ",", 
    "\"\<Select TITLE_ID, SUM(QTY_ORDERED) from SALESDETAILS group by \
TITLE_ID\>\""}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.714766815725134*^9, 3.714766927315689*^9}, {
   3.71476710342279*^9, 3.714767118965431*^9}, 3.716494804179831*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"0d3f051e-5251-4d33-8e2a-a9854146c652"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create a pie chart to show total sales for the titles:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716507601796386*^9, 3.716507634141024*^9}, {
   3.725730687153206*^9, 3.725730689942481*^9}, {3.747759937753631*^9, 
   3.747759964086849*^9}, {3.747760579582596*^9, 3.747760591364964*^9}, 
   3.8321553101014547`*^9},ExpressionUUID->"a0b50518-6a0f-4d12-a6c4-\
e027ae8caaec"],

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{"data3", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"data3", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      "\"\<RadialCallout\>\""}], "]"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714767121483667*^9, 3.714767192489197*^9}, {
   3.714767243514009*^9, 3.714767251567593*^9}, 3.714767285002069*^9, {
   3.714767350826028*^9, 3.7147674154999323`*^9}, 3.716494816729451*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"916a3a4f-56a9-49ec-b6ee-53662bcbe5ed"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Housekeeping", "Subsection",
 CellChangeTimes->{{3.716494730821911*^9, 
  3.7164947425241117`*^9}},ExpressionUUID->"ad7c78a6-d29d-43d8-94d2-\
0437084e5b79"],

Cell["Check for open connections: ", "Text",
 CellChangeTimes->{{3.71649474521852*^9, 3.716494762642803*^9}, {
  3.725730737148674*^9, 
  3.7257307397792273`*^9}},ExpressionUUID->"f3493ad6-f9e9-496f-a21e-\
64042e5b8c9b"],

Cell[BoxData[
 RowBox[{"SQLConnections", "[", "]"}]], "Input",
 CellChangeTimes->{{3.714767720694193*^9, 
  3.714767735203641*^9}},ExpressionUUID->"435c90b0-0d80-48f6-ac17-\
961c5e244d49"],

Cell["Close connections that you do not need:", "Text",
 CellChangeTimes->{{3.7257307415703*^9, 
  3.7257307529795094`*^9}},ExpressionUUID->"1935569b-3d80-4b35-982a-\
ecd34bb6fa7b"],

Cell[BoxData[
 RowBox[{"CloseSQLConnection", "[", "conn", "]"}]], "Input",
 CellChangeTimes->{{3.714767738715557*^9, 
  3.714767750171919*^9}},ExpressionUUID->"06fa0944-467c-4259-a08f-\
573c9a336084"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"1e6c0a49-ec8b-4f72-8eb5-f0b19f33c296"],

Cell[CellGroupData[{

Cell["Accessing Built-in Data: Wolfram Knowledgebase", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.714764127906898*^9, 3.7147641293239403`*^9}, {
   3.7171805800621347`*^9, 3.7171805833720016`*^9}, {3.72537040409688*^9, 
   3.7253704111104*^9}, {3.7485416110012617`*^9, 3.748541641926058*^9}, 
   3.748601786505395*^9, 
   3.832155320621687*^9},ExpressionUUID->"236f646c-ad53-4e8c-9dc0-\
b726d9617c16"],

Cell[CellGroupData[{

Cell["Types of Built-in Data", "Subsection",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
  3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
  3.7130242757814198`*^9}, {3.713025090368256*^9, 3.713025113283557*^9}, {
  3.7131822728933487`*^9, 3.7131822737029257`*^9}, {3.7147641324103928`*^9, 
  3.714764137114235*^9}, {3.748191183603341*^9, 3.748191186361195*^9}, {
  3.74860183027907*^9, 
  3.748601837330762*^9}},ExpressionUUID->"5995f06b-0594-49f8-b1ee-\
22792e6dfe9e"],

Cell["\<\
The Wolfram Language provides a built-in collection of high-quality curated \
datasets spanning a variety of topics. \
\>", "Text",
 CellChangeTimes->{{3.716507793830103*^9, 3.716507847018758*^9}, {
  3.725370419230212*^9, 3.725370423398178*^9}, {3.748191192227319*^9, 
  3.748191192481214*^9}},ExpressionUUID->"9d8b00bb-aedc-448e-9760-\
dd392686f8cd"],

Cell[TextData[ButtonBox["Physics and Chemistry Data",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/PhysicsAndChemistryDataAndComputation"]], "Subitem",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
  3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
  3.7130242757814198`*^9}, {3.713025090368256*^9, 3.7130251440028353`*^9}, {
  3.713026187883421*^9, 
  3.713026187883963*^9}},ExpressionUUID->"49b40fb0-53e0-485a-9383-\
b6300bd9b5dd"],

Cell[TextData[ButtonBox["Earth Sciences Data",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/EarthSciencesDataAndComputation"]], "Subitem",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
   3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
   3.7130242757814198`*^9}, {3.713025090368256*^9, 3.7130251440028353`*^9}, {
   3.7130261884024763`*^9, 3.713026203603957*^9}, {3.713026280297326*^9, 
   3.7130262994457417`*^9}, 
   3.713026413648608*^9},ExpressionUUID->"909a6a81-e3cb-4e18-87e3-\
e8bfe30a4908"],

Cell[TextData[{
 ButtonBox["Engineering Data",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/EngineeringData"],
 ", ",
 ButtonBox["Transportation Data",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/TransportationData"]
}], "Subitem",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
  3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
  3.7130242757814198`*^9}, {3.713025090368256*^9, 3.713025122786784*^9}, {
  3.713025169986559*^9, 3.713025206734927*^9}, {3.7130261315680237`*^9, 
  3.713026131568625*^9}},ExpressionUUID->"a16e6b80-6432-48fa-8182-\
e6dca4d105f5"],

Cell[TextData[ButtonBox["Socioeconomic & Demographic Data",
 BaseStyle->"Link",
 ButtonData->"paclet:guide/SocioeconomicAndDemographicData"]], "Subitem",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
  3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
  3.7130242757814198`*^9}, {3.713025090368256*^9, 3.713025122786784*^9}, {
  3.713025169986559*^9, 3.713025206734927*^9}, {3.713026131867353*^9, 
  3.7130261727898273`*^9}, {3.713026222288495*^9, 
  3.7130262222889557`*^9}},ExpressionUUID->"c2a02042-2642-45cc-9495-\
3736fab50a61"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{
    RowBox[{
     RowBox[{"Life", " ", "Sciences"}], "&"}], " ", "Medicine", " ", "Data"}],
   BaseStyle->"Link",
   ButtonData->"paclet:guide/LifeSciencesAndMedicineDataAndComputation"], 
  TraditionalForm]],ExpressionUUID->"161988c1-77e6-473b-88da-cab53657d8b5"]], \
"Subitem",
 CellChangeTimes->{{3.7098976882928667`*^9, 3.70989770451307*^9}, {
  3.7098977990358257`*^9, 3.709897824877695*^9}, {3.713024268184142*^9, 
  3.7130242757814198`*^9}, {3.713025090368256*^9, 3.713025122786784*^9}, {
  3.713025169986559*^9, 3.713025206734927*^9}, {3.713026131867353*^9, 
  3.7130261727898273`*^9}, {3.7130262227933273`*^9, 3.713026245292736*^9}, {
  3.7130264046843*^9, 3.7130264255623198`*^9}, {3.713026534712579*^9, 
  3.7130265347130547`*^9}, {3.832155347216365*^9, 
  3.8321553472164373`*^9}},ExpressionUUID->"eb9e54ef-78bb-4797-b6df-\
a285ab014832"],

Cell["List the names of types of example data:", "Text",
 CellChangeTimes->{{3.725730918552874*^9, 3.725730929325032*^9}, {
  3.7485414873357267`*^9, 
  3.748541488475733*^9}},ExpressionUUID->"bdf52e38-2f1f-447b-b3a1-\
e53d1af366a9"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.713025045315247*^9, 
  3.713025048595612*^9}},ExpressionUUID->"11af2283-554c-4c64-8975-\
490dafff7b89"],

Cell["\<\
List of the elements or properties available for a particular example:\
\>", "Text",
 CellChangeTimes->{{3.7257309673858223`*^9, 
  3.7257309748801193`*^9}},ExpressionUUID->"abe03d0a-f553-4b14-954d-\
38307e436e9c"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Text\>\"", ",", "\"\<USConstitution\>\""}], "}"}], ",", 
   "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.716508966152946*^9, 
  3.716508976101232*^9}},ExpressionUUID->"a7065028-ac60-431c-9e0d-\
0cb330743ef9"],

Cell["List some of the different types of data collections:", "Text",
 CellChangeTimes->{{3.725731042624364*^9, 3.7257310793341837`*^9}, {
  3.7257311237826967`*^9, 
  3.725731125164978*^9}},ExpressionUUID->"62f2e1ec-5529-4706-934d-\
da4f4ca4b584"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"Names", "[", "\"\<*Data\>\"", "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.713026558146102*^9, 3.7130265645934963`*^9}, {
   3.717180627941019*^9, 3.717180663560525*^9}, 3.725731083686706*^9, {
   3.748601814574164*^9, 
   3.748601816514309*^9}},ExpressionUUID->"a1d809da-9375-4434-ba34-\
e7f06e62a796"],

Cell["For a complete listing: ", "Text",
 CellChangeTimes->{{3.7257311309822397`*^9, 
  3.7257311452204857`*^9}},ExpressionUUID->"3a2d01b7-e56d-404d-85e6-\
265fc21ee241"],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<*Data\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713026558146102*^9, 3.7130265645934963`*^9}, {
  3.717180627941019*^9, 3.717180663560525*^9}, {3.725731085934327*^9, 
  3.7257310882380037`*^9}},ExpressionUUID->"4f21a175-870e-42ab-a645-\
5dd3b03c2d41"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"445edb74-73f5-4de6-9a1f-fe1a6a82a74a"],

Cell[CellGroupData[{

Cell["Accessing Built-in Data: Wolfram Data Framework", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.714764127906898*^9, 3.7147641293239403`*^9}, {
   3.7171805800621347`*^9, 3.7171805833720016`*^9}, {3.72537040409688*^9, 
   3.7253704111104*^9}, {3.7485416110012617`*^9, 
   3.748541641926058*^9}},ExpressionUUID->"de82646e-5934-4750-9d77-\
52f624518ca1"],

Cell["\<\
The Wolfram Data Framework makes use of the Wolfram Language and the Wolfram \
Knowledgebase to provide a way for users to access the curated data.\
\>", "Text",
 CellChangeTimes->{{3.716507906177352*^9, 3.716507916631041*^9}, {
   3.716507956390008*^9, 3.7165079743631287`*^9}, {3.717180694011755*^9, 
   3.717180694528687*^9}, 3.7485416306539392`*^9, 
   3.832155377119759*^9},ExpressionUUID->"605a7bf7-e95b-416c-9c16-\
38757009172a"],

Cell[CellGroupData[{

Cell["Entity", "Subsection",
 CellChangeTimes->{{3.748542901180996*^9, 
  3.748542902499674*^9}},ExpressionUUID->"01832b52-408c-447c-b803-\
a6081c301f49"],

Cell["\<\
Tight integration of data from the Wolfram Knowledgebase with the Wolfram \
Language\
\>", "Item",
 CellChangeTimes->{{3.720193682850293*^9, 3.7201936892688837`*^9}, {
   3.72019372252866*^9, 3.720193762671529*^9}, {3.720895284202776*^9, 
   3.720895310716548*^9}, {3.722963250789816*^9, 3.722963269595807*^9}, {
   3.737129536869858*^9, 3.737129583123657*^9}, {3.737129660210154*^9, 
   3.737129677176874*^9}, {3.737130098468892*^9, 3.7371300984695663`*^9}, {
   3.737131051676762*^9, 3.737131059740567*^9}, {3.73713340275408*^9, 
   3.737133456837206*^9}, 
   3.8321553839511337`*^9},ExpressionUUID->"179bc179-a61c-4374-b93d-\
83f2dc0ff393"],

Cell["\<\
200+ entity types accessible through natural language input or direct \
programmatic access\
\>", "Item",
 CellChangeTimes->{{3.720193682850293*^9, 3.7201936892688837`*^9}, {
   3.72019372252866*^9, 3.720193762671529*^9}, {3.720895284202776*^9, 
   3.720895310716548*^9}, {3.722963250789816*^9, 3.722963269595807*^9}, {
   3.737129536869858*^9, 3.737129583123657*^9}, {3.737129660210154*^9, 
   3.737129677176874*^9}, {3.737130098468892*^9, 3.7371300984695663`*^9}, {
   3.737131051676762*^9, 3.737131059740567*^9}, {3.73713340275408*^9, 
   3.737133456364245*^9}, {3.737134491495029*^9, 3.7371345390175037`*^9}, 
   3.737217639058318*^9, 
   3.832155395616238*^9},ExpressionUUID->"2c996f83-8937-428c-a83c-\
386212fa52e8"],

Cell[TextData[{
 "An ",
 StyleBox[ButtonBox["Entity",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Entity"],
  FontWeight->"Bold"],
 " is a canonical object representing some real-world data:"
}], "Text",
 CellChangeTimes->{
  3.748541765433481*^9, {3.832155397847851*^9, 
   3.83215539876046*^9}},ExpressionUUID->"d0c4b236-312e-44ab-8996-\
a953b74e6eb3"],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "france", Typeset`boxes$$ = 
   TemplateBox[{"\"France\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, "Entity"],
    Typeset`allassumptions$$ = {{
    "type" -> "Clash", "word" -> "france", "template" -> 
     "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
     "2", "Values" -> {{
       "name" -> "Country", "desc" -> "a country", "input" -> 
        "*C.france-_*Country-"}, {
       "name" -> "GivenName", "desc" -> "a given name", "input" -> 
        "*C.france-_*GivenName-"}}}}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    0.846782`6.379316611166728, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{57., {8.5, 14.5}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.737134544569235*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"900cfefe-ea9e-4577-91c9-8cc691de0d3f"],

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "E.T. runtime", Typeset`boxes$$ = 
   "Entity[\"Movie\", \
\"ET:TheExtra-Terrestrial::9vbnj\"][EntityProperty[\"Movie\", \"Runtime\"]]", 
   Typeset`allassumptions$$ = {}, Typeset`assumptions$$ = {}, 
   Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    2.911847`6.91571354518045, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{93., {8.5, 14.5}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.737134557973827*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"36a5225d-d7dc-4b10-92bc-325d448dd72d"],

Cell["A list of currently available entity types is given by:", "Text",
 CellChangeTimes->{{3.7165080394374437`*^9, 3.71650807835359*^9}, {
   3.7165081368147497`*^9, 3.716508148332225*^9}, {3.7171807222872*^9, 
   3.717180722297084*^9}, {3.748191298944727*^9, 3.748191304469942*^9}, 
   3.74854175808897*^9},ExpressionUUID->"3a688261-2aee-4206-87c8-\
bd3185fe0167"],

Cell[BoxData[
 RowBox[{"EntityValue", "[", "]"}]], "Input",
 CellChangeTimes->{{3.7130242809026337`*^9, 3.7130242872853127`*^9}, {
   3.713026546149055*^9, 3.7130265483388987`*^9}, {3.714764212797861*^9, 
   3.714764221433319*^9}, 3.714764380308975*^9},
 CellLabel->
  "In[393]:=",ExpressionUUID->"7d802758-9a1d-470e-8a39-7511120d09d4"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", "]"}], ",", "25"}], "]"}]], "Input",
 CellChangeTimes->{{3.7371346019416428`*^9, 3.737134608329226*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2b755cb5-7308-49c4-8313-cfe0205073fc"],

Cell["\<\
A list of sample entities belonging to a particular class of entities can be \
viewed with:\
\>", "Text",
 CellChangeTimes->{{3.716508282007539*^9, 3.716508329201659*^9}, 
   3.725731170328577*^9},ExpressionUUID->"2ebb5957-26b1-48dd-86c2-\
a56dc8f0712e"],

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<Person\>\"", ",", "\"\<SampleEntities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.737134620672504*^9, 3.7371346369460297`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d0798a88-08fb-47f2-9f14-fdc085df7451"],

Cell["The available properties of an Entity can be viewed with:", "Text",
 CellChangeTimes->{{3.71650816040406*^9, 3.7165081787706747`*^9}, {
   3.716508331156824*^9, 3.716508331557111*^9}, 
   3.72573116164753*^9},ExpressionUUID->"f093cdfc-dc21-48b9-859c-\
4a3ef3cd6a1e"],

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<Person\>\"", ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.714764306971137*^9, 3.714764347289116*^9}, 
   3.714764424228881*^9, {3.714831069781636*^9, 3.714831081481532*^9}, 
   3.725731166204295*^9, 3.748541848496756*^9},
 CellLabel->
  "In[394]:=",ExpressionUUID->"8fed1ea6-771d-41ad-a808-0459e6fc4120"],

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   TemplateBox[{"\"J. K. Rowling\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"JKRowling::z8f97\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"JKRowling::z8f97\\\"]\"", "\"person\""},
    "Entity"], ",", "\"\<Dataset\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.737134657894772*^9, 3.737134665865769*^9}, 
   3.737134876386388*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"3470134b-f7cb-45f4-a8cf-fcc4bf44336c"],

Cell["\<\
Entity values can be accessed through natural language input:\
\>", "Text",
 CellChangeTimes->{{3.748541921183922*^9, 3.748541938629272*^9}, {
  3.8329386322850723`*^9, 
  3.832938632541053*^9}},ExpressionUUID->"5f4ecabe-2a85-4924-822c-\
323ae0c63de7"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["LinguisticAssistant",
  DynamicModuleBox[{Typeset`query$$ = "france population history", 
   Typeset`boxes$$ = RowBox[{
     TemplateBox[{"\"France\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
       "\"Entity[\\\"Country\\\", \\\"France\\\"]\"", "\"country\""}, 
      "Entity"], "[", 
     InterpretationBox[
      DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
       TemplateBox[{
         TemplateBox[{"\"population\""}, "ImplicitEntityPropertyBase"], 
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{" ", "\"Date\""}], "\":\"", "All"}, 
              "ImplicitEntityInfoRow"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "GeneralizedEntityInfoGrid", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
         Dynamic[EntityFramework`Formatting`Private`open], 
         "\"EntityProperty[\\\"Country\\\", \\\"Population\\\", {\\\"Date\\\" \
-> All}]\"", 
         TemplateBox[{"All"}, "ImplicitEntityPropertySequence"]}, 
        "ImplicitEntityPropertyToggle"]], 
      EntityProperty["Country", "Population", {"Date" -> All}], 
      SelectWithContents -> True], "]"}], Typeset`allassumptions$$ = {}, 
   Typeset`assumptions$$ = {}, Typeset`open$$ = {1}, Typeset`querystate$$ = {
   "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
    0.822911`6.366897861151762, "Messages" -> {}}}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
      Dynamic[Typeset`query$$], 
      Dynamic[Typeset`boxes$$], 
      Dynamic[Typeset`allassumptions$$], 
      Dynamic[Typeset`assumptions$$], 
      Dynamic[Typeset`open$$], 
      Dynamic[Typeset`querystate$$]], StandardForm],
    ImageSizeCache->{163., {8.5, 14.5}},
    TrackedSymbols:>{
     Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
      Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
   DynamicModuleValues:>{},
   UndoTrackedVariables:>{Typeset`open$$}],
  BaseStyle->{"Deploy"},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Input",
 CellChangeTimes->{3.737191805509717*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"9f783157-d55d-4fc7-b612-d1aeae94f00f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1600\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2050\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["233", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 1600\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2050\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["233", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"365", ",", "\"Day\""}], "}"}], 
                  "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{{
      Quantity[18500000, "People", {}], 
      Quantity[21471000, "People", {}], 
      Quantity[31250000, "People", {}], 
      Quantity[31460000, "People", {}], 
      Quantity[31685000, "People", {}], 
      Quantity[31905000, "People", {}], 
      Quantity[32127000, "People", {}], 
      Quantity[32350000, "People", {}], 
      Quantity[32538000, "People", {}], 
      Quantity[32727000, "People", {}], 
      Quantity[32917000, "People", {}], 
      Quantity[33108000, "People", {}], 
      Quantity[33300000, "People", {}], 
      Quantity[33439000, "People", {}], 
      Quantity[33598000, "People", {}], 
      Quantity[33718000, "People", {}], 
      Quantity[33859000, "People", {}], 
      Quantity[34000000, "People", {}], 
      Quantity[34178000, "People", {}], 
      Quantity[34357000, "People", {}], 
      Quantity[34537000, "People", {}], 
      Quantity[34718000, "People", {}], 
      Quantity[34900000, "People", {}], 
      Quantity[35059000, "People", {}], 
      Quantity[35218000, "People", {}], 
      Quantity[35378000, "People", {}], 
      Quantity[35539000, "People", {}], 
      Quantity[35700000, "People", {}], 
      Quantity[35829000, "People", {}], 
      Quantity[35959000, "People", {}], 
      Quantity[36089000, "People", {}], 
      Quantity[36219000, "People", {}], 
      Quantity[36350000, "People", {}], 
      Quantity[36479000, "People", {}], 
      Quantity[36609000, "People", {}], 
      Quantity[36739000, "People", {}], 
      Quantity[36869000, "People", {}], 
      Quantity[37000000, "People", {}], 
      Quantity[37060000, "People", {}], 
      Quantity[37120000, "People", {}], 
      Quantity[37180000, "People", {}], 
      Quantity[37240000, "People", {}], 
      Quantity[37300000, "People", {}], 
      Quantity[37390000, "People", {}], 
      Quantity[37520000, "People", {}], 
      Quantity[37710000, "People", {}], 
      Quantity[37860000, "People", {}], 
      Quantity[38020000, "People", {}], 
      Quantity[38080000, "People", {}], 
      Quantity[38230000, "People", {}], 
      Quantity[38330000, "People", {}], 
      Quantity[38890000, "People", {}], 
      Quantity[38440000, "People", {}], 
      Quantity[37731000, "People", {}], 
      Quantity[37679000, "People", {}], 
      Quantity[37887000, "People", {}], 
      Quantity[38044000, "People", {}], 
      Quantity[38221000, "People", {}], 
      Quantity[38398000, "People", {}], 
      Quantity[38576000, "People", {}], 
      Quantity[38763000, "People", {}], 
      Quantity[38909000, "People", {}], 
      Quantity[39045000, "People", {}], 
      Quantity[39191000, "People", {}], 
      Quantity[39337000, "People", {}], 
      Quantity[39472000, "People", {}], 
      Quantity[39629000, "People", {}], 
      Quantity[39733000, "People", {}], 
      Quantity[39858000, "People", {}], 
      Quantity[39889000, "People", {}], 
      Quantity[39920000, "People", {}], 
      Quantity[40004000, "People", {}], 
      Quantity[40014000, "People", {}], 
      Quantity[39983000, "People", {}], 
      Quantity[39993000, "People", {}], 
      Quantity[40014000, "People", {}], 
      Quantity[40056000, "People", {}], 
      Quantity[40098000, "People", {}], 
      Quantity[40192000, "People", {}], 
      Quantity[40348000, "People", {}], 
      Quantity[40473000, "People", {}], 
      Quantity[40546000, "People", {}], 
      Quantity[40598000, "People", {}], 
      Quantity[40640000, "People", {}], 
      Quantity[40713000, "People", {}], 
      Quantity[40786000, "People", {}], 
      Quantity[40859000, "People", {}], 
      Quantity[40890000, "People", {}], 
      Quantity[40942000, "People", {}], 
      Quantity[40942000, "People", {}], 
      Quantity[41046000, "People", {}], 
      Quantity[41109000, "People", {}], 
      Quantity[41224000, "People", {}], 
      Quantity[41307000, "People", {}], 
      Quantity[41359000, "People", {}], 
      Quantity[41463000, "People", {}], 
      Quantity[41476000, "People", {}], 
      Quantity[40481000, "People", {}], 
      Quantity[39884000, "People", {}], 
      Quantity[39288000, "People", {}], 
      Quantity[38542000, "People", {}], 
      Quantity[38700000, "People", {}], 
      Quantity[39000000, "People", {}], 
      Quantity[39240000, "People", {}], 
      Quantity[39420000, "People", {}], 
      Quantity[39880000, "People", {}], 
      Quantity[40310000, "People", {}], 
      Quantity[40610000, "People", {}], 
      Quantity[40870000, "People", {}], 
      Quantity[40940000, "People", {}], 
      Quantity[41050000, "People", {}], 
      Quantity[41230000, "People", {}], 
      Quantity[41610000, "People", {}], 
      Quantity[41860000, "People", {}], 
      Quantity[41860000, "People", {}], 
      Quantity[41890000, "People", {}], 
      Quantity[41950000, "People", {}], 
      Quantity[41940000, "People", {}], 
      Quantity[41910000, "People", {}], 
      Quantity[41930000, "People", {}], 
      Quantity[41960000, "People", {}], 
      Quantity[41900000, "People", {}], 
      Quantity[41000000, "People", {}], 
      Quantity[39600000, "People", {}], 
      Quantity[39400000, "People", {}], 
      Quantity[39000000, "People", {}], 
      Quantity[38900000, "People", {}], 
      Quantity[39700000, "People", {}], 
      Quantity[40290000, "People", {}], 
      Quantity[40680000, "People", {}], 
      Quantity[41110000, "People", {}], 
      Quantity[41480000, "People", {}], 
      Quantity[41828673, "People", {}], 
      Quantity[42155534, "People", {}], 
      Quantity[42459667, "People", {}], 
      Quantity[42751746, "People", {}], 
      Quantity[43056505, "People", {}], 
      Quantity[43427669, "People", {}], 
      Quantity[43843075, "People", {}], 
      Quantity[44310863, "People", {}], 
      Quantity[44788852, "People", {}], 
      Quantity[45239729, "People", {}], 
      Quantity[45670000, "People", {}], 
      Quantity[46189000, "People", {}], 
      Quantity[47124000, "People", {}], 
      Quantity[47808000, "People", {}], 
      Quantity[48340000, "People", {}], 
      Quantity[48763000, "People", {}], 
      Quantity[49194000, "People", {}], 
      Quantity[49569000, "People", {}], 
      Quantity[49934000, "People", {}], 
      Quantity[50353000, "People", {}], 
      Quantity[50763212, "People", {}], 
      Quantity[51161640, "People", {}], 
      Quantity[51572812, "People", {}], 
      Quantity[51980081, "People", {}], 
      Quantity[52358648, "People", {}], 
      Quantity[52691826, "People", {}], 
      Quantity[52974009, "People", {}], 
      Quantity[53214788, "People", {}], 
      Quantity[53431051, "People", {}], 
      Quantity[53646954, "People", {}], 
      Quantity[53880143, "People", {}], 
      Quantity[54135673, "People", {}], 
      Quantity[54408866, "People", {}], 
      Quantity[54695692, "People", {}], 
      Quantity[54988578, "People", {}], 
      Quantity[55281465, "People", {}], 
      Quantity[55575215, "People", {}], 
      Quantity[55870924, "People", {}], 
      Quantity[56162822, "People", {}], 
      Quantity[56443567, "People", {}], 
      Quantity[56708260, "People", {}], 
      Quantity[56956057, "People", {}], 
      Quantity[57189616, "People", {}], 
      Quantity[57412239, "People", {}], 
      Quantity[57628904, "People", {}], 
      Quantity[57844501, "People", {}], 
      Quantity[58057570, "People", {}], 
      Quantity[58270419, "People", {}], 
      Quantity[58496138, "People", {}], 
      Quantity[58751572, "People", {}], 
      Quantity[59047795, "People", {}], 
      Quantity[59390720, "People", {}], 
      Quantity[59774531, "People", {}], 
      Quantity[60183884, "People", {}], 
      Quantity[60596691, "People", {}], 
      Quantity[60996506, "People", {}], 
      Quantity[61378065, "People", {}], 
      Quantity[61744596, "People", {}], 
      Quantity[62098413, "People", {}], 
      Quantity[62444770, "People", {}], 
      Quantity[62787427, "People", {}], 
      Quantity[63125894, "People", {}], 
      Quantity[63457777, "People", {}], 
      Quantity[63782963, "People", {}], 
      Quantity[64101308, "People", {}], 
      Quantity[64412771, "People", {}], 
      Quantity[64717427, "People", {}], 
      Quantity[65015517, "People", {}], 
      Quantity[65307399, "People", {}], 
      Quantity[65593530, "People", {}], 
      Quantity[65874337, "People", {}], 
      Quantity[66149953, "People", {}], 
      Quantity[66420616, "People", {}], 
      Quantity[66686988, "People", {}], 
      Quantity[66949868, "People", {}], 
      Quantity[67209840, "People", {}], 
      Quantity[67467165, "People", {}], 
      Quantity[67721776, "People", {}], 
      Quantity[67973497, "People", {}], 
      Quantity[68221986, "People", {}], 
      Quantity[68466942, "People", {}], 
      Quantity[68708359, "People", {}], 
      Quantity[68946195, "People", {}], 
      Quantity[69180043, "People", {}], 
      Quantity[69409391, "People", {}], 
      Quantity[69633847, "People", {}], 
      Quantity[69853323, "People", {}], 
      Quantity[70067838, "People", {}], 
      Quantity[70277266, "People", {}], 
      Quantity[70481498, "People", {}], 
      Quantity[70680517, "People", {}], 
      Quantity[70874270, "People", {}], 
      Quantity[71062930, "People", {}], 
      Quantity[71247003, "People", {}], 
      Quantity[71427164, "People", {}], 
      Quantity[71603952, "People", {}], 
      Quantity[71777681, "People", {}], 
      Quantity[71948412, "People", {}], 
      Quantity[72116132, "People", {}], 
      Quantity[72280719, "People", {}], 
      Quantity[72442160, "People", {}]}}, {
     TemporalData`UniformTimeSpecification[CompressedData["
1:eJxV1k2OIDUMBeBBYkE3p5gDINnxb44wEiuOwAKJFYvh0twCJ6nyy2x6+hu1
qlIvtpOvf/7zx1//ffny5fvP9eP3v7//++3X+uW3qR5MMYiOXZhF4WFDnZLa
OsdMc9hZdV4ec7LAMlMiLruHGZ4vYoPnZRJPgUcMvtczlGpJCVPOTJgj1MZl
tcl+mWuFqm3KEZaXjcd6SZunp7e5XkaLbfP9unYltD7ndU7RFVfbOQX5FGhM
5MMxM5wve4xhl6WAfDhIyZEP1+8mfFlpTrtMUwL5sEWk+GV1Ibpc6TvyZk2p
BJGHWj3yykfrVWtNryXTRC+bT77ykVpuXPmMKWs3YK+SuPIueV75cJWbXvlU
APWJlyvruPJm0loy8qjan3zlQ8oS8zLN1J335+6XyFVyTXVPBVdc2cxKlgdo
tdgdzeEgNW1G5uQELSQHOGyn9NCn7iJ96cMzwWpiG01bBbAjOfSYU0Bx3c9+
SNXh3NSQsev5oVZBIg1lWg36UiLP5j7UIEcawmaCNEbKnA6+g+ZhhSxIY7UR
IY1Vte7gWyTfPp5NORPr44Sxx9ujWoTsavupRN9+qZ/9Xwv91ws/PKhewqqt
XsFWL28Ja9+yIaGt/uqP8+onkq3Oa6vCJH2FpLd6G7Z6j5ZqA1Os1bu71Vu/
1XXxsb+cya3VFbXV5baEWtyy2A951FW8hBLf6vrfWqvsBNE5Hyf4p622fui5
1ZFhDnbDHnY/b6LdD8VqvoI9LA57lmxi1Bz6qNMF7EG1iTl22GPuMFO1G/Qa
koc9Qw97xG5WMB4J9oD+fOrwmd+bGO+HNf0pwT4cNnF2HPbRclg3A0GwOJg2
cW4d9rH2+fSDOILFoXjYZ+ZhH6mL+8QlAvtAPuzzehPH+aFaCoF9Gfh8+vK5
Kxz2VeKwksAEui4ih31POexrzOHMgcl3XYIO+4502FeozzMfao0M2jtnDiv1
RBrOZzq/NApM+mrZd9Zsrv1jpBGrFx0MnzhhKqV33hwqsSKNjNUrzVl1gpOt
WuGdOYfuEkhjzpjUZbbqRnGiVo+9c+dwDqdOo4p1tTdY6YSA+c6ezcG5d+yl
0e6Ml8mTOlgRfufPoRr5AMNrUjQrCRYF5R5BNbdrGnQaYjRyJFh/7gr6PYJq
HtUGIg2vaG2CXjJw3iOoGl3CkMYqyJxgVjkg2OR7BNXsmvv7Xua5MTys6iVD
sLVh1wiqj/fBnUb9G2EE1tBIB+MeQescU1VQqnUIdDN2cN4jqM6g9DDQqfof
nBzawVaF3SNIxXSSgbVC7TJb5+mMAPUeQbXcfY18WQPJY4CqgxKMewTpvn0i
DZecuMhUqqS45tT5f4+gOterPFYa/wOO2SKc
      "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     TemporalRegularity -> True}}, True, 11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.737191820632318*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"993a02a7-cd88-4398-b771-b348ab48fbb1"]
}, Open  ]],

Cell["\<\
A hybrid approach with natural language input and programming language \
keyword:\
\>", "Text",
 CellChangeTimes->{{3.748541954762105*^9, 
  3.74854198869939*^9}},ExpressionUUID->"aa2c1271-8cf3-4d3b-aae4-\
4691127e26d2"],

Cell[BoxData[
 RowBox[{
  NamespaceBox["LinguisticAssistant",
   DynamicModuleBox[{Typeset`query$$ = "platypus", Typeset`boxes$$ = 
    TemplateBox[{"\"platypus\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Species\"", ",", "\"Species:OrnithorhynchusAnatinus\""}], 
        "]"}], "\"Entity[\\\"Species\\\", \\\"Species:OrnithorhynchusAnatinus\
\\\"]\"", "\"species specification\""}, "Entity"], 
    Typeset`allassumptions$$ = {{
     "type" -> "Clash", "word" -> "platypus", "template" -> 
      "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
      "2", "Values" -> {{
        "name" -> "Species", "desc" -> "a species specification", "input" -> 
         "*C.platypus-_*Species-"}, {
        "name" -> "Word", "desc" -> "a word", "input" -> 
         "*C.platypus-_*Word-"}}}}, Typeset`assumptions$$ = {}, 
    Typeset`open$$ = {1}, Typeset`querystate$$ = {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     0.285538`5.907208906750776, "Messages" -> {}}}, 
    DynamicBox[ToBoxes[
      AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
       Dynamic[Typeset`query$$], 
       Dynamic[Typeset`boxes$$], 
       Dynamic[Typeset`allassumptions$$], 
       Dynamic[Typeset`assumptions$$], 
       Dynamic[Typeset`open$$], 
       Dynamic[Typeset`querystate$$]], StandardForm],
     ImageSizeCache->{69., {8.5, 14.5}},
     TrackedSymbols:>{
      Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
       Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
    DynamicModuleValues:>{},
    UndoTrackedVariables:>{Typeset`open$$}],
   BaseStyle->{"Deploy"},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], "[", "\"\<TaxonomyGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.737191828044586*^9, 3.737191837673884*^9}, {
  3.737192409262182*^9, 3.737192411299129*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b31694c9-7e2b-483d-a229-3552225c1653"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpreter", "Subsection",
 CellChangeTimes->{{3.7485429082916107`*^9, 
  3.7485429098758097`*^9}},ExpressionUUID->"53dcd57c-e013-449a-a417-\
593062ccec6f"],

Cell[TextData[{
 "At least as many ",
 StyleBox[ButtonBox["Interpreters",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/InterpretingStrings"],
  FontWeight->"Bold"],
 " as entities in the Wolfram language:"
}], "Text",
 CellChangeTimes->{{3.7485429331255198`*^9, 3.748543007404744*^9}, {
  3.7485436003020573`*^9, 3.748543601042082*^9}, {3.832155445593568*^9, 
  3.832155488801875*^9}, {3.832938732599141*^9, 
  3.8329387326865883`*^9}},ExpressionUUID->"017de25b-5c75-4307-91e3-\
e375c4905f3c"],

Cell[BoxData["$InterpreterTypes"], "Input",
 CellChangeTimes->{{3.748543364866869*^9, 
  3.748543365959684*^9}},ExpressionUUID->"7b82ad18-e379-4d65-86a7-\
008cc4b2a668"],

Cell["\<\
A string can be converted into an entity in the Wolfram Language to augment \
your data:\
\>", "Text",
 CellChangeTimes->{{3.7485436104396276`*^9, 
  3.7485436355019407`*^9}},ExpressionUUID->"5b457d3d-f4d9-4dbb-9dcc-\
b29e5a0aa2b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", "\"\<Champaign\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.748543507831729*^9, 3.748543519104412*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"5f650195-6721-4b4f-8657-1e5c7fcf60de"],

Cell["\<\
An entity immediately provides access to a lot more information:\
\>", "Text",
 CellChangeTimes->{{3.748543645238831*^9, 
  3.748543668860856*^9}},ExpressionUUID->"bf1aafc7-74bf-4bce-a4e5-\
7a1fed1c394f"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Champaign\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          
          RowBox[{"\"Champaign\"", ",", "\"Illinois\"", ",", 
            "\"UnitedStates\""}], "}"}]}], "]"}], 
    "\"Entity[\\\"City\\\", {\\\"Champaign\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
   "Entity"], "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.748543532441122*^9, 3.748543568181222*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"202358fd-de72-4ff6-a76a-ceccd51646f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"442e8b62-721a-4a5a-a1f6-8bb20ca56f86"],

Cell[CellGroupData[{

Cell["Accessing Built-in Data: Wolfram Data Repository", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.714764120781253*^9, 3.714764122492176*^9}, 
   3.725370439311653*^9, {3.7481913144373617`*^9, 3.748191317469181*^9}, 
   3.8321555340052357`*^9},ExpressionUUID->"4008c3c4-2970-4b37-b041-\
43d3808a16bf"],

Cell[TextData[{
 "A public resource for computable datasets, curated and structured for \
immediate use\[LongDash]computation, visualisation or analysis: ",
 ButtonBox["https://datarepository.wolframcloud.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://datarepository.wolframcloud.com/"], None},
  ButtonNote->"https://datarepository.wolframcloud.com/"]
}], "Text",
 CellChangeTimes->{{3.725370858840502*^9, 3.725370895111496*^9}, {
  3.725370942418853*^9, 3.725370946375903*^9}, {3.725731274030037*^9, 
  3.725731282641404*^9}, {3.748191320157565*^9, 3.74819132435948*^9}, {
  3.8329387473347282`*^9, 
  3.832938747606799*^9}},ExpressionUUID->"5af22225-8ba8-4b7a-94b0-\
ba4578831938"],

Cell[CellGroupData[{

Cell["Searching for Data", "Subsection",
 CellChangeTimes->{{3.726102102749428*^9, 
  3.7261021079988728`*^9}},ExpressionUUID->"6d9e189d-a212-4f88-97f6-\
1fd3c16c7f7e"],

Cell[CellGroupData[{

Cell["\<\
Searching for data programmatically with the Wolfram Language:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725371327772749*^9, 3.7253713344285297`*^9}, {
   3.725731233627708*^9, 3.72573123843364*^9}, 3.7257312968619432`*^9, {
   3.7485420956299467`*^9, 
   3.748542109074353*^9}},ExpressionUUID->"9a733dfe-adca-4444-bbf8-\
97c7d3c34a89"],

Cell[BoxData[
 RowBox[{"ResourceSearch", "[", 
  RowBox[{"\"\<Statistics\>\"", ",", "5"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.725371071659958*^9, {3.72537113818742*^9, 3.72537113852073*^9}, 
   3.725371309150419*^9},ExpressionUUID->"fd5022b8-32d8-4fe5-8013-\
c6514ea645e4"],

Cell["Browsing or searching on the website:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7253712770542183`*^9, 3.725371309152391*^9}, {
  3.725731244253316*^9, 
  3.725731251361478*^9}},ExpressionUUID->"e068189f-d0b6-42c4-b7f5-\
8c316e5f7145"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvW2QXFle5jdrO8L+6OCLvzmCRj0DGDZYL8QSHgiHx8QuDAsedsBsYIII
YV4WyxoiYFnN2m23w4PsNppmPG5BM0aodxux3RKrkXpmSkxNqxUlISmkbnVp
aqSR6NJUdUkaFSVRrdKW3qpUMsf3Ofc+N/957jn33qzKqqyXJ0M/ZebNe889
95yTWfl/8v/ynb/8m//k1/69D33oQ7/9H2X//ZPtu/6r3/qt7f/yk/9x9uTn
PvXbv/Hrn/rVX/mJT/3zX/31X/2tH/7lfz/b+ODvfOhDv/AffOhD2b8PPfPM
M04IIYQQQgghhBBCrJyP/94XhRBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEJsQD75uTcG3gchhBBCCCGEEEKIjcwv7v2ye/XNc+7qX/2V
+8qZUfep/cMD75MQQgghhBBCCCHERsLqKyHSW4QQQgghhBBCCCGagX6S0lek
twghhBBCCCGEEEI0A70EukkbfSXk+Pmvu+dfPzHwaxBCCCGEEEIIIYQYJE36
yuilb7rPHz3l8+A+/9oJd2b0G8l9z4xekt4ihBBCCCGEEEKILUeTvgI9BbpK
rM4Qtr91/uvSW4QQQgghhBBCCLGlaauvtG7r9LvSW4QQQgghhBBCCLGl6Ke+
Em1beosQQgghhBBCCCE2OdA3oHOshr4S0lZvicUiCSGEEEIIIYQQQqxXmvQV
6CH90ldCmvQW5Nb9v790WnqLEEIIIYQQQggh1jVt9BXoIGvRl1/c+2X36tfO
SW8RQgghhBBCCCHEhmI96Ssh0luEEEIIIYQQQgixEVjP+kqI9BYhhBBCCCGE
EEKsN6BDvPBvT9bqK38+8s660VdCpLcIIYQQQgghhBBi0EB3gP4AHSKlUUC/
gI4x6L62Af38/NFTyevB9j8aOrNhrkcIIYQQQgghhBDrn82mr8Sur05v8df3
5sa9PiGEEEIIIYQQQgyeza6vxK5XeosQQgghhBBCCCH6TZO+gtwsyIG7c//w
puNfvPqm+8qZ0eS1S28RQgghhBBCCCFEL9RpDCIHvi+DnichhBBCCCGEEEKs
fwatYWwEpLMIIYQQQgghhBCiDYPWMDYC0lmEEEIIIYQQQgjRhk/tHxYNKD+L
EEIIIYQQQgghVsKvfuFY63yy2HfQ/Y0BfaSXvLiD7q8QQgghhBBCCCE2J185
/W7ruBrsO+j+xkC8Ty/xQYPurxBCCCGEEEIIITYn0lmEEEIIIYQQQggh+oN0
FiGEEEIIIYQQQgghhBBCCCGEEEIIsV6J5ZPttQbPrtdOdfE//qu31vQaPvm5
NzZM/l4hhBBCCCGEEEJsXmLxN9jWSxvh7Rs3/mZNrwH1mTdKvJMQQgghhBBC
CCE2L9JZhBBCCCGEEEIIIfqDdJYB8colN3Z7zl299UHJxO07bv8r6WN2DE+5
q+YYv/9rve0/NNQupmvX0Hvuwq15d/fxU7cYzO/i0qKbydp689yFlV1z9vjC
xdEVjeNLV+5k1/VB1zi2Ijv32JX3Im2ecm9ez8aqRRtj12fcyJUpd2j4gtux
kmu4VL0GPB8Z7iX+LtbvbKwnJ3vo2yk3EraBfpw7v6I52jF8s2sdJsfy0qTb
P7Syc3V4KzqP9e+x9nPfbn1dahiXqeq4+ONW9p5Yyftk7Podd/bKTXfk3Kjb
VfNZ1K9x8+t8JPH3JvIZmerzhfGbbujcJfdCzedhK1654N6c/MDNPFjMPufC
z72n7u69OXf20nsrer9jbR66NONu3Hvs2wzPMTM750Yu1q+d1LxO3LrlXqrM
29qu69Ucx36v410jN7P27BqbcxPXb7oXWvTl0PidrjHt5e+rEEIIITY/0lkG
xCuT7n5l5Jy7MJw+Zuj208r+N66ktY4XrsxX9r9/61p9v157z008qJ4neVt6
kLaTQr50s6LZODfvXlzBOI7M9tDXyu2pG/lS2OZ5d2Op+chYWzO3ZyI2ThOn
3ETifIuzN3toJ9Xvp+7Ntrbn0Ezi2uZb2R29rMPmsbzjDlXmpgdem4qstfyW
fs8sd+4Tt3v18xd7P/vb0srGu5/vk/uZPdxsO65w3FLjFP28aL4tPn7gzr7T
owYMjfH2gx7O8tRNtNEbAnadu+Xutx2rpUU3dmm053mdqazvtVzXqzuO/V7H
O87die4/cbHhb1ri86Xu77EQQgghthbSWQZF3L6+cSX1e358/zpb/M3Id9KJ
S2l/gR0jM8uya3y/J2O+IQGvReymFdqUsWtsf4vrLCndo22bF8718P4ZqrMl
H7j9rcci3e+ZyXZ2zJFbiZ6scI5euNSrzmL6fn1yWed8sU7buTfT8xgu51av
k12osX2f1uqta/8+wRqqe3+vbNyS4xT7vOil3Wyed7UZn1feW7YOsTh7q7VP
Ru2arLndz86Ruo7YvFZt/TVa12swjv1fx2+5sceRHR/fqe3PoeuRg5ZW9puB
EEIIITYX0lkGR+w74+Ltqfj+Cf8XtzSXsIFj3x9jukLOjpE7K7JpcJu53qC1
bAmdBbdFN9TSh2R/7Pu6uV19p+17sabf2Rpptjdr7P4B6ix+NO/d6fn8Y7U/
qS+6I1G/o/7+7r9Y97v/SPx3dN4a/c7W9H2S3yYupjTa9amz5G0nPk/JK++5
mRXOOfScRo2gVk9tvs0k9Pe2Osuqr+s1GsfVWMc7zn0Q2eupOzuU6seoi3n+
yZdFCCGEEJb1oLMcvXDNH2PppTb0RtVZor9vJn5r3/XOXOJb41M3ErXpI3bz
0gP3UrQv70W/N/J2/968Gxu/6Uau3HJXZ+t9wsdGauZtrXSWpafu/uPFRhaz
8ajqIXGbcTEbA8TxkxvZONT5/9fa2CXZe69eZmm2Exv6nd/qbIacHXV2/2ro
LEuL2RjO59x7UMnhULklfVAipDRJc7sR9es678buZesiuV5iYxNfa8hhdPVS
2u46crvB6k7qp318nzx+0LWmJ2bzfEzp23zi8yPxnllqfg/eRz6SWwmfpYTO
MhP0eaa2z3WfSW+5CzUfZ4g/unr9Vva5d9ON3Zqv1Unu1mrMCZ8J3PA+uH3H
nR2fcWO3s/Ffin2ezSX9JNrqLKu7rtdqHFdrHcc/h1OfvfHPs9R7QwghhBBb
lfWgs2D/8Pbp1/+y9fEbVWf5+HAkTifhe5yM6XAJmzFmozyI+0Kn216M515B
DpeU3fD4g7TvxBrpLDcu9bZ+u4nZjE/dm4m8K7uGJ92N6FikfCYMrfJPpLSx
Nv3u3O7frvePeDOVK6QPcxSzS2I2zAsjN7OxTPcj7U8RtNMiPmPx3q2eryOa
H2lZa60uZoi3p+5Cgza24vdJKgfFa6Puwmx8Zcb9q3p7z7Qm+nmR8s0674Ym
4/Oe8pfZ8U7MjyG/xXOGIPdI+rNyKHW9r01Fdb/7t29GP493+fdBi3ZT89qj
X8VK1/WajeMqruNdF2O/Y8Q+w9+KajIz46N9e68KIYQQYnMgnWWAvHIt8v07
lre03u8hFmu0K/Ldd/F27Hfj99zdaKuP3ZHa2Jd0n8bOJX4/XiudZUX+23Gb
MRVvlc9jzH+i2YfkpcnwR+AHbuRK9ft+cjwb+909zuncAZdq/ZlWR2dJ+/sc
uZ74cbxV/NMX3YV7wZp4cCdi1z12hwa11obD0X7qxq7cqqyh+01xeKva917s
yWW8Z9qwjM+L6nsqdUzKxySbi4ZYvSO34h98yfmK6amNuTxQL2vOnW3I9dSP
NbmyNtZwHFd1Hcc/Pyu5rSrvXdx6yaMlhBBCiK1Ck86y/QtfdQfOXO3i9491
axjhTTpLW+K5bSt2dVSPMbeI/fnilaq9Ecuxm8rN2M62j/crGTOzWXWWjLOh
bd/Yj4h98viO12wqdbRTOXsa+919u5qY03RMWn/mqFedBaR8rBrXZeS9cv/6
Jbcjco1t/WP6vdaq1/Y4s9MinwUtdaXV6ntMs4jP2/rRWaJ1YGLHJHzJ2mlb
CW0hFTuyCp97/VyTK2pjLcdxlddxPB6oO34vVu/o7vXe604JIYQQYvPTpLNA
7whvoY7S9HoTW1dnafe9sZKnrxLDv1jxgam2G/eviOkDtbE/AUNR/+9ErMsm
1ll67kdkLO7fgm0Ss7fb1LFo1llS2sZIbA30cY6Wo7PAzyoea1Fffyh2rqvn
stdeqdrf7XLo9HutReYJ+trvxWK3mn2iVrPv7edt4+ksL43HfKbqY1Ys8TiT
RJ2olBaRykuzxmtyJW2s6Tiu+jqOx/OV+X2iv3f07hcnhBBCiK2BdJbBEvM7
CXNXHLre/S39/u05dzf4PjjRFaMe85N5EPk+GP9e2VOs+XAsf2rCxtq0Okts
HDMbuaY2b8w+4ff5mHZVm1840e+7lZzFMZsgtB2eupkHwZgORGdJ+LQ01Fut
6oa85th7ojcbqS9rbehW5T3A3J8xm7Nfv5Uvp+8x/a2nuKGWNbeS9FFnCXXK
mF9Cbzl74rF20TGty8v8eN6NjPTmV9XvNbmSNtZ0HFd9Haf+HuefVbHP7H7X
BRNCCCHE5kE6y4CJ1XnJbMmOP0nVt3rinUuVmPPu3/kj311jPirReh69/g4d
12qi3303cB7cujHZH8sJUXtMzF++E+MfqzPa5McR6/fi7Fyl1mqYM7migWTr
5Gyo8wxIZ9mVqOuR9u2J/N78oFOnKKbbTKRyaLZdaz3atKFm6vNYUI+L/V7e
p9ihnvs+EsnR7eKxh6n3zA3UmBm/5c4muelerPN7WMbnRfS9WKndFPf9il9b
mqjGkFjXsVyz3X187MauXOt5rgers6z9OK7uOgaxms2L7lBUp23vtyOEEEKI
rYd0lgETta2sLRnmqc3reAyF3zetjhKxT6I1Kvuis6S+aw9OZ0Ht0bsPHidB
fdKxd1Lfs9v/Nr9r6JobS9SzqLWPI7+5d/8GHMlN3Bg7FNFZbk9VY1EedNdH
DuuxzoxPVvNGDkhnidaarulLzB/E/m4da69NP+rWWm82bWxt2Ri7mP7Wh/ib
VN8jeuSO10bdyPVU7d3FSB309GdA863h2hL1hlLz/+KlD6L9rub/7uEzq8cx
Ta+n9+pzTZsxmbk94w59qU1+rPWqs6zeOK7uOs6J5XO5/6DaUjyvvBBCCCFE
zkbQWfA4zMVrX9/QOkuD/0TFNizs7ap/c+e3tai92Vb3aPgOWmX9+bO0uaVt
gbjtsLj0tJuG9iditbYLYrmHw/5UauZkt7GaOKS4P8uk21GJ6zL1rF4L4xme
Zmsocv0D0lmiMSA18SjV+IDQjo/FKLSvFbJimzYSMxSOQ8zGuxvWPOnX+yRc
0035fZL5mNdQZ0Gt+XOX3KF3rrlD597LuOZGJj9wM5WcVZ1zVHPcxPvbi29T
fL01rOsvTSVqu8Vv92fvuJca/CXWo86ymuO4uuuYpGrwdbUSqQsohBBCCNFh
I+gsf3b6SuV1bOPrG1tniftNTxQ1MSt+8PcKf4Thqj/01dQxPq9g5PfRqB0T
y+NSR8zPevPpLL3c7td+j3/LjVVM6aq9+WLPuQBiOgv6caESO0Qfj4re4/Ox
xvPwDkZn6cXfKuYDVPV9iNl0Ew31Z+vWWi827f7r1eIqYRxXTIuBr1pdTprV
fJ90+pD2I1lbnaW3WzzeLt7fdjXWOpy9V22jeV2fd2dvJ+qWR2+LbqQmF/J6
1FlWcxxXdx13qMb3hf1rUwNOCCGEEFsZ6SyDJ16DOf+eG9qFnbyY1d/mmU+z
+l00EUe+SeOG2tyi/j0119P2dmOyIS9iLCdmZkdX94vl8+zN1qWtciTMt1LU
twljhvKcBeer/kmD0llimkMifirmwxXTpWL7tbWZVmbTxvM7HGm138pjh1Zi
ny7OzjTMf+I9U/Ez6MZrCKuosyzem0nE7g0ibii8tkvuwu0HLa/vsTuS8GtZ
jzrLWscNtb01r2NDtLYQb/2J5RNCCCHE5kY6y+CJ542A7XeqYvN26s68VbGT
8xwfb0XyayTs82i90V7rhETscjfg/Cz35t3E7bk0s3NuZCTlw7BcneWBO9Qi
J+ILkZgh3+fHi1026P1oH9L1Tut0lo8Phb5PmX3/pWuB/8diYcutn7ih2HEp
nSXmE4bxuv/Y2vaLCbs2UYe8xVprbVMmavv6Ptl5fxy3I3uqAday721uY+fa
+PqsYb2hVrenbuJKXaxVItaxJtav9WdPD/l+ck65I+MfJN7vtt24FjhYnWXt
x3F113E3FX26oW9CCCGEEBbpLOuAiI9DrplMBnZG9++alTiEzAbdFdFm0t8L
EzE/vXxPHoprNa3jlDZIvaGxi5fcSyOX3P7hUTcSqzfcUMeZXAhrJvd4u1/4
LLXpd2feqz4SYV7HxXs309c/IJ0l5ucVzy8crw3by+1qi1iHldi08ZpUPdwa
6lkvp+8z1yfdi8PZmh4ZdYeuVP18/D6t9J3l1EJvQUJnqfrGLGbr+YG7cfuO
G3lntNU4Vet/9xoLEtcYZlaQS+fFd25VYvxM76I+iYOu67zW47i66zhcf7F6
3HVatxBCCCFEh7XQWX7/2LuVPLb29S2vs0Rt2zn30rnAzyXI07AjfB25+Yan
Kt8N098xY/VNXKUmTR2xnBMd34iAtdJZerQzGuei8tt8XJ9qtIVrfdFb3pKx
Q3U6Szy/qr11cpSsF50l7icVs+F2vFOtg93rrTk35krW2qmqj1nPt6cryrsZ
73u3nhqzmZPv5TbvmdXQWbyWvMJ2fw/5N6IffK1zIn88VgvLQa9bicYL3nJn
E75ZsfEctM6y1uO4uut4jda1EEIIIbYEa6GzxHSUpte3ls4Si3t47K7e7v4O
W8npGLHbb1yv1jat++4f10na+vzHf4tM6g0bWWcJ89Qm4n/qfIGicTA932L1
U+L97tIyorV7eLNxM+tDZ4nlUcFt4mJ1fFecG7O4xqbYoWWvtT7kc8VtJbFD
rfqeim1q1KDWVmepr2/ejmjNcFe12VPE49Qe95hDPEFUj12fOstaj+PqruM1
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
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEKAH33uT4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCiL7xy39w1O0+fMrtf2vU
7dw35H7id/904H0SQgghhFhzDo654+++Pfh+CLEMDoxNuJf3Db4fQnMsxFYG
+sr49KyL3aC5DLp/jew97U6Nj7udg+6HEEIIIarsG3Pjd+fdtOdhxpw79+7p
wferhufH5p2bn1pxOy+PTbvZR0tu4UnGozl37I0jA7+2fvI//dlxd+rK1Kb+
be7Aldli7c672YypG1Pr3L496aaz7/DnDi7v+J1nsGYfltc8xWufX3BTk5fX
9FqwrrC+sM4GP66rw6HxWTf/JP+MmL0z7fbsXf057mLvZTfrltzoyaHGfQ9k
fZ0aHwu2D7njk1Pu+VUYm50np/J1OJ+vwfHsPHv2DX7O1gsb8+/LaTc6fbOy
XnaenHDnzp9YB/3rH5/6k2Pu/uNF9yDj//jiKfdzLx4st/9l9rmGGz7f2rS1
+8xNN13M9fz8rDt6eI3m+iD6Oe92r4PxFEIIIUTAwQm3kH2PP3X+qjt6fjz7
Tj6bPc/+ct9YW5utF6CzLNydWFEbR2/gKpfc+JWrbs8bb7vjNx5mzxfcoSY7
6vCUm7+7co1nLfiL0XH/XRG/121WreX43ey77Z0pdyhbv8fenXDj2fNW8zgw
Trqp7Lv4qWXa4NsPvu2OjU24Y9n1nprO1vCjWf8Y246eXFs7CL8F8wY7ZfBj
219enlzwa+nUmbfdnuGrbnw+e/rkdovfjlc2x13szezeO3PueGGj774y56av
xHXwY3fyuTjedd7Tbiqz8feswvh4vfvJnDt65qo7PnbTTc0v+c/UNprQavZr
PbDsvy9N9OPvT10bmd2+ELHbd1+Zd9Pj6/v3l17A30NoLNf++oPk30Z8pnm/
lhP1fi3bh6fzv7Njl/1cnyrm+uha/A3y39/mpLMIIYQQ6xH8nc6+K3f9fuW/
N1T/dm/fdyR4PuS2r+j8R9zOvb3/7tOls2TH99yHfRNeSxp9I9jepi/ZsbN3
Jno6H8ap7rW6/i9nfAi+P+J75GbWWqCzTI916wujj1y27WRfx3I5cxcnt8GP
7yvaWEGfdvZBb1zpNVHL23xay4lsnpy7fDIYn5b+LG3nuPLZ0PB5tnNszk2N
xfW0Y3eW8omYv9ndl5iesXcoez+sbIxievfR6awPT2YrWlT1M/CE79dq+NkM
nJX8feki+/sY/M1dzt+fSjt1bSTs9t1Yd4G+t/K//4Pj0NnL/q0CrbhuP/q1
1P3txPtu4UbgR9bnvzXJuSzmy7/f+vCeFkIIIUQfSeks3LZv3E3PzxW/Vbrs
O35mvx7Otj3pxDFP3xj3x+F3nfn56fK7184zt33be8y55h/N+nYPTc53Gngy
744Wv8HuPj/tv6Mu+PYXyt9xLc9n3/lwDPx0yz54f/kTbvxRdsxhu//bWV8f
umP7Otv2jD907tF0ekz8b8gP/e+Rvh/ZNby8t7ie4nw+juDG1fo+77vsbTV7
W5i/nY9rYgzzcZv28Vuz/vUld2ly1s0H34v3jM+7+enx9DUUbHatJaWz0BYN
xxK/9e9+d7qcR2y7/G6uybycjem0ib05dGPBLZhxx7rz85DNa9fcTV4t9znq
1/VS3j7WTaXPuf0+e2e+04dsvwN78/fa/KPAxnnjZvmeqb4Puu3co9MP8/en
2efc3QU3/u4Jt/PktJvNxmGq8p7he7N7PU6Ntc9/tDm1liPucjYe85NhHA7H
a8JNTU+YbUNudH6+8CWpmWOuyTuz2Vzwxezz6Y233eV5zk22Js+f7LR7N2/3
0I358nX4II4HcRx4L0yNZ+sF7/Uz1DVCneVk1l5nDWA9b+9l7desv5yruX/k
4bzvxybnzHttwZ3CZ+O+q9laWyo/RxceZZ+Jic/cwa+D3mn8+5JxLPj7d6z8
m5XP92U7btn7f/dz8b8/O98Yz9/TT/LPHPj2We3jaHCec+/F/4bZdd2os9R8
/m0ULr7/156m/RBDhBvuU/scgO9SzXynvh/Uzd2BbP6np+fKvyPPR+by2EHO
14K7PP2w855u8b1ACCGEEGtA8Xf63Ni4Oz424c5lf9/9dyfaa/sm8u9k0/n3
8e3Pve2QNW7+xnj+neDg1fz5ZGaX7R3337GpafD31dFh+rw/zPOq7Jsw+x1x
R69MuQP4zvBG7n87eiY/9x7oKZnVEP4W+/y7eR8vF3lktr8xlf9+mJ3Hx5FM
d7737cS+T2a7vnt62/xK1d+h5I3MhkIuhuI6Tt11ZZs7hzM75u602/lc8btz
ss9HvL2/UHzneT77juzKa64ZQ3N94/76jpSxXR0/5NyO69hS9WxmreU4fku8
c9PHDPnYBW+7duyEcCxLH+9CW3n+zHS5RneenzW/xWdjXNiGB4q2TmVfc2cz
WyNfY4W2+MZVd2ost8Vfhn2V2cxHDx7x50LfXMU/v2g3sy3zXB9HsvW1VHxP
P+lfGz/fmVf/W+l0PIYvtHPzOA7jS7Cvs268Nuk1pbcr7xmux9nCXtp+OD/u
3OH282C1ls2Sr2V79l739s+jOXc8jMk6POVmu+YWOVkYK1Q3x5wLxBnkn195
jIkrdY4Dk7ndtr3SLvWQsejv5f5z7d0ht9uvQ8Z+WJ3liDs37w2xQrc77T9H
EIfUdu3XrT9yrvQnO+3G78y6Y2/k63nPFbM+945l/Zp3B/YdyX2Eaj5zNxpN
f1/yz4kFd6zI4XFoMv/ceNmOfTZOeZ6pk278idGNg78/e8Zm3dQk86Ce9nmB
porPD54nt+uzv7OTs+7U8FD1b5ilhc6S+vzbSODWFA/Uet9sLfu/Ik8W3Gg2
Fl1jWvOdpm7u8hjAJXccayR7r6fmkr5T+H7m2yk+u+lLJ4QQQogBUtjw05n9
DRt86m7+u8jC3eK7uH+9E6+d23K3u75LbD8zW36vz2M28J0w+97wJP+dZb74
vly+tm/cfzeYGr/a5V+ef3/LbY3c1z7/7hHmOYh9vy+PPXzTfGctvvMH33lz
H4ganYXsPeFePnPVnYOty/MdhH010aLPuX10vNRGjvhYAtiuTWPory/I8wv7
iDpM/t2tt9x3/8+xc6Ud3OQrvZHwOktmr2Htjt+Zc7OP8u+no2dOdNaKGUs7
X+QQYh38nI5lo1p8R83WEezr8Xn4DVCLyF/LYyPm3NE3rM6V20e59lXYjn4t
hvPUHVPi2Zdrncjd0P1beH7OUwm9o/o+yNce4xV8W8W1171nrD7DGJfcrm7x
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
2A6PP3P1hMe2XQf3s22wD2fG/sJfP8aW185+YDteD8/z9anTfvuRw6+4k2eH
3NWpC5X+xvoAsD+OQxupPsa28xw43p8/u36OG/qN+cPzunZwTGxO+PzR40dC
iC3I01/7bjf5ie9z3/6pj7qlH/8hz5Of/j739J9+r3v63Efc0v5n3dLrOfN/
sM3dfvG73NM/eNbjX+Pr5jH2u/NL3523gf2OZpze5lkce9YtXP+w+3dX8vtZ
A14D3/7qd7l/d2Jb+Rz7fuXKR9zuh99b8mq2/x8++M/cz937rz3/+IOfdx+7
9ZuefzTz37sf//Yn/D34L2/+S/cPvvkX7gdPH3b/7bd+1P3G9R/07b1/8zv8
fj908Vz22rT7weNzJX/vS5PuB8+/17XN8+X7nfvlYNuJbYu0jb78wPAp30+C
5z/83utd4BqBf3zxZffRi7/jrx1jgMfgR97/P91/MflH5et4jsf/YHR3+Rru
/fZsG47HNpwT+/3nX9tb7uvPkz3+sfFfKMce4Pn2ex8tz4vHAHOEbZwrtIX5
wFz+mwff6z7zrX/oznz7w35djD/8iJ/XT/zNT/r7Tz38+yWY//957gf8Y9wT
nAPzCXhOgn1xnj3v/133v5z7fvf+2W3+POTOBx/xjN/6sHv/6ja/5ngP7p3f
5o/BtrdHt7mvf+U7/XrGWn36R/+J345tx4ee8e1jDH5i/B/582Gd4jpw7Rwj
jjXGsFx/lnDdLWP9/fD+uUbm5jYek5MTJb0eM+i+bxU2w1hvhmuoY/+Z62vC
Kyff6wLbXv7GB+6Lh950F3/7N92DP/mcuzv9Dfd04ZZ7eH/SLf3tnAfPb8yO
ug/u/ZXfjufY7+GFr/nn2M7XwDe/fcoNfWWfOz/6lXIb9+Nxj379lzw4J9rG
MWwb++H4kVOHutq+cvlE2S6OAdiG/biN+wO8hu12G48Dvv+f+bS/9m99+V/7
5zwv+kPsMZ7J835f3Ntz4nwAfS2vKdsP18ix5bg+/vKf+nNjO687HCteG8eB
c8F9OA/oB/dlf3E9vm0zR+c//zn3t8/+hx6MPba/9m9+318z9sM4cCz8NZp+
4dycly+8/L92gW3Yn+fnOGPs+RztkKn3v+m1Eegf0DBg+1sNA9tvTY6WGonV
W/zrma0NbQTHQhthW9ifOgn0lkf3b5S6i9VbANqg5kANB20S7Iu2sC/6i/Oy
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
l9COX4kGVnctdnzWSmdZSS4g6+OV2qffOh5g7F64nesupuM16SzwR4HOMvmJ
73OP/2H2feAnP+7BY6+3BP4tlfwsidwsVmup82ehHkIb1tfpvVqNGQpzs4T1
m0N/Fquz0Oa3sR42fihmo1biQILazPZxV+0i5sI1Gos9F3Pf0peFmg99VejT
4rWa7HW0/cP753xtolBnwf7UPnA+5m7hfjjexvpQw6E/jK1JTI0FOgzu2T/q
KzYnbhg3xNcx1hhnzAtz3nJeOQ+sAUWNhf4rds7Leb/VqTNl9RUb+7Ng4n+o
oXidJVuTeGx1Fjwm3BZC7cX6ZuEe6876SPla2MzzUxdftlytxWglzOXDtWq1
Oq6tcE1z39WwTcFW0Fd0/fXjMOh+bPVraGLQmkqor9jHsLWhoUA7gS3t43gK
nQW2OHQWm7fDv17U/LF6BH0tqFPYeBPW1KF/BfO2Wj8N1jiK5RKxNj51ijB2
CNtt/A99OnBe1s4Bvu+FXwzjgLg/NQ1oIMDqH1ZvIWiDGovVROw+9jj6vFh9
ib4tNkduqKvYflDnCXUWtBXm67Wv25gh74eTjR/mhflxYjqL9VXiPMTy9sTy
4FInoS8L4n6osbB+M2s7I48K9rW2O+6xDe1AO2Fb1Feou4Q1oPEaYD1i2PbQ
VEItwPqyxGKEQrs/jBsC0FlwXrSJ+zY6S5s6QyuBuXBj+VJSPjlNvi2hf0kb
vYXzZ3OwcD8cw3XBfDJhfuGYH05brSVlK1pot9dpLTZWpZ/2Yxhb06utHV4L
beg6mx7X2W87OKZHWF2nTZ4Wew3of+pabD7X1Y4bWo6Ww/Vi1xdjj1L7r6XO
0otuFLuWujxCnPO1uBauudS4xnQW5r9lfhZoLOd+5sfc+M//tJv5pz9TsvTj
P9SltYQ5Wqiz2JrOCyZvaSxPi82zQl3E+p9gG+NASlrUGQq1Fmo3bBv1oam1
0JcltEnDPCrUWrpigoLazmEuFtrL2Aa7l7ElVl/pxJsc7qoLZPUL+oegb6jf
DM3DahthTlvqJHYfm7OFcUjUWdAe9A7GDFFzoa8JY4L4nDFGbJv5bW1cEOsy
2/kFeIzt9AWBroJ5Y34WHHd86JkuP6YwhohxQdzOfamDUGdh3BB0FugpXfFA
RcwQ1ysJn2Mf1nUmzLmLvjLfT+6TNB2t+x3VXnrUWmycGXUWriGuo/CecJ9+
2qRgK+sLGo/u6x90P7b6NTRd36C1lTqdBRoD/VRKTSWzvemzEtrUtMGtvhJq
AtRXqBekYoqsL4bNbRvLi8u4IJ+39sv/uqP3mFo70FSwnc/L/T7z6TLPbdg3
mxPX+vbYmCDG5Fgdw9ZmxnF4TB8VaCZWf7FxPLgm+rAwNog6CzUY9o0xQmHN
6DJfbtaePc7qQNbnx46zzcmTyq9i/Vms3hXLmRseizUEfwboHNRGYPtTW7Fa
iwWaCfQUHGvzsDJ3C9rzrxe5W1hLiDFF3G7jihhLBL0llk8klXfV+mCEOoTd
Bq0B10cfnLBmTkxnAdB4+q2v0NcHWJ0lpZ+k4oqs/04sN23Mv4V5b6y/UCx3
C+ON/Pow+XFDnaVtfFAqh06d/WiJ2Ya097l/aG/X+Y4sB9rivcTYhNeRsnNt
nRnuYzWPfugVtiaP1Y7atmuvg+Ob8mGw82Jt/ibfkV7gNSxnXMJrqRvf1Prj
tfRT2+M1Lfda6rStOo3Fxnr1+1pS7cZys5S5a/fnGstXP/YD7sDPf9Sd/Rc/
67n8zz7pdZbSp6WIIbL5cNnm1P/2TN5mEHvRFDtkNRbqIrBh6asS5mdp8mkJ
9Ra0ZR/DT4Y6C+OHUj4tldq8gR0N/xLoKFZnoa5ibW/mu2XO287rh8sct9RJ
mL+W8T3UWbzfxOjujm1f6C1h/A5jiKiFQAfBMTgv+ojzoD36rlBTCesvM4dK
mEeFWgr6RY0Fx2AfbMNj5rjFWNs5ovYCrQs1kREnhMff//4nS18YHA+txfox
WY0F7ew7+6zP3QOgrVDPoz8L9BJoJMyJa9cjfViwD/xciNdYCt8XPAbW5yXM
iYt+4Jrp8+PXSEpnCWmruRidJfRdsXoKY8Psc6u1gH7YomAr6gkan/rrHnQ/
tvo1NF3boLWVWLwQ87PQnwWaha3bm4oBgm7h43MKDYN5bG3uD5tLBcTyf4Rt
0z8mzKtLXxVbJwjnZx+oMTBOhjlXmKcW/cM1Wu0Er9PHhr4r7KvND2y1hTAP
blgzGtDPhPlqQz8V9slqUnzdain0XQnz34ZxTGE/MDYYO2ouNh6LbafifsLH
qRy6sbkL5xY6AvPdQmthjeZQW7HbmLeFmorVW+gDgbbYro0nIjaOCG3h3ufW
LWJ72vqy2NihWG4Tag9oA32izgLfjZjOEuoD/cqFC02F12t1i5j/Siomp+5x
mCM3pXOwXhE0J6uRhXWzvV9TUecbjzF21oclprPUaS6pfdvYa1ZPidmNJLQt
e42FaQO1iuW2iT7GjmVu0lQ9mH7kRLW5TFZax4Z+N6n5Ss2LjSnqxzz0Qxuo
u5bQn8nu1+9a37ymlWhQqfeKnXtek92vyc+qV5pi1UAln4rJW3vnl77bffxH
/7H7vz71E+4vv/ZH7ugX/gf3tRd+odRZED8EnxboLF05WoraRYg3wrHwhUGb
NuYiFTsU01noywL7nHlPUxpNqu5QXfwQa0bjObUD2PeM/UhpLYzdKHPiGjua
dXxtnWbrs0I/GLxm88FQd6FeAm0F+0C7sLFD1FKYf7asOVTUgmZeX+vngsdo
m7E/iCOCRkLdhXqJ1VoYV4TX6W+CMbI5a4nN5WJzrVBjsbWC7FzZekKYW8wD
NBb6hqA9PIcG4/U1EzPE9hhbZPUVxvZ4TnR0E5vXFvfMhct9wPVDz+R5Wo6a
2DcDNRe7nrkWMS7Mi1PxabF+LC1qUyV1lmxtcV2VMUGmRhVz71BrSWkuK7HT
wFbSD1Zq126V8doMGgXna9D9WM3rGrS2kvJpodYCOz6mf4T2OLQYahyEfi9h
LhUeT03B6jAx/Ya+MWGMC88JXYR6CnUSHsNYGmxDjBB8V3zOFZM7lr4cjC9i
Thars7DWMo+L5WCxWgfzq9CPJZYzxsZTWT+YsMY0ryFVT8geH8Yn0U+GPi7s
n7/uIF9uao7DXLnMExzmJLZ6it1m60GVOTiuf8vb09ABwrihEGgx0Ax8Ppdr
l8p8uNBEbC3oUMMJ87fQt4U+LWEdZ+ZlCXOupmJsQv2lqy4yfDmK3K7UWWL1
hkL9Bn3rh/9KrLaQrd2Tym3bxi8k1JXC41P5chlLxdw4uB8ePuJfwz3ml/Wj
fX6coN5QzH8mdl93Df2wkZt0mH7YjZZ+1tqNXUtMh+lHPSVbd3e1cga3vZaV
6CM27+pqXgOvg7llrf8L6cUfqI6mXMX9uhZeT8w3p1/xRDbfT908x+oDwX68
/eJ3eY1lx57fcXfnbpRAa6EvC6DOUsnTUvi1TP3mtlxnwTlOb4vmaYnlaEn5
szAnaow6vxb6tIS5QQB8J6DhUM+xeXG9NlHUUKb/gNVaqKcgdsfqLczBAmgP
856aSqcO0eFCe8lzqDDux8bw4DHjfGzuWvq40M/F+rKgve/f93Lpw4JzIo8L
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
sLYObXZbY8juR52FOoLNt0KNg9uos9hzhnlImG+GOov1BcF12Fy09I2hRmF1
FuoVuOdjajolhW8M9QjmvEUf6VfCfMK8Jt5znDnWzFXL2tToW6ipMJ9MWJ+I
/i3sK9q2OV6sFsbcxNRsUj4vNiYJ1x3GCsXih+gPRT0FGgh0D9Zwjukt0Eig
p9AXhblbGFsCTQOv2VwtNo4IoC3qMja/Kh7beKE2vhpNNZ2ZZ4T9Y/sx/SEV
M5TSNWzsC/QV6izUWlLxQ3X5UVJ+L021kcKYoFDXsftCI/nqN94uSfmb2Lbt
GNpYrJRfi9VbWB867CuPH7StJ4QYDKHOAj2FQF8hVmdp0lpsDhfv0/LcRxq1
Fuoj1n8EQAcpjz36bFRn4e/0Ye6WmI8L9u3Ks5odB3scoG3eLxj7H3Yy443o
nwDblbly6UdgawBBY2FuFPiV0JcF2+nvAtvZ1uXlsYz98Xlcsuc4F2xmxJ5A
j0lpLdhO3xm+ZuNJrA9L6MtinzMPC3UWq6XQtyWEOVtC/6FXjZ9QVyyX0V5s
XpZSi7nV0d78a2cLP5MijzLmHVoLdZGuuswmRqjMzbK/WxMpidRxjsUMdcUP
Fe2UPi0RnYW6n83VAh8Tvw7q8uEaXxbGCWHOkSvIxqwh9w3GFvPE3Dl2Dm2O
HesbxnVM/cvaXdJZVo9+aiS2rUFfl1i/jI5uDJ2FGgtz4MLOZg1n6gtWY6A/
htdWCt3D6hrM9cG8JNQ5wngia7vHdBZqDN7+//znvN7B89m60dQnbD9KraXw
y4A+AR8VWxeZ/eF+Ni8Kr42+IHYMQv8WW3/JvgZtBNfCtqiz0I+FbWM7r8fX
ICrqJOF41EjCPdvEvvQZsrFBtv4P6ymXWkrhA+THKojlosZFncbWReJchPWg
qH+F+ZHxGjUwbid4DXawz5dS1GKmHwp1Fvq6MNcK9gPQU+iTQq2FPiPYzrpF
9G3hcaz3bP0hwty3sXwjKT0h5nfCvLfM/4J4J9j1YVxPKsdLKlYp6VeTnY81
kKm5pGKNoG382bn3u4jpHW1ijWx+mZg2ZLUN6io43ytnbpTw/OxD7HjmEKaf
it+eXSv8WzjG1NxieouNJaLWw3w5g7b1hBCDAbWFiNVYrM5it9VpLTZPrtVZ
mA+3K1fL0XiuFtjktA2hifg8GJHjqNH4fKjnO/E/Pr9qRItZMD4SZR7V8905
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
adH3eUajr7JepUcRK4m+tvizwETQHzBbCO9bNC546EbvW2csn/zsvTa3Rq/y
8YCzuI5lQ8syxzmm2MU2LGYJK1mqqVnKgqa2v0Du4t4s+OJEX1vnLL2eIS2P
M6bwYtFzov0wn0q8Tvs7VF05lnPeLL3s+a1cxty2j+oy5DZsCCa2zxnM+zq/
fWuMLjq9n2jseYuMRUykx1nGPFvoIfL+Iecs9O/EPp4eYxFL8c/0+ai/wnUt
0qgwn0hsQ/xDfEOfxRHw0hUjEWcRd1GPzt/+jnee+tauUlxIrKUwFXw9qheL
am60KEr51YpbiGcwSxr/FrEM8Z3CWFb71fLi2fra6Twe8Rb8TpyxwERce4Ke
RSnmwnwh8RG2YXt0KfQSaZ/MEfL5zXEd/UBoWrScXiHmOLsnC963L/z22p+F
3PAfMf1G8yOpnqt4mTTP4afWXifNW+XWjQFzGOMsegacnZT1VcviDCP2B7V5
QbdvDnQ2hYMcrX1lYBV4z+qzz1RmLnX0nhV74jpEfYm+67PF8cHVeTBfiPfO
nWBG7Zow07q+lvdBdzPoDQqalsG2t2+22lb1WOz58PqXevgyeaFSq/t7jpnj
TM6yXbp2hZq89zzE68zzwHboUVin9OfMeQrPIPcwOct0ojeifyjqVnR94/Ko
d1F6Pw/+t56qVd3ng16ZniZF68ZmN7vPavSSxRMWrxLVyr6NlsNXenX32Bxf
tBJazxxjvFfwctEy/Z7364h39DxSfJmYgR9j4SzRD7dyFp1jmWVsnEVMBJaz
lF9MaUd83zoWn5MNS9Mr1wA+he5H1wAu4361+iz+5POPttG1+LbMe6Yfi34i
uBhznfFrgYXh+VNmDNVrrOP1XiF8WphjVLazOeA8D3jairfgZws/od9D+gPn
LfoMb1FqWzEWsROvsYtepdbkqtfpF8L31vtNer4sk963Y3yjxybmenGW8JGx
z0s4y7bbzuls9sRZ4jxneoikQWmcpc4faiwGb53VK31BPAO63z7HuXgl2ywr
PTuHrgen6sPIUqLn55z/7WVK101clWNWLtW/cG8OqQk5S7ru4yrdl6l0Ddjc
vCH3VRnLHmeBsbgfbtSxjDGWMc7i6Zyl1KCrz0pqbGY+l3lCq+3EX5RaLo6i
V/mpqH9I79VTJBYibYrYC1oXrXdOJI2MuAkzl8VVxC7EO8RC8FVpfOXO9xV9
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
ez0XCN/bNru5ete614r2Q19V6+WqvrviVn7ttb5pXmBh9HG5T0w9XvqpuE66
fuJd8i6Rh4l0H2hDxDG27fnp+eD2lsV5Q1MeLnOalp62xfUt+OPq3PC/lc+v
eAucScxJGXup4HWlZ6hqWJT6rDx0rZe5mcfHDw5+DOfJ68AorsM5zKVqVupR
vTKT2VnJGAfBk6OX+HSgiym+I6Z9YP9Ts6PVm9JjCNvwj962sd9Gr/otdD2H
8GtxzqLrFT1iPZn1o+Pdh55lCXOBs+gYOA5P2Ao+PHr13qCY9JPF6462Ran9
eE+RfsOPKx4nnMZZjWpe1dc+AwYti2YORYYyxVrcC5dlqu3Fa6it4Sxe8w88
cJeyjaltpnQg22hhtmE7YZ9N0zJ1XEv2PaV3WZL3+1oWMRJ4SPGpXd0b92XR
cjES3TultmeekHiLz2xmbrO4iVLPDvuiZ8z3redNfE/s5dB14VgdfNX8SmLq
+K/DefTyqvuXcH/QGaGZusrn07s/c8xo0RzkWheLq3ifD/4r7nELY9Hc56N/
/vdL6r1rWJy9kMwp8rlHS1iLv1LTN21E1V40tsLnqqFoGpg6awiPEdWlqt3p
61F/BrOD9R5fDPlkSMMizqJXOIu2lcZALEbbannp7alepYW1eFZfF+lbtD16
BPqBYC7e39NmC1XdSuEQR2udCZ61cAp0DWxbdA0fHfrmUnvzHi1L87ytvUNF
78OMJvNqIeEw2oZ74h657kmsfavPBc0L+9A1KDOGmDVtc4rhLMzAFmfQ/dBM
HrQf+N9GrcnYDOYpHuP9RpHT+G+M7XdbTUvPG1dZGNKrd8t5irGILX39g7c2
rxY9m2KB4i161fXTc8Oc8NK/dn/9XOm6HrrWy9zM4+MHBz+G8+R1YBTX4Rzm
UjUyehRqe5/L3NOxRKYS2Uv00S3eL+/8ZwNPj953e763sY5eqjPx7fAT4Rh0
bHrvjMOPf1/9OEsZxpi3iGs6xGJ6fTMXfbwcA/459HcNPHhq0hvUPFjsHMVZ
ovdK/D2td3aifY1pnPy68L0yb6jO6nXG0rQnq3o8ps8KGvNrcY6iV9Xe6BvU
R0Stz+uGlmUJWxnjJXO6lrmc0sdsu7+5np+l+z9HvxBaFtca6X64L4sYS0/L
Is4iFiJvFT0P6FjUP/Tnj3639RExs1kpJuPeLc5Xopal+ORegrow82ols58O
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
uApaKT1bum7iLEoYi54z3TP6rphtdehaL3Mzj48fHPwYzpPXgVFch3OYS583
xGyhng9L1LC0rDOJSPEWMYLIZdhW+2++LSOcZameZaxnZClnQbPiv9ebrXOR
nEUJiyqspePTIj2L2Nhl5Sxj9wbfFjiLa1m2PYe5+xT1LPyG19jM2o2+pc5b
8MyVFiEyF+8tcj8QrUNHodT3YDTK7ryhpVxlac/Otoxk6e9N6U7GmMkSHczc
Oc2k9wu5lkX3VSkti+6da1lKX9fL/2fhKGIkeq9nAd6i9UWH8ulfb/oWeono
J0LPEnUyzK9iDrTWJWfJzHx8Ez9Tn2/cYywbrOWZJwY9RgNPFPpFVp8bx4n7
st9pdXmHsUT2Qv+Q+7f48eLDUup107HQT4MfLT0n9KPw7/14sIiNwFakT8F/
VCyleWbIp1RsRbOE732+pdiL8hs+8GTxaxEXEV+Rz632zdxn1choDOAl8A0d
p2pkHU9jIpWBFJ9Z90whb28mbCPOfh70Gbl+pepfihfvnSHDgVtFZuLMjd8S
M+Ge+jq2L/uqv9P0VM+tjxP/X3qGHtrsa3qqdB3FD6TZwKtEnEX3BX+WHgNx
3Ur0yvXlzl3meo2m2MpS5tLrIXJ/FrQsYix4LIuxiK0Un9vXXt/mDum50jOk
61sY4ktrNqX3yVkubx4fPzj4MZwnrwOjuA7nMJc+Gwj+wXsy8grXqhRdijEX
nzvs2/sMZz6PzYuGfZxnrhDalCnWctHzepYe/xI9i3OWQx/7NiyEuUHqHWN2
0lIty5L7Psd7XL+i2ln8Q/U3tXBP3xL1CarZVcM35mIaFzQr1PTaHx4to164
S3qEluhPlmpFpljHnO5lqodoqUZlqdZli34htCzukUMPD5oi3Tfnacxxpj9I
6/FmcfYGa9M6sRh6ifBoQfPS8/vBu0Xf0/4PXetlZmYeJql5W607wlcGWpTK
SZqGxbUodTn6k+bFUtfFmb7OUXoeK9F/RWzFZz83j49On0rjEO4vYrOBVW8y
64deIWlMpBXRq2pZ1bXf+7Fnm15F9S5Z5sAYX3FdS9G5rGp+OA2sBc8W5hbp
t+E9pf796Jo/aBtxGfU/MadZy9s5RS+Vu2uvlMhZYBf0D4mfiFWUPp875odS
eUucFY2WxX1umg8MM56rZy39TzpufH/Ks2L8x9lN+X7V1US2omMUb+I9Sc+Q
1jFvSDoP9W9J9wFniazFOQm8ZWxG0JhHbpw3FPflv7ltjnKWd/9G4Sw+M1zv
0bDQIwRnkZZFzwpewcyS0jNW+ulqz9yha73MzTw+fnDwYzhPXgdGcR3OYS7j
bGbxETxUio9KnfHc07g4h9F+mi7mEx8+5QSmVeF3+Dw1L9o5yFjdHOcIj2ka
mD8cz5MZzodmET1ewEydpf4shz72pbwFzoJ2Cmak8z3PPpduq4xznJuPbeUt
xf+0zqNZwly0vfcUkV7nO2eZ1LTM6VuWaFWmOMhcX9C2WpgpfcvcuikNzhm1
LHCWqGUR58CbOGpZmOOslDZF7ETvi35l9Qpv8VlFcBXmDknL4vOL0Ekp8cpF
E3PoWi8zM/MwOZjjHFlIh7E0v9K6vTOVgRcL+3rzV7bZMmP79Z4j379zGOYD
x9lEYgBoZpomB94Db6gMQfV7+bf9W+u5P/iB6t//xT3EWFSHioeIu2hmrrQs
PZbSS7QsJJ4t2jesRVwAhqLf1rF4bwx+K/TRcOzMdG5znKv2ZDB/KDCXxkaO
bmz0J5U5yUdrtgNjYfav9w8VrlJ1KWiGtN8y+7k+Gz5/Wqm6Xn63g3v/3JC1
+LkVH96jtd5C9we+IlbgnIVjFFvQdZQ2SP4s8C3XtPS4B2xEOTUTKPIX386Z
yLbalchWeozFOctXvfBLRR8FY1H/GD1CcBVdCzE8sSe917Ole8v10vXVtaZP
rmiOLkG9lznM4+MHBz+G8+R1YBTX4RzmEj9a5gOJj0grIc1B1Juge+FVrMK5
hWtg8Cp1bxZnNT6baMo/ZUyn4ttoP2ItPb9avk8vEd63+N8emkHE45yaNeSc
ZWye8WVP5v7Emc5ieviojPURnaeni+9kZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk
ZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRk7Cxe+/zJ
Kw8+efLJlz936CM5TMyd/5c/f/Jv7rx48qPv+KmTH3v3iyfv+9mXTn73tT+7
2GPMyMh4vOOsf08/7n+/Z2zEF159+eSTq2fid790+f479uj3Pl2O7d997kuH
PpSMxzr+rP05yWfxNEb/bOZ/Yy40Hv3eKyfve/6nTn70nT918vzzRycf+NjL
J48OfVAZGRkj8acnH3jbO07+yg+s8skXT/7o0Idz4TFz/q+9cvIPf6Cut/zA
5y7f/59mPL7x6PdeOnnbD//4yTc++a6Tu/c/f+jD2Vl84f7RyZuefMfJd7/1
9snHf+9x/jN31r+nx7+X1/bxjEev/kL779jzDy5Z/fjlV07eXI/tG9/9yUMf
TcbjHK+9fPLd3Wfxcyd33/6u1X9rf/zkbT/5GD2jo382L28NcR3/v+jRyx/c
qEf+yg/cPvndQx9YRsY1jy/cf7HzZ28i33pU+eefnNx9a1x2EfGZkx998vR3
3/yTr3TWf+7kx+r6b3zHRzvr/+TkfW9bH/fZ/26fPv9Xnn+XXbMXTu4+/8LJ
m952nt87fDz6d7/c/v8h5ne/9fmTF/7V/3XyR1/e5S/+6cmjL31pr8/W1Dnp
/4fe9LbbJ3d/9pNX+r5NxSvP//j6nH/4xXCt93/99xNfOnnhh+3ZfP7lQx/Q
AeOsf0+PfS+v7fWNPzt59Nrqz/uX++zs0ctH7b6/sGfO8ui1Pzn5o9f+dPkX
VrXtm+qxvelSPZNX9e/QjDPHl19uXMGfxUcP/P+133XyydcOeIwXGaN/Ng9V
Qyim/66b/v+iqxhfOrlr/91+0ztePHnhHe85+YfPP0a8LyPjQPHKu7dgLAPu
/Ccn7+PvyB++yL8jP73Wibztg5u/+3sfPfnGdrwvdFjtZ07eRo1wrn/3mjp/
+zvtyZ86+f/ZO7ueRpLr4X+g/Q7c7s3khqvhIlcjsRkhRUiIi/gmg1gpKBoI
jlisxBpELJBsbTDsysLKYDFC7LCCCYuZOONFjFHitWCeAP+YBWQPRDpPVb+e
6q7qN7d5m/OTWsky7u7qqlOn6pw6deq4g7fcJdo7SwFkZBIWN+KJAbXmJQOy
doyHYN+k+/1rD3Be1CjO2H6l8U3h326i/rvDNZTG7LYbKT2M9ahoRNXTqvuo
bh8saB2+VHf7OG7Oz3JhjZ8jxYBjicK2vW3urw4lIqOSxfoqmk88nHmhL8q+
eVs2BPjqOq950b0E+bp6kw/gewjiHtE+OoBapWpftartY2Y28/JOVfz3PXNe
fVs6EsUaSvwojWLGiEXQf+Pap3OyaenXibVObASv70f/Nlx4AL5wHTzPHilW
oFGvs+sAymtFSCBfOb8SxYMY39e9tR/8TUO5Mhwf1fXvYv1gK78E/QPou8Zk
8VH3nWs4Zt9arRy45PQm6r97XECjUmH67FP3A8TtZ9H/jer2AYLsIZkf5Sb9
LKbsBY6Xuqt+lnutQ4lIeMgin29X2Zz6+FOShbvoZ/HRdV7zonsJbgPpPgCC
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
1dhwl/wsON+cbbOic+0G3PlLo9giUeop3Dc58ofiOQjKM+uXt8zCdyyV5SSO
KpsyWlCes+flvZKzWoP7Wa7tuGRVLoYrFBOP9n2HaRs7fiUHjRo6P0y2L9lB
GLk+3ilIcxA7EXMmO3L1h7ANfdcQ8ZkGgWOBWv5+FsXcDJ8hYZcnbH4WO8dw
0Nht93f71GGUfiehfVRG57DpZ1s2UPyUXC7xeRbIzvDT5xF8yGKuJncuaJH4
xtRu+Fki9Zmbys+CziSU5aPXvgntM/Q630wmU6o68f6OQ+HsJvV5vFHG1Ljs
vWsrP0aQM/1sbFn9bGASxZg4z68Oq7OaxjeHnxNE8bNg/5bqjMKb8bOoz7Hu
Hy9AI4i8IZ3qt98zfh2p+u6wOi2MvtSJpuu6YStAuH4Xcd5FfhaCuFt0z88i
+t+lY1QIjkvzII4v7v2yOF+aXA+LZZL5KXDuNvuMaC/fclQ/S8seLyQ5yRro
e2/bz+KeczI7fhbvU8G5MO24IrcvgI8dk9Iy2GVz5tWMVk9+3+T6LV4fE/aq
HIhnPQeaP6NcZ5L4feF8UWs9NKpsXsNxTWaH2nNzU/aC+VnceU3xXFNmo9Tm
bFkYytn2VRg/C973Z+VM9Nlv7i67KFPt+oH0fmutzmM9zP5myflXR4ozJiTg
OkhvSOxVZEPg80Tx2uOII3aiXSkiX5EqnkVSd5c4Rls8m0Sl3+R1K8rqhCxP
7aXPGSq+880I/e7yEBqS/Rd2LkvjG5CsyepJ7J8r0rVX8cwU0PJvJNC5KGH2
ROL+ZZ3fLHBh5BSKb0z1y88cxc8Sqc9cBVg3dhLFzyLIkyTnBLZZcA6MoDIF
3jqUx9Q1ZDFG6PvVOjLKmBqXvSfKZ3/A+LUqyv28zCtTmRM9is6KNieI4mdp
11B+HuEMc/OhK8h/1z0/iyVv5tzkiumE5kWgeA6bA+GMnPUj9y/aTUOnxKAj
nd8tH2PC67Tg+tIsaxRdF91W6Ea/CzPvIj8LQdwtuudnAc1/buniL8Qco+2T
A1hOpqBPdQ6Jk7oYJyrkZlH+RpLbwVGmxQ2eL/Qa2pd1WB6315bEMRWt6Qzm
HM+MHs+Cz7PLmmdTXp269mHftp9lKFeG4yM232R2a3WtCEOOdRUxhh6tvX3B
zzQ29qyc7ENWiHv1OJMjr88lz47q2ngZpZ78vkn2W3zeBD77RvTfpWF9z4yj
uoaz2jakE5Nifj/HnmMeP6/HNLegsVMU9o87Y2fCyuaxcbZCz+gCVOv2NzU2
7G/tDeVncdc/PjedX4m5bfb3a+3c6Go+I9RNTTG/8R/vm0K+Ra3e5nzOpnWV
HcnUkZGDcSANpR27bdr1bdue8opnQX6O/tlto75bUFtbEuL9w/hZtL6S29bj
/VndlXO47hx9UtBlvB/pMdPVYk54nte5zjzvg55nk8lpvQwjOEeGYC+p9ZvS
h4XtD3ali+ZZvhdaThxd7jxyhASYb4brd4eQHrDLYsdQ1yGLYsf0dUG8JsrX
UQvQaPJ5srt/Lu7hef+B0A8yawfaPceVVUeOgbA5vveFHKl8n9SxtifkWnv2
EJbVmMZULJdWvofmIRwb+V0jxbNE6TPCuVMZqGl7wJpsrPHI0xnJz+KQp4EZ
2FL0DVvvhJEpLx16bcXrDaVXDVnjXLAxLO1Zz+bvwo+p8dl7TrnvZ99g2bF8
HM7NQy8+XxfFDn1mxSi0hHzt9rnaTp01r2wXrLOizAmi+FnEc3X0vnLMxz6u
5wLKdSx+FrSPdJmNZ3xeYJ6vxK+gNHLi+ljJPIfv8tDK8WbmrouqI834FNEH
4jGHDq3TQuhL6EDXRbIV4ux30eZd5GchiLtFbVZ2JqATH92h9GGz5+fdudt6
HDnllmtBxglRt/YkZXGP4nzgM0UcYi3nLpN4pVzrXXY98WsGrdfZfvqwfhac
28zrCuNn8cpRHuYszqB5KK05DqKcngpwr9OuXJX+Tst7HKGe/L5J+tvLMspt
gmXgApbHHO9jMizur0druAFzu8nWYsLJZktYU9HLNQm9Qv+ahK2ja//v96h/
7V7XuRsSWdgRbaNwfhYxHy6/1o/89wxpdSZbW3eeNcTr29M/6KBZdudYlFxh
/Syqa2LNfQ5HVhEnLlyOs1QD5azke7NcdSjXb162CV6zVvVxZc6AQPPN4P3O
6ffR21vMOdqD+9tVVRwrJJds7b46G0y3hT2z/kySy8LVv4y4wnjG1AP59xtj
pl/fxeeRWN8Uqc+I9px9eexRCZHbx7k/1CVPzitRsO2zsDKl1KHfu84a6mHP
EeR4wLl+IxJ+TI0+Z5PR3ltx5RN3ypwej4f95Y6Y4+Y2Gl/NvPnRdFaUOUHg
PEmO+jrbKQR6Vyx+FlW7oD0/qqtneAaWdzzGNL0R0J5lxTVoxAhF0pGOcQud
N6yeQ4fXaWH0ZSe6LrytEHe/Cz/vwu8gPwtB3D52bJpz3yzGbw/tgbWXUZYX
8XhnxRUDoY+dKcg6ztFVcyGMD/Jz6fCeRh6HoV4P5z75fskZAn1jS9K9rs55
hj2PttdpXN+Ox1ppvO01VHMZVxm08wfq+9Z+3KzCz5J16dCWNY/slaxp2vOM
ADnTPPR7X2IGsvlNOFb6ak5hedw9L+yfXtVyb/QZ45MrD0veuTfMrLfw9eT3
Tarf4j36ovy0oJrPSe2InkQG1itofoP9LIMZSI9Nuu4ZmVOv9YeTzRbUigvQ
J/k9P8d4vWavNXnLjlf9G/cfbcOEbE48zNeG3fG+fu9zgXOVBMxxp5Ubxetj
mTqrrLpy3+rXJGRKB+oHmvezdnDmFNbiYyoHsGXkJvLLAyuupeUg4dKDU7Co
mhs3K8J6rll2/nszdzPf0y5bS+sdL8Ky5AyqPvZ3mT2n0m+qujVprC1JZa+X
x1dJzr618NWNJsH7Xfuk4s5Tavbl9KpkbZGvS8p8RVOQXVPJx6m4lmlcibkK
e79pR84INqFfHVrlr23CiExeB9P2urNBHGMqb3NXvRr9zq/vNooZ6TdF6jOX
VZiQ9AtlXfnJDrJJZWNkeW5earMmZjdd9RZWptQ69BBKrty3dl/xz68Rdkzt
bM4m5aisxZDJ6mJkVo8pwGPs0Jx7H5gtN+yeUl0sJ2vz9HRQnRV+TuDdD9H+
K0l9tfdWJWPyJNMTFSglJXKtlNGo7bIfaO2GX8t7fj5WHkeVkcriEI8NwT+N
oCNrQqyFHXeunkPrhNVpYfRlR7ou1Hws/n4Xdt7FZSXh8T0EQTxc2ieHbE5w
oF3HJzL9cNNca3G9jaNTOK7Xrfz9Si4PobZ34B3THIWrpl0vzeAxoHeddtNs
bz12OhBaXbA24e3hrIs7UU8tXWbM77qUlEOYY+m+Gi77xydczg4D+g9CyibE
1L+86t98D29X9h3HrHzHzRj78cmmNRfC+7Y6pX15atULr89we9pbcGzdG37O
IszhtPkvj4c/hDPeVoH0CM+/s2/onaCyg+DffnTYZf3GvukE94mAfT0UAfqd
ydUF+16jzXid+fiUNZnn9cP3RgZs4/bRAaurfUO3Bf+KQM9ungbux533+ZYm
G/z7j0/impNH6TOGvqvXI/TRKOjffXxyGKxfhZEpTx0aQo4lRBpTY6YzfeoE
26VGHIWms06ZngygS250TnCtyUBkXRwZtMY4vAANnpeFyQ3XE2dsTnF2tA8l
5J8KnE+ay2K9bsu0109D6khdPx7YZ0CZBBhjwuq04PqyE10Xfj4WN12bdxEE
QRDEfSLKGRoElM0zhwLsa7svhN07RRAE8emgOJuWsEH7QNLKPLGKc9MJgiAI
giAeEuRnCUz75BTaVxdCXrce6RkC9xPysxAEQajwyWdBCH4W+XlPLdhK23t7
1OeDEwRBEARB3HPIzxIQWX66gGf43hPIz0IQBKHCL58Fgc+90tYhhjOwXFyF
dXaVcktiTpNEkWKCCIIgCIJ4uFxWrDwjvdPkZ1GC6kmfZ2egfHI7OQe6RRud
i0HrjARBEBh0Ps2A+4xEwkCaE128Evy87dsuJ0EQBEEQRFe5hvblhX7dUq7C
+0K72YSzS3Y92LxuLVsWbrsoBEEQdwxLP4bMCfzpwXOiV2C9WITFuRUo5dn/
5lZga2c/9lzcBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBOFF+2gf
yjtlqNWboe473qto9zWa110qmRqzzOVK/cbfTRAy7qVMXh5ClZd5pwpnt10W
IiLXli4Oq8O7zW2OEQ+JaPV4AbUb6NvHlVXIJOdhgl2Z2QJs7dwj/fcAuZfj
EEEQBEE8RK6q0P/FOHzGrp7pcuDb2nsF7R5+pXduem5/AdkB/d2fDSyQfUjc
Ae6nTFbTk0Y/noTy5W2XhojEZQV6I+jwbnO7Y0S3qUN2dAp6BiYhMdvdOo9a
j7W5VNf7di2XtspmXaOr3XmZguONJehjurd3eAa2jj51f556HKJ6ip/20SYk
BieZHpiC7MbhbReHuDFuTv8TBHHztC8v4OyyFc/D2By9z5gf9aUrwctQWbLm
VZlb8LMsDhtzieElaHf6uCtWn82LOArWfe5TWW+dFrSbzc7lIxAxy+QNUZs1
bbEpqMZoi8Wqo7rGNSsnk4+re25zXFUsX3kwHX4z/eJ2x4ju0t5ZQL6FKYcf
I165ilqP3erbFpdla+7Ar5H0EowkplgZT7vwMhVNyAzaZegNMYd5mKjGoZjr
ieYhGvY6BbsGF+7NuP/wiH8s95rDeOt/giDuNxeQNcbLkWIMcaGh5+g6d8bP
Mti5TWuOlT3jN7sOF4X7VNbbxhoLBzLQ6Prb4pXJm6I7tljMOqpboDiQUv2u
+4Q8CKnDb6pfPGQ/C9RX0Tx7Ho7xv8UsV3fVz4JtjYm121rLv4bSGPL1lD71
mALVOBRvPdE8RKdRnLHqtGd887aL8+kS+1juM4fx0v8EQdxz7HE0lrUb8rPY
89HBu7/f4z6V9baxZfQm1hvIz2ITs47qFkj33Ws/QFg/yw31iwftZwG+Z+AA
qjtVOHbWYcxydWf9LKhc2cptxjZcQKNSgVrtU/excLzGofjqieYhJtdwXKtC
tXJwb8b8B0nsY7n/HEap/wmCuOecwoSx/7Zvttr545Rz9GvjknPzc2hcnlas
Nu1W0oj9HC7c+bHyPpX1tjlbmzdkNAW1rryhezLZXex+3R1bLGYd1S2am9Ya
WLZy3+JZsG6uhvKzdL9f6IhjBLbD7/k+LT9ilquo9dj1fUNW3pjuyhHhx82P
QzQPIe4UsY/l92QOQxBRuapDKZ3RcnZZsVkDU5DJl906vbkPy9Mz0It+2zuc
hsWSvG8c7xQhkUhBplRn7zmA7HjKfscXkzAxZ76jBdV8Tnhu31gBGlfOJ15D
OZeDocQMrNcv4GxnlT0f7dkc4M/cdPv8j8owMZaGobEc1CTP5O9OsH9PTK9a
5dmay8HIGCrvYApGxjPsbzPod2xeVq/AoqNOtPi3nKT+kJ+lf64CZ3vO8k9p
5Xfe5+9nabLyzgtt2MPKmy2G01lnlVUYcZQnk1+FCa+5xGUd1lld9Q+K398/
XhTi+xobRZhIzlj6mbd/gtfn+IzYLgGfJ3z7rPPbeT2uwrGrrUGT4cVkGnrQ
s3sTGShV7H3ugcvKnzXueJbRHzrPYxOkXx7CMivn0OgMlGruNc6znRUm1zMS
udfv6x9dgAaT/xrve9Y3zBi/vYBqqcDkc0poh57heSgf2WNru74N6eS80F79
YxmtryRc5Qovp5FkUkYoucJ65lrTH+lRsR5G5rbV7z2paroOy0UivcLq3HxG
MFustlaAoWHc/pMwlCxA7YTXf1Adhb+lxXTJCgyhOljeu2B6mrXzaFrQazan
TOdntH9PFw+k5WwwPTziqJ++sQVDTupMP84Leq6XlUWTjzH0zNA62qxr1jba
37nebEJpGuUKHS3avw3Q753vrBWXBHnpGZyB5WIhUI6tcP2CvWuNjZXDk5K2
DuYnwWPE4s4h1EqOsnO9tCZvP87Z3iZMONqwf3wp8PuD6sJosmbIsPD3gHIF
4cboqPXo72eJOkbXWZ2w7xydFOXIMQ/h8DZMj00JbdA3Og/rUhn31wtSjP7m
PaYwnbAm1ltvYh62jD0GbZc+5XlNJfsFUN/m49HWbAaNU7ruNueIxzti+XuG
M9b7ZN8u060js6vKeJHQ45CyniD+OZNGJ3NAJgvs3iGVjj+psG9RzDNCzoE6
0zOq+U6H47WMEHZR5H53dA3t2qYoV6zNlq2+wL53WqzbxKzsO4x6YWNu46rF
xq0Fx7il0P2hx9y4dW7IOYxyDsJkn/17n/DNzAZQ9WdBr+jPFvqNp+4giHC0
66tCbjXXlbDnqe29FaG/u67RgkOm7T13XD+p3jPE+sLimOKZAznxmZdlYZxV
l1ssi723WRa7jcrJxkr9viZkBrzewcvVgvXklGc5XPtpkZ8lVPm9/CxX+zDi
UdbeZLB9rLXcjH+5HHOJRinn/fuBeSsnQXXa+9lbl+GeB0Y7LSa8npsWxg8/
GZ5YqwcuK9+j6tmWqO+EJXC/RHmVZf63atq267Hc2/2BzS0F3+e4fm6C3/vZ
pc1ntGd5t5l1ZkcEOY0ikzJCyxXSM72jaaXM9Kbdue/blaJ/mQP4WaqzKc9n
LO/9vwA6SvyWfjY/F79lEraaSE4s/aeoC5dfwV8HLu6+8exz5pk94XW0UU9m
bsSBNJuvKp4dsN/bNGF51K8NffwsQfsF+7bl8UnP3y4GiGHEY4TXxf37TmrF
jMc9k5o94EkIXRhJ1mR/Z3/zl6vwY3TUevT0s3QyRnt954CdC7SW92pDNs9y
tnsAvSDDzkWqGlNYv0io5DkNpVJB+T3pjVPFu1gZhxXfNroE63OqcYJ9x4nz
Cy6g5NXfBnOuPEpRxiFVPcU9Z9LoeA5o61fZvg3ctsI8I+QcqFM9oy5H9PFa
+p4QdlEn/a5nWK2bsqVVZZv2Tm8r68Xr6p+tKO4LOObGrnOD2FngPQe59JZ9
rnOqDl2Gz30cUtoPrE4e3vZb4qZhunkIy/5oDrYqB9DYK0PakD1r/onOI9b6
a7IItVodanwNAce2COdcor2r5jsS7B07VViflY1bU0y3lKG2URR0nLAXWeKn
SKRXWVkOoFxaEnwwCZRPCe+Rd9s3sj22LaiVVmA5l7P0Ci/7cpH/rci+ge+5
RbnO2Bx/sbgNjTqrk42CUP4SHjuk5V8JUX6nPc3m6EhP9CXZs45OmZ1csdrQ
VYcS2pWCWKZZs04LYnmdfhYrL9mkFj/CZaKxtwkjyK9s5oDjsUfL+YItL7zO
8vxvRVhe09c+wjzPWS+9Y3zttwlnJwdQSutr2n34DDiHDE/kt+G42dTW4u2/
p6B6FaystVl7LEnMbcIxz5deK0PGsM+yUc+BCNUvvffJqub+MltiiMnhFpd5
vu6B8o71Jwv6++tVZg+i8XPMGCtPKqxeViCN7NL03AqU2N+W85tGTFF4OY0q
kzLCypWsn/J6qO7tw9YcnlelxRh+h4z1ji1Bee+A6clVmBDGcx8/C3uOpUMG
Z2Br7xDazVOoFhd0fTS8pPl5/XWU/Ft6RxdgfY3Jc27bkOWUui498pE4z5lN
53UdWM4btsQAt1kOYZ3JwiKKM+mfLkBJK+cKVI8uHDIZVEcbZXD5oya1deZ1
1le3+JpniH5vPXNOjLvMFMvQqLFxa25eXLP02jcUqF8435XS9IvW19K4bqeU
dq+Ju0/ztddtJuv7rvEWj0n4HGPt/Tv7cKbJGrIHffYrhNGFkWRN+vcgchV+
jI5aj2o/S6djtPs7uRzxbyzXzL4j6sqJ3Cb7zgOtH2J5Fc6pDqAX5G0dfExJ
s3Jw3ZeQ2EF940w3Viooxs8tZ66+zdpweaMCVcdcydLhfIyobNsxJl+49yEI
/W14XtOtZyd1KE2npPdEHYdU9RT3nCmeOaCtX2U6TTX/DNPv49Azynlw1PFa
Roj5V1z9rn+6CNVKGbJjEv/fcAZKzGbays8L9YfHK3ff42MW03UynVWX6bqg
Y27cOjf8HEaUT4eNyfuz1lbblgzq5RfzGrnnDClYXKsw3SH2w/7cvp+0EIQn
5bStI3uTzjzmLdZHD6W/da2HMb2UQP3bXj8Q+0DCcZ+151TrHzlhjxDWX6r5
Fu/DrtguZh/2SPpW1Dm8sBdftm+wWYVSqeKOI0T+5SHcV53lPwpbfnF8we/p
c/nqDyFt6ozRFY/xqwlZ1E7uswzq1t5Jd/2cMv0v2Z9zuW3rVOHdaD+zdEwN
97yGtT4yBWXHPc6zVKtIhl0+iRN7v6ndXl5lRWOJ5HzBs5PoeQrD9Mu4/Czu
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
emHEcUhe9rjnTPoYEIt87QSTe7NtQ/f7DvWM9s6ofhYvW0NC8PlX/P2uhs+g
i+hnCaqzottF8ercTuYw7jOv3Fd2R9zX7Odnycrs1kvxu9w6hyDUNNaWoE+S
L7yXr6U6zmfja2z9kt/2jfF1KeeTfc51tuKvJ2H9yBF7iPoVjs0V/BSDGUiP
TbrKMjIn3ysJzYrgY/7MePfiziGcbRjrx2POPbOg7b+YcN2n988zVh+uOeNA
GkqVA9ia1vWlsK8XlX8ktwqZUXddyssv6vMe556jo7K2HiDTMSOzq3B8GSCH
4eW+a+1Cq//ZTagW5+XtyOtUku8+XaxCzViTd7d9E5bH3Xa8Fr8T+nmHUHLl
vrXl1y2TAMc7KzAkG1sGUpAtOff1qMvaPqm4876ZdZZedcyTUJyDz/md1j2B
++WpGFNmXIm5CivjtiGfM8J6lniOgmzecSr97v7pVWjUVo1nuuN/a/l51z2C
/IeV0ygyKSOsXPmdHYTiy9z114T1afc8rXd0Cao76roTaUGtuCBt/88G07Be
c8Q2eOioIOcgcc4qRff8aHAGyicXUDZ0WSIvyaV4eQBZaT+YRGuBOtwecL0D
13sEHY335XjGCIXq97ysq5KxbhKyaxUoJSW63QPffnHF40Jlc/sp9j7v/KhW
eZEdvlhakZz3MKXVo5wWVPM56fy4J5GBdZ846TC6kBNa1nxk2Euuwo7RkeuR
2e8j6Leuc1M6HKNtu1Yl5zx/07x0LEzMbrp1ZEC94ETV37zHlJY1f+mVxHPa
z5xRrDvLvtn2l7jXltHcc1S23+4QlpOys9zYGDe+BLUjp34NPw4pyx73nMkk
hjlgTYh9MNprrADHV4eWf0jwH4bs9x3rGZWMdTReywk+/4q331nxfgPuGCT8
/ct78j25veM5SEjmAkrdH9EuilPnanQwh2kfbcOE7NytYR5j5I4D9dYraG+8
0A9b1rivlYP8LERoruHspM5sqAN21a2zRZS/PWK/PTqF47rfb2NG6G+6/6V9
wuPVTlEcpRc878E+1PbYdwb6vX2f9s11/bvF+1rsmQd63R0F0+EYrfxHhwHK
c629p8YuVZ23L0+NNjyQlDMY/Dtre/sB5EC8R3tniDptNw/1+mT3aLF+HT2v
Zd+jldud/8H1flbvZl0dn/jE5HuUFa4umOwd2OVV5arcM8bCAPEsNsH7Zfvo
wG43j3yZYdC+23y387tVXDW13/P6wvk5hOeGlNMoMql6Tlg5jQyvO63MTL4U
9RCE4HLqpaOC0tTKXIuiy3i71+02VdPSxg1ezuMT+dkV0XR0MML0e60s9YN4
yhKgX+h1yP6djwcRxhKRa+05x/x7PdsDE16PCgTVhRodyJoUL7nqZIwOU48X
Rp+vK2UljjHaG70etPLehJ67z4SS1/jGIfNZcc6ZrN90Kl+Xh8Y3hhi3QtZj
x3rmxghjF91evxP8T3v6vrYzLiNaWYLo/qhjbtw6t7M5jN4/uD3FytMMkoMx
PGa8EcWzEA+WiLGuBHG7HEB6mOSWIAiCIAiCiIcw+WeI6LTrq47zNQjiAUJ+
FuK+Ud9EMZQzkjMLCIIgCIIgCCIc5GfpPo01lBt4zPvsP4K415CfhbhvnGzq
e3cH56EW9dxUgiAIgiAIgkCQn6X7mGdJ9iVleYcI4gFxWbFyL/VOk5+FuB+0
L7uzV5QgCIIgCIL4NGnvLNj5lMnP0jVoHk98Glxrsq5dQfNyEgRBEARBEARB
PChatl1020UhCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCKI7XB5CdacM
5Ur9tktC3DDto30os7av1Zu3XZQHwDUc71WoPgmCIAiCIAiCILrA8cYS9A2M
Q+/wDGwdXd92cTxowXJiHD77gl0DC3CG/uUufsNdLNO95aoK/V/obd8zXb6R
Vz7o9rusQO8N1ydBEARBEARBEMSnQRMyg4bvgl296cptF8iDC8gOG2UdXoK2
9ffb+oYWtJtNVA7MfarXe8BlBfqMuuy7kbp84O13VbH8VjdTnwRBEARBEARB
EJ8K11Aas+3JkdLhbRfIgwtYNP0sg9jPcjvf0N5ZMGJrMtBw/et9qtd7wI37
BR54+5GfhSAIgiAIgiAIootcQKNSgVrtrtuSKj+L/m83/Q3typJhh09B+VL2
i/tSr/eAW/ELPOD2Iz8LQRAEQRAEQRAE4elnuXnO1uYNP0sKardclgcP+QVi
AOeYqVJ9EgRBEARBEARB+HIN1VwOhsbSkEivKvwQdciOz0CC/Sad39f/dFKG
NPvvobEc1K7EX9fWCjA0bO+f+GxgEoaSBaidtNCvDmE5OQNDozNQql243ni2
s8LeNyN9PvedVEsFSCSm7Hfw3JzD81A+arl+q/SzSL+hBevTM9q7R8YzkstZ
pmBlade3IZ2ch36Uv6N/TH9mAteBR71qNPdhmZWvdwDlARlOw2KpKvkxwPFO
kZUtBZlSXa/z6TT0oHL2jRegIXtPSBo7q6zcKeHZnw2kYHlHFteht33/6IK2
d+qYtbUgL19MweKG/Gyodr0Ci47v1/bo5Mpu2ZX5WVj9Tozpcrdec8qKztlO
Qfv3oVHWBmbMEav3xXGx7sx695cp47l7mzDhkJO+0XlYr5x61q3JTdUx1wm1
4pIgqz2DM7BcLITKdyPI3tUB0yEp9P5JmJgz26wF1XxOaNO+MS+5bMIW01l9
QvmmYGJ2VchzbWG0SWJ6k72vCSXWB6xyjBaFnE1bc/NaHmP7uSnIFuV9iyAI
giAIgiAIQk4Llkdt20u2l8Xe62LnnKimJ6X3VGdTgh3pvJb3DNsW5SjN7LjP
iK2mp+Rlqq9a96mu9Tpeg1f7WeTfcAGZAe/ncxtR+32IsrR3cp6/Sxt1oKpX
7Rl7K6KN7bxGCw478wKypi3K7MV+1XcNLsjt00DUIT3oXQcjJdGet3LUcF/T
6JTyPlEuWrCeVP9Ws4nHV8WiyfwsrM2s3ye3Jd+Dzqf6wsihc2k/R3olbFtd
1X5nO0ueZe/P7d+BOuY0kT5QX/5+FiR7A1PKfjI0uwqLY4r3DOTccnm5DyOe
/TMNVccnWW0ykIaRhPh769ykK+/n9iY3fb6XIAiCIAiCIAjC5gzZZLLcnVvT
pu2Ystboa5Y/ZQqqpj15VbXtqcEZ2No7hHbzFKrFBd0/MLxk203IBpb5WaTP
5yA7uT9ZgK3KATTqVVgeR7bkGLa31X4W+TtaUCutwHLevkqlVUhg28y0ucKU
5aSiPSuNbNj0HHu29o5NOPaqV6Nusa3fnyxCrVaHGo9TwLEtwnm76NvNa3ge
1nf2tZijXvR3y/8VmgOrbnoS81DaqLI6OICtXAa9V8z5i/125jUxtwq1vQqz
uSftvyeK8rzFzF5eLG6z97Dv3ygINnwJn6Us3TeE/Shp996ty7IdszFbNdrE
bs/EHGuryws4q5UhY7RldseOR5G3H26HSciu7cPZZVOLT9HbLgVldxe4hTpm
5Z8TY04yxTI0alVYn5sX46AC+FmcsteTyMHWDnvW7IzElzEF2VKZtWdRaM9s
5UL9TCbLWp/b27baQu/not+w5vL9su/Kr8J6vghbWhzZBZIJ9m3JFagdncJZ
vQLphKosBEEQBEEQBEEQXth2nNPuEmw85L+Q2pP1VcsWy+w47Parprg2HdXP
wvc0lFah6tofhM/UTQv7esL5WSQI8QwzyJ4NWxZsx8rzs6jKVE7btn7/nMPG
vdpHfqBJ2DqRfDu/Ly3Gb2D/WqKo2kPiz1mF2aySvSvlabvM2I8j+gDSsIV9
I0LdOc5kalahVKq49gfh7xjCcSGK/CxnG3ZsUXpD3LNj588Zh5IWi4T8O8x+
d737RLS95e13ACOmH8zln2jBWfMa/LiROm6WkY9jEtaPHOVi/btXUp9yRNlL
OGR2K4l8PcM5YY9Qu1KQ+nNwO3+WcMZutWAZxcVMbMh8X3KfFn5uX7os/iMc
2rFEoyu3nt+JIAiCIAiCIIj7gx2zIu53wDYP9odI7cnLsh0jMZiR5EpBRPaz
yLiG9lWTfYNsr1GnfpamYC8u+q5pe5XF/53yfz9FdvGM5Dxo0T8wlD/w/XYN
1AZu+78TeB20oLGWk8oO9gFkdtz1ietAfiYT/oYWnNVW5XlDlHlwkV+R2c42
aA8diomw9wIp8sAoym63H/ZrTCnyqYQl/joW9hrNSXKSXIXJg+ste220jypb
cfpk5e8pT9vtsFyX+KZONm39g3wi2M8ii9eznjswD8eSLzkuZazviL6/jiAI
giAIgiCIT432XlFqi9j+F9G+V+2PcOZ26B2dh9LOgaeNH8nPclmHrfySln/W
nbNEsWcjgp+lkbf3OIh7cqKUJaKfBeWyUZbhqiLxNaBvH/b2s3R+fswF1DZW
YMKZp9XXBxC27a+hUdmEbHJGyIMqi3/w+r7qrO0H22q6f4/zpeC+YcZ68Jyr
jRO3H1FV9louLT5jMA3ZYhnOQuUg7m4d23/DMVGIUPLiLXue5ZO+5wKyVj9W
5RPCv7F9IsK3SnJqZ5EfdWR2CTLpBeFKm/l7ZX2IIAiCIAiCIAhCySFMmHk+
rL1D9rp/ryNnqNoWbsJ6Ou2yAXm8/jLKYyH6WbzX2537hrYk+R16h3Guz5j8
LEf2Pii+1u2OIwlbloh+liD2rcI2DRrP0omf5XhjScj1or9vSvhbLH6Wo20h
F43pE8D+lqB+Fty2CSP+B+8nWnf4Gc72ViXv5nlyVhS5QNztWystSP0jE/kA
Z/fcQB379oeofhZZPEsEP4unz9Djnd7fJclhpLoGOskXTRAEQRAEQRDEp4id
O8RY992z9wwtOvKkBoo3yS24zhlZNvfdIFtqYs0dy696Po4v0c60XavC2eW1
u/wd+1nwXh1WbskZwOHL0nk8i5mb1YV0r0X3/Szt2oroM8htQsPMWbIn33MW
yc8i5KAx8gDXTb/dvvw7PL8P5cM16mZr3M+O12NpMmOO83tQTiP/GKkm1NaK
kHDY9kM59dnBN1XHdr7flCTuw68+ncTvZ8mG9LNI41kkfhY7nmUKSjtlKG9s
w5bs2jlw3kwQBEEQBEEQBOENWuNP75zadpckb0Hw/CktKM9J9t742Gwqn4l9
VmzGFV/ie9ZLCD8LPnelb1ZmU0YpS9T8LHX7zFlFjgi8t8X2xXTfz2Lb5pNQ
cviiVLZ0FB+AcLZ40WHvqr7D5/vs+JVJ2KrvW7lqg+QEbh+VIWHFt0xaOU7C
5BU63inY8S0eZ2vfVB1jv2FWEmMWa36W0H6Wa1g3/WCqvD2sfENmfQ4XAvq+
2HOt/LnufkwQBEEQBEEQBNEZTWttt3csByPDaj+D3Ha5huOazEa1fRKW3YRi
NHrGN8WfX1aRDSue22LGNLjjOrgdNim5R70OrrS/cPyA0v6NUhb8zpRwDpF3
ma6hhPLeuO1m8VxaO/Ymup/lrF6FrbVNqNW98v627LN4kF1r0ijNS8vcmQ9A
ck7TkeIcnEtZzhoMOksL+Uy2nEW6PITGiTvvqp031n/vTbt+IJWjqnmOlDJG
4+bquF1DeWhc546B1i96POsTE7efRfQDuc8F4r5Re7/iUM72xfn5vvBz+6U+
VQnNA61/VGueB3ITBEEQBEEQBEFAo+jONyI720NmuxwbZ5/0jC5AtW7bH40N
26ayz7U5EPaBZNa4XdSC48oqOkPZI56Fn1Vr+ADaJ/uQHVXdg9arB3NCXI7c
/kJ5atg1UdqHs6M6NOridXYVpSyOs0/yun+GP9/Mh6q0CeurQpssbvDcwtfQ
vqzD8jg6I1ewjyP6WY7Ed5VkZ7sYVNF509kNw8d2derKW9OxDwCdT9M/u218
Swtqa0tCzhPnuULWecrJTdd7tPLPqvcA6RxC2pCHdLFi+0qu6pBN2G3sGc9y
ZJyDM5CG0o7th2zXt+34C494lpuqY6fs946vwPEVb/sLn3qWEb+fhcd1YZ2R
mNtm/eZaOzO+ms+gunCcpe4bYyTqov70qp2fmNdzbh56B3F+JvH3sj2FBEEQ
BEEQBEEQFs2ymFNFYf+5bZeWEFOhXQOT0CvkDp2ErSPbZnfZuNJL3CNQTge7
R/Rt4HtmrHgIaY4K57kwimuC2YZRyuL0l1g2o7FXxXMvU87tAxOvFJQFk9XH
z6KI98Dn+6rsdJMzx29VVxgfAD4LyKqDZtmdB1ZyiXY59oWNC2f9WuBcx1+4
z/0VYjxM/8PgpPDfPciHI43FkchUr+OsJFmOohuvY+1dhUDvivNc5+B+FtnZ
T+4ri/NtQ7C9XO29FVeO4h5H3mPrDKpLUUemPfoHQRAEQRAEQRCEsE/hC/ss
Fid4/4ttu7SgVlyAPsm5LPwc2/Wacw/KqRiLYb5zrgLtk23Dlplx5Ezg97j9
G/3Tq9CorRr3pMQ9Gw4byh17kJLs+/C6JmFd8xeFL4v2jvy86x5zb5a8Xm0a
O0Xol9Rv39gSNLzOUpHuSzmw8r4Ie8Ou9mEC+QG8/Cw8Xqiay7jK05PIQbW+
D+lB0/aV+wCykmc3ihlpHZyxb3fmVdZiRCoHsDU95f4Ora5x2XISnyGrIxSX
Iqvz9knFnfvWuIbSq4q9aI6yV1ZduW9NWcqU/PKr3lwda/furUpkbBKyaxUo
JeX17MbnXGdrD5LZlxDIzzKEzte27j3ahglZXQ7PwJZLx/j3KYujMqQTbn3E
r5HZVTi+NMtZF+J+XOUnCIIgCIIgCILoAu2TQ2jUDrTr+MQrxwe3mw6gtrfP
fmvvn/F9ftN8fl3fO+DH5SF7B/t9/dT/tyEJXRbOVVP7vbYHqRl238G1vpfp
6BSO+f2X3bDzWlYsiLefxUD7HqO9Q39PuHIdG+9pHAWLI9Dl68A+o0fg1NoX
9NnoqveDri5YfRvvrh9CO6CsCmW5PLXqibefPCeL6v03Vceca+1b9T5zGK6c
N4TW71jZjllfOG5665hQzw3SRrwt6vUbaAeCIAiCIAiCIAjiIdAomWfxKM52
eSDYZw4F9CcRBEEQBEEQBEEQBEEEpmXtwdH3jbn3bdx7Lk/h7LIFxzsrds4X
ydnlBEEQBEEQBEEQBEEQnbKV1H0PE8UH6GNxnJHtlcOEIAiCIAiCIAiCIAii
c1rQ7krOl7uA4wyiL6ZgeSf+nD0EQRAEQRAEQRAEQRCfBJdNOLu8gLMTimEh
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCILolPPTD3D+McAPP57Dh9PzrpfnrvHx/BROA1XQ3eT85AjOW44/Xv8X
3m79AGsbZfjpxPmPBBEnLfi/xn/g7vWgj3D64TRCuaLed0do/Rc+nPzX9efz
f/8I36+8gb+//df9/TYiEvd9jFOVv777Bl69eg279dNbKBVB3HM+0Tm/xXkd
3rx+Ba/f7MLp/VWP9x7S40Q3+fjxo3B1/LzT97C7W0fz6HNIfv45PN/116Xn
u0n4/PMkWL/8eMqe9fD1z27yc/j8+W78D77+n/LvH1uyf+N/D+sT+Rm++t0C
/OEHbFf9B/78+wX4xe/0q/cv/wj5zC5zrX+ned0txLLd3XLeIc7/ocnZ3+/a
dO18l+mzz+FN2HJFvS8IKp2gki8ue6p7FJy/LbH2KAEu/vkPq5Y+4Nfbu9ZW
RFfp2hjngWo6E2WeIyv/buqJ1k/1Kwl3TaTjnNfFjTjvvO3SBMc9vyVknL7f
DWSzuub8DxWZLcPG+SeW/ghmIxHxc9f1OHG/Od99geTLvh49fQ6v30eRtnN4
8ehzh42g/y0ZxM/yLsXuTVlyvpt6/LD0z/kHeF//4PrzO/adj5Jxz0F/hq9/
vwC/Wqo5/v4/WHux4LKDtOK95bbQt1ALZdL/DLPMbvrqre1n+bi3ptlSpX8b
9tl1hOJ3i+sa/BbZe+b1qz+twtt//xztmedHUKsdxVC4FixPu8tmXqIvi7Bo
/Qi//N3i3bPdP+7C488fg5f6+lB/Dx+c/x7gvkjF0fol69/O/th4o8nXVy75
+i/8+XcyHeLN+T+5HllF+oXpogkmw396o/9nSL9Nt/mp8O3d8wXfW86h/r7u
Glu6M8adQ/bx5/Ak+971L6+esXnII/ec+XyXzzGewvuQhrKr/B/faTZS4mU9
fLG7zntISOZ1TxIpZvtGVSrydg3PRygMu8vGr+HneajfaQeGbH7Lp3V1qLuU
+CeMNn4Fs1mdc/6HisyWeZ/l9v0zuIsa5CaQzn1umjutx4mHgK7jnkP9/BxO
T0/Z9QHe776C50/0seSl2yXgS/11Fp4lC2Dfeg6piH6Wj/XX8PxZEnYfSCjX
+e5z6diz25U5KMD33J8yven4a93yM/y9Kf7Lj39dhF9MfBdyreZnzRbDfhbd
zipCBPHpPufcJl+Atdp/4PzkP/Dh3/+Ctytr8GujTv68Fd5fcv72b1K/VXj0
uvxypabtxfrQEC/X3ixC5976WfRYv2fOH3TJzwInuj9l+d+iIP20UtTjzuYd
vgZWr79if/96L5zgyfws3Bf725U4fJHx8za7yL79x9suxsNAEYvVrTHuNfen
DL90/LVu+Bkeucrx7gWzd57kQ8cjuMpv2JKv7uIgd87L9ghe1U/hnM3rPtTr
sPsqC08Nf0bqTYRCxxZjp88Hn716D+d8L5ZWvvfwOv8cHvHyPXlxp21u9/yW
ycbzm4/Vutucw+sXzyGZ96+TT8XPIrNlNN9L4tWtlel2Ucx9bpq7rMeJB4Fa
x32A50z2Hr+IY+wI7mf5+NB17nv2fY9euOZ43ZqDftDsJ4e/498bdnzE1n/Q
P7Tgm4kF+OVf90O+xe1ngT1uZ61FL3g3MW1yl+n4H/haiyX5Nry9bnxv50tx
Zl1GjKv5VLmrfhbw95fw9dHUO4fkdMvPwuzPL13+jv9ByYqhKsH/4WIY8S8/
hvTvuf0s/9P8LH/+5910FJKfJU7e6bLr+GvXxrhXz7Q1YWGMqxfsWPw3eJHm
I+Sf8HnNu9DvcZdf/87wT7oBTP3hGpBOIavFkjyJoFvk7Roe9Xzw47us5hu7
bdMrLO9fMNlI3UlJuPM8+Dm/B5+63EjnPjfOHdbjxINA7WfRfY2PUvaoWn+V
gpQrtuojvE49g9Qr++8f66/gefKVkJ9FOq6e1yGfTOhrGOx6+rwAb14+h88f
ofJ8rEPqWUqIJd3NF4Dvjn1XSMITI4bz8XAKZNuc3r96AU8fGzGzw88gmUzC
8+fP4Bkrn0qvn9ffQDJh7Nd79BiepV7CB6cZVH8JL17XtTWe5LD929RLd/yy
WU9vskkYfspjBx9D4vlzeJZ4Bi+NGF4+h+M+rdP3L2H4ySN979bjYXgp+Sit
fOY72bOe53fV9n1jU7Ofvj+x/8Rj5H8x/R18z2yLX7z4wf6H63/Bb7gtJNj4
P8PfCyVtTZs/55d/LMLyW+eatOhn+WlrDX77R/ZsZvf+9i9/g9/+aVXbh/Sx
tglfb9ThfG/Tih35Zu9nPV/uinmP7uf484q4T4HfO8vu/dgowx+M3/VOFGFt
Ty/rjyurVhl/85cNwVZ04WWTG+v3vy78C9WLV/la8PelEvwGfe+XfypCqaaX
i+f9/Hq+qMXP6HuT1qDmOaGQ+KxcZazB7F/LcH6+D18ZZfpNoXZj9fjT1nfw
mwnDLv/9t/DND3bf/8Da3vlOOPkH/OFPf4PvnTEUG2vwZfaNLbvn/4JvUF39
mu/jaoj3KGVI1qbXdfj6RZGV518g51xb4008fWz03ydMj4n9N1w/P4c3eaST
nibh9W5B6S/R17cS2lrK4+GErpdShl7S7CRmC51+gFcpU0c+guGUTG853/sc
3iiD7w2fyl/KqJ5qWl1+88MbPc4L64piQfMfCu8M0E6Cn4W3w1/03/9yugh/
sNrkf/C2sAE/nf8HSn/5VpdFppf4Pf79xri39TO8Xfqb9bvfMnnSftbchz//
6VtDRgtMZ/0HvAjkZ2Hj1Rrr67828k7p/Ubsp2b/guaP8NW08X4ml64+wR+3
9wa+NPvqRAH+MF+CP2B9+e837G9vXLpd7zc/CH8PqmdqPG7PKP+vWFt8pb2z
CF/Ov7Ha+LxWFsr+h8I/AvuPtbX+xFN9PH/2XJNvc27QtTHuw0utb7xG7pR6
npVhOM/mJqxvP3uNSwjDPJ7D0SHrb/KQePLYKNNTSBXc78N+lo+sfM/Rd1pj
+cf38OIFq8vzd5A09MpwnuuK4Lrm4wf2bON3j54k4JVRP+9epqw+PszmSp4h
vl5+2o96ToineTyX8y6fV7vyfvGKzW2ePn7kKrMcr3W391rZcPv4yQKfb75g
ZTn/sAvP0e+eZd19x60rn0Fh172Qrc8bbRnNvnpnPUuc39Yhy/S2Nsdkv+M6
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
LF/+jK3RZS0HX/rMOAuvN0xrMKh39ny9kq9yW5zlJfjIcp+0PXgXfawG0Oet
8l2Z2/LFl+I8iqzvI3IovvO5ZR0nzq78g0c+C6/9yWuE/E7UFvrEUVNCnn3P
tHPsuv25Js6ysxu05XnY2BeU7/nFWfiZiNWTeGazLP72A/ghXXv/veq3s/X4
3/+I3XGu3Lt11zj5xll89eZl4yzsfA3Nl9LO6lG9vynOIvR1/kdjLmo9K64v
+p1fn4taULwNfzvD35u3+a/8biTZ3qf/7p0HtoS74iw3z3H8O3FZMp9FUQm2
XxTAvsqta8F5Lr5CL81Tn83Vt8ZZ7rM1zxBn6Y9szSPPcPjTZ7bJfawQ9FKa
1M+5Js5yqY13yUPylQW3D8u/GR/7qc2t9S4Qfg7JVRN1aCu23+jeS3fHWbza
W1mr8Roa1O/me/1m7dHZl714caHPFmfx5REfH55DVu3M+I+iL1f4/EwnZ3Lg
A32M1Ab4OibUx3dlbua8TIy7as778FnjLDfbo6Xf74mzXHoEVRqqNqCrmO2o
BpFHGNppt75v833Eb2suzUvEWR6huwgEBb9vyB5nkTUWpWlmNkA/Y9SfmA27
rg4ut/lBYp5/Y/saK3Vw/eIs5LknRy6/C8L/MPVLnNeb2b9b4yy89pZ5TsvH
B6W8pjbolnvDZH1I6rerJuwPrFYqv2PiRwpd7PwHrRegLau4P05rmH49fUPP
ffGNs0jfXl9LfPZtnxz6O+Ms+nLx61/B331T7bMvfTznf1675A/iHJZWI2T4
TNyd/dg4y0vw8Xei7sl3frm2r83r7/7p33+frL2/e+GzyDn5y3/6rkbDb1jc
Tpc/Ci63372Mx+K5oXn9XVHn5q/tdSy4jxgbPpRuf3z1nO0PW85V8/syluvg
blktuFviLACndOOMDS/iq59Pd1bp9VHGWQxAHet7xsk3zuKrNy8bZ/lU5P+o
+D2X8/31cZZ5nhetp2ID12ndTomaw9+83Ifmxy8ea/8befbH1uaX/8lk4i+s
sXV/jOw+EnPv+rnnuDqT967rejiwmq78Tgh1HSDvLSn0tesg7z6+0HFrnOU+
W3Pn2kFX1LGFVNw5MtWa86TPNq61tUYE57f7LhdHn2o+FvmVsuCy0Z2oTS6P
NZxobZ5Zvy/t8rtLZPxiHEymzteQZnuj6K9aE8O3vbW1Go+DbaEsYuUM0T28
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
IBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAI
BAKBQCAQHyDGoYd+GF+bjGfGCH3Xw+v28i3QgFAwDtD1wyuT8DHo30vDX9eG
voP3wv63RuvQ1nCsKjjV7VV27a31g+HBtgD12g9tfYKqOkLd9q9NCuKF4KX/
QwunYwXHUw09qhHiBfHebbddvwaoT0eojidoUaEQHwvGHur69eeQOn2Cp6R+
XSKeG0MNT09PcHrNJbUHDWN/JjJx3ZrldoxwJvJ3vc299b23h6FOyZikMA3J
K+jkR6F/Lw1vfR8gJc8l9evG2vzwtmgd6ozxmP8F4E/W4/oxjnZFnf/en2uv
NbxhC+4E6vU66iycydDjeI94y/DQf2K/w0ku3o7NQ3wceA3b7ZjKnHOcGzb9
6iHbXPQpwHkJ8QbRtWfoHmzq62zzJuaQhtARpNfr3XPw5Nkw1rB52lyxFngN
GgbIg6cXiwdN66S5zR06OLfd9e+9UwwN7Us2+fc366QH31y4Vf8+BgxdC+0t
RsZb37nOpe/Cj39LtA6wD4kNiKqb3r2mH+c9WYuHhRF77qqY6OrGtJVkjRYQ
Hd6fRyEH+hp+gPbcGmt63Rbci3c5r95hx67G2LC1dHRoX6a9F4ddzhDr+s90
/imGD1UyEG8EDnv3PD4ZmTM3TxDuz8a/VDGZowIzzsx97S2crwq1mPo1nvfM
r/1gTS3iAwCPD8YP9m/H9ghJnEL9yumy9U025Xl48mx4F3EWgPa4hzgt4UU8
3bGFfRJDMRPAoU7W9xUt771X6GurW3XSi28O3KZ/Hwfq5MZ43hVxluzNxC7W
8JZo5b5cVN1iqa7rR3ek8ZTIWHNVEY9Jp5qyDk0+800HOOYJpMU8lmzPdXp0
nOU9zqv32LGrIWJgN4nQe8BbyKF9k1jXf7bfcVMMF4Hwh8vePZdPdqTxlN1B
+7WFSOSE6raiyTfWPYZlmPrF57b4ZdYVCMSNoD5l1rz/cxI23Bq7fV88eR9x
llfHmdjjIP9oasiMj1pb3cE3jLO4cSZ+RpA117/4QcZZxjeUz3KP/b+S513F
1qvqelz6pjQH+qQ8zvbCN/sFnW64bOhUvZF8lledV1/U/vNxuEG73wnscoZY
t2M3230E4ho47N1z+WQ8B1OLd7Tl5Xzcab5nMEIRPsEmv1YPLPOr6CcC8aoY
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
yYA1RtcpMRn/OAvvm73fKuz2yZQpCtWH1mRUyEpuqY/B8iKuOLNt0ORp3/le
mln3FdbqGlwVZyG252jPcaNthJYz4aOSh2TR7WeMs/A1nNzvn/mmIMZF1Bbk
eQGJku+m65dJj/zdZsOW66zcO68OMj7eqPJ39by64sN42UlYsGNkfVo5zpBq
DV3pFy3b2rvmFQtofjK1RfM8I3stBm0vQayB5jkYLjla/vee8VvRL7E+yRQb
tG67fOaXZV33gyGjz23HwD4mbB6LjuZvXnOb+KZe82Ww85qtswN3raZ3K5dr
dqLhuYdHSyoPz7XdTfXFveMslnGT+RDOGtg+8/Daus0DLn/Xh/e+NlWHrB/G
p7Kc8VR4RoynO+Gn1tQPnPJipJ9ny5PhOTIXP9/tn88p8q2Na5PNR8s/4uPA
+ZCAzIOkOVmKS2HzfRZ9BC132fWsK85itV1qPgvVq91B3XcrF/JGuF7Y7xGw
2ZSha5RaFvIsgU+cpWuOl7Od8m8lzrL6jtOH1+IsgeNOXo87lW28t68J7es/
vz5s4dQcpnOqug/ijLMs9hsmH7ZUPnjWchTX+3xvnMXgk5WnjjiL1qh1faPJ
nVznhHEMsfLHY/+XOItZy91Kt4OWtbG18U3mnkaJRhs7t79xxlnkWE4+SH+0
jO0yj+dYqunGYgHBRX/u0QF3HVE1JvOIOIuffbLru+pD63GWRpyPonVH1HHj
+3nudfMqTZ72nfml1juWVuITV8Q5Doms17CF/FDP4hLyTEBo9D+iOctLsvKM
cRYZWymoDtC9uZnt5P7ujvmLjeWekmvjLH4+9/wd/3mV5gsci8vZ9ekMhRbn
u2VeXfJhvOwkOOw/8bMTcW4p2MZw0PMdlP49wC+aN33PvCKebY6z+iDiL/RY
z+oySv2ruWyd6NkM4+6QNXrkevWyvulPieoLeNouv/llSdcdWJPR57ZjYB8T
398k1LnNpY8O32PFD3rPcrlsJxZqgSvnWPzjLNb1xVrNcc95eHHd5oFr4yzz
PvvaVKNrZ34fHp/KNspYsdgpPQ9L1nOZcp/fss6o52qviLNYY4nrsnm//CM+
WgwtHPJk8pOnnPOlOIs1fVaLZz48znLJxcuPDXRdC1XGz5TuHWf3mS/qiM/r
NqWthO3a8HogLI+P5dDoa2PdHxyhEnM6P497Bv5qumBTPd/xjLM4bdGzxll8
+9BM5/aDkNfu0veNb46z0LVsyM8YH5sWuraBbMvPyrjKObxEnMXOU784i9sv
MuMstCZNsS9gr/2x2osLurrOb7+xdcdZtlCUc5r2sC/If4tq8rPNfvL5Su4f
cL/cddeqp8/qyAlh/XiNOIvFFvnGWfzt0y1xFi5fYbqHolBlqSBjdzBqzl1B
k6d9d4/Xo+Is4ve2hjzZTn5qwQyFiLPQOmKFKrdFQf4OtZr79FJxFkFXdGyh
LUJ1HTHljw/snNlOy1t71jjLFfMqEZLZ2fcjnNseXPJ387zq8GG87CQs2/+2
PkCyFb53EC/sl9/pF83fuGdeISuZRMQKaK22+szPUdL98Pm4+K5n5f41/4nv
dSW2ouxOeqYPKWPM1slG/Q7fOMv6/MKatOq6BT4y+tx2DK6Ms3jNbS8TZ3kP
cslfctkJtz1T57MHxFkW8oWumodd6zYPPCLOsmZTXX2ruh6KjTpfTTkmAz+r
c9lbW9YZVXauyWfRx8BPNu+TfwSCYoAqDS+yMVh8H/FbYasTKnL5jDzQB8ZZ
zns5Z8q/Dav/7OwRs8W2HE4tv3nk+h3qc5d+7sbCE3n2ONPvIVmIXXu/c0Wc
ZWfb+Pc9N3TDGvOaPvBacfzMZS/qasxzJ++JsxThkyoTwc5Rx9bd53cXZ1mQ
60uD/B27WCzz23dsnfn2C/tKS/2UZ1p7evYrWKq7xHm8Ldwc4HskhfU8IcvB
neh+rjgL38eORTIyfy4x9lXP4qz0YpzF1z4trFVY7v0sH1fps5AV+9lqB3xp
umJ9Ypcbn3NDZs433z9bsH3Ep0tDmasic5fXGOCKs/i0f9td2nVK9CQpId/q
tQe4nETFgcmZPic/e5zFZ14V9Q6fwlyTe21MHzSv6j6Ml50EP/s/kLV46Mrt
eoRfNH/ljnmF+0gh6OVM9fNcvuvZ6fwjFXCxJ710E9XS+oKf/6E2iO/b7+c1
hT1tl+/8ohI113UdnjL63HYMrouz+M1tbyfO8tpyqX/PtBM76/s8rnuJs9Ax
NM8HNuoZOEc/ZDvu0oE3zMP6us0Dd8VZPG2qjU76nbgsmd+g9JGtEQLYV7nG
H+nnWUeGxa8vftLtcRZf2cQ4C+J6jGCWdZPzHxUO7kdnjWrbWK1ri43ndSO3
l9rcD4+zOGp9L0GcsU0MuziwenqXu4TstWR4XW21Xp/OE1lzTV8/NXu9HiRc
/45nvIHX4DPP65r0G5TcvMa8rg/qPUUsByW81OK4Oc4y8DPZtrMxbph9lvUm
1+rgvpU4C/Qn9v93zho0rFds/RUk5tnWNTnzHVsb3+Q9HYXrXo7Ffja89li5
t9d2muFIz/E6fKNFOkRNuaVzvezXO+MsnRZP5DzV97xFnUzlfOEobNMs58vX
PgldM/S9qxgtF/9Q73PP7bpes3wJ3jbTz77zui6WM/Jr9SPlGr3R4wxbUM9U
DWbfpH9O/uGUbhblydkX3/ZvjLPIWhPTvUdz8qd9hx3oYq7r1yjreurqcEOc
xXteFX2ODCHRx/TWeXXFh/Gyk3Y7Ng7mOLF899C2vn2AXzTDPfNKbakLYY7L
NetZEQsOMyiU2gl2uOSM/RuLnW2hLGIw69Q6+KLZLq/5ZUXXVfjK6DPbMfCP
s/jPbW8nzvK6crlmJ3itZXM9L+qDzGq50TiLXu+ml/WAVuIssh23PfKZh9fW
betw+btevPe0qTbIuwWeAn2twuWA/ZtmQ0/SzzNEnfP8Equ9Pc7iK5sYZ0Fc
C16zO2BncJjejr2Ii8r7VWV91RJ6Mm+155bJl6wrvYlLaIkvMgw9nPb8bJ5S
w9nl8xu/O2otWOIsbH2+TeHUnOF8PkPTNOS/LXTOewAu9/7uT4R+Qm/f1tO5
68teLPfzgqgQfeqgysU9eZqvrPOkPxcg8/bo92m9glzeN+2ozzL6vuPgoZ47
PYraFsFuD23Px6QuYgv9OhxnCx01QNm5jimf5Zo+aPZGuzPAHmdZ77fMldmm
NNePyASRByYTbWuZi9x9lnXQyqYnatBC21mjY473PO2uXGevrImtc51lv7cR
ayx6P0NPOzvS86U5bMJ0msPkPejR/kSeIWNE+lbEm1U58x1bO9/kWS56Bw8f
h5Ho05HoUziL+bC5zeIb1amgL7Tdz2jy5GmTQN3SDJgR2rpk8rATd7IodDDd
P/J7BbS7Gm/VAc4DcR/kLoeG0EHbaSruAygxrkHmBB/4+YeZHdLtBM+Np/Xr
R0JzO+XTrtqnqfZ9BFXD+9w1Fb9vNkhnvo25LyfvatzEBbMh1HZ25wqizRZs
5T2vsple9v0s7rOM4CT42NYFyLte3euTgd05R+8BaQhjx6GFUtZmmOjgtbHp
t4/njtfi6xu+xx1e7tPkfIpZ+/Q3LvchpM74lG/7Np5L39L0IdXunURuuJkL
xde0T9a1v1HnSdbFLhsYyVx/bjkd7jhL4I6zeM+ro+hjBHU3CN3Ip1z3+Rr2
lnl13Yfxs5OmHfu/4q5EotNiLujPB34HniPHztsvGh4cZ9HmlXPB7+Hgtpfr
v7xreZ57Zq9z7IglDKdJD533q0s45IyD3w/J6x5olTSn88W7Vdu1PL946Lra
sL+MPqsdc9fBtY2T39y2VO/NvsfzsDjLG5JLLzsh7smOy1r4SmfYR9zezPPU
eH3sEA7EVlBbUpeyVopZB9dmP+V9z9QeDeN8vuB5HGvz8GpfRiF/m9RZ69Xl
7/ry3semWtutxZ3SFr+PxX5s9lXOy8LPo7J+Pu25firxKItPY/HhrPksnrJ5
l7+P+DhB9LtI9HM4xG+anQGczt+Lf5My0532k32Tf0lp2vLQtj9o/E791MDM
ubXMBcdYOyMy+9vtXT5hR+zlRnk2TAq23tzNzh10p1yt5Uj97Zr6VmqOnI0n
p2l9wf8CYiNr8lzguAeJwusdFw+pf63lynS1PiYhFAf629IerZ33I72b0RIj
ovyfrzHv6QO/h5HHtZlNuqnfPHfUJRP6nb/uPreQbmb9sK4vzPcMujnxLA/Z
8KfYvtxGWxObfaQ236yByvupf7Pex0afo6xSY/XC15/+yHx1KKLVMfKTaRff
OqJfWu1K0vesurQg52ojP607aHcQuzFS31KrW7iJ97O6cKbuP4VkvlYWrPfp
gIyzbHdqO9u0Mt5tD4nKU7KubE4ZBFqe+TjVC+B/dA73sk9sHENIU3XsnrYZ
qFtd0k9Xc8G62Xpg4meUg2ubzM9m+tt36GtjPJOihDiwvD/vTXtQ6aZ1NM5H
4p/N6sbSOMBWrXFH41GKLHQ1xBu1fVp7ppoYwNdkhk/l0b7Jc3mH+1IcnDGF
7XFu0pPl37hPHep3yALfO1TP1V3qnfC/TOyb2GwYNbU70ubSmX+/eZUIyeSz
SjtQ1DWxG+qY3jSvevgwjBerdtK0Y3RtvNVkke5jLK0jvPwiFp9cHvO75hVC
4RSPEn9xcSJrMXVcTPlgLTvPtlQx/abPeQG7nEm0Is/PMO8iPhPstPE0bBfv
49L84qXryud8ZPT57Vhrmfvt48R5sD63Od5nNJsyyHIwl+4beq9y6WUnRtNX
IjwqdYaOl/rY8jtF3UAebqBU4jGucRuJXTPbofHqiVNL8/BaX0RO8PIa3+63
XcN7H9/TgMiFSfUDOnDZM7DGy4h+Rtq8HCaltu9g+jTMh9Pk2S7DfrJ5n/wj
PmqMA/Q0B6Lv7TGBgcf4zfyAkbwj/u35qZzOa5fGpDuIu9QXzj3Sp0j/WJza
nejAvjWI/i7CxhP52+L3Hd+55p3lD5Kx7Nm4POqL600+ug/+4HnzseGH0T2C
Pd2jWohz2SDl+X3hor/utCX+TN9f2TfPsXXyjbY7uNod7baDnUm47iwY3Tvm
f/Z/HwdPvb4BvCYoz8EdCQ1d1y3kUtEXej5eq/oyWOzVFf1YG7vR/Z1BypMX
ux7PW952v8xHCx3S9i1hXJRJ8SWRj9Bf1SeP9nWejy9vN7mePG5+8JtXBU/X
5qVb59U1H4Z/aNVO2uyY5FfvPU4v6xe5MNh4eQfUuz182rfLGT9XY6lvLtb+
LMuF7ikTO7rK8xVd9tF19XMeMnoFbrNj1+E557bnwKvKpY+dGOW8u8zPvuvv
0/GJFre8Lc7DC33hNay2qzHR+/1dD9/zgZhkx9XYgk9z1fdffimDQLwJzNcz
5r+lq3EWxIcHltuunZWd/o3Wg9uWL0wR4l6wmofvaNxW72pEIBCI9wxRI6Vc
rC/v9SGWl7m1FmdfP0+FQCh4mFx+OBg7XgdorY4SAoFA6JD5+flJnaNpfi/N
XbfV+0R82OB1LHZwaufO2TDVpjHrNCLeJMYe2q4j48bzaZdyq98aMM6CQCA+
RLDaUO2J1/24Mjd0DloDoutaKFi9fkc9IoyzIDzxKLn8ENEeYthEBfojCATi
BoxwzPRzibIWwgHtyseIsYVsa8oDq2lxuL4eOuJ1IGugsXGr3ldWGsulC2z1
FREIBOK94izqPDyxGs+3h77FvcmiDkXl+hC7OzCEBg0pYhGPkksEAoFAWDF0
0NQ1NOcG6uYM15acQHx4GLoWaiIT7L4hcS8W4j1hhJHW3n+XPtOIMRYEAvHB
gdvkB1g38Z21L71P+494aTxMLhEIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQ
CAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC
gUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCMTDMA49
9MP4nC1A3/XwnC28LzquxDhA1w83vTr0HTxsaO+gAwHQ1ieoqiPUbf/apHjA
X1ee3368TluviVv19qH6fgdemo7nbe/l5w1vOUebjEAgEAjEi2Ecx9nfa1Nj
QqHvtYm5Av25frPro3tpq9MneErqh9Ez9meo6/YyvkMNT09PcHptd/Ct0HEl
hjoldKdwPdkDpKS/Sf2YDt9OB6LOQiZ7/O8d8PAKXTHsx9gT/a+hfwYD/2hb
9TZxq94+Vt9vx0vT8cztvcK84Svnpk0e4Ux0r30O5bPhGXUdgUAgEIi3hKHO
Z768/Asgykpob/QRhq6FtnuEg3GGyKCN/m0gKeq3HXMZa9hY1kdde4aHsOYe
OGi7Bk22gSB91NplgDx4Uv1SRuMGFDd46ODcdutfe5j8Oeh4BxiajPAzuynO
QscifVSc5WY6PnKMDYREH6JD+9qU+OMKXdHtR03+/9MzrXtvtVVvwlZ741a9
vf299tw+UK8fa3devb1XmDd85Vy3yUOdcb/qGWKRNh16Tl1HIBAIBOItgc+5
CZz7Afq+h7ZtoNonIp6xhdMNKQ918qA5e6C+SgBV28NAaGP0nWsoki2jL8zf
8h7lAMc8gbSold/oHlr86v6FjbbrUD80zgLQHvcQpyVMURSLnzrUiVds6GHy
56DjPeCeOEuGcZbXh4iFVuthxbeDK3RFtx9je4QkTqF+hvS/22zVW7HVvrhV
b2987+H5Go+1O6/e3ivMG75ybtjksYV9EkPxcOWz69Bz6joCgUAgEG8JznUQ
8aN2NNayya9eI51zMt9nzf3ESV/FkrjS7Lfvcv1G99Cy5k1n4njh0XEWAzY/
9UxkNchX85geJn8uOt4BMM7y3tEwuXuQFL8M7oizPCduzWd5X7Z6vDE/49b3
uHw+bgQ/sDgLvKM4yzPifekQAoFAIBCPxdKcK88UFe1snhxaqPYpbDcB+7cg
jKA6y7f5vsh2Q+MzO0jI/47iDM7i9bauII22EIizP1FWLc/1C377eN6zb8z/
rT0VsAs5XU+bLRS1mnNfFwWch4H8N4WNOKcSbGM4tRY/gPSzSCNxviaAbZRB
3WnPDWfIY9mfAHbJHprZoeO+LiATef98D4d/b7OLGG/iWf+H9kR4I+oxBBvy
bwfQmxvbA+yPLWn2ANuAt1mcPyc8T+08aiuICd227s1pExTAMY8nvoS7BKrG
vZlOfbpNXpMxLWEnZOEp2ML+pPK8rTKtHUYZHLMYsuryO6U1SatLDEUZ+xFO
ROZ22w2XmyQh/YrhYBxsW5Y/2scTGftQ9HFDxr6sVxIGGB0hGfsWynQnxvoJ
tvHeytc1GTSwqE9unKuc95ONVQxpmnKZSrlMufSa0heFPG87IPRlpX7+jufT
Z4TuulzREw/aV336kehQfoJhaCDdcrp2xXn6fpHMeJ4UGs89ZNZDjw3Zk7w6
5kQPjzOZXKB1JPKRyXYILbQdpQCBLnuJ3e6wT50gibZCzjRZ97FLS3Rq/c6J
Dg5dDclO1oIhtmd/Unjhzx9/XTHWhIR/WWzaKmpfItGHpyAktmQ58sTs6Kwv
SXmCQxIY68+hrWFP+ShlJ8pBiu6yrSbzR7VXaapM3upYnfvEmI3Qw4HQNc0p
jjmS67G0MzsoTkRmPOIGfu8t95HlHs7kk/JqsuU32rNH2x3GUjLGWXSZnyMy
p15SKGxxFjrPJGxsLlPGmg3i31J1O4UjkdvFOAsdb6I7w6h9X9cVh15QGY2J
zM5/952TbTa5JvzU59Nl/t2hQy5dX52bADrStyN5cWjKaZ4NiBwfvGQMgUAg
EIiXxfI6qIOEzp974dtOdT2I31VWUBPfMQn5/2f+xMj9aza/E/8oyzOy/uN+
SZPz+TMk82t1qqEq+NmkTbaw/7IQZzkXW+UMSbPfTX4QrbFWJNzXTo5y3XWp
AUL93Kw8Qn0kPvyG+xAHJZZUw1b0Mz8c4USfE++W03zeQRrwZ/bViTxTiPyf
/eQb1GlwOb9CYzI76UulxMdKIRPrmalGzoaspwhvjmUmfJtoFiOQYyW+ke6h
LEri17Ss3XBv+vrs/Ayhxza2Cm0Ep5T7LMmej2u65X1zbUWd82Cihdbyqesj
5BEf43gWV9HbmY/FfO1j1ObT4izU95Zn2dIsJ3KVMX9LwYL80Tb3W05vnB8Y
vdmO9yEqF9ZJYzP5wE+bCMrjCY6HXOhBDHMPdl0G9W+v6JMDbcnb2WUFlGVB
1pViLHYp7IVvavWlc7422sQ5WQecoMwEr6Jy9hzhk4+eeNK+Hmepp9jEE1mf
0P4cqY7JfDoy3sWxJjQUrF4JPeMoubkqs1567K7Vy+sIZJpMLtE641cwp+Ui
e0lRMdnjvAqs54Lo+kaOaUzkPJOy7tkfJ50a5vZkE5E2iMwe8oj/Flc38Mdf
V8w4S03eDRTZkfoU7DIhr5w2m63jdO6NtkPZv9kZ07ER9jaMoaS2u9rz5zai
L05bTeyWiG3GxOadCE17oePZgsJ6zX3zMQso/eS5fWzQzni3387G7ETGLJ7G
MW/cdPi9t97Hgayhd+I9Lp8pi//fas9ku4+1O/sZL6ksiDl1mp/NOMtZ2NVc
/uZhg+a6HTF+kXkwlnG+hX7Px3tJVyx6wUnLGF/mv/vOyaZNJrx4UuulrPHv
dh2y98lvbrrUduHzX8nGP/aWMQQCgUAgXhbL6yDiQxA/J5j8wQGautGePTPf
f+6vFCH1DdV9x7FroNb2S1oaKwnW1mCBcgZ8HDo4CT91qs/SHbgvUWn5K3k4
81m4/xjEJajHgju2n/cUVdMvh4jHONQYQw85nc+DlL8/iPoJysdGwydQ91HP
zBdR82hbXut3V6h8EGuqID1dfhK+zU6LC5z3oeb7Xb4bOQo8qLRxn1N/dljw
WxrG28g4Y31MAsVPtOcy87GYrzPMM+NmjK2l/fQ4N2STv/bA12iFtt7k/l3g
rjNA6GD1SPVaNt2R+Z1TnVIvGdThp08q+LiqtYl6yDbq+tPgZ8vp2xUqX2SM
L50KMYl1VlSs6Ikf7T5xFuaf70plXKvIXJtTnWBjwXi8LrNeerxAI1sfB7ki
k1ZaY9rOTvPzB2jFfV5tFYu1ovrvnM+VgzHUVqjnMnz746JTB7cnG6MuQ3fk
9vXQyeeu48+qroA9zqLou9Cn7V7PQ2kd95S0ELO4kh5X7tk6WI1pdOxuM/X1
AtT8SJutJmQ1tVYffoRi+7R4XsNr7hO8C1M1f4XZ9vlzki96bTIRE3DGe654
z6uPLc8n1azJDfbs8u7j7I5DFoZ2dqeOGmeRdnAej1i3QVK3Z7GZ6TEz31aB
GO94TVcce01Sd5W4pOecbIuzqGfHPPh3hw4ZffKem2QfQ6gUAeU1w1/uzBkC
gUAgEH5YWwed4hUfcjizOfmy52auoV3ga9/lPZ+t3PPR/nY051Y8xvY4Znkk
8/cv+ybcr7KdFe6YryT8EBE/iW05CG0p1urjtB+1ndGhw76WUH1azv8Ajpaa
cDxvYTfltPBnYzAoG07MN5vvZdr8MDdtItdnm3nfMcXet9VA6SpljfbIOIux
rrPCJn/Ch4+Plud5PtDWcq5CocOytmN+uPD//WRwHaY+aRhqNtYHTQjYemx7
WVfr/GzYPqAei+Mo6b7jtlD2eVf1xJN233wWJV4pfsstNLD8KCZPKzLrq8cL
NNriCC5aY2fBWk5nmJu6Mi7dea3L/xX9sdJpo6xx1Tvq2DjKteR1/FnXFYq1
OAvPAbHYOmdfcsXu6HSu1a0YxFpvsqEWW+14k8e/rqxjZsx9Dt6Nuh4zvkQW
HVyus3LrexxmH9fml+nra/Zs1saj7I7M01quIS3iLLQ9Mn/SsQ6zy56Gtw1y
xUrHZuXckKeuXBFn8Z2Trfks85iTF/9MeOuQruvec9OCP/GitX0QCAQCgfDD
Wj5LruSz8N+a4+yMt/gLPeIsQ9ew2gLB0zxmspZbG8Dh3LG7hppDouQvS8i8
7IieAY5nf+wM+UaJs9jm4nHusyzWcuS5BPIb54O8lylgZ1H09Z5/nMXBf7YH
eaGFr4vsz5Zb1d870TNDu4Ptq1baaM0Xmce8jXOo2+VFmrPm3qjuLb2VOMtS
zcPDbiGWuCAPbG9NjIefDNrpXdYnHTwutFOSI0Y2/sp4avxcqpHI1nyTXHnq
iSftfnEWjT9sjUL96wiSWOUnz/ES66klmb1Cj6+OIyi0rtW7lOcVQ6MvEdVZ
Vz6f/t0r+uNbj9Y9NiKPMa0Xn/Piz/SsmpexFme5tk4up9Ees7J+a+zgWGRT
TY3p/IzCQ3ucpWuOl1pa8m8lzrI69znX05Z4qfUutWUbd+17a310x1mWbUJb
5RAR2U+ShOvDrO7No+yOX51XUQ/mVIvzv1qMzssG8W9Y7yde00FfXbk2zuIx
J/vFWTzq5N6qQ1foujo3uf2Jl62hjEAgEAiEH5bnVO6/X/b6W57D+yTO/55b
ts9A93eU3AhLnKWtRExiw8+es/xTtjd/zZ4P8f/1HHmQa9wtFGUB+73828O+
IP8tKrFPcmWcxZqbzu8pVL4xtHDIk8l/nufMe8dZXGstjT/LNYuzmd/O1+LJ
wsWJLn+lPuSixi7xJaPC6Wt9SHEWVX71/lwTZ1mTQR0++uRol/qzxwa6roUq
42fb940mV3qcxZFjxupvXB1n8aP9tjgL15Mw3UNRzPlZQEF4elBqFztk9go9
dungVXEW5wEdmXeTQlmoslEU5O9g1nq0tnWNXXqOOMut/JmevSHO4pETOVFc
u+2o0VZbzWp8HOHM4nOa3FvXiCNUCY+n8honZ+DTWLoo415zn2ecxc2XFRvn
/Z5fH+1xlnWbQGvoJmnK6nanaQJZUTvouOBau7M4p876vd/Iejghtx/hXpPl
NRu0wPP3HmdZ49/NOmT2yX9uwjgLAoFAIN4XltZB/Uk9p39mdfRCOGnLdzUv
27LOHfn56VCfS31za+f/Ls/ylupZ/6XcDUmXay7uWA53otRdKax3EPHzOfZc
8gGqNFR8H8MnGCxxFhYf2YHt1Ar3bf3iLFOuPz2AdM7Zmn/pFoy1/eK24nVn
F/122/ssB+dyDortoxrndUat7s/LxFnsZ4P4GtV5zm3BH2b53aJvfjKowk+f
XO/N9xA3kB+X75Rg9M3yr+dgefATX/30xJf2m+IsQk9sZ0CWoMjsFXrMaUxA
j0qeRT2gxTjCUjv8AcbP3bWdcZwb8rJLd8dZeHw9Fkp8F38E5rpC4RNnoefg
fMHtqO1cjC6TI6vf9BTmWn+08zMWW83vuKO/aW8uybjv3HdFnMVuZ5bP//i+
59tH2zr/VnsmvvgwuyPn1OWb3sSeDfkWE/Oen62Zzv952SCh26WlpVt8GwFF
V0ROr36ueDxfEWfR5uTVOMsq/27XIVvf/ecmjLMgEAgE4n3B5WvTuzxZLUXt
bOxTpK+ZB1Yj77JOHcX/n50TttaMBVHT/npfpE43Ss51f+Lrq+Ls3FQGua9s
zsWi5tu0BhD3CFnm/ToLefyCF82HwWiO5xrvz65cDu5zZ/M7IXpe986MAYiz
3zM61tasbN0TZlDQunfWWiTzvmjrYbMzvK6E424PGj8JLHnovCbo5aw1kxm9
BkR/Yny4ug4uqx25VgfXIn9Az1EFMK91M7Vb87Poe5fsCD/XEBtx5l3Wy/CT
QRV++qTDvBvC+pTGTyd9oq7jRf5cufCqnvjSflOchXjvTAfX6rguyqyvHksZ
0HNFRH3ZzVocgd/JtkTridkreyzVCaMt//7cG2fpRG3Py5LzGv6s6wqneTnO
ImvxeuuTiL+bd3vpMinrJ+uTkV4P1rTVnA+xEW9q9gv13H3nPs84C6/rYqnn
tVIH1/c93z6Osuapdq/w9fbs8tzD7I6YU213mevtxTOGyBqrnAQ/G8RrU5u1
RW71bQxdkbEKrU5MnW1BP3PtOyevxVnW+Xe7Dtn67j83YZwFgUAgEO8L0q+q
2xZa8tfQexzl3bj0bov5flXB72Yp6haGcYCuqab7Hef7dbKGYUPWQT35Zjfw
+Zbm9LfDQNZHHVS5bGOtPovFFxkb/r0pliD3pjaCNmD3Eh1JG2Eye0bkCedV
Az2lo2sg2/L35v6nrHO/iUtBbw+nfQTzu374HT8BO7vBlntjL/JZttN9II3h
E8i6eSX0hH/tuRVnTnh+QlzWnK7+DPuInz2f71+vrllFPT+lFp0Dc9rkHuYu
P5KxYp2Bs8gNcMUf5NmVKK8uYyrOr8zXOjKOkR4a8tUR2rqcaFyPs5B1wcyB
lTWDy6Yn7Cby2tn7aMofI4TXVN4krI7HQGg+n/b8vNeSLy3vbgkiqJqWvUfl
nn0rSNX7PVdlUIWvPqkQ7WxTODVnOJ/P0DQN+W8rxm7Oq8RNH+lH3x75XVfK
/eHyOS7bLj3xpd2kw+SvbW0u7xXdxMRm9PQfR+jOFUSbLZMJH5n10WPxoDgj
cOBnJNoaEnmmwCOOIGWc0UovPCL8qEseJyjn9zEHMZyI7LF7twlP810IqevO
78G0fd79ccU79Cbk3ay7HBqhE03F+xLMZfYK/vjpilgvz2PBBs38Dq1JXmHW
rjXPZeQ1M8k39icp3xc6Q20fgN3L0g2iz/l07vOyRjRtdX8uQJ4NHYRe5PJO
dWd9Fs+5zylb+pmks9CziMkSpaOti8mmuuv2+r03+vZRnAmJSmLXydx3brsb
7dnU04faHXn/L73PZxjJzDO0UCabWZ6GbW0uYzoVf2LFBjE2iBrUwW7PnqE6
WRexOb46xFkeSs/avML0IEyh6ef9ML/vPSdb5gZ9D2qZf7fr0DDJzlzWfecm
m09lGUvCWyYTO3uODAKBQCAQLwXpV6n17raQFkdjT4vuqU4+l/iLixNU6QZ2
xSXLdJzO7vI/Ov91p1ytAUjXHPWB+Br2XG/+Ife+LN9zVfd7i1ir20f+PavU
fXrat43yzFa7I1B8jazBNxpfknJ+BqiFItHPbxAfv57v2YawLdTeTWf1xfOc
/hFqsV6a10gstdxttp7bLu+vVXEArvz5OVTayLqwSLQajcRf27t944a8v4lS
2AVq/9NKb3mAw+QXiu8SPp7I+/N8a6NvIpam1rZsId1cvuPKRbfJH0N3Ij6y
2scw0e/51j9G145kPTzFHsXfNoOzITZrMmg+76NPOo6xpq+zv50Ys1GsEdTa
lx3sI3UsnsJEuweU6EkYQJTq8qDriactsNKh89ee69HN1oHybxPlgu9+Mruq
xwLtIVGeCcjaoDllZP00O2uxQGtL7JveTrw/XWS3qyHWZI/W66hMIRKg63Nz
nebVnwU655Bxlu1OlYltWhkxA3/++OlKI86+TfkLNprHlsiYJq8bGqty8cyU
7zApiE5q+kTswE7hIV3f1cS2BEpc22arT7nat4CswWvyXLBgl73mPteY0bwR
PVemryHSao8mRQlxECycX/N/z6+Plzou/I/SeJs943is3aH0nXJzTqUxONle
tjH5JWOZMpdr2QbJZ3SdDKE40N8WdFDEqYKd5kNYdIXe46N8n8hPfT4S+6DO
875zsmmTbbxY4d8dOmSXdZ+5ye5TGXEiGe+98g4wBAKBQCDeAtg+F/1b3CwY
+J6U8tAwvfuMxLF2+15vQ9wbeeZ7333XQWc8o2OEoRc0Ox/hbQ1977934uLf
KHl2O38W785Zxcj6QffklsdWxSQPS8+Q7/b0u1d0bXTwQo7JClUW+dPovZbN
03srzHHKoOtxH33ikHkcpbE+H6BmeVGXc/WuPo6Drx6Oq8/50H4Tr+fvC/2y
f8NHZj30mDfEdfka4be1Q+lxNSHyUPq7bKBnf1bAa8fyc3gjoakjNnGx69fw
Z1VXRm/6R6lPnjzjtmadTtY+6c/yNGaRb187oH7o4XPfLbba+z3PPrLvDCoP
r7FndjzG7vBPyfl5ZZxXsGyD2BPsTkTvdlicJYRG0Eh1r18ekOn7XvSuzMne
NnmFfzfrkLO5x+jJeJf8IRAIBAKBuA4fwRlecba7XNrTRLxrzNfG5r+lsF7/
EYHg8L6/FYFAPBaeNZQQCAQCgUAg3j5cdXDfP1gNkvbEzzOvnCtCvG/Isx75
STuPVhcs3z5w1IJBIHRgnAWBeCVgnAWBQCAQCMQHA35/b+6sh/BecRZ1TJ5Y
rTxMZfnQMcIx0+sCyboaB1wzI7zB8p+CPcZlEYiXxlBDQM8NofIhEAgEAoH4
ADB+oAd2R3ofwPhh9g3hwNBBU9fQnBuomzN4HttHIGYYMcaCQLwScMpGIBAI
BAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKB
QCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQ
CAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC
gUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAg
EAjES+P/A6jEBWQ=
    "], {{0, 500}, {1114, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rvi8hKSEh8RuiVaJj5JcktaSKZJnJF9KEaUMpWKkqqWeSGOltaTDpCul+2Vg
GXWZEJkKmUeysKyGLFW2UvaxHEZOWy5SrlrumTyDvLF8gvwZ+bcKHAp2CtkK
rQrfFMUUvRUPKd5VXFFSVwpXqlF6oUxStlHOVm5XnlGRUQlQqVB5okpUtVDN
UL2iOq0mq0ZRq1IbVmdVt1ffrd6lvqyhqUHTOKfxSVNM00/zqOYzLTYtR619
Wj3aGG0T7QztDu0FHQ2dOJ2LOn/pyuuG6TboftST1KPo1eiN6Yvok/VP6I8a
CBn4GRw3GDUUNiQbVhu+MxI1CjSqNZowljYONW40/maiZEIzaTaZN9UxTTO9
aYYyszTba9ZnTjJ3My83f20hYhFsccZiylLdMtXyphXGytbqkNUza37rAOt6
6ykbTZs0m25bBlsX23Lbd3YydjS7dnvY3sa+yP6lg7hDpEPrFrDFekvRlleO
ko4xjledsE6OThVOH5yVnXc433VhdfF1aXCZczVxPeD6wk3KLd6ty53JfZt7
vfu8h5lHoceop6JnmucDLx4vqtcVb5y3u3et9+xW861Hto5vU9+Wu23IR9In
yefedp7t4duv+TL5kn0v+WH8PPwa/JbIW8jV5Fl/a/+j/lMBpgElAV8CjQIP
B36i6FMKKRNB+kGFQR+D9YOLgj+FGIYUh0xSTanl1OlQq9BjofNhW8JOh62G
e4Q3ReAj/CLaIkmRYZHdUQJRSVGPo2Wjc6NHY3RijsRM0WxptbFQrE/slTg2
5JjTGy8Vvyv+bYJBQkXCz0T3xEtJLEmRSb3JMsl5yRMpFimnUtGpAaldO4R3
ZO14m2acdiIdSvdP78oQzcjJGM+0zKzLos8Ky3qYrZRdmP1jp8fO9hz+nMyc
sV2Wu87kMubScp/t1t19bA96D3VPX55qXlneyt7AvffzlfKL85f2Bey7v195
f+n+1YKggr4DGgeqDmIPRh4cOmR4qK6QpTClcKzIvqjlsNDhvYd/HPE9cq9Y
rfhYCX1JfMloqV3plTKxsoNlS+Uh5U8rTCqajvIdzTs6XxlYOVBlVHXuGP+x
/GO/jlOPD5+wPNFSLVFdfBJ7MuHkhxr3mruntE7V1/LU5tcun448PVrnXNdd
r1lf38DXcOAMfCb+zKfGbY39Z83OXjknf+5EE0dT/nlwPv785wt+F4Yu2l7s
uqR16dxl8ctHm1mb97ZALcktU60hraNXvK48brNp62rXbW++qnD1dIdwR8U1
9msHrtNfz7m+eiPlxuzN6JuTncGdY12+XS9ued560u3U3Xfb9nbPHYs7t+4a
373Ro9/TcU/nXtt9rfutDzQetPSq9zY/VH/Y3KfR1/JI89GVfu3+9sd6j68P
GA50DpoN3nli/eTBU4enj4fchoafbXs2Ohw4/HEkfGT6ecLzxReZLzEv975i
flX8mu919RvpN02jGqPX3pq97X3n8u7FWMDYl/ex75fGcz4QPxRPCE7Uf1T5
2PHJ4lP/562fx79Ef1mczP3K8vXoN6lvl/8y+qt3ynNqfJo2vTqz7zv399M/
1H50zTrOvp6LmFuc3/uT+2fdgtbC3V8evyYWE5dwS6XL0svtK7YrL1cjVlej
yTTy+lEAhVxwUBAAM6cBIHoBwNoPAD3jRu61WVDQWsqxpktEzjB6yEmrCPRB
JMgTqoNhOAIeQ1FQM+h8jBJmFFuJC8Wb0UnQMxJgBhSRhVGWyZqZxnKC9IpN
gN2f4yIXmtuP5yafIH+ewLSQj/ADUR2xUxJskplSEzIOsk3yjAoBipeUFlV0
VWPVjql3a7zVXNBm0OHRldHT0jczcDD0NgoxTjDJNS02qzNvt7hv+dzqo/W8
LdqO2Z7PQXKLsqOOk4mztYuDq7Obm7uHh6enl5e3t/dW723ePt7bPX3d/ZzJ
9v4WAQaB6hSZIMFg1hBcyCL1W+jbsCfhd5FVeSaqMnp/TDKNHGscxx33Lb4z
oSQxKskmWTR5OeVZatOOPWl+6ZoZjMjauppVmB2yUz+HNefjruu5RbtD9ujl
ceQt56P3Gew/e0Dr4MVDy0WCh2WPKBQrlSiXqpaplatXqB/VqNSpsjhGOV56
Yvgke43xKZ/ayNMpdbn1hxoqzpxqbDrbdu5W08D5rxeFL0Vf7m+Rbg2/UtrW
0v7o6kTHynWOG8o33TsLuz52W92uuPPw7tueqfvYB+K9lg8D+2Ifhfe7PdYc
EBikH1x4Mvb04dCNZ+3DHSM3nne+uP6y6dWh1+FvTEa5R2fe9r9rG6t7XzF+
8MOuieSPEZ/8Ptt/UZ0kTX75eudbzV+5U6HTDjNq30V+SM/6zF3/qbRw+Neb
Je5lz5Wa1dW1eQIIgBc5JTojeU4j+ABJQlHQTZgXzoZnUNGon+g9GGHMbWwc
TgH3Hd9FV0mfRghk8CS6MHoy+TPHs+ST6lj72X5ySHL6cBVxP+Il8tnx7xPo
EyIKO4kcEu0XJ0iYSyZI1Uo/lvkhxywvpaCmqK2krayqIq0qoMasDqn/0BhH
dqse7Tadet1yvXz9VINQw61GDsYmJpqmCmZi5jwWzJZYy0WrKetxm2HbXrvr
9ucdqrcUOeY4xTqTXRxdDdxk3bk8MB7Tni+9erwvbT22Lc8ndruPr7mfHJmV
/NP/VUBnYA1lT1BYsH2IIpWF+j30aVhLeGlEcqRnlEY0KfpTzA1aUWxgnHo8
Jn4o4VRifJJ5MlvyWMrF1MwdDml8aZ/T2zP2Z4ZmOWebITNDZ5dGrtJu2T3i
eYJ7ufNJ+wj70fuXC+YOTB+cObRQhDvMdUSqWLPErNSxbGt5cAXtaFrl7qrC
Y0ePnz5xpXrg5MIp6dptp/PrmuufN6w0Cp81PxfStP9864Vvl9Qv72p+3Eq8
ot9GbS+7+qBj9br6jfCbNZ0vb7F0G92m3sm/29DTc+/TA2Kv6kPvvuxHjf3P
BrCDak98n+YM1TzrHv7wnP6F4kvXV8mvq97cHZ1/pzxGe39pfGZC7mPwp5Of
30zyfvX8dvSvqemE7/KzpHn6BfjXl6WrK9RN/9MDTiAHrJBspwTch7CQJXQI
GoP14RMoImoXGocuxEhgbmIDcSTcPfweOgd6QfoFwhOGK8RTjGVMhcwHWApJ
5ayn2FrYezhecy5wk3jkeS34yPw7BEoEzwl1CT8RGRf9KjYjPoWcmoaluqRP
yeyU9ZZTlIfkBxRqFBOVbJSFlOdV+lRr1dLV3TTkNGHNYa2z2tk67royust6
/fonDRINbYwEjWaNe01OmaabuZsrWGAsXlpettpr7WejYUuwHbVrts9z8EEi
BcZxxKnROdPFxVXcdc6tx73cI8xT14vg9cL7zNaUbVY+HD7vt1/wzfCzJXOS
x/zPBaQEWlBYKC+CaoNjQnSpaGpfaEmYX7h0+HTElcjMKItouujemH00m1h8
7O247HiD+MWE1sTYJIWkT8k1Kb6pPKlPdhSkWaXD6dcz0jOtsvizFrNHd/bk
XNhVkZuzO2KPe57BXol8Yv7svpf7bxU0HDh8MOtQYiGtKPowciwojimJKY0u
iyynVvgddam0qbI75nM8+URl9e2T306x12qetqtzrndq2HomtfHy2cUmy/NF
F95ckr2c0NzZSrji0lba/qJD+Fr49Ws3WTtDu251896Ou9PXI3Ev7f6TXpmH
2X1j/e6PhwYDnswO7RnmGTn7wujl0OvMUft3Lu8Pfpj/dHjy9rTr/Mia/zf+
g1srWA0ATlkA4H4YABdtBBcAIF6H7B96ADgSAXDVBjB3GYCuRQNom9Sf/UMA
GCN7x05QA24j0QOLxA9rKAzaDzUhud4PmBPWhX3hnXAd3Ad/R/GgjFEhqINI
9v0OTUBroMno/eg29ASGHWOOiUeyrmEsA9YYm4g9h/2IE8H54qpwr/Ei+BD8
efwynR3dcbo5ekf6swQiIZIwwKDFcIJIICYQxxidGDuZVJhqmLmZD7LQsewi
waRsVgxrHhszWxm7OPslDjOOYc4oLjxXDbcp93ue3bzyvE/5Mvjl+F8KFAia
CS4LtQuniBiIYkQfiR0VD5PQlyRJfpbqlq6WyZalyNnJaysoKCoqGSi7qYSr
7kRCfrPGoOacNr+OpW6CXr3+G0NuIw/jMpM3ZlLm8RZ3rHisg22O2JbYJdgb
2a86dG7Z5xjqRHXOcTnv+t6dx8PFs8Crdytxm5NP8fZhPyayqr9lgFtgICUj
6EzwR6pyaFbYYIQUMvOex2jSimN/xnskNCZ+TeZMUUo12eGVlpHelkmXFZL9
MEdjV/Vupj3peRP5xvty9jcXjB5kPORQeP6w2pHbJQ6lD8utKu5UOlX9PN5T
fb3mYm1JXUoDtXHrOePz7BfeXjrbnNG6vc376o5rrTcWurS7I+7s7Sm7X9Pb
1He9//HAxFP8M/2R/S9+vPYebR4jjJMn2j/jJyW/gb8qpwVmSn/wzbbMRyyo
/1paalnxXY8fYsAWxIBi0AHeQXhIAXKFUqBqJNOfhrlhEzgMPgLfhL8gObsp
sptUonpRi2hZ9DZ0AboTPYuRwZAxpZjHWALWErsL243D4mxwB3DDeDF8LP42
HR9dIt0QvTb9cQI9IZEwweDJ8JBoSuxg1GJsYdJgamM2ZL6D5KgjJApphjWb
jY2tjt2QfYQjnpONs4XLmxvmbuTx4qXj7eCLRXz9UeC0IFVIQWhOuFPkgKiv
mKo4vfh7iS7JGqk86VgZP1knOXN5PQVNRXUlDWUdFRNVe7Wt6pEauZq1Wo+0
V3TV9KL0zxnMGGkb55gMmkmaZ1i8sNK1rrRZtnO0L3K4v2XJScE50KXK9Tni
422eJ7w+b1XfttNn0FfcL5bc4b8SqE9JC+oMoaO6h54Km4+wizwZtRTjRbsS
xx2/I+F5klJyasq11F9pOulZGX1ZItnJOwd3KeUW7P6W57C3IX9xv1HBjgPN
B2cLzYqqj9AV00qGywzKTx7FV0ZVDR3XP1F7kq0mrxZ7uqBeoOFyo/3Zsaak
C4SLxy6rNd9v9bsy276ng+9a8w2PTriruZt6h+9u373MB2q9n/tO9m8dYBm8
8TTgGRiueK794tWr3W9URt+82/ded3xyouqTw+fZyT1fF/6ynto1fWGm7/vH
H6tzXPOqP10XdvxqWPy8rLVyZN3/0sAVZIB6MAhWIGnE+5lQIzQMY2E12B8+
BHcipwhRlDsqD3UN9R0tjfZDl6EHMUwYO0w+5gGWiHXGlmHf4eRxabhHeAl8
Fv4tnSXdRXox+goCB+EIAwdDOVGQWMuoxNjBZMf0BjlvMLE0kuxJ06xlbGZs
M+wnOdw5CZydXCncGtxzPG28GXzW/JyIr68JHhGiIScQNVEeMTSy94xJjEgO
SD1CMvOnsq/lvsgvKZKU5JRtkBVdpHZd/aumkJaHdqHOgB67vo9Bg+GisaNJ
gxmdeYTFMysb6zu2dnbDDlRH4FThouf6zr3A09BrdusFH5qvht+Mf0WgLOVs
sExIbahEWH2EYmRbtGXMcGxEPDahOsk4+U1qUho2vSCTLatsp0jO2Vzd3Q/z
AvKhfWcKth3EHqooEjh8pBhXklg6Ue5dMVjpWfXjeH01pQZ3am/tXJ1nffMZ
tsa4s0NN2uerLmIuRV4eabFsbWtTam/oELtWcYPxZlrn51se3d13VO6euEe6
n/Ng/mF43/t+n8cjgx5Png25Prs3ovK88MWXVwavC968eiv/Ln2sf1z0Q9LE
w0+inxO+3Jxc+ab8l82U17TXjMN3vR+is7jZd3Pt85k/9X9OLWT9Iv06vki3
GLM4smSyVLb0cVlzedfykxXRFerK2ZWpVbXVpNWra/6PDVJVWd8+IAYTADCv
V1e/SwCAKwRg+dDq6mL16urySSTJeAnAzfCN7zrrew0zAEdvraE7KWOZ//6+
8l8EM9HV
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1114, 500},
  PlotRange->{{0, 1114}, {0, 500}}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.7257312968622007`*^9},ExpressionUUID->"c2a6e38a-7758-49c3-b3bd-\
b63643021e72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting the Data", "Subsection",
 CellChangeTimes->{{3.726102114176458*^9, 
  3.726102117799192*^9}},ExpressionUUID->"f11a4a86-588e-4ace-930c-\
895945ecd969"],

Cell[CellGroupData[{

Cell[TextData[{
 "To import the data on ",
 ButtonBox["Meteorite Landings",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://datarepository.wolframcloud.com/resources/Meteorite-\
Landings"], None},
  ButtonNote->
   "https://datarepository.wolframcloud.com/resources/Meteorite-Landings"],
 " (a collection of known meteorite landings) from the Data Repository:"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.713182125665742*^9, 3.713182144554206*^9}, 
   3.7131821932538357`*^9, {3.714763856308475*^9, 3.7147638728639708`*^9}, {
   3.7165084107875834`*^9, 3.7165084614560747`*^9}, 3.7165086487298403`*^9, 
   3.748191354854478*^9, {3.748191385005809*^9, 
   3.7481913876754093`*^9}},ExpressionUUID->"7a01b81a-a514-439f-afdd-\
66a760defd15"],

Cell[BoxData[
 RowBox[{"meteoriteData", " ", "=", " ", 
  RowBox[{"ResourceData", "[", "\"\<Meteorite Landings\>\"", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.713182147229536*^9, 3.71318215537001*^9}, {
   3.714763592422427*^9, 3.714763596141621*^9}, {3.7147636400084553`*^9, 
   3.714763644936178*^9}, 3.7165086487303*^9},
 CellLabel->
  "In[395]:=",ExpressionUUID->"05cfb9ab-49ce-44cb-8807-4b2aa9295a5b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 20, "Length" -> 45716, 
        "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name", "ID", "NameType", "Classification", "Mass", "Fall", "Year",
             "Coordinates"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Quantity[1, "Grams"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[GeoPosition]}], 45716], "DisplayedColumnCount" -> 
        20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Name"} -> 1, {All, "ID"} -> 1, {All, "NameType"} -> 
           1, {All, "Classification"} -> 1, {All, "Mass"} -> 1, {All, "Fall"} -> 
           1, {All, "Year"} -> 1, {All, "Coordinates"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Name" -> TypeSystem`PackageScope`AtomShape[211.20000000000005`],
               "ID" -> TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              "NameType" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001], 
              "Classification" -> 
              TypeSystem`PackageScope`AtomShape[76.80000000000001], "Mass" -> 
              TypeSystem`PackageScope`AtomShape[75], "Fall" -> 
              TypeSystem`PackageScope`AtomShape[48.00000000000001], "Year" -> 
              TypeSystem`PackageScope`AtomShape[75], "Coordinates" -> 
              TypeSystem`PackageScope`AtomShape[106]]]], 20, {}]], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1930298877], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name", "ID", "NameType", "Classification", "Mass", "Fall", "Year",
             "Coordinates"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Quantity[1, "Grams"]], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[GeoPosition]}], 45716], "HandleQ" -> True, 
        "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1930298877]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Name\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Name\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Name"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Name"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"ID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"ID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "ID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "ID"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"NameType\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"NameType\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "NameType"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "NameType"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Classification\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Classification\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Classification"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Classification"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Mass"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Fall\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fall\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Fall"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Fall"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Year\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Year\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Year"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Year"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Coordinates\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Coordinates\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1312817143][{All, "Coordinates"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[All, "Coordinates"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aachen", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L5", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"21", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1880\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"50.78\[Degree]N 6.083\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[1, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aarhus", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"720", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1951\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"56.18\[Degree]N 10.23\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[2, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Abee", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EH4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"107000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1952\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"54.22\[Degree]N 113.\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[3, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Acapulco", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["10", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Acapulcoite", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1914", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1976\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"16.88\[Degree]N 99.9\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[4, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Achiras", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["370", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"780", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1902\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"33.17\[Degree]S 64.95\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[5, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Adhi Kot", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["379", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["EH4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"4239", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1919\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"32.1\[Degree]N 71.8\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[6, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Adzhi-Bogdo (stone)", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["390", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["LL3-6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"910", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1949\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"44.83\[Degree]N 95.17\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[7, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Agen", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["392", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H5", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"30000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1814\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"44.22\[Degree]N 0.6167\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[8, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aguada", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["398", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1620", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1930\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"31.6\[Degree]S 65.23\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[9, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aguila Blanca", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["417", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1440", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1920\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"30.87\[Degree]S 64.55\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[10, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aioun el Atrouss", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["423", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Diogenite-pm", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1974\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"16.4\[Degree]N 9.57\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[11, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["A\[IDoubleDot]r", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["424", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"24000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1925\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"19.08\[Degree]N 8.383\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[12, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Aire-sur-la-Lys", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["425", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Unknown", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 Item[
                 "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                  GrayLevel[0.85]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1769\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"50.67\[Degree]N 2.333\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[13, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Akaba", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["426", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["L6", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"779", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1949\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"29.52\[Degree]N 35.05\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[14, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Akbarpur", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["427", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H4", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1800", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1838\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"29.72\[Degree]N 77.95\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[15, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Akwanga", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["432", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1959\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"8.917\[Degree]N 8.433\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[16, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Akyumak", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["433", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iron, IVA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"50000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1981\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"39.92\[Degree]N 42.82\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[17, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Al Rais", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["446", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["CR2-an", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"160", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1957\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"24.42\[Degree]N 39.52\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[18, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Al Zarnkh", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["447", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["LL5", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"700", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"2001\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"13.66\[Degree]N 28.96\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[19, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Alais", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Name"]]], "Mouse"], 
                ImageSize -> {{211.20000000000005`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["448", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["ID"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Valid", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["NameType"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["CI1", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Classification"]]], "Mouse"], 
                ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"6000", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fell", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Fall"]]], "Mouse"], 
                ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"1806\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Year"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"44.12\[Degree]N 4.083\[Degree]E\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
                  GeneralUtilities`Slice[20, 
                   Key["Coordinates"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    45716 (-20), {1, 45716 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 45716 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    45716, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 45716 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    45716 20, {1, 45716 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    45716 (-20), {1, 45716 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 45716 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    45716, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 45716 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    45716 20, {1, 45716 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1312817143]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1312817143][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {789., {279.634033203125, 285.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.74854245732553*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"b5de15f9-b379-46e1-833b-ebedac764d45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with the Data", "Subsection",
 CellChangeTimes->{{3.726102123574079*^9, 
  3.726102129165387*^9}},ExpressionUUID->"406df91d-c888-4723-a296-\
33f52d13596a"],

Cell["Find the most common classes of meteorites:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716508538230503*^9, 3.7165085815880404`*^9}, {
   3.716508633575732*^9, 3.716508655474105*^9}, {3.725731596998715*^9, 
   3.725731598158927*^9}, 
   3.748002642480739*^9},ExpressionUUID->"0542868e-53a3-40f4-9a61-\
061d1948ed5a"],

Cell[BoxData[
 RowBox[{"meteoriteData", "[", 
  RowBox[{
   RowBox[{"Counts", " ", "/*", " ", "ReverseSort"}], ",", 
   "\"\<Classification\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7475038856959257`*^9, 3.747503903020381*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"0b602458-80ff-42fe-aaea-5b85ec1b3b55"],

Cell[CellGroupData[{

Cell["A visual representation of the same information:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7257317181791687`*^9, 
  3.725731755851717*^9}},ExpressionUUID->"fb7742c1-7d79-4215-8172-\
9026097f9b2a"],

Cell[BoxData[
 RowBox[{"meteoriteData", "[", 
  RowBox[{"WordCloud", ",", "\"\<Classification\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714763530193321*^9, 3.7147635445112*^9}, {
   3.714763673311851*^9, 3.714763750400311*^9}, 3.71650865547439*^9, {
   3.725731707674737*^9, 3.725731708202344*^9}, {3.7475039253096*^9, 
   3.7475039346966763`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"729e5b10-b7bc-4c7f-9d39-d6de918ee525"]
}, Open  ]],

Cell["\<\
A geographic visualisation of the landing sites of 500 random samples \
indicating the size of the sample:\
\>", "Text",
 CellChangeTimes->{{3.7485423740120792`*^9, 3.748542397566689*^9}, {
  3.748542543727518*^9, 3.748542594769725*^9}, {3.832938778703373*^9, 
  3.832938778824335*^9}},ExpressionUUID->"c33ade7f-8cb5-47b4-8df7-\
279ec9b06f82"],

Cell[BoxData[
 RowBox[{"GeoBubbleChart", "[", 
  RowBox[{
   RowBox[{"RandomSample", "[", 
    RowBox[{"meteoriteData", ",", "500"}], "]"}], "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"#Coordinates", "\[Rule]", "#Mass"}], "&"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.737136069850356*^9, 3.7371360842936153`*^9}, {
   3.737136116764567*^9, 3.7371361377967157`*^9}, {3.737136177385209*^9, 
   3.7371361942435303`*^9}, 
   3.7485424056688128`*^9},ExpressionUUID->"2fe8bf3c-0c83-4221-89f2-\
7757ca677365"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"dfa986de-5d45-4cf6-acc1-5d125e1e5035"],

Cell[CellGroupData[{

Cell["Getting Data from Web APIs", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.716335412979294*^9, 3.7163354220965033`*^9}, {
   3.716494915303396*^9, 3.716494916973146*^9}, {3.716509082357149*^9, 
   3.716509082997508*^9}},ExpressionUUID->"9676990d-09f0-407b-8164-\
2b360fbf143e"],

Cell["\<\
Sometimes you want to import data offered through the API of an online \
service like Twitter, LinkedIn, Facebook, etc. \
\>", "Text",
 CellChangeTimes->{{3.71650868590786*^9, 3.7165087042162743`*^9}, {
   3.716508814713011*^9, 3.716508819407555*^9}, 3.716508874342247*^9, {
   3.716509049249578*^9, 3.716509173971126*^9}, {3.7165495675799313`*^9, 
   3.7165495758226957`*^9}, {3.725371354597344*^9, 3.7253713822313232`*^9}, 
   3.748190685499539*^9},ExpressionUUID->"9c823b49-caf0-43e2-9034-\
af7ef8bc8e12"],

Cell["Connect to Twitter", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716509996608601*^9, 3.716510006289319*^9}, 
   3.716511789986062*^9},ExpressionUUID->"a95c452c-89ef-4cf4-9420-\
04fdb8fee5a2"],

Cell[CellGroupData[{

Cell[BoxData["$Services"], "Input",
 CellChangeTimes->{{3.829198768402095*^9, 3.8291987705326138`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"518fa4d1-82ba-4f00-8164-578c47534c52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ArXiv\"\>", ",", "\<\"AWS\"\>", ",", "\<\"BingSearch\"\>", 
   ",", "\<\"CharityEngine\"\>", ",", "\<\"ChemSpider\"\>", 
   ",", "\<\"CrossRef\"\>", ",", "\<\"Dropbox\"\>", ",", "\<\"Facebook\"\>", 
   ",", "\<\"Factual\"\>", ",", "\<\"FederalReserveEconomicData\"\>", 
   ",", "\<\"Fitbit\"\>", ",", "\<\"Flickr\"\>", 
   ",", "\<\"GoogleAnalytics\"\>", ",", "\<\"GoogleCalendar\"\>", 
   ",", "\<\"GoogleContacts\"\>", ",", "\<\"GoogleCustomSearch\"\>", 
   ",", "\<\"GooglePlus\"\>", ",", "\<\"GoogleTranslate\"\>", 
   ",", "\<\"Instagram\"\>", ",", "\<\"IPFS\"\>", ",", "\<\"LinkedIn\"\>", 
   ",", "\<\"MailChimp\"\>", ",", "\<\"MicrosoftTranslator\"\>", 
   ",", "\<\"Mixpanel\"\>", ",", "\<\"MusicBrainz\"\>", 
   ",", "\<\"OpenLibrary\"\>", ",", "\<\"OpenPHACTS\"\>", 
   ",", "\<\"PubChem\"\>", ",", "\<\"PubMed\"\>", ",", "\<\"Pushbullet\"\>", 
   ",", "\<\"Reddit\"\>", ",", "\<\"RunKeeper\"\>", ",", "\<\"SeatGeek\"\>", 
   ",", "\<\"SurveyMonkey\"\>", ",", "\<\"Twilio\"\>", ",", "\<\"Twitter\"\>",
    ",", "\<\"Wikipedia\"\>", ",", "\<\"Yelp\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8291987712037325`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"5a2d3d03-6360-4e7e-b584-f0785bbea6fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tw", "=", 
  RowBox[{"ServiceConnect", "[", 
   RowBox[{"\"\<Twitter\>\"", ",", "\"\<New\>\""}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.714750648153234*^9, 3.716511789986494*^9, {3.8291986838376102`*^9, 
   3.829198686325759*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ad0788af-c2dc-4ef2-b1e9-c1e5769fbe87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJy11kEoQ3EAx/Fnox5WXgkl0m7/o6MySk44mSg5aMvbuGzZMMqJGw7KaZKb
1FJaDpScRLlQTDgoJJSDmwjN79//v3o973n7v72tPqtt77/v+7/9997zBqP+
kEuSpLiMJ38g0RGLBWb6FLzoj8THwhF1pCsyoYbVWEvQjTfroBFKpcIfJHVf
DuNwBp/wDTcwD4pmuxLohmr+uh1mbfQa4ByyJp5gAOYgA/uaset8m4RAr4zP
zayn9whN4OXjTzSfJUHOoxkS6NHjvQ2nMGnQpC6hzaJ5INDMWdSMT5pskwaf
SfNWsBfVjW+12J6uwwXogXq+BjOCTcVgv1cFxn/x30ikKet6KZiGKxu/UT7e
DOaYLlIr59igOVTk5pJB0w1HRWx2mqz9GvL3f+qEBzonoybvemCUsP+GU80p
sx5vLjs8x2eotGjS4/viYHPwv56m20zYNajQ3kY+PU1XIeyae03EzzdZvhYr
RJqaNj0Pi56baK9KsCMTdg+xa2N+W1Zrhjd6YQU24RA+bLReYVhwbvR+aIew
64VI646wa4NHpKdr14IKa3DB9/+Hf/87b+wRdk/lA5edzi9wIbHH
               "], {{0, 23.}, {29., 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {29., 23.}, PlotRange -> {{0, 29.}, {0, 23.}}], 
            GridBox[{{
               TagBox["\"Twitter\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-60db69d745704d6e67ece46469fabb4d"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {75., {1., 8.}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJy11kEoQ3EAx/Fnox5WXgkl0m7/o6MySk44mSg5aMvbuGzZMMqJGw7KaZKb
1FJaDpScRLlQTDgoJJSDmwjN79//v3o973n7v72tPqtt77/v+7/9997zBqP+
kEuSpLiMJ38g0RGLBWb6FLzoj8THwhF1pCsyoYbVWEvQjTfroBFKpcIfJHVf
DuNwBp/wDTcwD4pmuxLohmr+uh1mbfQa4ByyJp5gAOYgA/uaset8m4RAr4zP
zayn9whN4OXjTzSfJUHOoxkS6NHjvQ2nMGnQpC6hzaJ5INDMWdSMT5pskwaf
SfNWsBfVjW+12J6uwwXogXq+BjOCTcVgv1cFxn/x30ikKet6KZiGKxu/UT7e
DOaYLlIr59igOVTk5pJB0w1HRWx2mqz9GvL3f+qEBzonoybvemCUsP+GU80p
sx5vLjs8x2eotGjS4/viYHPwv56m20zYNajQ3kY+PU1XIeyae03EzzdZvhYr
RJqaNj0Pi56baK9KsCMTdg+xa2N+W1Zrhjd6YQU24RA+bLReYVhwbvR+aIew
64VI646wa4NHpKdr14IKa3DB9/+Hf/87b+wRdk/lA5edzi9wIbHH
               "], {{0, 23.}, {29., 0}}, {0, 255}, ColorFunction -> RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {29., 23.}, PlotRange -> {{0, 29.}, {0, 23.}}], 
            GridBox[{{
               TagBox["\"Twitter\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-60db69d745704d6e67ece46469fabb4d"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "Twitter", "ID" -> "connection-60db69d745704d6e67ece46469fabb4d"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.725731884678351*^9, 3.725732002631665*^9, 
  3.8291986970041833`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"0ace70bf-b63e-42ad-9832-c467f5337da9"],

Cell["When signing in for the first time:", "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7165111927982264`*^9, 3.716511223259184*^9}, 
   3.71651127979803*^9, {3.716511379960691*^9, 3.716511408367755*^9}, {
   3.716511789986699*^9, 3.716511809549193*^9}, 3.72573200263201*^9, {
   3.725732049256812*^9, 
   3.725732056824277*^9}},ExpressionUUID->"37395ce3-513e-4c29-8e0e-\
b389e20523eb"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQt8FFd+54s9nvEk2eST5GY3i1/zyNOzyThZJ5O5Sbi5IRnyuskuyUaE
HRIyD5zgZccTDSbbmyiKUTBOMA/D2MQCLMCS3SAkkEBIrHskW0hWkDQIpJFo
kJsWLTV6tF7dQlKjFvzveVRV16sfEgh1qX/fj4/Vqqpzzr9Olehf/et//ucz
X33hj597eNmyZd/6JPvfH3/lb38zN/crrj/5YfbLn37jWxv/6hsbvv5739i8
4a825H7xqx9jG/MeWrasgx3/CPtMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgI6+8CzV
9kzT6WvT1Dk0Q7E7dw37zb8DAAAAAACwFGkfvE23Y3fSOvb27F061DZJ/+3E
KP2prmx+L0z+8RhdvDlDrzZF6Dv+6AJbDQAAAAAAwOLzrXNh2lofTktP72+d
MGhou1LwQZgmZ+7SdAy+aQAAAAAAsLT572UjQgPn10UoNJlYT18NxVLq6C+z
tv6etfN6ywTduQstDQAAAAAAljZ/XTWmaeE/Lx+hM91TNHvHqqkrvNMptTQv
OxojtvUBAAAAAABYarzZesuih79+ZpRK2qfoZjimHXfo4mRaWjrd2GsAAAAA
AACczsDELH29MrE2Xn9yjP7Xd8bpm+fGUupoHuMBAAAAgOxjZmqCxqemF9uM
9JmJpT4GgBTwmObd/zZBB75rzc0xn/I/qsYX+5QAAAAA8AAZ/+g8uVz59NyL
aimgwg/7xb7JjnfZ7+9SZqmDMSp6uUDY+nrHxLxa8Jbt1p2vsbxw+ErSusYx
GaP3a1uoX9050k3V9d00My+rwGLxQnVqf3O6hecDAQAAAEC24CcX04/P73+P
ApFpmoyEyFMsdaZnkO2OdFNZ1ZUM04ZX6HluX3B+OpozOdhLHV4/+T5qo63K
+Xt7esnr7SbfYArfvGFMroixalMGaMYrdXZmjRdIRXX31H3T0qevTi326QAA
AADgQTF1hV5gWnB7fUi3MURF+4uoumeaZj56j1z73qNJsT1Gje4ioWO57/o1
90na+lIRdcxMU9m+3fR6xWmhS7m23LyvmkKWzqbJvWsHFXvjWrXx8G7aWtbN
RGg3vfrSbiosflvYw9twHXjP6g8fbKHNyv7nX9wu2xq5Qq+9vF36lV3b6fVa
vzh05qNq2rzrJFWXFbF9O6jNVuLEqDgvn14o7hafy/Ztp+1Vsj5FrtBW1p77
I2nvpLeaXsh7m66qYxJs0mzh4/GvJw7H/duu/bI/bttLBcq23VTtlfrfW3GA
tpedJ/d+ZnfeScN5Tga7qa1n/s8JYO7wnBv/3JA6b3Q6ha+HCAAAAIBsIUSv
5ymxDbveJndtC3l1ftnJjlK2r1Ro6UDVARlXUXuFvB3ViublGnWail7K1/Z1
tMh91viLaSp06bezeuz354uvMOF7RdGlTB+3MC1ZXyptKjbFW4z4yVNVynR0
AdPuTeQd6aVXhU49QJ6OK1St+NR5H5Pek4q2Zfq6oi1BnAqzIS/eT1sx0715
p4VfebzlbflcwLU+33eY7dt1Pj4m3JaKd4WO5rZcaLtC7sO8//3krr/CRrZf
2vZyKbV5r1Dx/gJN03e4d0jb8vZTcW23wSLZ/vYE2h8sFDxumvuUN9XMP97j
n85HFvs0AAAAAPDAmaBGpk+3qv5Tof/eJd8M98WqWlpqzud1scT99UVxLZ2n
173S1/u8WQfbaWm1nqKlX9X5x31V+0W8hNW/3c20OtOaRJpe9uhSJ5Tt4vZX
07iyr6wn2bkbbZ/56LQ4Jy9x7azo3ZeqxXGvc/taxnRjYrRF8JHcN6O3LThB
M2yMZkauiHgafv5SSx8gXwKrqvk57HoPsSIPEJ7L47mqUVp7Dz7pKyHMhwUA
AACyiwkKGOKOp6mj/qSI4+D6Uq+luQ4u1MVnSN25XWhpqZGntTaM2jredjIt
/cKLBdSoc+vJOX42/llxrNwu7TPOjfSWMZ3qKqV+m31WzLb2ijiVYm8v215A
xS3nmcbfTx2DbaY+FS2ts0XYrNsX94sby9YKP3UUb6fnDiSZ4zh4Xhxb/BG0
2YPkyOX08kfblX3NtxbbfAAAAAA8YKRe3UEdpu2eXdIHbdbSm8v82jF6v3RC
jWwgieZW/NLxfUQhEWNRRAGz0XotrcZD6By4jQcKRAzysMF/nAirre/vL6Dn
9xWxPvaTjz1rFLoKaOv+3fTcS6cVf7ONllb6F/tcipYWtu0mL9fZIn8fe05p
aSFfhMeSbDf4+M3w/eY4avBgOHllWqx9OBcdzeNCpmNYLxwAAADIOkZa5FzC
l0upY1DGInhbTmpxwvp46TYRl7CdyrwhCvWo8+7mpqV57AePXQgxbemtV+KR
FS3tUuKe20amaXLwCm3nv+86b7VZ7wuekhqc5+HoZ3b4FNu31vabYjESYbV1
vKNUiXOpFr+3Hd6utcnRj4k6d9PdwfqbUfexcwiOsbGUtm0+3CI0caijWrRT
9FEsuZZWfNLVgymuHVgwbkVn6VDbrbTyTW88M07BCOYbAgAAANnKuPc9qWP1
cQiHm4T+m/nopOZn5bqz+kA8L/NmMd9wP3ln5BzC1Fpa5sJ4XutnN21/2eiX
3r5fl/c5723qsJt/Z4qrCGnzIJX8H8x2GWNRqrM9ETEqe9lk60y3GA9XhV+O
j9DHBfS+EpNtHJN+be6miH8J6p4xZrhtpw22bXXLyOqOJFo61PEeFdf3JrUa
LAx3796lrlCM/uH9SFr+6G+eG6eRKehoAAAAAJDwSY9HJhLOdwt8eJqKdBrP
W7E7Da1qR4wmzesrqvpY2z/3OGHe5kyGTtbLZNuyHf9YjPa33qLN74XF+t/p
aGh+XGnnFN2O3Vls8wEAAADgEPo/lDEZz798gF7dJeMeXq3vT10xHWbkmieN
yAMHFoHI9CwdY9r4axXJ8+F989wYvfu9SQpNQkMDAAAAYO5MDvrp/dr3yF1x
ntqCKdYHnBMx8nn9mGsHFp1RppO7hm7Td/xRMQ/xO9ej9N2bM4iJBgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA90xrlw8FBQUFBQUFBQUFZR4FAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAB8VMbJa6A/3UdtVPrV0+FBQUFBQU
FBQUlAdeuBblmjQ2O7vY8jhtuI6+fK2HgkOj4jMAAAAAAACLAdeifUMjQpvO
zt5ZbHPS4npwkAZGxhfbDAAAAAAAAAT9oTHquRlabDPSguv+mEN0PwAAAAAA
WPqocRNOgMemAAAAAAAAkEk4RaM6xU4AAAAAAJA9OEWjOsVOAAAAAACQPThF
ozrFTgAAAAAAkD04RaM6xU4AAAAAAJA9OEWjOsVOAAAAAACQPThFozrFTgAA
AAAAkD04RaM6xU4AAAAAAJA9OEWjOsVOAAAAAACQPThFozrFTgAAAAAAkD04
RaM6xU4AAAAAAJA9OEWjOsVOAAAAAACQPThFozrFTgAAAAAAkD04RaM6xU4A
AAAAAJA9OEWjOsVOAAAAAACQPThFozrFTgAAAAAAkD04RaM6xU4AAAAAAJA9
OEWjOsVOAAAAAACQPThFozrFTgAAAAAAkD04RaM6xU4AAAAAAJA9OEWjOsVO
AAAAAACQPThFozrFTgAAAAAAkD04RaM6xU4AAAAAAJA9OEWjOsVOAAAAAACQ
PThFoz4wO6Mh6rsepL4gL37qi0QfTL+yc6XfIPlYeZA9J7OFj0d4MY2JRlJe
k7Bqa8Kxuw/no7Mj0fWJRtg+5ZihB3rv3F/CbJzrqyvpyKEi2snKkeJK8rR4
F/c+AAAAADIQaGkj9XnP0tPP6MrKIgrf1x4i5PN6qUsUox6LXj9h6PvI9UUU
LtF2Wq2zpfByZPFM8ZYYr0leo+mICO18xnjd6kPJ21hd7L1HO1bRJcPFC5J7
y1rTvVNyn++dhScabCVXjulvwFRcx1sX+TkvQ2H3QNdl5W/7+uL9vcTN8dMl
5d8aXwhXDAAAFgpoaR1RL62x0Q5Vwfv4PWTSqEe88bYtWtq7iN/HprHIJFue
XrmXhvT7I62GMeUlv8Eopn3HNxnHdh7PBsbrs566tEsXJY/5GcyBWjp8+URC
/WwpG2ugp00Yn7XW6u6PxaGrWPdst/IErhewcGd6mu5GcWcAcK9AS8fpq91m
qxtWH2q/f50wXbghgUbNLC3tp/yctbRm3XpavXL9/X2emLsxVL7uWYNOuaAb
mnBLkeWarShoTVJ/vdGnnK4VibS05RlsLbkKtpG7JXgvJ/1gCTXSCjvNvHIt
bVi31vbvYkO1f7GtzigSP2stDobnx3XQ0kDH3buijOT9Lxr7x7+LbwMAzAto
aZUIuRO+286nvvvVTRJ/r1lLu5UYj2gkJON8Q5E0vg+jFA4F53C8uW5I1FsY
5m+br8LoVy5sidt4YY+N1tP7rtlzgf755el1lZa+o5GIFk8dThDnnK6WXnPc
n3okxDUNWccgysaI2TLE463ZGCWyxY6wcp8MRczXLz7u1n0Sq199PXn0cQoR
HsOyKu2/C9UWfo5zi7FObeu91jFc67R8csrfhbhvQ5SoitEvneJ5LSqv8dzO
U6mq1E01rl3F6+P25JxI+o4knfsfLA3uzs6Kn9HWJgp+4SkKfvHTdPviBcM+
AMDcgJZWCNYlfadtjRcO0ZF1XFusEv68DceN8be+Cpf0j67k9Tcx3RWkwnVm
LaL4UFnJrfBbtPTO6joq3Gius4oKG2z8naz98oJNtu1v2FNDfaavx/qCtaIt
vt9V7aehy5W6OIm1dCnspVyhSeUxbhGLEqXyjco5r0xc4serRMhzyGVj2yp2
ju1paero9coE7wpCVLjS7pqt0mKmzXU3sLFW6WuppA129XM2UZXJr2zV0kHa
mZP4mvJ7oq9hr/b7irw6psnaDfHI6n0VZdsLt6y3bYtfj8Jq3f3Fng3kteEl
ny5cb6V8y3PgJqoPMg14vcYmbomdm14nW+79VQneQ0So0NSP8bgoXajYZuvf
Xr1xL10wtakfm9V5NXSp4YQlVufplfI87qWOSthbR7k2z8srmG2XbOOJ2fkc
T3A+W4qoS6ljvr/048hLuW7eA49Hz7f8TctrvLPaFIcebBTnJv4NWbmNfOx5
pjwv/ty4IsH7MvXfHuvzJe/XRT5dJ3O5/4Hzuav4nu/GYhT6m69R//JldJOV
UO7XiRQdfRf+aQDmDLS0xODDYd9/7gaTBtlSY6xg9kWa5rIZ43PXM23abv3O
1383s/pmLZ2s6L+febywXZy3WT9d0uRTlNzrkh3LdGLYzn+eqp75eJKxIrZa
V6dlCurS0NOKftS+6xU/Gzt3s9ZRf1djpn3VRm2hjt2F4kTaNV42HI/rFYuW
TnVNmdbpOp68Dz5OUaZlbeMrzLaozwAJ4vrnVuJxMpYYmby6hFeB61H38Uoq
r6gkd0WjLm6dP1um7teteyZNNTb6e1fVf/OpI+8B+/iteFlFHoP+Tud8ZJ2o
N/nfrfq3MNRSktrujXH/cap2zf/mpDeucX/5XO9/4HxUv/NkxTHq+4l/Rzee
/LgofT/1Q3TrdKk8CL5pAOYMtDQnSC79d8jKvez7LGqK+VhviNE1xz2n0tJd
4SAdycun/LxNBt20eiPflk9HaoMJtPQqyt1i9TfH44FtYlNWbqL8PdusekuL
bTDHD1v75H5pa1w390ub7Eigk1X94Nli2pfjop3MNstcwRZT4g0LUaoytMXG
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
kJWbQgdzv3OAH6/5o42F7+PHhJ7LodmBfhGPPXF4P/X/0a+JeGreNu+D9xV4
4uOib25D+Nv/knaMNQBLkazW0ub5/Tn5VNWgxlIqcb0NNZRv0o4iJ7DN/C8t
ppBpE6PmSKy7XLq14+ajpc11VuTp5wlFTHGPCeYepq2lo+Sx8Qu7E3zHR03j
u+aQ8TvbOCfNld73tU0OPF426Ob7Jcr3u1PLT2GOF2fPAoZnGlN9RYcshJaO
mvIpGOIJotY8gAuipcn87CcLnyMp1tRhmrPvco01dmZdgrwiurmQYgxMzzb2
cw8XSkub/f7r6YJe6pvm/Ym1HC2+bH3sEmvPoDPjPlvj/WG8p8wx6fq/e96f
ea6j3dzDe9LSpnOYz/0PMovIO4co8gTXv98vtfDyZVJTf4rpXKZ1+3i8Bis3
v/SLNPS1P4nHdXC/dAItLfc9TL2f/j5Rh9fl2pq3FRA5Pz4p++B9PSb75jZM
uIsWezgAWFSyWUtfOmTUDy6LP01izLvGypY6ss4nkt+rrgI7n2iy9abV71Zr
Trx0tLStbz3HRYXFRdY1GLRYjvlp6UQ5ulasW2tcr0XTtjb5QphtR5htuabt
+vVTkhOxXZvFGDNsFzNtWnf8snXd8dyCIiq0We9GfVZYEL+0Obf0Sr5GRjt1
tdRZ119JkMfjfmhpPmauZ8xjlrzo30UY8qko451/qIjyLbnq4mPwYLS0VZOK
a72HXes95r/VeL4+6/msp538vjVfE12OC/u/j7VynMzvH57h671so8JD1vyQ
ah6h+6ul1ftrm8wJOY/7H2QWk2fKKKRq3MeZBn5c1cTL5O9PPSr2BZSYai0+
ernuuMdMn5fH46dFHLbaPm+Lt6ke97gaY/0oDbFtk1Xliz0cACwq2aulzXmv
ksQEWvSvjA0258xLXPS6y35unF3+ALOWdifSvyGbfBo2NsS1ZHpa2rxWi93a
EYnySyeLH7AWa16DZFyw6BzTHDS7GGR9Dha1Hbu1xy3nEfelJ8zTcE/x0iHa
mWItm3hR3rUnWYc+eexREi0trpU3bT290zI/MWhZE9GuHNHNn0uli1PnHEmv
jrjWaaxLYozlMOVsTPk3lfh9iHp9+sxr4tiVdSVa/Mc9a+kKGy2tX6tljvc/
yCx4Hroepm8DPObiSdVXbJpPyGOaeb4Oba7hMt1PVUPrP+uO4f5tXvfxh63t
8r5Yn7xvbsNU/XcWezgAWFSyVUub4w/4+s5JjjbFD8ZjHuoP2XxfrSsiT63+
e9Oo9cLeGovP2G7dQ7M/6EKB7rvPPF8w4id3nr1eWFNwwrSG+NznHorYkLQ0
uywGP3M0sW25h6zrm6fCMlfO5h20Oa4g0RpxvoYTtMZOy67cRG7LGuJ6raRb
i9mspY8n0tJmza8QabdZA1yubV1oGDfFt253bTSM/uU1xxNraft3ATKnSKLr
bLcWuL5uvTmPn3ou67ZZ6iUfm6DhGUM9j/nU0fpLdK1zXFR12S53SYQ8Cc5n
Td4JkcPETFf1Xsvxeg0cvt5ILsv6NbysovzjxjXEU/17kJoIVe0x//tk9BnM
5f4HmUX08nep9+kflT5oPpfQEK+xzPTzYbLGdNj4pQ3l4QRtKYX3yfru/dz/
Rbc72hZ7OABYVLJVS99XojInMF8/YSgyF2EYNcyBuj+2RDVb+oIhup9N3zNm
2xbbHh3RSEixa67XcGFsCGfAhQuHguS77ldKUMzLS4+oqJtJ56Jn7tfafD7p
VEn+tx1l/2ao7YmY9DmdwdyJRnVzfu32Z8D9D9JEyeUx4+um4Bc+I3XtU49K
rbvcTvsuu8diakvt4ymZnzr4K5+l28wWvW0AZBsZrVF1OMVOAAAAYKHg+TJ4
brxYj4/6f+sXREyzyOEh4phT+JIT6utEvmmbttQ+1Fjs3/5Fit24LmxCLg+Q
rThFozrFTgAAAOC+oWhUoVPVn4w7IyM09OXfp5t8HqDIc/dwfE7gvfidLdtN
8dRqH6zPfvZ5cN0f0CyzRZiqs1FdsxyAbMApGtUpdgIAAADzhutPrkVnZxP6
efm6KLFrV2joz/9Q5H2Wueoe1s0/nK+OVnzRy5cZf9fHXS+X67TwPvvZ56H1
/4VuX+2iO5OT9rYq50LQ1mAJ4xSN6hQ7AQAAgPsG06CzI8NMr3bSdEMdhY/8
K43+/Qs0+Ge/Q4Gf+REZv8znHy5PFqeRqJiOF218jAKGuYwJYqaVPnt/9keF
LaN/9w2xNgy3cYbZeofZLDQ0AFmAUzSqU+wEAAAA5oPwRU9PU8z/Ed1ubaLJ
U8dodPvfUWjjf6fgb/68yJ3B104Ze1zJGa34iAMWfZxmWa7mlV6mrSnO10zs
U9d9eSK+LotZe/M+A4ovvF+xaVhZx/wmszX012tpjNl+q/xdirZ8KM5pdmoK
+hosSZyiUZ1iJwAAADBn7tyhifISGv3WBupf/RvU+7kfo16mU8NMo/L1UPhn
sS7hU5+gwKe/T8Z1KOsUGnNHK7pX5Mp7JEX5OAWUn6Jd1l7vLzzGynK6ydc7
/I/LxPb4nMaHTH0p6yiKtRa/Tx7L21gubea2c13O8+b1r/5/aOSbX6dbp0tl
vAcASwinaFSn2AkAAADMGaYvIyUHmPZ8SOhQTefy3HNCO39C+omFLzhZXuh4
zHMgVXks/pO3Pc51+1f/WKxjGNq4lm5++lEaEH18TPZtm6da59fmtvHjuK3M
5gDX+2JNl0/Q0BNMV//4w3Sr9Ci0NFhyOEWjOsVOAAAAYL5MHD9KvT/576iX
5+bg6w4u1+lVfQzH42Y9HY/XEP7ln/pB4Q/uffpHKPCzPyJ+WsrP6n7+/I/T
CKsz/MJfCjvu3r5N4wdeo/7f+4LwUfN5hgGm63see1iLB7HGXi8z2SrXGQ+w
c+n76R+kidLiRR5dABYGp2hUp9gJAAAAzAc1lnh873YZA/2U4otOlfNZjbtg
xwb5+inPPknhff9Mt06+S7fKiulW+TuslNiUd7SfPDY78u5bNN30Ad2ZiIh8
0Ry+JsxIfi71/9JTIlabx1P3PJ5iHUV1P7edx44w3T/+7X+WJwmfNFiCOEWj
OsVOAAAAYN4oWnP0pc3CHyzWYRE5M/T57hLk13jq42Ie4M3f+jzN+O/tO1Pk
srt9W/t9sraahr/5FQp+/sepV4vRttPTD2vx2twfHWTbRra+KNvEvEOwRHGK
RnWKnQAAAMC9IHTszAyFXvhLGuQxzepaLLbaNa6lA0xL83zTwV//GYo2N9Ld
aJTuhMMi9/PdVIXn2OA/dfqZ+6bvsO0q0c526vvNnxd9BB5/hGznPCp+cm4z
j7Ue/puv0t1YDGsigiWNUzSqU+wEAAAA7gU1voLrYL6uYIjrVa6nDfMObeI9
FL903298jmauXrk3I5S1yjmzwyEKv7mLhv7o14SfnPulA9xXbpmDKOM7etgx
3Oah9X8kzgGApY5TNKpT7AQgY4hG6FJDDR05VESFrBwpPkGeFi+Fo4ttGAAg
FZqODfbRwB/+qsjd3MPnItrm7VD8w4/LfHS9P/fvaeTvvkHh/TtpbHcBje15
mcZfi5cxm5/hb/8LjbySR5OnT9CdSFz/Tr1XRUNf+xPq4z7mx+Px2T0J8odw
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
+e/02l3nP7U5N72t5jzF9vPnjLn9zHnl7lVLm3PI6euZfcPa3EOTzl2Rpxuz
qJ/y9c8zOSVi7qHx3QDT37r8er7qbdYxzJSxS1dLP5OfME+0yIO3UvdsATkN
QMZy9/ZtujM+RjHv92i6sY4iR/6VRv7hmzT45T+g4C9/Sswv5LmbhxV/sTF3
hk2+PB6vzArXs1wT9/7UD8n1XFLpZ7tim9f6Yc3HPaIUbmPwC5+mwb/4Qxr9
h7+hyNFCmv7wfXZOnezcxsU5ArDUyGotbRvPvJ5clnx1cZ1jnv/39EqXmHN4
oaGGck1+aZET2azLuP91y146cmivKYeeKYdyEsz6XNVTfabjLh2y5nzLP1RE
+ZZ8a3ENZ5s/bks+5drEqtyrlu6rNerYFRuL6MJlL12oPWEZmzXH/Uot9ixh
Xm8lx0WFxXstOfFylRwr4ZYii+25e4popyUnXvzZKCPGLm0trdP8hhFm93eO
0daUMTEAgIzibjRKs/1Bmum4KHM9f/ufafiFv6T+P/xV6v3JH1RikxNpXcVv
LPKAPCTWN+yxzBVcNodiiufgbTIb+v/o18Q6MOHX/0XYeJvZOjtwU9gOQDaQ
3Vo6kS61K6rOSW+tFn3+Z3U9vKQlry59o825prk+L7bLcRZM6MPWlyMGX3mi
GOb7r6X5eaSac2g3nhRstK4NaC7rSgyx5/V7rPmaLeNgmJeXAWOXJAbJkBMv
oVY25+Kew7UBADxweP46HtcsYiCSxBRz33W0vY0Gv/z7Io5DzFF8XJcjzy6v
hsW3PJ+i5LtjbfE4ExFDsu4PaOZ7l+lOeDzxiSnndBc5psESJdu1NNcb9Yds
dMm6IvLU6v2Z+hwLEfIU5yfQgavIVdxomUPIc7W5LOt88LKWCqvb57j+nHW9
kqpgohYiVJ/A1hXrtlnWwRatM61qt9b2zuo6OrIxfg5rjqeRiyIFQ5crbXXx
hj1FhnXIeb5uw7rgEb8lb546/vnHW23ncPpqzevp6Mbhul1+i8UeuyDt1LW1
xrDGfYSq9pjv21Raem7XBgCw+Aj9yXW1UlQtynPeDf35H9JNrnH5Wi4iZlqf
d3quPud0iq4PvhYL64PboOXfU9ZkIcXme10jBgCnAC2tEI3QUFDOKxxKe45W
lFVT64XE3MGUaSX4XLCgOn8xMicNHRa2sf6u1xk1YU5Jyvwf3NZwKKj1HU7j
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
S6dNzwtG3j9QIMahTfNNj5HHXUSbXcrzhmsHvVp8nvp1dXz179L24ibyfcTG
5iXV772dXPtPUoc2njHysPEorO+mjg9Pkktp7/k83l4TjZvs8H1YTVtfip+L
sS2FkW4q2r9fG4fn8/ZTEWufn7KvtpS27jsgrsVzebtpOxu36o/icTqpr2OS
6wQyFqdoVKfYCQAAAGjMdAtd/Ny+Jt02qS83l/UyXXZeaKrXPozrqckOqb+L
OqQGC9S/reniworzVF0Rjzt+tbZXa1P1S7dVvavTu7vJtauUAoqmfV7Tifm0
tbiNVeylV5Xftx8+TdW171HhPkXrvVwt/cSqHtbZUMZ0riHu+aUiKqtvYpp8
t1JX+pjVc3ntw7GUQzU5pWrOfnpN0byb95Uym85T4X7FJtfbpKqBDndckz7P
dH0ZO65I7V/z6U9T0Uv62OyT4hxfe1l5bjjQpvXvVd8VuPZTcdV5cher7w52
xzV+sEnqZD5exdXkqa9mOl7+zuPifbXvkkt9jmF6fevL+6nsozlcx4TXCWQy
TtGoTrETAAAAiBOjsl1cExVRQNky3iFjGtw9/LeQ1LI6rS3jQnZTBxejio9a
ryEl/crcxR1S55ljPD46LfW4V4mTVtvh2szdpvk5JzveVXS7cW6itGG71ras
u1/nN9bFqbxs9Dm3Hd6u2RVqedfqd09Bh1vq4dfqew3bA/XS1s2Kv149bnOx
MS5Z2p5PZSJGfJqKFa1b2KLX8xOKxj4gx1V9XsgrNcTVzHz0nngukZpbbWs7
VRviz9n2l/Pj14xsYjzmcB3trhPIbJyiUZ1iJwAAAKAnUCt9uGq+jsbDBXEN
Z/l9jApdcb+u1KL2+TxmPqqOx4+YtLQaWxKfi6hoxV3VxpjkyBUqPFxticuW
ejSu7zabYk5Ek16p11836fBQy9uaDtfaSTsQekzO17SNCVFiY158W8R6SL+0
tW3juSt+aUtMuq4+1/wfSp+x3VxP+Wywn7wjLUJX280Vnek5T9v3n1ZiUFif
eaYYnTlcR9vrBDIap2hUp9gJAAAAGBiROTu2VnA/6xi9xrXS/hZtt+qnFvME
p9rEsdtrpSpLqkWV+BGh2dLU0sa4bbWdEDVWnabX9sdjptVYBL2W1sehGPuY
ttkutfSkcm6eVPlIpkLU1nGFfENK/EuCeXteMY9Rtt3hZhrXZdXIFGnTjYVV
16qMd7wb1/xqvMhL+2nrLl3Zt18bi3/7rhJ7kzJPobXPuVzHhNcJZCxO0ahO
sRMAAAAwovhad52nSaarRfyCPt5A0VKby/yKvotrzzad79TCHLW02G/SgSEl
nlnE+zId+br7NHlarlCb8KWb40fsNLM1d7VBSyvHbK8yxmuYCdTKeBH31e9J
LW2jfTlSS+9IrqUNubYTa2m9nWq8yAu7itgzRRG9qiuvHS6l1w+fps5L9s8O
Vmy09FyvY7p5xUFG4BSN6hQ7AQAAADNtxTJOwO0+YKOpYlTGYxdeepeKD2wX
MQyqV1JqzAJ7v64Sc7C1wp++ljboXjX+9wC1meKZ+2sP2GhpO82cXEvzuY3b
lTjhACVCjV3eT171+P1NtkfKfB/8uORaOh2/tN5On8jnvd3Wbzz5UQu5K5qo
/8b5eCyGucue91if25V5htY+53sdgTNwikZ1ip0AAACAGVV32s3V46gx1Za5
dEp8yPP7zlva9OwviMf4zlNLc8333EvVppZD2ny4joR109XS8TmKz+97z3Yu
XZt7v+G83xfnZbMeZPC8zE+izNO8n1qat203j1F7p/AizwsSkvE5LxaRWZFU
7yvQzT1U+tTHqczzOgJn4BSN6hQ7AQAAAAsz3bRVzc/A/Y9mRpoSrvfdeFjm
R3th32nqCIaoP9hNxco6gs8fUOKup0xausOkc6fsNFqMqnepOSOayBfsp46O
8/RqXjyH3Pbi8xSyrZu+ljave1hc20benl7WF1/3UInP1vutR1qUvHPbqejD
buofCVHHh6e1bapv937GeMTzreST6/B58g2OUX/PFXpdyZ2n+qLVOYTP5fF8
273iWrjVfH1aDPyEfEbJe5s8HVeof2b+1xE4A6doVKfYCQAAAFiJKb7LAqoO
2u0fo8I8GefQYYkzmKb3i3XrJKqavLglriNn/CLmVovlVfys+jXFXXYabarb
oJ3l/Lt3mda7Qq/lSe3aFravq2rpatP65HK7NTa4o7Y0vvaKrrgOvGdYg0WY
G2yhrWa7XPvJ0xOPI/aWMQ2bZ5PvQ9HS7p54Tjy7uYzSzv3k1cY7RMX7tlvs
e63CqMMDH57Uckxr7xLYOegjP9rK4tcrnuckneuY4DqBjMYpGtUpdgIAAAAL
wsw09Q/2U2AwROP3OWHaZGSM+oP91D+y8HPetL4Gx1LmT54cCVHgAdmlMSXt
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
3eGE107cC2xsPZ4KYbv0ccfp66yjfQff0eqVtfWkPLdk1z9bgJZOTjRqfciz
32ZX17KFbGpat6XXmO22dO0FmQm0NABLDKaluc451thMzW3N1MRLYxM1+7mW
DVIJ1x9FdTQeaRP+631CP82Sxy21zJlOL3U1npM6sN7HtLQSI1B0li52e5le
UmMDmM5Ut/t9dLFe6kBPcDZJHfZvTr3U0SWNbXSV6agdij5sn2Q2iOPKyeP1
UpNHHldmjq+IXaM3hLY6zfq9Rp5Kqd9213AtlcimCbra/oGIfdlXVcf2DVBX
laJLO68xOz4QdhQ29pgGM0ynFM1WWNdKV71NSt/naJgS2dtv6qtb+HN3e6S2
bD4p2ysTvu5Rse8N1m9fo6x/jI1Le5tHd049TItzzXiOjWUne95Rx4vp8Brl
3Jnu7upulcdVtiW8Nbpq3JqWHu88K9oRz1yRVuV6yfcPE53yGevGZJv0PU9O
Gc6p5XvfJU/dWXkd65ro6tjthNdOuxe4vmZjaIgpUd6hcPuvBrxUc9It+6Uk
55b0+mcP0NKJiFJV3ip6+pln6emNJ9hfcIJtUT+5Vj4rtm043q5UtW6LXq+h
Fc/Ibe7LkYTbfNX5sv1nXHRBedZOb1ua9oKMBloagCVGgnjp3arfdqBJ0a+s
lNTJOGhF0xxtj+tWH9NzZY2qlnYL7Sbq++XvFyd5/OwH1C58hbM03P2B1Faa
frKrI/28er0nNSTThmPShrdYn9PRMCsDUsea3t1LP/k71Kz6hmmKzhxV/ZKJ
beLHcZ1dosRrDHc3Md0nfeUTY16h1XZUmXWoYu+JZm1LLCjbbB5OZq+xLx7P
+8pBD8V4zIjig93nYRojKrVq05jaTxNNsLYmolPUzuuw54+bihb1BEdpmo3f
9Ji8vvyc9NpY6ydJDLTh+KhXtFMWmKVp7znN532V7Wqv5La0au84pC/ZeE48
lprva4/F7x+7sVC1dE3Axl8eGyBPfRN7LuGfp6hLPGfJ/hKd282k1z97gJZO
QLSdVis69+ln1tKlqP22qLdE+Z2VnBKhV+22dRWv17atPiT1tXVbhI7kPKtt
KxT6Os1tadoLMhtoaQCWGIr+aU/y76/nqNRzJZ2jKeuY5x7qdXKf9wOLbpe+
yER11PjjuKdlWtHZXEvvftP6DMD1/rTFHo9hLuTVmni8bCKb1NhndR7h9ACP
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
yJN9o+6y9dl87cmp5nHyeL1kbdBrTzb4nLX+bU4/G29CjPeZPSjyqsjydi8F
8mPdnKm6Peb8SfQjvv0bM1rW/soh8m5a7LOzq7D76/Dy9XMtq9+cII/fS5av
tH1WZ+m9AHqf117t4ZMCAABQj+pZuru7e9dZmh9brJA3S5stSjzsiIx5fZRl
7XSMtZB2fLdTXytuJXdW68ktsmmhDmOqO3+cloNtSxGW11kfUadY421heXy6
38py6RBpXSSpU6wfu4y53dOPM/qI5uedo36+ntwxrvXBMrYnkaRN1tbEsVaa
SGj1K5da7Hr/xXY7dvX+i/tLzWtz7PeXF0FXqpc+2+kz8udwpHBefTzP8rVV
PUPW9PNV1ThZv2CZ97bb6HN11K5naW3fB82mdXe91qHPyxKrl6/NPq1Y46HN
y06rxpYA1fA8/DxMMfcrlmvDYms64hO59LTVzeb8VPRd28uy+VaOYkEfvXAG
q27n68o8V1v9OX2deMDI1jO3+bxn9nAd+JxL6zb8on+L0/yXQpw6RMYexpo0
AADAWyBL7y9Lt+tZeXMjRGtRvi49JuocrvS7RJa+UiFnX2oZYpmy+H5ALXPa
Cq8fWouydGlrHJqlKX6MUXuhZd8682sjS/Ox+mjNNPOJjjti/PH+1or9984v
ifdbnBGqZLdjT1ftv3iVN+W3i4xtC+XKxhI1Hre9Zdu1/Flcz+vpHBRryjGW
IflasEPUk8TJcp7lRXdh7TXtdYg1ZJGl2b56c5Zk+fWMvq6rjVElS/M67psz
pi0x+v5vWmZPr/Cai+L8f6bNK+bCa00KtSODel1Ite05srFcfIb97TBjHaSa
XidZWPbv8AaMOufdX4d8vYz5WprqpfNb/OMl2RwAAACqQZbeX5bW1l+Lc6HI
mc0sFye0dWmRG7NJSmVzFJgbpwl/pOzZGqVZeiqfpV36+nWCdZFOUjYbo+kp
B3k2csYx+bmU5tnidenitWAHz9LWMZrkfbTYxbipdI6NsUSOyUlR45F/fyW7
HXuqav+7VzVLi3Valoe3TOd1k9ctO8R67GnjWR9alj7T6TeOK1qXPs/XjE39
67UUVpa9RU49X21d+lHJvjDV81qOUa/o84PmCVpN8r8N0tTxhT7GRpA8fi0j
x4Je6mh+JGpIPNW286v5jM31CzvVsD77gmmauf2ITl/jtd+Dot5799dBu5Zi
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
2la3aV+MfqjV8/Sn9ynGt0Xd9ENjI3187gLbfoE+Ovc1XbxhpxDfl/LQlS/r
6ZOrd+hu532q+ZTtZ63myzv0MloYb/FlH9XWXhT7Pmbvr23qo/lUYX/M+4z1
87XY/9GnF6n2xv/RIrI0AADAgVI+S98NHUCL0bLeZzySoUA+/0WS+v6osS3g
W9e2Dab0bLpDw65U8Zo2l8saWboStzOsjZurvD+yHBfjPK7Qx3o+oLIxGtjc
vFX6ELUlf49TpOJONu/R8mvxYLnwNwXP8Bnz8YMhqvdmq55Tho9nulaVxnzm
2P/nVS1Lb7FcuJ/2orVez9Jf08+bJfs3w+T1L5E/mmGvF+iiUftxkT758mKh
DuSum7ZSTqqpUCMiWr1d9Pfry/uV95+7T7/y8fz2yvu/7KZ1PldTlt7veSNL
AwCAypCl95/NPp/b0nvU8mKPsUado1t6lva+KUuLTLpelrcLOXibhh1rojYj
n035Md8GC6HT6+XvCdPreOE9A38vztKZeIaGvQnqD+h5lmXpejGXKDWMhulz
R3Gm5332rOrnkstRzyCf54aR3zORRNm1eCzOfYf9TZHStr3I96idpzlLLwd5
3l+jZ7HCmvvjQVO2Z2M+YOdQY5qXqHc5rllaz6dnzz0QebXqsSwr14q15CYj
cw80XihkW7b/E2N9W8u6T24V+l7LhekbvW7ko/o+9nqb1mcLa+Kt/kKtyceN
dkrwMYPPjHx+ZzaDLA0AAHBAVM/Sp+/+uu/21JRfn7o2aXi1sDbrnYuyYwr5
cJFlYPG+waQpS/9a8RijXjqe0scKFx1j3JuYydBf8vMx6ra1fo0szXLzVf2Y
y95Clr5snMd60fr0cnCj5Nx2tHVmU+0GJU3jmlq7L03eWK6oziM/H/PY+fmc
Hi1ciwlHzJjH8uK60eewcS3S+/68qmbpbG5f7edbX+t59jq5S/dHQvTC+Qtr
PlrjrzcCNNjTRd80NlHNp6b7E2+9pq3kaz1LX6TBFe39CXeXnqXbaX3jdSEX
e9LGGGsrIfKvrFMiu1bI2ue+pppzF6mm9kKh/qTHZ8rSr/d93sjSAACgMmTp
fWZplonjbxpEZD9TTvZGd5Glo8VZOpbUxyvO20ZONufLkn7L+6iUpVfpVdy0
fh0pHPvKtFCdz9JGTTXL0pdLrsfTeHHddyRZyOKlWfpy2Zz53x7xsuvAW38k
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
AEAd+Yz6/+sAr5k=
    "], {{0, 381}, {723, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rvi8hKSEh8RuiVaJj5JcktaSKZJnJF9KEaUMpWKkqqWeSGOltaTDpCul+2Vg
GXWZEJkKmUeysKyGLFW2UvaxHEZOWy5SrlrumTyDvLF8gvwZ+bcKHAp2CtkK
rQrfFMUUvRUPKd5VXFFSVwpXqlF6oUxStlHOVm5XnlGRUQlQqVB5okpUtVDN
UL2iOq0mq0ZRq1IbVmdVt1ffrd6lvqyhqUHTOKfxSVNM00/zqOYzLTYtR619
Wj3aGG0T7QztDu0FHQ2dOJ2LOn/pyuuG6TboftST1KPo1eiN6Yvok/VP6I8a
CBn4GRw3GDUUNiQbVhu+MxI1CjSqNZowljYONW40/maiZEIzaTaZN9UxTTO9
aYYyszTba9ZnTjJ3My83f20hYhFsccZiylLdMtXyphXGytbqkNUza37rAOt6
6ykbTZs0m25bBlsX23Lbd3YydjS7dnvY3sa+yP6lg7hDpEPrFrDFekvRlleO
ko4xjledsE6OThVOH5yVnXc433VhdfF1aXCZczVxPeD6wk3KLd6ty53JfZt7
vfu8h5lHoceop6JnmucDLx4vqtcVb5y3u3et9+xW861Hto5vU9+Wu23IR9In
yefedp7t4duv+TL5kn0v+WH8PPwa/JbIW8jV5Fl/a/+j/lMBpgElAV8CjQIP
B36i6FMKKRNB+kGFQR+D9YOLgj+FGIYUh0xSTanl1OlQq9BjofNhW8JOh62G
e4Q3ReAj/CLaIkmRYZHdUQJRSVGPo2Wjc6NHY3RijsRM0WxptbFQrE/slTg2
5JjTGy8Vvyv+bYJBQkXCz0T3xEtJLEmRSb3JMsl5yRMpFimnUtGpAaldO4R3
ZO14m2acdiIdSvdP78oQzcjJGM+0zKzLos8Ky3qYrZRdmP1jp8fO9hz+nMyc
sV2Wu87kMubScp/t1t19bA96D3VPX55qXlneyt7AvffzlfKL85f2Bey7v195
f+n+1YKggr4DGgeqDmIPRh4cOmR4qK6QpTClcKzIvqjlsNDhvYd/HPE9cq9Y
rfhYCX1JfMloqV3plTKxsoNlS+Uh5U8rTCqajvIdzTs6XxlYOVBlVHXuGP+x
/GO/jlOPD5+wPNFSLVFdfBJ7MuHkhxr3mruntE7V1/LU5tcun448PVrnXNdd
r1lf38DXcOAMfCb+zKfGbY39Z83OXjknf+5EE0dT/nlwPv785wt+F4Yu2l7s
uqR16dxl8ctHm1mb97ZALcktU60hraNXvK48brNp62rXbW++qnD1dIdwR8U1
9msHrtNfz7m+eiPlxuzN6JuTncGdY12+XS9ued560u3U3Xfb9nbPHYs7t+4a
373Ro9/TcU/nXtt9rfutDzQetPSq9zY/VH/Y3KfR1/JI89GVfu3+9sd6j68P
GA50DpoN3nli/eTBU4enj4fchoafbXs2Ohw4/HEkfGT6ecLzxReZLzEv975i
flX8mu919RvpN02jGqPX3pq97X3n8u7FWMDYl/ex75fGcz4QPxRPCE7Uf1T5
2PHJ4lP/562fx79Ef1mczP3K8vXoN6lvl/8y+qt3ynNqfJo2vTqz7zv399M/
1H50zTrOvp6LmFuc3/uT+2fdgtbC3V8evyYWE5dwS6XL0svtK7YrL1cjVlej
yTTy+lEAhVxwUBAAM6cBIHoBwNoPAD3jRu61WVDQWsqxpktEzjB6yEmrCPRB
JMgTqoNhOAIeQ1FQM+h8jBJmFFuJC8Wb0UnQMxJgBhSRhVGWyZqZxnKC9IpN
gN2f4yIXmtuP5yafIH+ewLSQj/ADUR2xUxJskplSEzIOsk3yjAoBipeUFlV0
VWPVjql3a7zVXNBm0OHRldHT0jczcDD0NgoxTjDJNS02qzNvt7hv+dzqo/W8
LdqO2Z7PQXKLsqOOk4mztYuDq7Obm7uHh6enl5e3t/dW723ePt7bPX3d/ZzJ
9v4WAQaB6hSZIMFg1hBcyCL1W+jbsCfhd5FVeSaqMnp/TDKNHGscxx33Lb4z
oSQxKskmWTR5OeVZatOOPWl+6ZoZjMjauppVmB2yUz+HNefjruu5RbtD9ujl
ceQt56P3Gew/e0Dr4MVDy0WCh2WPKBQrlSiXqpaplatXqB/VqNSpsjhGOV56
Yvgke43xKZ/ayNMpdbn1hxoqzpxqbDrbdu5W08D5rxeFL0Vf7m+Rbg2/UtrW
0v7o6kTHynWOG8o33TsLuz52W92uuPPw7tueqfvYB+K9lg8D+2Ifhfe7PdYc
EBikH1x4Mvb04dCNZ+3DHSM3nne+uP6y6dWh1+FvTEa5R2fe9r9rG6t7XzF+
8MOuieSPEZ/8Ptt/UZ0kTX75eudbzV+5U6HTDjNq30V+SM/6zF3/qbRw+Neb
Je5lz5Wa1dW1eQIIgBc5JTojeU4j+ABJQlHQTZgXzoZnUNGon+g9GGHMbWwc
TgH3Hd9FV0mfRghk8CS6MHoy+TPHs+ST6lj72X5ySHL6cBVxP+Il8tnx7xPo
EyIKO4kcEu0XJ0iYSyZI1Uo/lvkhxywvpaCmqK2krayqIq0qoMasDqn/0BhH
dqse7Tadet1yvXz9VINQw61GDsYmJpqmCmZi5jwWzJZYy0WrKetxm2HbXrvr
9ucdqrcUOeY4xTqTXRxdDdxk3bk8MB7Tni+9erwvbT22Lc8ndruPr7mfHJmV
/NP/VUBnYA1lT1BYsH2IIpWF+j30aVhLeGlEcqRnlEY0KfpTzA1aUWxgnHo8
Jn4o4VRifJJ5MlvyWMrF1MwdDml8aZ/T2zP2Z4ZmOWebITNDZ5dGrtJu2T3i
eYJ7ufNJ+wj70fuXC+YOTB+cObRQhDvMdUSqWLPErNSxbGt5cAXtaFrl7qrC
Y0ePnz5xpXrg5MIp6dptp/PrmuufN6w0Cp81PxfStP9864Vvl9Qv72p+3Eq8
ot9GbS+7+qBj9br6jfCbNZ0vb7F0G92m3sm/29DTc+/TA2Kv6kPvvuxHjf3P
BrCDak98n+YM1TzrHv7wnP6F4kvXV8mvq97cHZ1/pzxGe39pfGZC7mPwp5Of
30zyfvX8dvSvqemE7/KzpHn6BfjXl6WrK9RN/9MDTiAHrJBspwTch7CQJXQI
GoP14RMoImoXGocuxEhgbmIDcSTcPfweOgd6QfoFwhOGK8RTjGVMhcwHWApJ
5ayn2FrYezhecy5wk3jkeS34yPw7BEoEzwl1CT8RGRf9KjYjPoWcmoaluqRP
yeyU9ZZTlIfkBxRqFBOVbJSFlOdV+lRr1dLV3TTkNGHNYa2z2tk67royust6
/fonDRINbYwEjWaNe01OmaabuZsrWGAsXlpettpr7WejYUuwHbVrts9z8EEi
BcZxxKnROdPFxVXcdc6tx73cI8xT14vg9cL7zNaUbVY+HD7vt1/wzfCzJXOS
x/zPBaQEWlBYKC+CaoNjQnSpaGpfaEmYX7h0+HTElcjMKItouujemH00m1h8
7O247HiD+MWE1sTYJIWkT8k1Kb6pPKlPdhSkWaXD6dcz0jOtsvizFrNHd/bk
XNhVkZuzO2KPe57BXol8Yv7svpf7bxU0HDh8MOtQYiGtKPowciwojimJKY0u
iyynVvgddam0qbI75nM8+URl9e2T306x12qetqtzrndq2HomtfHy2cUmy/NF
F95ckr2c0NzZSrji0lba/qJD+Fr49Ws3WTtDu251896Ou9PXI3Ev7f6TXpmH
2X1j/e6PhwYDnswO7RnmGTn7wujl0OvMUft3Lu8Pfpj/dHjy9rTr/Mia/zf+
g1srWA0ATlkA4H4YABdtBBcAIF6H7B96ADgSAXDVBjB3GYCuRQNom9Sf/UMA
GCN7x05QA24j0QOLxA9rKAzaDzUhud4PmBPWhX3hnXAd3Ad/R/GgjFEhqINI
9v0OTUBroMno/eg29ASGHWOOiUeyrmEsA9YYm4g9h/2IE8H54qpwr/Ei+BD8
efwynR3dcbo5ekf6swQiIZIwwKDFcIJIICYQxxidGDuZVJhqmLmZD7LQsewi
waRsVgxrHhszWxm7OPslDjOOYc4oLjxXDbcp93ue3bzyvE/5Mvjl+F8KFAia
CS4LtQuniBiIYkQfiR0VD5PQlyRJfpbqlq6WyZalyNnJaysoKCoqGSi7qYSr
7kRCfrPGoOacNr+OpW6CXr3+G0NuIw/jMpM3ZlLm8RZ3rHisg22O2JbYJdgb
2a86dG7Z5xjqRHXOcTnv+t6dx8PFs8Crdytxm5NP8fZhPyayqr9lgFtgICUj
6EzwR6pyaFbYYIQUMvOex2jSimN/xnskNCZ+TeZMUUo12eGVlpHelkmXFZL9
MEdjV/Vupj3peRP5xvty9jcXjB5kPORQeP6w2pHbJQ6lD8utKu5UOlX9PN5T
fb3mYm1JXUoDtXHrOePz7BfeXjrbnNG6vc376o5rrTcWurS7I+7s7Sm7X9Pb
1He9//HAxFP8M/2R/S9+vPYebR4jjJMn2j/jJyW/gb8qpwVmSn/wzbbMRyyo
/1paalnxXY8fYsAWxIBi0AHeQXhIAXKFUqBqJNOfhrlhEzgMPgLfhL8gObsp
sptUonpRi2hZ9DZ0AboTPYuRwZAxpZjHWALWErsL243D4mxwB3DDeDF8LP42
HR9dIt0QvTb9cQI9IZEwweDJ8JBoSuxg1GJsYdJgamM2ZL6D5KgjJApphjWb
jY2tjt2QfYQjnpONs4XLmxvmbuTx4qXj7eCLRXz9UeC0IFVIQWhOuFPkgKiv
mKo4vfh7iS7JGqk86VgZP1knOXN5PQVNRXUlDWUdFRNVe7Wt6pEauZq1Wo+0
V3TV9KL0zxnMGGkb55gMmkmaZ1i8sNK1rrRZtnO0L3K4v2XJScE50KXK9Tni
422eJ7w+b1XfttNn0FfcL5bc4b8SqE9JC+oMoaO6h54Km4+wizwZtRTjRbsS
xx2/I+F5klJyasq11F9pOulZGX1ZItnJOwd3KeUW7P6W57C3IX9xv1HBjgPN
B2cLzYqqj9AV00qGywzKTx7FV0ZVDR3XP1F7kq0mrxZ7uqBeoOFyo/3Zsaak
C4SLxy6rNd9v9bsy276ng+9a8w2PTriruZt6h+9u373MB2q9n/tO9m8dYBm8
8TTgGRiueK794tWr3W9URt+82/ded3xyouqTw+fZyT1fF/6ynto1fWGm7/vH
H6tzXPOqP10XdvxqWPy8rLVyZN3/0sAVZIB6MAhWIGnE+5lQIzQMY2E12B8+
BHcipwhRlDsqD3UN9R0tjfZDl6EHMUwYO0w+5gGWiHXGlmHf4eRxabhHeAl8
Fv4tnSXdRXox+goCB+EIAwdDOVGQWMuoxNjBZMf0BjlvMLE0kuxJ06xlbGZs
M+wnOdw5CZydXCncGtxzPG28GXzW/JyIr68JHhGiIScQNVEeMTSy94xJjEgO
SD1CMvOnsq/lvsgvKZKU5JRtkBVdpHZd/aumkJaHdqHOgB67vo9Bg+GisaNJ
gxmdeYTFMysb6zu2dnbDDlRH4FThouf6zr3A09BrdusFH5qvht+Mf0WgLOVs
sExIbahEWH2EYmRbtGXMcGxEPDahOsk4+U1qUho2vSCTLatsp0jO2Vzd3Q/z
AvKhfWcKth3EHqooEjh8pBhXklg6Ue5dMVjpWfXjeH01pQZ3am/tXJ1nffMZ
tsa4s0NN2uerLmIuRV4eabFsbWtTam/oELtWcYPxZlrn51se3d13VO6euEe6
n/Ng/mF43/t+n8cjgx5Png25Prs3ovK88MWXVwavC968eiv/Ln2sf1z0Q9LE
w0+inxO+3Jxc+ab8l82U17TXjMN3vR+is7jZd3Pt85k/9X9OLWT9Iv06vki3
GLM4smSyVLb0cVlzedfykxXRFerK2ZWpVbXVpNWra/6PDVJVWd8+IAYTADCv
V1e/SwCAKwRg+dDq6mL16urySSTJeAnAzfCN7zrrew0zAEdvraE7KWOZ//6+
8l8EM9HV
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{344.35260416666614`, Automatic},
  ImageSizeRaw->{723, 381},
  PlotRange->{{0, 723}, {0, 381}}], "\n", 
 RowBox[{"     ", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnUus9NpV528eJJcgoZ6gBBi1BChiANOe9rAHMKDVglkEak4TS7il+ArT
QkBJFIESKqQCqRDVoniURPHGkELCAUchyvUF87CIQwqBgYI4gIHi8U17sHqv
/bC3Xbar6jy+U9fff/C793x22d577eX93y/v9Z+/7X9/0907X3vtNe918Z9v
+lb/v37kI9/6f/77fxL/+B+u9+H/5X77//xv7hvf/r++/SP/5dveJQ6+EPy/
d7z22rvF/7/2a7+WAAAAAAAAAAAAAAAAAAAAAAAAAHB7fPCDH6T3v//99EVf
9EX02muvAQAAAOCZYC3+wAc+8Kg6/9Vf/dX0nve8h77sy76Mvvu7v5s+97nP
0YsXLwAAAADwkmEN/q7v+i6pye9973ulRj+G1r/++uv09V//9fSZz3zm2fMI
AAAAgBf0p3/6p/R1X/d19L73ve/BOs9jBF/6pV9Kb731Fv3Hf/wHAAAAAG6E
T33qU/QlX/Il9JVf+ZUP0noeH3jjjTeePT8AAAAAOOU7v/M7pd4/ROt5DcCb
b7757HkBAAAAwCmf/vSn6V3veteDtb4oCvr3f/93AAAAANwYrNGs1Q/V+ufO
BwAAAAD6gdYDAAAA4+YxtP7f/u3fAAAAAHCjQOsBAACAcQOtBwAAAMbNY2j9
v/7rvwIAAADgRoHWAwAAAOMGWg8AAACMm8fQ+uPxCAAAAIAbBVoPAAAAjBto
PQAAADBuHkPr/+Vf/gUAAAAAN8qtav2P/uiP0nQ6pT//8z9vHE/TVB7/2Mc+
dnLNT/zET3Recw6+5md+5mc6z/3u7/6uPM/ws5+7vLrg/HL6TTr572ttAAAA
YLzcqtb/2I/9GH3oQx+i3/qt32oc/+Vf/mV5/Hu/93sbx//u7/5OHv/whz98
9bP4uh/6oR86OR7HsTxn+IM/+INnL6823Oax02jT1R4aCyaPXEbPnRYAALh1
HkPr//mf//nR+fVf/3VZl69Wq8Zx1nhTz//t3/5tdTyKInnsx3/8x69+Fl/3
wz/8wyfHf+VXfkWe+43f+A0ZO4Dt9RR5vS/7/b6yBef7T/7kT+jNN9+k7//+
76+O82+eO51Pgcnf7//+7z97WgAA4Na5Va3/q7/6K1mXe55XHWNtb/dbzbnN
ZiOPcRuhfS/WO9bAPt3r03rT3kiSpPN+nB6G/+bx/b7nmt/2nR+6D/+773oz
xsHazt9Pmvbb5z73ucpGP/uzP9u4hu/zi7/4ixVd92W78jmTHvPbtv343/Z9
zHW/8zu/01uu9v2Gfmffm+/bTuc5ree0m+v5777zfG/7WV3lCAAAb3duVeuZ
N954o9E3NePV3Idt9/lNf/+zn/1sdYz1geev7fYB/7tLN9paz/V+e0zcaIbR
WF4fYJ+fz+fVc/nv9vX8e/vZfffhNPKzPvKRj/S2bRied+Dj2+22cZz1nvv4
jG0Pvv47vuM7Gvfkf7fv+9GPflSeaz+ff2tr4VtvvVWda/+W89Quz3Y++8qj
a16Cn23s3z7HDJV513PMmA23Jds26Wr/AADA25nH0Pp/+qd/ehLW67Wse3l8
nv/N2m70nOfluZ7m44fDQR7ntgHnyVxvtGU2m8lxeP6/0SH7OUbr7WM8N29+
z+ng6//iL/5Cnvu1X/u1Shf43C/8wi/IZ3O6+Dyvi/u+7/s+2d/m6xjTbuE2
hHlG+z78O86XOcbX8DFjB4b77OZ6TjMf4/u0bWeXsbGRubdJlxnr5+N8vn1f
O3/m2h/8wR+sfmdrvUmrsRnz6U9/uvrtb/7mb1bH+X72Pe3ysMckTLnxvdme
vCbDlFcbc73dRjPPMf/us715DqeHxxqeyp8BAOC5uGWt/+3f/m1ZF//cz/2c
/DdrO9fHrF8/9VM/Jc9x35XXyhtdMtca/bfHt/n/Rt9sbevSen5GEATy3B/+
4R/K6805oxOsD+bbRY4jZLcz/v7v/74xrv7Xf/3X8hruM/fdh3/3x3/8x5X+
/sM//IM8xuf4N3z8l37pl6rrh7S+jbER35fTxvfl/xu95fPt+7IGmvyxBrZ1
1dZ6TrexsWnXcN/Z/NaMu9g267onzzm0y43twGk1v2Fbm+u4/PnfQ88xtuNz
bdvb9jD2fu53EgAAHptb1vq//Mu/rOportP5b9Z4PmfaAax93Bbgv/mYudas
oWe9tu9p9JvPm2NdWs8YPWBN6zrOff+h9HOauW/LmPTYz+m6D7cXjM7a9+Lf
tHX9Gq03Y9bt+5p+uK3L5r627czz+7TebueYe9rpMr/jsRkzN27GaYxm8+/M
/EG73NqY69plY47bNu1Ku7F92x4AADBGblnrGdMPZ03n///e7/2ePP75z3++
6iebvhy3Dcx1RofaOtil3/fV+vZxA48ZfM/3fE+lLzZdWt+lV+30dOXnGq03
z2rft+seXcdsXR861nd9ly1sjA0uzdM5rbePd6Wzzx4AADBGHkPry7J8Mn7+
53++oQk8Z2vO2d+W8bixfZ2p33l9vn3crNfn8+aYqfPbz7a1+JLjhuVyKc/z
uDaPLxvaz+m7T1d6bK1v24bbO/Zv7Tnvn/7pn248i+e97d/yv9v3tfW2/Xxm
6Fjf9WaugMc4bJsY2Bf5d4vFQv7uJ3/yJwf9wtb0ruOf+MQnqmP8dzudttY/
pf8CAMAtcOta/8lPfrKqp3m81T5nxuMZXotun2PtMOv3/uZv/kYe4/+bOX+j
LUyXBjL31XqzPt5ul5h5+MfUev4W0OSf16CZPNrr0Pk3fPwzn/lMdYzXyfEx
e70cnzf3fQqtN+sreLyD2yLGJpxuUz6MmZvhMuJ2AR/j3/Bv2zZqazpjvtHg
5/B9GTPGwufatofWAwBeBW5d681+eB/Sc7j2OVu/uE3QvtasyeJvqn7gB36g
+raKj9u/M2vJWBNMP5i5r9abNoh5LmPS+Zhaz+0Ve41+G9ZI06bh/9tr5G3M
nLW571NofZZljW8MbHg/ZPM7nve3x2sMbEuj/Uw7L+Y4r6Psswefa9seWg8A
eBV4DK3/x3/8xyfF1P2s7fZxTr/Raf4mun2dWUtvfsP/53/zcft3f/Znf1b9
hsfDzfFf/dVflcd4XZ39+77j9nN5nMFom3ku/819/nP3af+OMWv7+Jr2sz7+
8Y839JH/5mPtfH7hC1+Q6TDp4v/zv/m4/TszLmE/y94veOhY3/VcVmxn0+82
z+f+flEUJ+nk47b9uH1mlzF/32jrvf0cHgOwz/HfZlygbfu2nQEAYIy8HbSe
v5vi76/surp9ru9a1jvzG/5/W/8Yvq/5DX9zZV/b9dy+412/sZ976f3bvzNp
5ONd6ec+uUm/eR4fO5euvvuZb+fsc+b5tq27jvVdb35vzg09v89+Q/caOsd/
95Vh284AADBG3g5aDwAAAID78xhaz3uQAAAAAOA2gdYDAAAA4wZaDwAAAIyb
x9B63k8cAAAAALcJtB4AAAAYN9B6AAAAYNw8htbz3icAAAAAuE2g9QAAAMC4
gdYDAAAA4+YxtJ73MwcAAADAbQKtBwAAAMYNtB4AAAAYN4+h9Z///OcBAAAA
cKNA6wEAAIBx8xha/7GPfQwAAAAAN8pjaP2LFy8AAAAAcKNA6wEAAIBxA60H
AAAAxg20HgAAABg30HoAAABg3EDrAQAAgHEDrQcAAADGDbQeAAAAGDfQegAA
AGDcQOsBAACAcQOtBwAAAMYNtB4AAAAYN9B6AAAAYNxA6wEAAIBxA60HAAAA
xg20HgAAABg3b0etL/OE4mT/+Pc+5hTHCRU3UC4ned4nFO52FIr0lTeQngal
stvNpesmKCmNY9qXN1CWx5KKsqTjs9sEjJNTX39b86j1WkmJsE3+jLa5Oa0v
Y3Lv7uiuB3cZU7xwxN+LR9fkMl7IZ8Q35quHeGnZwHvm9O1pPZvRLjs+md0u
u19JS7bHPH70PGbbiXj+jPbVsYJWnnjWZFPr5DElXzx/GRfD9xP+7IjfLfTv
nqUs85jmvtN4jxxvSkFyJu3PQR7RbLqk7Ph0z8h3M2EDh4J90582E2Ebbz2a
ttBLr89avn5KSStH2NhZPkA/T+ufx7HPw+u1eHHXr0tnbfP03JzWi3qV2z8x
E66krafrsDqW5qJ9tHKFv6we/Z0sE36ee3NaL9s2092zp0ORyLbYMrHeCWk3
j5LHeka5pyiKz7bl9nFEcfYE7062kX5XaYF4Tz2pkRNKtQYd07XUi+hw5l5H
da1pE7z0six02p0phcmeDocDZfGOZq44NotuwJ+aHFP9Dj6h1nMds+T8u6vK
xw7hXJb59hE05Ga48D16NI6qn7ZK+m14SGOKkvwBzzmtfx7HPg+v18q9yFuc
9abbu6Rv8ITcntZ32KdVrsnKk/XuajnV/RSXljtj4yMFc6/uwzgerRrnfJrM
V7SYuvr8RLTlSqtsa60/ZgH5jkPz3Wn5xesJebOg0d6I11NyzbGjaCdO63RM
V2HVls22s+a1oo84Ff2spKN+U5rC6XTJcx2ablKZj2g9q8c6pquqHyTT7In2
qajPFxOPXPF3132zYC7bmeoe4r5Lkz5ho5lHsyCz0rAhT/RpSz43dVrpSbTd
RJt1tajGZCbLXd12H7KFSIc3XVMUbmjiiXvOtlTsdzTxF1JXZTr5WZ4nEGU3
8ckXv+G07BYTmut0yvtMFrReTjp8guF2u1fl1/c98udBT3sxoynnIVDzRIXV
F1+nyhfTtd9ow++jtW4PsIYIXdU+Zeo/fse7yrIr/+Uxo7lX98O5D258VJWv
8P2VKT/hn9uYEvF8Y3u+x0GnK5zxffwOHzhSftD33EdK+7XdVuFl74tMiyvS
su4pd35Xt4vaz4QvxlbbKAmW1XWuHGd4k2Ymz67wXWGndVI+ir+fkG2VL+5Y
d9QYDY8ZVj4/ZJPe9+Py9Nh5d1yf1pHRvwNt536VV2+2obz3XVnT/524jbRw
O2bNx7apyEP9HslzRULLiVvlaboMtJ/0P7OLIV/n4958QRPHlNVa3UvUcTNX
pNn3aWGld8g/iiSgiSkD4Q/LIO6sf9rpS0X96k63lR9GC+HDa/O7nJaiLmG/
qu1zz3qtbZfdolGn5LHwC20Hx1H3h9b3YNWTjfdkpf1SlFMYh8J/HdX+kj5d
UrCY0yaMKc1S2um6f5erc3IsVvzbX2xFm25Lkzs1bsflV2k9P2cfSB905rtO
PTD1f5CbtKp2yXS3l8/Z+KofuEsySkJVD5u6JFm6chyrsPLpiDq7czxB9Mu4
HnImSwrDHcVpoXXGEVoWU5aENHXqPorxT+mX4p2bz1ed46HpdknLbUhJllG8
U3mZhTmZcTbHqvdKmVeV3n241D4v7CfSE6UH65kT2oYRBdrmK1lPn7HFyqvq
nvlCpFe8S0WyrNpc3Fbe8dy2uG+4UW07Zx6epLO6T6dPHGk7UWPmG9GOT0y/
1l329nmCKY/ZB/Jv7ou7oi20Fce8dSqPbYQfOQv17FJr+GS1o2yfiHaNW4/P
2z7cUZZd+T8KX1rMlnI+PxP9oKVM+1zWmQ1bi7zUdbRo2wRso7muU8raRouB
eQ7xLE7T3WRFsfCFcD216qRL3pe+cjdzIY7QsZQOeUobWZ+qfKhzdzTf8Jhd
RCtxzpl/ksKl9u0glGsa0sOLR/H3LuKlKqeZ9JUpZZfaZOD9uCQ9ps23EnVU
lia0FVrkyTLSfupMKcpyyrNItjnvZmHvu/KphVvZVN5bj0lt95yW+j1irZVl
586lX0XBStQ5LkXl8DPbnPN1X6dvsd3JZ7DvOwsePyoojsR76df+OOQfR90W
c+cbihOh8auJbFv/UUf9c5LGWOdb2j3VaZopGx12lR7Y9rm+Xju1TaNe3+v0
z1T6d7qtCq2/Vuvd5pyPLL/m2Hsu6shdENBmNW++p27zPT2Es6p8zJhNKLRA
tk8X3f6uONC88mPhK9JvJ5Ta6bbGI7KNX/mxmYMoG/nsmzs40lqk2V2Zdqmq
a9yl1Z7V7/fuYPLg6LbNMKV4vyJRn243K6tfo2xk93HUO2HsfTrWcjr3kcv+
mZybOmsLr1FXdd9P5XvNbQZ3oX/bTOegT1R+VL+j6dprlkGLfDeV9X+u1wUs
xPudB6KMvS1xv9+/q+fe1Dtuzymp+kW2nRo+3C7L7vyb/KZCA4NgSyup57rt
07bNSd6Uf3iyH3Nalic+kNj1okK2zWbhhe9LT7mba0VbOT/ktN/nlEXm9/1t
EDOGX/eFH8/fT1HjN+06+BKb9L0fl6RHaZFDm3jf7EfospzvEqF9e9rnOUXs
H9renb6S7xr6E807+i5lW/8uf2Y77ed83Wu9Z+a9NPdKxfWq3If8Q7fDOuf1
u8d623ni36xS4U9JPSa34fZPNJc2PJz475X1WpdtrHpd/n1npx9j+IMMan2P
Voq+08SMRflTmk39E61vjNWdvKdm3M5Xuj3Anut+8bvseJB6YO7bpVVHM/dz
vFbrW2luzf+qY4meJysvXHNQKN3ktorn02w+lWMY3iVa3/H802eq+pnfiatt
0WO/cO5Qcy1bl9Z321T1dZr363puA12HbuNQ5NcR/Z8Xuq0+oTi271cq/W7o
qUqbx5re8OFT23alo4j1WD/PNUxnNPXrvHdpfbM8bH0+1erT+um0zSPT5LJe
XPK+dJd71Td2nGqMlscxHdF/TIru97qz7B/F3/s5aSPewyanWn8mPWVKC89a
c+z4FKSFsO26stOdZTNXzw90++xRjjGpNSCptNU8OpzYsq25dXkOP7NdF13u
6+r8gbXVsm9stH7IP8oBv+3yh550+ptY1Bvi/9tEtoHcVazaEHqdSqOsrqzX
+n1pJecXt36rLdujZS+TsWm96l9P6zkq0Xb3Bura0/dUvCvrtR6rXFbznt3p
U/7qeK70idDMNek1l2Zul8mDaTVOKP3NtdvGV2g9ryty6rFkSR7ocbvjZXWN
Hl+y1yFtbH1wmn1Pu34330nY41hd78TSvBNnbHGJ1u8DNf61SY+9dhlsP1Vp
rq83/ZP+9cA5zeWaYXusX/UDHT7m1dfK9XaiL1Vfu9fz/dm9tD7gMdXJtvaP
bH1Bv77otIucixDtk64540NxFO2KxUm7Vj0/uPB96Sl34acLtsG269vYAy2k
j6Un51T/07PS+wj+PkB3W+uMTQbej6vSUx7knMTc02vTy0i+K9v95Wmt0+vR
alW/V+33yPzmZJ3ZmWe2ucjXrbohbbUxKq0f9A/9HLfjm4iO+qcLM+8jx1hE
vXzUYylyLXxHW+jqeu1M+cg63ttY59GvH+QeWi/HGMXfQZJTcchoq9fpXa71
rnof8lCtx/DXg+tY44WeQ5sG1vGD9OM7f0WZqE/LfXMOTH3z44o+454OWaze
9d7vr07THMk+7oTCTPQFSl73Vs9HXVTX6DmreZBQURwo3qp5Dk8/Y8f3c2YU
57xme6va366xt6qneeztcMgp23f13e13YtgW57S+TNV4bT3Wx+OMp2U5PFZy
UOuuhc02ux2tzRy3txos22ih1jHZtlfaKfoKVl0v+y5cT4SZqJsKuUazWiNy
D60PZ2z/OSUin23/uFTrqz7RIVT9Jr0On8ub9UX2K7l/o8/7q5CK45H2ekxh
tssvfl/66kI1Hy7SxuPDRSHnguf+VP4+WqixCn4HSu2DE9HvelEo7ZnveA43
o31xP39Xa3r8s5rbqZ+DNhl+Py55/5L1hPxFIPLGulJQMDPX136602WVxhua
TNZ6DL+vfbqv1jR6ll820qLt6s23lIvnSr+SZTH8zHbaz/k669lkHdFB9M3z
JJD/tv2n1vph/zhE6ns3XndalIWws0nTaf3TZWOzbqFup+v1CmyPosM+V9dr
w76k5gCFnXgtwj6hzczWoSfSyzPcttYnnd8wJzzX6vbU68eU5tX6WdPnrteJ
rT01ltOou/QYk1ozU2sur6mV6/Nm/d9IHfVYwDpttTPzqJpLUGvGlrQ3fZUy
oZlTn/Nn00Gt5zG65rhZTuuJ/b20T+H+qPOzHrhXfc/Gtwqup+oBXU8Uycba
48Ch6axp72RTr4nm9/b0ma2xrgFbnJRlqxzq9Uj2mCe/v82yHPQJafO0WoPs
TZdqvZue1+yzk1l/afufGWNYt/oV8WrSSOMy3Fc+XM9hnpZlV/5L4Xf2HhOe
51S6dWJrff+6P6LGLxt1fhbS1G3a0OG14qnKVx6vrG8yhD8uQ92fGn5fzpY7
69jCb5adt9D9zlyv66rPLeS61oI21nF1r+v9/VKt71u30W+T4ffjkveP14HZ
9+Z0mm8beK38orUXgrdQ64O7fKX2owk1xhY76rNDvG74FZfF/swzu9I/5Ot+
6111hD7bY6OJpfXD/vGiakfUaVJl0K5/uu2sv6XZ1mv+ZZvRWo/bts/V9dpJ
GdjlU9B2an9L41k6dIH2PQE3rfUPoDgcqHwJ38lL/+lZx2LScSi6y5fPFQ/4
jvgo2sKHw/3biXx9UfStcSnlvXv3MDiWwr7XfeM6ZIun5ljaeVF9maE1a/fi
WMjv1x9nn62jsNeA/e+VvlKUd0nHTp87Kn98infGPLfXj0594iiOle316w/0
9/uVQZ9NzrwfF1CWhbRL1zn216LDLo9B2WHbq595xtflvU7qlkKNObX1ecg/
RBmUXXs93qP+uSxfj3tfHrMqniKd92CsWv9SKEI1thc+ZG8I8DKI562xAdFe
P7sPDgDg4Rybe6GunnEc+1UGWv8Aioyi8CXuSwUeUFa8t3VEu11AO1Fmhyfd
lw0AUMPfj4a0C3ZPs88luAhoPQAAADBuoPUAAADAuIHWAwAAAOMGWg8AAACM
m9vW+iOV/F3Y2W8WShnzNn8ZsWiPpfzWZChN/L1Q9zckl+ZH5SkVedo/IE/7
hNeihRQn3XtTvZQykt/TFJ3f+NznWYP3OvMs/v6l/zup4z2+CRy+RvlB/3dZ
5YXfkO2TmJL8wnSV57/7G/LPi2xQ7imO0/54Xxen9+E+/mrwqtnpJdbnrxC3
qfUcN7K5zwbHC+rdr1bvw2r2ZHXv2t9XqX2hLt1Hk/de79qjIV5NW2naNtbg
H9t7llT3uDI/7TydSW8Rr06+ZYmX9l45zf031F4Y5/bbOfeMc3nKGnsayf1I
FsG9v1k4xJvm/jLzwMpT1tibSH4HubHKL49UbLTqvEsby1Z5tG7ubeLOqr21
ejnEjf2B3FkdQ/PY2gtHPc+Ox9XaG0Y8L+ktCxV7524oVp0p1/Wk8cxta3+n
fv+8zgZlrPY069v7qS+9Jz50hY+ff+5YOFK0mjXjMV9pp2vIoxXNrH2CzLPm
D3mWeN9m0+XF8QZPuDa/VXw9a3+j5W64fh2y90i5Ta3nGMwTWoeiLSv6GamO
N+hvTvfPVth7DReyTRgbRB9jPVF7U52La51uai33WvusVHEoIx3TPFV76lX7
Mpm9SP0FxTI2ZELJvrhnfl5U36SuhuI5Mftdx3erqr6d7k6/+9/vzN5Q5/cU
G37GmTyJ93XCe7MlmdxzMt48IKajti3v5cV7b2bh6uRZU39OoX5WqGNPqj34
dWwQf6X7RbwnqR3DVMXp8leR0uoiUfvgT7aD/sl7gvAeX6noA3OcatsXynhN
/mxNSbanQ57Qylf2NjEaTCzVHcfNzGO1v2nv81RsvKH4NeqZyv6Lnehvl7ne
s2tSx2kd9M8rbZDW+/NfnN4uH7rUxw3lnqJo7N+4HnXMXCuu37V2ugIVj82O
zcGxZyPKzrV1BzCxCk9i6l3MlXvHS/twbNyEUhn/VtU19t6RV9l7pNym1p+W
x7q13xLXr57uq5kYTd2+ofZK9Nd1WRZJQBPTv3E9Wgbq3PGQUcLxpKein9bq
l5g4lFFRp8mOgSH3MPc6YjVcmJ8u/5VxdecLmuh8utN1M55lqdqz3mwm63GT
fxX3Qdxf5M11RJ9S9+9K3a+ayf3gL+zX9zzj+jyp2GR1W/1AwaLuh/K+tUlv
P1LZ3q47ZGyM3v0KVV1hYrAs5T7XUXVexSrxGjEvTGwwJlk6vXuRSvTe4naM
DxOro/OatLXv9l0zRquJS1Llj/Xf0/1+7dt127Pbbur5Vpp1TBOzJ+egf15g
g3g9s+KR3TX9ZzC9Az50iY9bHEV7YSLaKqbNlATLavzEcX1R13fvaZUFc/Im
C1ovjd3cZj/uyHvs1+Ng01WoYzqmNBPvkHl/uL3ku9Mq33m07IkHp8Z2PHsc
arqitNp7e0ueO7fic5WizvHlc7KtaYs75Hmuur+2k79YVuMy7mRZ3Y85JFvy
q7ErkeY4r9LhuxNarReVrSaiz1vqdJgydT1P2JBjzGW08CcUZFZcWsvOrjel
IBF+csxo7tl7wE71Pr9ZtTe/qX/MftLJdlGPHYl+QGztZXV5fd5dV7qttgXH
mbPjU/F7s53X+/F6s430s257q3K3Y4NxP3C6SWqbcj8m3tFiIvLIeUn77XxR
Hl4CbwutF3Ur228a6HlnHaeNx4y5375b9/cZY7mfet2/Yf+W187VtYEcz140
NKO5Z7NJQ1zFTlgGEUXSRzwKZZzqvYxlf+dMaCbK3hH+PZmthC/3tMPb+enx
X18/b7HdURSs5DXOwmiWfqYVy9Lk34yVTpZbCneh6Hu+qGK0yr5+NtQvs+l/
xsV5Ooi202al6nLRt1b1+JG2E10niX5aHAWyPdY3bmj6rJHVFsg2/fHnTdwM
E7vLjG1z/RjFkRzvdys7Hqrx9MkykPFqZZtkYC/EKhZ4I0au1xNv28TQ0eMI
ZTvefDsGh46p7s4ojBOKd2srfkif3XId470ZQ7Mur3P+OWyDLJjqeZGQkiSi
tYzj4V2Q3jM+dNbHW3ZPartX42xhTBm3zxc+eT3tzCqmgmgnhHFIy4mKu6PG
+UoVm17GfhFt/VDtGa/Sr9qJJi/pRmmFiYETTk2+OtKabmku3r84zSiNA1V3
6HhPdj7U7+uYKsd9qGwifDWMQtpFqWUnR9gppDBYNuJXmDptuo5kfKhI7yPP
e+PXcbontA0jCnR7R7YBRRtn6Zlz4lk7jlnTjKWUbdXv51z24t1ZTR3RblYx
aRezpSzzLI1VfIm7uXi/SwqXKsbcMhBp3e0oPZj7cN+bYxqltJHjTnNVH1xR
n/fVlVLrq3+r9oZjzaHK98aZUiTHtOr4W5321jZYNOZEnWpeyo59PhHt1Pl8
RX/01oCd76N5T8Dta/1exh+q/OKFGXey69WeMR/d/7L1R46f9tTJ9m9O+6em
nnXruVjRbjzo+lu24UXfYrUJaBes9bvZFUv0ND97Ub/Mhc8sFuw3azXPVdXV
Vvu6ig+p48/7ph+Z6vgnx6Y9zL91v6oa20iteH763VjP5/L5C/F/jmH14uwz
hvNkOKZCN0xs7Mmmspd6l07fg05biHaKo/sCQRRRuF1pe3dovY5P6Oh61a4L
Xa9eX7C05s+zraobvWou26v6HF3p6YplFvfEyM1DHa/LtB264mRbbQcVS8mx
7m2Niffa7TQe3Qu7zr7AP/ttUJ7uYW6NUwym95wPDfr46XvZiH+ox3o28f7s
WNpJjHoZ57GOW+7a7wrbQmq68mXZTnDX0g5LYxt/K/PGbZhZeOh/dpmL9lhI
wXZDc7aDjrsyHD9N2c+OmWvsZJc7tzNMmaj8cVzEnPbZXmqZr7Xq9Fm51MFF
NQao2sxH61mNuIzO0FgdrxkUuhZsaSX7zKYdpusXa9xC+lAVqzKnLKrTdXF9
3ocZH5qIvvfEV/Wz0PVq3EDnac7x9HKOkynaQ7ptXvTYux1f1daEUvu8jO3X
4Ztddr4FblvrhYa4em7ZGjvn8ZmG//XEvpXjlg39acX77KFL61W7tK4bOc6l
Y9qOJvaxHV+9CDvGvLvyw/eek+dPaDKZkO/rsb2OPMl4kjLOday1b0rz2Uz4
t4696vm0CNKTa82aJm86o5n4/cTT41j+lAIen+TYgL4vnz/xPZpv02p9TO8z
zuTpBD0uwu/UUNzPTluI40UW0nyi4/GJd9rEEW2sjdx3xSHO5HPruf29jqOm
52N0O6Ca59jHap2fo8Z6utLT369vav1e67y/7tHgjnpC6kxD62od77dbOdyv
P+efgzZQsUAX90jvWR8a8vEOH2rGG09VXF7T7nZ84cvnY43W9YXbHSP4hWm/
qH6/0q0JxRm3N8X7vw/luSiL5Bxx2BNToVon6Xg0FXmX4+u9cW9tre9ot3XY
qR57LFV7imOzmzF8x5FjNzx23vUsO1Zbt230s3rqVfk+6ji//Fxf1CtT36H+
uMs6/p3jWPNAnEaeM7i8Pu9F+/psuaaVnt+y49sdk3X1zDvr+Wr+5TJ7n2p9
02fO2fkWuFmtF9og10479rxWbfc7b2Md62gH6nGhRdRsd5t51aG+QNcYvnxm
6zozB1qKNty85V+mnqvGcAby0+e/qr9Rt+XTqs+TU7Be03q9otVK+PdS98lm
CxkPvO2rxzymtfjdeiV+L65baK2bLlYU7/vW+5x5xtV5svoIeryloT1XoepG
u4w4zqiKPxw0y7ZT59R8hqwLYzV3n1jXHMIZDa7l1OvcVifz9XbcXz3uHbTX
X+r5ejvmrJmvr/qrPqXV73W/YzlsNxWvc3Wynlqlcdg/h22gxrG9tZWPtN2/
7knvpX7a6eOndu9s65QHyhLRDmTd72kjDGm9scPasmku5yz0nIvWKdZRZxqS
6d87riPbQt1rvVX70rZ3ZsXOrex9rG22srXeua6fKX1vEnT66rkY7Kpe6+vX
q5ju7up0DXEwUWs3q+usecHT/BXS5yfb7jnLi+rzIVpj+PFKzbUsTd2v166Y
Ob2ueqlhb1NnWGM9yT20fijW/XNwm1qf6rlxR9QJKWVpSkmSUJKqcdB8p+qM
Fc/97BPazLzW/I6eg2v1+xgzlzvfxlSUBWXxRvTZdD9QxmnMacff3M14vKmO
OWvmrcw6/FLP85jY3mpttSvSm9OxFHXcwrX8fTg/ff7L/j5ZR3LteZ4ErXlQ
m+RkbHSwXazXUSe99u+i9YwzeeLYz/50LfpBORWHPe30/JVqe6k65M6dU5wX
4nxG2/lkMP5VkYln5AdR3jEtfD3GrMcRjtlG92fE/bKMUk6HIM3VWiGZzolZ
h8/zidZ8s+7TTswa9DJTc5hDa/P0PC7P4WSiX3LQ32T4m6zhK85sS9m+To/5
Xlj5CsdgL+h40GvefV1v5oFOTyj8b0+hnrtUa9367VboNQ3LKKPj8aC/NZhU
Gjzon2dssJuq8f4wy2mfhjTzrLV5g+k976eX+3izPuV47fwN517uBcDfVvSX
2aDW67YXryXJiqN4r+u5XHW9mbs7ncPuj4ms2lbuPKC8UHVMY85J22wm6qCD
LEO/cX+17lS0n0X9kwmbn9N6U/b+ckf7QyHnw41fnNMgtS7UpSDleexM1HfN
Z0UL1V/nthnvTxFv56KsY9XPkfMG4nlZrNpaxid0m3S+47n5TJSR8T9xXx5H
FzbheYa5r9Y5nqvPzfx479x3ozxVmQVTVWZb2YY76PkXXpOxp0LkI7Xq/RN7
v9ir+X7x/u45ZpbIs+3T0PpHpGx/L2nGpkx7v9DfFJk1oF7DF8y6nXWPb8Tr
5nfy3kJ9X1qt4bFYWO2H3cJvnHP1Wk7zfje+mZbvx+HC/HT5b3JyjSN8s7Mf
oX9br3lq/buFss9139ef3PNMno779jfmvHbIqhsPcfNbb6F9u94xBv0+mt+6
M4ry+rf2WpmGvUw7PNu10upW65Rl3b1bNK91m2uEO8mjxj2dab3XQrLyO9NT
+1Kuv8MzNps1vkFINjMrLWreolprMWC3qPFchzaJXf4D/nnOBmXS2L/Ak+uv
6282B9N7gZ9e5OMtv92Hy+Z+AGyHrPt9T7hP7fZpvSpLe6+EO39Je2tMR61l
qNtNZlxnqN/Ja/9tf3MdMwao6y9rbwpnMm2urU2svST4fTqaNpK1rqE19pgG
i1N7CL8ok/a73hpbLmKrbB3Rfk5aayiE30yb+2gsdkL3W3tINH2i0PNktt+L
9lir/uRvVrML6vPrtV6l26w7lHtXiHwtfKfxfP6G99hl77ZPOxOaenXb7tSm
Xccwhv+YcDvzsj3ouhDvQdm1d9gZ9L5kfc89lsXA3mz3g+9ZFI//be3L4Gj2
suvNWynK4ZK8qT3z7l/eL9SecL1lo/ZDvHbfvOuvqSl1enr9bOC+fXY7FsP7
5g3757AN2H69exaeSe9ZP7mnj5fyusdZ63z9volnOA7bRNZfvXlW9dN1zzyz
r+SgHc/UhceyIz28z2J/XSd9tJ2WY9+ejQ+tz6/ws067dthb+vTtaPVDeTtr
PQAAAADOA60HAAAAxg20HgAAABg30HoAAABg3EDrAQAAgHEDrQcAAADGzauj
9bx3c6z3U7klOtLFsTvDHYXhLaYXAADA243b1Po9rWcz2mX3/3Y+Ws2acSv1
XpiPsbeB2jdrRvvqWEEr3rdhsrH2mkwH97PpTdchasTCXHbEh3lSOveleDXI
oxXNluGj7o3w2JjYBqp8OvwcAAA6uE2tT05iT12H2l/aWZ7uKd0dp+1K9J6s
gdlf2cQR47219N4Rao8vh6Jz+6+14p6punzWG8P7yXmFtV7F21rdtNbLMZ8o
1nv0dfg5AAB0cHtaz3sZ670MHZc816HpRtVl+2hd93ndKYU9e2JmW7O/oUOe
56p4RlpT/cWy2mOU45mndqyyrbXPpDe0T6qK2T3RsXLNftRyX14dQyNd836Q
i2rf1N60N+JKJVWcapnu6Zb+KJiTN11TFG5oIo55s63IS0Zzz95TclrvDyrP
eTRf6ZjxvBfkfEtpGtZ7q3rz/ph0A1p/zILGmIM3XVX243O+O6HVelHtNzlZ
7qz92/Y67rnKn+975M9VnBqOOeu5dvyckrZTv4q7xvuN1vt/Cn8Qfe/6vkeK
17PqvOv75PmL+l6HuLE35mzTvYc5p6G6h7Cf407V3ppHke5pvXfydBX270l3
Jh9FEtDErX17tqrjtF/qe8f9jiY6f51+fgN1CgDg9rg9rVd7XSut2Mp56yg9
UKn3uJ+sdpTtE71Hc/ee7kcdl+ZOaHkYhbSLVPxMo6OLbUhhoPbT9nR8IzUu
79Ca4y/kKW1ke+M0HrtBxlbQsaV4r3ZX6M92WscD23jWfuxDaW/FlZJzAc6E
tqFIY5RZe/S7NOcY6kI/j6JNsJiJvMUJZWlMSxmbQ6e1GmNwaBlEFG3nlk4F
FEcqDkdvXN8BrS/TrXj+luI0ozQO1B7iOkZIvSc9pz2iQMe6UXtYm/ghHm1E
nzSJdzTjdkcVz7sdI7YZNyLdLmkpyizJMop3yjdmOh58ulHPmW8jSpJYtyfM
vVLZJnNEWynND5RGKg6xubaZ7321fzbbfreL6GBiKMmYGaIswrUsq/7YLAP5
OKp9xn32gSwV5SK0Xef/Gt+zn9Hp5zdQpwAAbo9b1PoqpmErpiDHqqrHV9V8
eGe9beJqtuJCenJevB4LCKd3VQxoGdd+zrHtctrvc8qi/hjrjIrNNBX1sajP
+b5C0/JA1Nnelrjf71tz8INpb8WVSnXsS/NbpfVd9T6v6ROaGmxpJeNkuVXb
oRm74qjyZumTiiG57u4DnhvDL3PRXggp2G5o7tt63bZXLmNFLRpxsK3YpXaM
zwtiRJVCA6PdjrablYovuNTl5rTaLXa8VXlfh4J0T/lekGeyLdWOV9xO00l8
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
     "], {{0, 242}, {507, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rvi8hKSEh8RuiVaJj5JcktaSKZJnJF9KEaUMpWKkqqWeSGOltaTDpCul+2Vg
GXWZEJkKmUeysKyGLFW2UvaxHEZOWy5SrlrumTyDvLF8gvwZ+bcKHAp2CtkK
rQrfFMUUvRUPKd5VXFFSVwpXqlF6oUxStlHOVm5XnlGRUQlQqVB5okpUtVDN
UL2iOq0mq0ZRq1IbVmdVt1ffrd6lvqyhqUHTOKfxSVNM00/zqOYzLTYtR619
Wj3aGG0T7QztDu0FHQ2dOJ2LOn/pyuuG6TboftST1KPo1eiN6Yvok/VP6I8a
CBn4GRw3GDUUNiQbVhu+MxI1CjSqNZowljYONW40/maiZEIzaTaZN9UxTTO9
aYYyszTba9ZnTjJ3My83f20hYhFsccZiylLdMtXyphXGytbqkNUza37rAOt6
6ykbTZs0m25bBlsX23Lbd3YydjS7dnvY3sa+yP6lg7hDpEPrFrDFekvRlleO
ko4xjledsE6OThVOH5yVnXc433VhdfF1aXCZczVxPeD6wk3KLd6ty53JfZt7
vfu8h5lHoceop6JnmucDLx4vqtcVb5y3u3et9+xW861Hto5vU9+Wu23IR9In
yefedp7t4duv+TL5kn0v+WH8PPwa/JbIW8jV5Fl/a/+j/lMBpgElAV8CjQIP
B36i6FMKKRNB+kGFQR+D9YOLgj+FGIYUh0xSTanl1OlQq9BjofNhW8JOh62G
e4Q3ReAj/CLaIkmRYZHdUQJRSVGPo2Wjc6NHY3RijsRM0WxptbFQrE/slTg2
5JjTGy8Vvyv+bYJBQkXCz0T3xEtJLEmRSb3JMsl5yRMpFimnUtGpAaldO4R3
ZO14m2acdiIdSvdP78oQzcjJGM+0zKzLos8Ky3qYrZRdmP1jp8fO9hz+nMyc
sV2Wu87kMubScp/t1t19bA96D3VPX55qXlneyt7AvffzlfKL85f2Bey7v195
f+n+1YKggr4DGgeqDmIPRh4cOmR4qK6QpTClcKzIvqjlsNDhvYd/HPE9cq9Y
rfhYCX1JfMloqV3plTKxsoNlS+Uh5U8rTCqajvIdzTs6XxlYOVBlVHXuGP+x
/GO/jlOPD5+wPNFSLVFdfBJ7MuHkhxr3mruntE7V1/LU5tcun448PVrnXNdd
r1lf38DXcOAMfCb+zKfGbY39Z83OXjknf+5EE0dT/nlwPv785wt+F4Yu2l7s
uqR16dxl8ctHm1mb97ZALcktU60hraNXvK48brNp62rXbW++qnD1dIdwR8U1
9msHrtNfz7m+eiPlxuzN6JuTncGdY12+XS9ued560u3U3Xfb9nbPHYs7t+4a
373Ro9/TcU/nXtt9rfutDzQetPSq9zY/VH/Y3KfR1/JI89GVfu3+9sd6j68P
GA50DpoN3nli/eTBU4enj4fchoafbXs2Ohw4/HEkfGT6ecLzxReZLzEv975i
flX8mu919RvpN02jGqPX3pq97X3n8u7FWMDYl/ex75fGcz4QPxRPCE7Uf1T5
2PHJ4lP/562fx79Ef1mczP3K8vXoN6lvl/8y+qt3ynNqfJo2vTqz7zv399M/
1H50zTrOvp6LmFuc3/uT+2fdgtbC3V8evyYWE5dwS6XL0svtK7YrL1cjVlej
yTTy+lEAhVxwUBAAM6cBIHoBwNoPAD3jRu61WVDQWsqxpktEzjB6yEmrCPRB
JMgTqoNhOAIeQ1FQM+h8jBJmFFuJC8Wb0UnQMxJgBhSRhVGWyZqZxnKC9IpN
gN2f4yIXmtuP5yafIH+ewLSQj/ADUR2xUxJskplSEzIOsk3yjAoBipeUFlV0
VWPVjql3a7zVXNBm0OHRldHT0jczcDD0NgoxTjDJNS02qzNvt7hv+dzqo/W8
LdqO2Z7PQXKLsqOOk4mztYuDq7Obm7uHh6enl5e3t/dW723ePt7bPX3d/ZzJ
9v4WAQaB6hSZIMFg1hBcyCL1W+jbsCfhd5FVeSaqMnp/TDKNHGscxx33Lb4z
oSQxKskmWTR5OeVZatOOPWl+6ZoZjMjauppVmB2yUz+HNefjruu5RbtD9ujl
ceQt56P3Gew/e0Dr4MVDy0WCh2WPKBQrlSiXqpaplatXqB/VqNSpsjhGOV56
Yvgke43xKZ/ayNMpdbn1hxoqzpxqbDrbdu5W08D5rxeFL0Vf7m+Rbg2/UtrW
0v7o6kTHynWOG8o33TsLuz52W92uuPPw7tueqfvYB+K9lg8D+2Ifhfe7PdYc
EBikH1x4Mvb04dCNZ+3DHSM3nne+uP6y6dWh1+FvTEa5R2fe9r9rG6t7XzF+
8MOuieSPEZ/8Ptt/UZ0kTX75eudbzV+5U6HTDjNq30V+SM/6zF3/qbRw+Neb
Je5lz5Wa1dW1eQIIgBc5JTojeU4j+ABJQlHQTZgXzoZnUNGon+g9GGHMbWwc
TgH3Hd9FV0mfRghk8CS6MHoy+TPHs+ST6lj72X5ySHL6cBVxP+Il8tnx7xPo
EyIKO4kcEu0XJ0iYSyZI1Uo/lvkhxywvpaCmqK2krayqIq0qoMasDqn/0BhH
dqse7Tadet1yvXz9VINQw61GDsYmJpqmCmZi5jwWzJZYy0WrKetxm2HbXrvr
9ucdqrcUOeY4xTqTXRxdDdxk3bk8MB7Tni+9erwvbT22Lc8ndruPr7mfHJmV
/NP/VUBnYA1lT1BYsH2IIpWF+j30aVhLeGlEcqRnlEY0KfpTzA1aUWxgnHo8
Jn4o4VRifJJ5MlvyWMrF1MwdDml8aZ/T2zP2Z4ZmOWebITNDZ5dGrtJu2T3i
eYJ7ufNJ+wj70fuXC+YOTB+cObRQhDvMdUSqWLPErNSxbGt5cAXtaFrl7qrC
Y0ePnz5xpXrg5MIp6dptp/PrmuufN6w0Cp81PxfStP9864Vvl9Qv72p+3Eq8
ot9GbS+7+qBj9br6jfCbNZ0vb7F0G92m3sm/29DTc+/TA2Kv6kPvvuxHjf3P
BrCDak98n+YM1TzrHv7wnP6F4kvXV8mvq97cHZ1/pzxGe39pfGZC7mPwp5Of
30zyfvX8dvSvqemE7/KzpHn6BfjXl6WrK9RN/9MDTiAHrJBspwTch7CQJXQI
GoP14RMoImoXGocuxEhgbmIDcSTcPfweOgd6QfoFwhOGK8RTjGVMhcwHWApJ
5ayn2FrYezhecy5wk3jkeS34yPw7BEoEzwl1CT8RGRf9KjYjPoWcmoaluqRP
yeyU9ZZTlIfkBxRqFBOVbJSFlOdV+lRr1dLV3TTkNGHNYa2z2tk67royust6
/fonDRINbYwEjWaNe01OmaabuZsrWGAsXlpettpr7WejYUuwHbVrts9z8EEi
BcZxxKnROdPFxVXcdc6tx73cI8xT14vg9cL7zNaUbVY+HD7vt1/wzfCzJXOS
x/zPBaQEWlBYKC+CaoNjQnSpaGpfaEmYX7h0+HTElcjMKItouujemH00m1h8
7O247HiD+MWE1sTYJIWkT8k1Kb6pPKlPdhSkWaXD6dcz0jOtsvizFrNHd/bk
XNhVkZuzO2KPe57BXol8Yv7svpf7bxU0HDh8MOtQYiGtKPowciwojimJKY0u
iyynVvgddam0qbI75nM8+URl9e2T306x12qetqtzrndq2HomtfHy2cUmy/NF
F95ckr2c0NzZSrji0lba/qJD+Fr49Ws3WTtDu251896Ou9PXI3Ev7f6TXpmH
2X1j/e6PhwYDnswO7RnmGTn7wujl0OvMUft3Lu8Pfpj/dHjy9rTr/Mia/zf+
g1srWA0ATlkA4H4YABdtBBcAIF6H7B96ADgSAXDVBjB3GYCuRQNom9Sf/UMA
GCN7x05QA24j0QOLxA9rKAzaDzUhud4PmBPWhX3hnXAd3Ad/R/GgjFEhqINI
9v0OTUBroMno/eg29ASGHWOOiUeyrmEsA9YYm4g9h/2IE8H54qpwr/Ei+BD8
efwynR3dcbo5ekf6swQiIZIwwKDFcIJIICYQxxidGDuZVJhqmLmZD7LQsewi
waRsVgxrHhszWxm7OPslDjOOYc4oLjxXDbcp93ue3bzyvE/5Mvjl+F8KFAia
CS4LtQuniBiIYkQfiR0VD5PQlyRJfpbqlq6WyZalyNnJaysoKCoqGSi7qYSr
7kRCfrPGoOacNr+OpW6CXr3+G0NuIw/jMpM3ZlLm8RZ3rHisg22O2JbYJdgb
2a86dG7Z5xjqRHXOcTnv+t6dx8PFs8Crdytxm5NP8fZhPyayqr9lgFtgICUj
6EzwR6pyaFbYYIQUMvOex2jSimN/xnskNCZ+TeZMUUo12eGVlpHelkmXFZL9
MEdjV/Vupj3peRP5xvty9jcXjB5kPORQeP6w2pHbJQ6lD8utKu5UOlX9PN5T
fb3mYm1JXUoDtXHrOePz7BfeXjrbnNG6vc376o5rrTcWurS7I+7s7Sm7X9Pb
1He9//HAxFP8M/2R/S9+vPYebR4jjJMn2j/jJyW/gb8qpwVmSn/wzbbMRyyo
/1paalnxXY8fYsAWxIBi0AHeQXhIAXKFUqBqJNOfhrlhEzgMPgLfhL8gObsp
sptUonpRi2hZ9DZ0AboTPYuRwZAxpZjHWALWErsL243D4mxwB3DDeDF8LP42
HR9dIt0QvTb9cQI9IZEwweDJ8JBoSuxg1GJsYdJgamM2ZL6D5KgjJApphjWb
jY2tjt2QfYQjnpONs4XLmxvmbuTx4qXj7eCLRXz9UeC0IFVIQWhOuFPkgKiv
mKo4vfh7iS7JGqk86VgZP1knOXN5PQVNRXUlDWUdFRNVe7Wt6pEauZq1Wo+0
V3TV9KL0zxnMGGkb55gMmkmaZ1i8sNK1rrRZtnO0L3K4v2XJScE50KXK9Tni
422eJ7w+b1XfttNn0FfcL5bc4b8SqE9JC+oMoaO6h54Km4+wizwZtRTjRbsS
xx2/I+F5klJyasq11F9pOulZGX1ZItnJOwd3KeUW7P6W57C3IX9xv1HBjgPN
B2cLzYqqj9AV00qGywzKTx7FV0ZVDR3XP1F7kq0mrxZ7uqBeoOFyo/3Zsaak
C4SLxy6rNd9v9bsy276ng+9a8w2PTriruZt6h+9u373MB2q9n/tO9m8dYBm8
8TTgGRiueK794tWr3W9URt+82/ded3xyouqTw+fZyT1fF/6ynto1fWGm7/vH
H6tzXPOqP10XdvxqWPy8rLVyZN3/0sAVZIB6MAhWIGnE+5lQIzQMY2E12B8+
BHcipwhRlDsqD3UN9R0tjfZDl6EHMUwYO0w+5gGWiHXGlmHf4eRxabhHeAl8
Fv4tnSXdRXox+goCB+EIAwdDOVGQWMuoxNjBZMf0BjlvMLE0kuxJ06xlbGZs
M+wnOdw5CZydXCncGtxzPG28GXzW/JyIr68JHhGiIScQNVEeMTSy94xJjEgO
SD1CMvOnsq/lvsgvKZKU5JRtkBVdpHZd/aumkJaHdqHOgB67vo9Bg+GisaNJ
gxmdeYTFMysb6zu2dnbDDlRH4FThouf6zr3A09BrdusFH5qvht+Mf0WgLOVs
sExIbahEWH2EYmRbtGXMcGxEPDahOsk4+U1qUho2vSCTLatsp0jO2Vzd3Q/z
AvKhfWcKth3EHqooEjh8pBhXklg6Ue5dMVjpWfXjeH01pQZ3am/tXJ1nffMZ
tsa4s0NN2uerLmIuRV4eabFsbWtTam/oELtWcYPxZlrn51se3d13VO6euEe6
n/Ng/mF43/t+n8cjgx5Png25Prs3ovK88MWXVwavC968eiv/Ln2sf1z0Q9LE
w0+inxO+3Jxc+ab8l82U17TXjMN3vR+is7jZd3Pt85k/9X9OLWT9Iv06vki3
GLM4smSyVLb0cVlzedfykxXRFerK2ZWpVbXVpNWra/6PDVJVWd8+IAYTADCv
V1e/SwCAKwRg+dDq6mL16urySSTJeAnAzfCN7zrrew0zAEdvraE7KWOZ//6+
8l8EM9HV
       "], "RGB", "XYZ"], Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{330.58593749999915`, Automatic},
   ImageSizeRaw->{507, 242},
   PlotRange->{{0, 507}, {0, 242}}]}], "\n", 
 RowBox[{"     ", 
  InterpretationBox[
   RowBox[{
    TagBox["ServiceObject",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                 "]], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                 4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813,
                  5.047809999999999}, {14.98813, 5.047809999999999}, {
                 14.98813, 8.29796625}, {14.163129999999999`, 8.29796625}, {
                 14.163129999999999`, 4.337966249999999}}}]}}, AspectRatio -> 
              1, Axes -> False, Background -> GrayLevel[0.93], Frame -> True, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> None, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
             GridBox[{{
                TagBox["\"Twitter\"", "SummaryItem"]}, {
                TagBox[
                 DynamicBox[
                  ToBoxes[
                   If[
                    TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-24a47c434404ed7b3b58d100ca254317"]], 
                    "Connected", "Not Connected"], StandardForm], 
                  ImageSizeCache -> {59., {0., 6.}}], "SummaryItem"]}}, 
              AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
         GridBox[{{
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4sIjUTVcAooO8+XdOPpnKDg8YkwNXuen7JA2
W/qycJSgw5sbHEde31CB82PFhGf3n1V1aFVgVz0zR8oBrF9czWFHsFXE/9Wy
Dje0Dj4qiFWDy7cVLYptDVKH65/g6Xbu0HMNOB9sn4I23H6w+SWacD5De8DS
tDQNB7ldC/alskg4aD2+nx6joeFgnPFi/oMZog5B9vlaQa/UHao9k7f0KUhA
+D/UUPVbqML5jCB+oIpDzJHypGv8Eg4eGad3ikiqwM2T57H5LndPGW6eya7m
GzMvKcH1o4cXABG3d/Y=
                 "]], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{14.163129999999999`, 
                 4.337966249999999}, {16.96813, 4.337966249999999}, {16.96813,
                  5.047809999999999}, {14.98813, 5.047809999999999}, {
                 14.98813, 8.29796625}, {14.163129999999999`, 8.29796625}, {
                 14.163129999999999`, 4.337966249999999}}}]}}, AspectRatio -> 
              1, Axes -> False, Background -> GrayLevel[0.93], Frame -> True, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> None, ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
             GridBox[{{
                TagBox["\"Twitter\"", "SummaryItem"]}, {
                TagBox[
                 DynamicBox[
                  ToBoxes[
                   If[
                    TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-24a47c434404ed7b3b58d100ca254317"]], 
                    "Connected", "Not Connected"], StandardForm]], 
                 "SummaryItem"]}}, AutoDelete -> False, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
           False, BaselinePosition -> {1, 1}, 
           GridBoxAlignment -> {"Rows" -> {{Top}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel",
      DisplayFunction->(
       ButtonBox[#, Active -> False, Alignment -> Left, 
        Appearance -> {
         "Default" -> 
          FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
        FrameMargins -> 7, BaseStyle -> {}, 
        DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
        Baseline]& )],
     DynamicModuleValues:>{}], "]"}],
   ServiceObject[
   "Twitter", "ID" -> "connection-24a47c434404ed7b3b58d100ca254317"],
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]}], "ItemParagraph",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716511272955678*^9, 3.71651127979862*^9}, 
   3.716511316119149*^9, {3.716511789986908*^9, 3.716511809549644*^9}, 
   3.7257320026322613`*^9, {3.7257320727197*^9, 3.725732082316077*^9}},
 CellTags->"twitter1",ExpressionUUID->"54d5ecfb-042a-40ea-b0f1-59094cf53ef2"],

Cell["If already signed in from a browser:", "Item",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7147508737529287`*^9, 3.714750882727478*^9}, 
   3.7165100268134604`*^9, {3.716510141743483*^9, 3.716510151363823*^9}, {
   3.716511442143549*^9, 3.716511449389278*^9}, {3.716511501570269*^9, 
   3.716511511348748*^9}, 3.716511851908126*^9, 3.725732002632543*^9, {
   3.725732091055749*^9, 3.725732091294541*^9}, {3.8329387962079773`*^9, 
   3.832938796383988*^9}},ExpressionUUID->"3d6f5091-edef-4f4c-a5e9-\
bd468357c948"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"tw", "=", 
    RowBox[{"ServiceConnect", "[", 
     RowBox[{"\"\<Twitter\>\"", ",", " ", "\"\<New\>\""}], "]"}]}], 
   ";"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.713026602457404*^9, 3.716511464097762*^9, 3.716511511349188*^9, 
   3.716511851908594*^9, 3.725732002632709*^9, {3.725732104943719*^9, 
   3.725732131709248*^9}},
 CellTags->"twitter2",ExpressionUUID->"0dd7e07e-39ed-48a8-b3a7-21943d35a09b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQl8VOd9700cZ2l7ez9t397bS7xk6ercNmlv2jRvWze3tKHbJ+klaaE4
9KWLcWu/fkOKiRNdX0XFhKUmLAYCsQyWJUsgEAgktJaxZIRkBaFIIJA8kjyS
GM2gZbTNaBtpBP/3Wc5+ziza0IB+38/nMdLMOc/znOcca77zP//nOZ/8x81f
feahFStWvPBR9p+v/sO3/2jLln9I+drPsF/+5hsvPPvP39j09J9/Y+umf960
5Qv/+EH24oEPrFhxlm3/MPuZAAAAAAAAAAAAAAAAAAAAAAAAALDsmI7MULu3
hxpbO6m+xYOCgoKCgoKCgoJyzwt3Ue6kkZkZR1+93tZF/v4h8TMAAAAAAABL
AXdRX/+gcFMrHf4+6h0cWYJeAQAAAAAAYKcnMGx7jXtsZObOEvQGAAAAAAAA
O073/nnuAAAAAAAAAMkMnBUAAAAAACQ7cFYAAAAAAJDswFkBAAAAAECyA2cF
AAAAAADJDpwVAAAAAAAkO3BWAAAAAACQ7MBZAQAAAABAsgNnBQAAAAAAyQ6c
FQAAAAAAJDtwVgAAAAAAkOzAWQEAAAAAQLIDZwUAAAAAAMkOnBUAAAAAACQ7
cFYAAAAAAJDswFkBAAAAAECyA2cFAAAAAADJDpwVAAAAAAAkO3BWAAAAAACQ
7MBZAQAAAABAsgNnBQAAAAAAyQ6cFQAAAAAAJDtwVgAAAAAAkOzAWQEAAAAA
QLJzz5w1HCBfh598fl46yRcK35t2ZeNKu37ysHIvW47VFz4ewaXsTDgU95wE
1b5GHbsFOB5DP6Kdn3CIvads039Pr52FJcjGuaq0kDKPZ9BeVjKzC8l11b20
1wEAAABwH3CvnLUq9XP0xGcNZVUGBRe0hRB53G5qEcXsPeGOM6a2MzuWUBDC
TbTG0Jf066Gl64o7x3xOUmssW4Ro72fN560qELuONdnuefZjNV0znTw/5b64
3nLt5CzwtbP4hP31lLLW8v+ApaScrl/i71NJCrsGWq4r/293LN3/L3p3Ouma
8rfGE8AZAwCAe8U9cdawm9Y5fEYX+xfw773FBTPdet02Z3Uv4eeeZSySqS9P
rDpI/cb3Q/WmMeUlrdosrZ7Tz5vHdg4Obj4/G6lFO3Vhclm/69yHzhq8fiaq
p9rKs2XwVgvm7zTrDdfH0tCSbfgOteoMzhewcWdyku6GcWUAsNDcC2f1Vexw
/Hxec7xp4Rph/rUpigsml7N2Utra9bRuw0Zas2rjwnr77DtD+Rs+Z/KBK4ah
CV7NsJ2zJ7fXx9h/ozlGmmgvojmr7bvOekrZvoNyr/rnc9D3lkANPenkpqvW
06YN6x3/v9hU2rnUvU4qon+nWRpM39M2wFmBgbt3RRlM/Q4N/9tL+msAgAVh
8Z01RLlR74mmkW+hmokRv7Q6a66SGxAOBWQeZiCUwOdOmIIB/yy2t+4bEPst
DnPvm6fAHCdNv6r38coBB6cyxmKZfxu/JzyxodDWdjgU0vJdg1HyUBN11nWn
O+OPhDinAfsYhNkYsb7083xYNkbR+uJEULlO+kPW86ePu/09iT1OvJFcxvvb
IZ77sDrh/y/UvvBjnF0ObPy+zncf07lOKMak/H8hrtsARdvFHGeN870oLM/x
7I5T2VXZN964tmRv1Puz9kzMmH8i1z94MLg7MyP+DdfXkv/zj5P/C5+gqYYr
pvcAAPNj0Z3VXxnzXqg9nzNAmRv4Z/hqEZ/adNqcH+kpSJHxvlV8/+eZ3/gp
fYP1M1+JCbKypaDT5qx7Sysp/VnrPqspvdohfsfqz9/+vGP9mw6Ukc/yMVS1
fb2oi7+fUtpJ/dcLDffX19O1oJu2CPeT2+SKHIYw5T+rHPOq6EXfXiVEruMp
Dn1bzY6xKSF3DXcURol9Byh9ldM5W63ltFr33cTGWsV3tZA2Oe2/9nkqtsRJ
7c7qp71ro59Tfk34qg9qvz+ZWsncp8mUL6peV2H2evqLGx3r4ucjvdRwfTEH
l+eGlzS60lFPabbvW89TlZ+5VkeZQ74LOzajj9qu/dVR4uohSre0Y94uTFcK
djjGa9c8e5CuWOo0js2a1DK6Vn3GluPxxCp5HPPZRyXorqQtDt9Ln2R9u+aY
78mO53SU43kxg1qUfazXl3Ececk35KXzfOE02//T8hzvLbXkCftrxLGJvyGr
dpCHfW/IT9W/nz0Z5f6P+rfH/j2Ot5tCHkMjs7n+wf3PXSWWejcSocC//hP1
rFxBt1kJbHmaSPHVu4i3AjBvFttZTTEJ9jmTW235rH+xzLyDNbZmmdNjzp/c
yBywyf7ZavwMZPtbnTVWMX4O8nxOpzxcq6dc0zQlTLkbYm3LfCzoFA+Ot591
e5I5Bo5OaXCG7ZUJeKviadpnqhI3YsdudQr1dzWn1VNq/gxXx+5KdjRH1Mum
07oX2Jw13jllTtFyOnYbfJzCzBkd78tb+6K6dpS869kVPb/ClluRWhn1LHDv
yz1dSPkFhZRbUGPIK+bf4eK3m2v47hdvbIzXrupZc9lHXgPOeT96WU0uk+cm
cjxyn7A79v+36v8L/Vdz4vf7WT0eGq9e69+cxMZVj//O9voH9z9qHHW84BT5
fvE/0a3HPiSK75f/M41dyJMbIdYKwLxZXGf1U4rxb/Wqg+xzI2zJFdhoyqG0
5qXGc9aWoJ8yU9MoLfV5k5+seZa/lkaZFf4ozrqatrxoj5/q+ZoOOQ2rnqe0
AzvsXqPdE7fmd9rb5HFWe94tj7Na+hHFR9XPadeLlvfWptBe1jfbnKmrlon+
NsJUbKqLjSlx3zpoeG09rTGMhTpG5v1SiF9JQetaBPwcpu6gNIdYp5ajYYuz
BqiYHYv1nPIYVRqri99bt879spb06wO2Mdp0IIP5YBkVZ6dZxk7xGcu1p56z
dc86553y9zY9az8uNYehxeIuxryLRLHWwdtMOXCQttjuLegu6Tg2qzbSFofj
2KtcH3PZh/xltve2bD/IzrV1Hz2fxGPzPuV4bP+vZVC/v0ac7xRLfZv49cSv
A+7C4Sbb/49Psv/3925PsX1fUb+bxPsOGy3O6qvOEfnUW0z3AGSOdUpqjhj/
uVz/4D7nzh35T28P9a5bTQMf+wDd+sRH6dbHPyJ+7lv/Z3Snv8+0LQBgbiym
swavm/9+r1Pu8/ss8bktpYZ7ZbN1Vu3Pvjm30vh5YPuMYu6sfr6HlfuEur/I
Oem2+5Ivlhny1pjPWhxTxhidnHU18+Ym8gXk+qXhGHPFTGPndF9U7YPFFTZl
Gz9j+X11wz4bYufbyfNhdrhif4iuHTd4Ar9XbNxGrFNm+T4i4uXMf581H3u+
4fhs8+eVOfLR59iYz6kxn9XJsbZkV5LHHxBrzfaHLd+N1hrnyoQp7bPmMQo7
XHvivrGyU3/1QUt7enw9aInbqdesbU0F9ywdxZovzL4XtBgul2uW+lUns7a7
xhBv91mOY02Uviayj/k7gfF+g30feZ1bYvqWexTm3N/V+ndZ0/8Lz5PxL5Y1
H3tLgeHvRajJNn78fDo565Mv5tA1da3iOOtXmdo05XDP7foHycOdUJAmLrko
cttHdxP0S7Hd3bsU/OE+kQ/Q9diH6dajHxSl67EPideCr+0X28ymzmmfV/Rl
JnQ/rZICwOKymM5q/kwzzEm3xkbWGtYumquzzmLdAHPs0eKZir+Y21ltW5fU
6o0pwrvtzmpb+ykRZ7V6tBijDC1WZV6HYTWll9ZQVXUluSoqqepqjdklE5nL
bzmWLQWVlG44jk382EzbbCTX1TJTH1Mq/LZ7609ut673ymOzxhiVnGsUaw5W
tGvB6liO93OVST1hw/yrluv1Is5qjt86O6s4JsN5Mx6bac2LKPks1j7ONq5m
u26rbReh+VynVjpfu6ZLrNNxTGe/j9/k/U8+myGuPX4NuirY9Wj5XrrOIUcn
pdSS1xnqpPzsHMrk5XiOlqdrvT7069maU7PDNnfN/H1M5hPbnDWB73VGTGNl
nIM1x+sfJAFKrmnE76Oev/g83f7Cp2g04wc03d5KdycnLZvqeal3lPv90zca
qfePfoP6uKt+/CN0i8daeWE/97LXelZ9hqZvXpP7G3IErDmuvK3pNjeF3jhM
tz//CdaX36WZ235THwFYziyaszrcs9t0XH4WZTrMG9LmnNwDZzXPY7J4puIv
5viNg/eFnT7HLXVZ1zuN009ByOn+dJophzDx3EPLGEXF7B/WImPI1pifsawm
V8A+Jk7PF3Aa1/k7q3mNLsNg0pWCg7RulfN8rnjOanLMmNdliDLX2t+z3gdP
c5rjp1bvr6f0AxnC19KPF5InZI/12+O09ms3aBub583nP8pxzHqfWeb+cse3
rzmXmMPHWr/XlFOz1r7ulH0MQ/Y5mXHzZ8xYnVXvztyuf5A83BkepsDmjdT3
sRXUw4r30z9Pw//2Ak3WvStisEbUmOnd6Wka/O6/0iDb/tbHP8pc9SHdWfnP
7DX+3hCrhyIRbT0sU7vBEQqzNobTtlA3a5O3HXjkAzTwzX+gOyMj9+z4AUh2
FstZrfebE/lME9wDZzV7YjRnTYn92ZKIszqt3RjTWf0O86o22nzMnhMY21kT
+Vys2h7N69Q8Set9T2NR3Dxsvvd775zVycuj93fNBmuerLOzms5NzOvSfN7V
96y5MU5OpXLlgHn8+boHTr5lPcb4zrpxDs6awD6zna/G81rmuE5yLGc1neO1
OXNy1txZ5mzEcta5XP9g6dHm/U9M0GDqN6nvkYfI+6s/Q7fYv9xf+XyqwD+v
o4mLxTSj5qYqTLhKqOfX/wt5eYyVz71aqbgqL/xn9lr3Yw+Tn20z8Xapad+Z
QB+N/0cRBTb9DXWx/UVbStu8D9yXeZ8AAJLFcVZz3Cmxotwni7NuwDXTnJTo
fhMrnzUhZz1tXu+gyvrxar2f7pQb4OQoUb0o5LB2gPPaSObvA+uVvIWwuAcu
bocr98LVksjHoj1fUymGfL1oa/08eaBeOzbzvdF6WzuuVPO9UY/t/CyQs1qf
4bV2B13x62Nhmj+2SM7qtO5EWoXTemrW2LqMG1vnt8fNDXixzCE3YJGclTpN
bavXgLwGlXv6hmuQr3lqPZ6UCuuaZ2Vy7TJ1XTfHOXrPm5w1N859DV+FNVfb
nhsw22eMmJ8pYMhnneP1D5KIO3do+NVdNMTd8ZM/wfzxYTmf6vEPUS97zb9y
BfV+5Q8olPlDmunxs3Jb+CaPo3r59lp81Vz4e3ybwDNraaa3R+TLjr55lHq+
8vsi35XXzdvgbXkf/ZBom/chePiVhHNgAVgOLIqzWucTr02j4mo1103Ju6wu
ozSLo4k1NR3mwWg5X8wBzJ/t0f0mxfAsobk4q3WfJ1ON8yVClry0KHOwEnbW
MLkc4py5UT5Lw5bxXXfc/NlonpuTktjnosPaVrxsMsx7irZe5l5tPrw1n5c5
t+m7g2V/5fN+MZw1bJm/bboPHbav77UozkrW71iy8Lli4tkPzO1818vsORcb
oqxjYJgTJsbA8h3CeQ7WYjmrNY69ka4Yldoy/0k828sWmzXmvLD6TD6nxyDN
14f5mrLmDBv/v+ftWed8Oc3BmpezWo5hLtc/SC5CJ45T6FHumT8pnXPlCumu
H2c+yZzSx+/zs3L7S79F/f/0NT0fgMdZozirfO8h6v7ET4h9+L7cYXldXrHG
wEdlG7ytj8m2eR9GczOWejgASCoWw1mvHTd/TqfY4kMS83pKrLxYSfZ5FfLz
K2W7U4wv1nM+1c8w+1pXiTirY6x4bQqlZ2fY1wrXcgDm5qzR1t55csN683MF
NId0WJ+A9S2T9W2L5XXjOv+xCTk+Q8Cc0+mU02p53ut1+/Net2zPoHSH5zKo
Tr4ocVbr2qyr+FruTdRytdL+nIAo6wYshLPyMUv5rHXMYhdjbN20foMy3mnH
MyjNtgaVPgb3xlnt7ifO9QF2rg9Y/1/V1+GyH89G2suvW+s5Mcypd/7/Y70c
J2s8/bP8uQQ7KP24fd03dd2ShXVW9fraIdd6m8P1D5KL8aKzFFBd8hHmmo+o
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
NJK7q5u1xZ+DpeTPGuOwg1eV9aR2Uca77dQzGKAb717QXlNjlQuZG6Cv75BG
KW9eJk/fMPV0vUc/UNbEUmOr6lyqZ1L5erXd4lzkqutwaTnKo/K7QOpb5Lrx
HvVMz/08gvsTOCvK4jvrHZQ5FDgrAIkQUWJx26nU7/T+MKWnyvvjN2z3pyfp
nWzDc7NU982+qvvadKfIidRyLZW4ofFZrilOLjTRbnJUOQ/pJHOq9+jVVOmI
jUHnfVVnLbU8F1a+bs/dvFGRpz8jwFBSXr9oelaA6K7/Kr1s7VfKUXJ16Xme
7rPMFVMd1hdQnDW3S1/rymlOl+znUXJr4x2g7EO7bP17tcDsu953z2lrtGqx
cXYMxoyBxrP6+dLXVUjkPEY5T+C+4n5w1u9en6QrPlkOlc+/vkOtvK4wXW4N
Lmg/X7gyTpd5vR2jS+6PD6qz+lp+TCdzT9PhjNP0xplL9OPO4JK7pbEMdrbS
5bofL0i/4KwA3COmJ6mnr4e8fQEaWeCFkMZDw9Tj76GewcWf+6O11Tccd/3R
8cEAee9RvzQmZP+8/kCM/kUo0Cf7FghFom4zPe3w3iKeR5AcLJqz5vYtUBmi
DsNj7Iduj856/4axOzQ1c5c62kfEa5eDd2VlY5ML2M8+2ndL7egMHVrAeu+X
Es1ZIzN3FqD00fEd9jgCLy9k1NDEgrQx/1L/1k55Pyqjed51wVkBAAAAnaR3
1h+FacpY+cw07Zuj8/o6hsRrFYqzTgUnFtTZXrg2SR3BCHUEJum7SeCQD46z
TlHePt1RN+/LouMnT9A2w/2tnS7/kvsqL9dP7pMe/RacFQAAAFhIkt1Zy4fu
WGq/Sw1X1fdH6KYSQ21VYqhfe3uC+tjvUzMzVH5llDqm7uq7stfHxqbopuqs
E8wvx+5q9fYFDA779hh7747my1PMITpuj2vvX+ibEe36+iZZfbKPfYPTNDR1
h4ZYG/vUvrHfx4xlxtBOzTh1TBjamJqhy9cGo4zFIFX0RcT+ZOjTzY6geP+7
7inx3thYhHxjd7RjGgtOKY6vjtUd8gV5PYY63CNJ7awTHSWam27LazW8F6Tj
6vOuU05TkL823ErHjxyhzakvs9dfpudSX6GdGZeol7836aH9O/bRdw6eoJPn
T9MLKex9Vl7YcYKuD+vtdV8voW3bdor3NrP9t6WXUOek/n6w4wqr5xXx/nMp
O2lbxn9QN5wVAAAAWFQWzVlP9i5ACZK65NrY0BT5VM8amlDeH9Ze83WNyNfe
nlQc8C5ddk+aY7ScmYjmrE60Ng/Kdmec3x/qGxPtVDjUMaKKIGvjEOtbR5Q6
RE5C6RgNOb7J+l1jH4v8Pt3duStPGbd/u5f2dUTL+2Hb8/YMY+XU5pW6+Z+v
aM46zfxrPuVa3j7FWV+hq6OW90cHqcPrJ+/wFPv9Fu3UcgZ20nd27NTzB062
0vRkM73gkFsgyr5Lor6e66ed3089TT28Pe8l5/d3FNII76vBWed73HBWAAAA
QCeZnfW77WoStfSyC1rMdYbeUpy1I5azCvcbsXmt7pt36HLdgLinrzog3+aH
t3W56+jg+wzSzTF9n/JSs7NOjU3R5Y5xKvMp3sicdZ/oyzAdqhmk79aZ3ZnX
eSGgHMvMDF14m/czpHny1NC4bSwqxLHfZe4+KV+7ptYoj9PorH23uVcP0JWg
HkOueNvg0KzNfHYMLxj6JfIkktVZFQ98JjVfeGHUbZmTbhOx0XTNbcuPvKw7
JHv/O1q8Vjpl1Vt63QMzg3RYyTd4bl8J+/0OjbTpMd48r56jsPnIJRrnbd6+
onnwibYpOCsAAACwSCyWs371ZM+8y48Mnvgj9yhdDuixxo72YbaN7mHdzDXF
fm9PGJy1x3EbLZ91bFJpa9C0jTZHa2qKtqj90fJqZb2aszI/Pahss7dDd9a9
2nGMmOKtfbdDlmO7K+Omhnv+NGFo11DOdoWpIzhjyg9Q+2NsW+3PV2v0sWio
C2r96Ose0eq8rI1FeN7nK6qzRmbmVa6+9YrijW9Qq/X9oV661vw+K100wH8P
+ejtCwV0+Eg6vWBY++WFt27S9MRNxVl30tv9cv/x1gLFWc/SSOim7p+esNbG
QH8veftHaDwyoDtt6iv0QupOemHby3rewoUug7PenPdxw1kBAAAAnaR1Vuae
Y7EaEY5l8NGO4QScddjsrMEJpT2z12o+avQ4S732OpycNUA3xgzx2CF92xuG
wKvqrFrOK3PWvZbx+NGYOS93aEJ3Xquz7rX1mTv+mG0ceCkbUt172tZmsjir
tzpL80KjSwqfTX9Z81lv/48Na/u9TN85+AZtS3Fy1lfoakjuP9J81sFZd1J5
v97G+NAA9Qhn7aI9ptyDfcxZ99G2g+m0c98+2n/ODWcFAAAAFolkdVbj/XnT
PCbt5Tvifne3ej9dcceD2jPp7M6qxjjjOat2316ro8f2WiLOetkwf8wax6wY
ssdy3+qaoj52gK1dI5bxGNGOc6hPHsNXTbkBhrYZN5oDcgzVncQ2htwArU1D
PoLhOBbaWaeYf82raK7J51ql06VbI+J17/UC7fk2zx2poeHrp5Rtssir7Ft2
8GXNIacszsrfHzY463Dkfdqm1Pedkzdl20O6B59m7WYqc762nevS+nf13Cna
n36KrjLPbTQ463yPG84KAAAA6Cyas564PY9iWJN1Zpq2GN9rDGvt9PnHqNUS
r9RhnlbN99G9Vm40RQ1G31Ta6zbGIF3jpjlOY4a1B6ZG5T4Vtjpu016PwVmr
Jyzzv3gsVT+mvYbjoJk7NGRoo9szbBuPbkMuasdQxDwHq9rQtnaYxrgsa++E
eZ1bmjH0h9HhGZrnObu9eM7Kisf1hvPcJ8O9fs1Zv/Uy7XyrgI6n7yNjbkB8
Z2XOmWfYZ8cRQ9z2BN22xHw370unbVpugKwTzgoAAAAsDknprAbf6/MHLe/r
MUfun8ebzeu36t6qOuttOmt8/h3zyRYHZzXdN2evpTZPGmK6krHRMHO/24k5
q8vqrAaEQ96mg11Ttm36AuOOY3Kwy/JQD4Ofd3cNGZz1rrnfrC8V1eZj5Otb
JdJmMjmr8NYfFZhyVKVrptPbt8LKNgN04uBOw/sv02Z1+20FNKw56z7NWcfU
fNZt0lmnImF6+2S6qY3ntr1Bl7Q2mJdeyNLiuzKuu49ON8vY7828I8o6BXBW
AAAAYCFZNGfN8d/D0kd73x2mg5cDMbfbUhxgZXZ1p14eoh9eYU44y/1m13fZ
RmrcbQN0kG2792Kf7b29HsVpmQ/zevh4/PDdQcM2hnlmbQHx+w+vDC/ocUVz
1vD0zIKWocEBuuXvJf9g2PH90eAI9Q+OzbOdMPX3DbB6nNtQ3/fPu53oBc4K
wP3KDE2Goy4uCACYIw+Gs6Ls1eKw03TQcZtBLT7d1zW0KH24V866XAqcFYAY
hJvp0GsnaLelpJfV02SCVYy6y9k+edSqpWoFqSiL1XOsnAa0rXrpFKt3v8sd
tZ5WVx7tKWyWvww30hGlLw3jczqyxIkyBofOVZIvHH/3e01LcS7tVscJgDkA
Z30wypYrE9Q6NE2tvRNR4rUBquidoo6hKbrcGDsevfDOGkGZQ4GzAhAD5mt7
mJ8VNbeRp7ONWjvd5HIVCGc75Q4mVsdwndi+yDuh1OnWHLB2WNkmVC9+P985
EbWaJoOLTbZzDy4gz/g9iLPaxqCNmhpd4rVYjr1UiHEqTr5+gfuHxXLWNTk+
lGVW4KxwVgDuGcLXcqnFNP20SzhnTvMQNZTl0f5zdaS9Pd5MR17LI5ff6J69
lMXjkpXyc1CNu/I60mv84rWR5hIZi2UV+Zor9bjmsXxydcqnGarO6mssMcQ7
C+i6u5L257gUl86jBuaxDZUXhFPKOgqoVvQnSGW5eZTlcmkx2vTiaqqtLFDq
yqWcGofPamUMmiwxVRePFRc2ip8jw82UlaH2iR1/u+xzpLfR9PqpmjZl7xlq
Yn3UYraF1TSivB6t70W5+XS2ppreOHaC9hQ302RvPb1hqPtsY5eooaU4j3Zn
lVBOTq5WR8MwcihA4sBZURbbWSeZf6HMvsBZAYgB87X9PKZaU0d1jXVU21hL
p3JzhSM1jRMNNF0QP7coPuer4f53wXDPX1J3jrlT1iXxc1Mh+7m4kVpczK1y
asVrDYXy/Ul/tfSsXBc1uOvpVJZ0yYaQ7qwDnY1UVJzPXs+noppG8ra6dOes
rKc+EYNlTs3e83TWU9YxXl818+ognVUc72xjM9Vprsq8sN1NZedyTcdiHAPu
kC7/EI2Ghmgk1EutTTLOeqSSO2gXvcHrySqnhvZmOn/mhDI+rD3e9rESavK2
kYu7JNuuLqSOEx/XRhGz5T/vL2tW4sfOfT+v9H1PzgVytTRSuvDRC1TXyeou
k3WXeSeoRfl5P/PglvZ62TfFrQFIBDgryqI761QEZQ4FzgpADKLkcnInE/G/
iEfELLMae9nGE1SUwe+Xt9mqkW5bQD7mXjxvNcc9QRGvS3vtLPe/Ko/iW/w1
BVZ/uojRtplyAyKd3O3KRU7taLtL8TUZS4wMM/+scYvYbyTcSy7hkOU0QtIh
D1Uq/Yu4pY+3qzkLjdKPrfmxUcegQLi52j532knmqZPDcvsct1c6K9uuwdtL
kcgQtTQzF2XeK14/U0uj4SArE9TE/Z31cSBO33fnXBLvqW1y/5VMUG1ZObm8
QTaGuWKfUeWdVqXukXlfDGC5sGjOmt2NsswKnBXOCsA9w+m+eLiLTvGYX26t
8CcZI2U/s22Fuw071BOSOa0ud62oT3ih4oxl7jr5r39GmT9kjAlO0HnuasXN
JmcdbS/XvEz+XKI7WcRPZefyzH6Z4WLbqr4cNBwbz8sdMh2rk7OKOCvzzpHh
XhpgztlaI/MTzrYHNX+0Fh6DHfXWUfox47ytS8I/z2c4OXA+tY5H7zv3+qxm
2VeZX+HSvNRIk2UOlnRY520BcALOirLYzjrB/Atl9gXOCkAMouRyGmN5Ef8l
EXct4vmkx1xR1hPopRyTg3Em5PoBSszyFim+ZfIrud+eMnccZ9XjisJ7WX1N
vdLvWkXs1uisRkdN1FnZ66YxkHXxfmnrIozz2OgERSJBammqI09oim51ttEA
F/twL7Uo87YOVd4U+x6p4vFeuV7XaK+baps9dCPBvmttaonEE+Q6V0CuziCc
FcybRXPWt7woy6zAWeGsANwz1Dnzbg95vG2seLT8S+0eOyn3ukWOgD9qVQ2F
ck7QIUPugKcqXzrrmTrx+6hb1v1GZTONhoeoTs3T9M8k7KwiX5Z5sY/540Bn
rbyvL9bVmqezml6XcU8+F4rPO9sv8kfraCQyQwPuShmD7fSKuWe7z1TTAPNS
njNwxJQDkUcu7xDzXD8V5ZwQvv/jRPseqhd931NYy9qcII8yL806Thw4K5gt
i+GsXzzSTl/JvLXkDoVy78pXsm7RHx5933Yt3OobovHwFHOwaZRZlLHJKeru
G1rw/zcBeGCItjapNs9dIucUOcxfMjDSLOcXFRnWs5IxWua6Tb3KK3w+fYGp
LXUuf0uCzjrqrdbn3fO1Ac5I781p9grPNDrrfgdnbUrIWRUHZ57Jx2Gg2WVq
80hZvcib4P5qfH13DvNRERv10/ncXFNeQF3vROJ9Z9xqMuckpLuaRZvW9VmF
Hx+Ds4LEWQxn/XpuN/3psY4l9yiUe1f4+f67U922a6F3MEiB4VGaCE+jzKLw
MeNjBwCYH2JdgNzahaswwvyNz2eacwUzpv353KhIzO0XAqVNB28Xc7McntkV
4XOwxq1r0s6m78q2i39wYBmxGM7aORyhPzzSSn+S/r6Iv/2vt1Ae1PLlzC76
EjvPXzzSRv6Q/Y9TZOaOiLUGgmM0OjFF48zHUKIXPkZ8rPiYzbCxAwDMkbBb
rrmkrLMEALj/WQxn5bw/OE1rmM/8IXMZnueI8mCWJ9n5/Sr7XtI5FP3LNPfW
3sERca+b52iiRC98jPhYReCrAMyPSC/V1VRTgxc5NgA8KCyWswIAAAAAALBQ
wFkBAAAAAECyA2cFAAAAAADJDpwVAAAAAAAkO3BWAAAAAACQ7MBZAQAAAABA
sgNnBQAAAAAAyQ6cFQAAAAAAJDtwVgAAAGCpmHF8dioAwA6cFQAAALg3jLaX
0+7XymmU/zLcSEeU58s2jC91zwBIfuCsAAAAwL3B6KyT4ucC8owjzgpAIsBZ
AQAA3G+U5eZSelWb/CXE45W5VNQZFL+OtlfSnmMFdDruNheo5p0C2pN7iSbF
q710NovtU6nsM+6m9NfyyOWfUFqdSKDdC+SJEPmaK+mQEkPdfSyfXJ1DyjbS
WdsbS+R7ohTQdXcl7c9xkctVwH7PowbmsQ2VF2iPVkcB1Yp+BFkf8ijL5dJi
tOnF1VRbWaDUlUs5Nc6f674mF+231ceI+KnoTJ7WnyOF1TQi3ph7WwAsBnBW
AAAA9xtNxdy7XMI1R5ouCIfa73KL9xoK2Xs51dSYwDYDzSXCEVuYZ1KoXrpY
htxnVLxXQLdm2e6kv1rWk+uiBnc9ncqSftcQ0p3V29lIRcX57Od8KqppJG+r
S/fAynrqE9udYE7YSJ7Oeso6xuurpgjzyLMZ0h/PNjZTneaPzEHb3VR2Llce
T9g8XhGlT3vOVVKrt5m5+QnRticyQ65c2e5Z1lZDjXTpPYWNRHNsC4DFAs4K
AADgfmOy0yV8qZX93FSoxAgzKoXT5bCf32jqTWgbCrtFPPSsd4Ym3eWKk6n7
sJ/P1M+63ZayPOF1PnWniIfS2XuHKttMuQGRTvmz8ON26axlXpknEBlmTljj
Jq7SkXAvuc6cENuOcI88JuuSG7pF7PRUuxIzDTdKP7bkx7aUcb8sUeKnfDsP
nS90kSfULPZ/o9GvbeupypfHGJ5bWwAsFnBWAAAA9x8ecb/6fLtHeNX5pmrm
U/nU0ltPezSPSmSbGXLlyFhpU3EeHamso1N82062D49zuodm3W5LMfNDEadU
maDzPE5a3GxyVvvPBqeM+KnsnH6/Xo3/jjJnPSX6JfMRKNws8gdOqf0Uv9s9
son3ibVvQ9nfuL30cl7H3NoCYLGAswIAALgfqeWxx9wC5k38HveQ8KsjPC9T
ubef6DYDjQUiv5O7aJF/gpoKc2lPbkHU+97x6hR++JpLrg0g6BUx2D1l7jjO
Wq7tI7z3tQJq6pV+2Cpit0ZnNXpjgs4q4sEK4TbKyS2h1mF1/6C2rcx5yKOm
8bm1BcBiAWcFAABwPzKi3svPki7WUJgr5xDVdM1qGxpvVOY65RH/RJR5rDI3
le/jqSmn9MJazXHj1Tnqlvf536hsptHwENWVyXhpmX+GvZeYs4q8BObAvvAE
DXTWyvlcx8ppYBbOOumtpfSccvIw7x5RjonPmYowz64VfZbOzePFqh+PeOtk
WzkydxbOCpIJOCsAAID7EiUXVc23HGmWLlk7PMttmJsVZUkHFV4akg6bpeR4
ylzQckMuaLw6Z6hJm690QnNFjrzvHt9ZR73V+poBfL6+Mq8/p9lrzlkIy3xU
q0c2jat1qk45wdw539CnXDrv7pX7hJrpjWPGHIQSag3LcUm0LQDuBXBWAAAA
YBGITNDoeFCLz86eGdP+k+znSMztE++TUz28/lE8kwskMXBWAAAAAACQ7MBZ
AQAAAABAsgNnBQAAAAAAyQ6cFQAAAAAAJDtwVgAAAAAAkOzAWQEAAAAAQLID
ZwUAAAAAAMkOnBUAAAAAACQ7cFYAAAAAAJDswFkBAAAAAECyA2cFAAAAAADJ
DpwVAAAAAAAkO3BWAAAAAACQ7MBZAQAAAABAsgNnBQAAAAAAyc5iOKu/7Sar
9ybddCj1N26Sf0TZhv18a8S5jpC3lb3fSJ6+sQXv34Iw2Uc3Wf9utvnEr+rx
9IUWqb2ZMdFefUsnTSxSE7NixCeP39MnfjWdT8vYWIl37hccdexYm6EZ503U
6+2mN0mvNwAAAGCZs/DOOkY5hX9D345RXnqnXtsms8XZEW6+85TcvuLmAvdv
YZhoy1COJ4NC7JgzleM5HuV4Zov/egZtL3qaXqvtlC+EbtJLShv1i+XFs2Ci
LV05/nRx/MbzaR4bK2Nxz/2Cw8YuTbT5FN2MMnY3q55Wrs25XW+28wUAAACA
BWUxnLXy4lbaXZJGB8q3ap717cLN7Pc09vpmeq2uhfJL5OunPVOOtQx5qul0
TTaVtPQtcP8WhglPtjyukmwR93Q3FLH+nqObfc7HM1s8NZtF/dtrWuULM8N0
mY3H6Zpy8k8uSBPzo+8m5bP+5NfdpGl2ztXzmdM2ZhsbM2Nxz/2CM3mTdivX
oDtKnNVds1WOd9XcnNV2vgAAi0u4mQ69doJ220o5zeUWzmh7udh3dME7unC0
uvJoT2FznK1mqKWmmpqGZ3NHLkhnj52gHPfQLHs0l7YWh8lOl8O1kOA1EXHT
frZdwzj/xXJMkV6qrakjX2TxjyEeiZ3/B5vFzWed0vzE/Fmue8trNUV0vORp
5rZPUVpRGpV4ZOztVkOGcNyceuX+cuAm5TAXTmPbiW1LttLphs6oLbsbsumA
Ui8v20u+R5WeYfHetLeSvbeVDldkUE5FmrLN03S4qlpxLObdFdyvv0c5Nawf
RU+JGF0a+/2ycu9Y87Ii7mVTdLnqFdbfV6hSu7c8RTdr02l7kd7f47WNzO8U
Rlrp9MU0dsyy7peKNtPhdyqJ/8W4WfM9Q1x6M+0uTyfPiI8d//fo8MUM8ijO
Os28MVN8L1COsfww1artT3aycWXfHS6mU2FtBm3XxiGd3A7/8w7dyGbHy7cv
UmKjfax/W8Vrhco5GWo5J75z7L5YThN9V+g11v/X3uFjFsVZi2I764GqbHpN
Pff8/HSOmbarrzlsGL+0mN9fQuw7zvHyzfr1UbSVXTvKNac569OUyc7nbqXO
3Xwslbir3VkTb9/xfE3arwF+jo/XNGpjEvJUUmbFYdanK/p1AQBIDOase5hn
FDW3kaezjVpFcVOr109z0YtRN3dWFyVDSCAarcW57G9ZPGeZoFNsXLLcs3NW
vs+p9tm651zaWhwi435qbXeTx9tG53O4pxZQg9eT2DUR8ZPLVa14qeWYIs3C
exvCi38M8Ujs/D/YLK6z6n5ijl/pr9vL9+jWDHcIGbdKE/sNa/fehROUPK1t
zx3Jir9edwjuimmGfW9OGnzToaS90yj6dzpq/56m+oDVWfXt1f7cfGdzlPrZ
8cz46LChPuPxbK+55tA26/fATeadys/cswKNhuMylqeokmv+pLq9QymvtI3Z
dOc5bf9a7rSBai1GnqbcL798UeZrvHSReWqbfvyhOTqrvbBjEz49RZVKW9Zy
2uOQT+Cr1LdhXri9yLK95qwOpUjmL5iddTbtO10r8hzVv/O0c5ts/MQ1ouQj
qH0AAMwC4ay51OIgIwNN3D/zqG5Y3ljxNZYIh2nl3hHpovNn8rQYXHpxnfBU
GWfNp1OF+cp7eXS+uVfsHxlupKysXG2fI2X1Yp/Jzkran1VC5x324e5TV1ag
7ZNV5qIjGQXUIvrQS0VaH3Ipp8bteIiT/jpKz1BihVkF9Ab7eU9xc/Q+hd2U
bogvHnG5hY8VndOPd0+Oi27ZxkzGWQ+dK6Ejx5Tt2HG1qH+YnPprbav8Mr3B
3ivzyr/6A80uMeYtiuu1VBbQnjO1bNxmqKnygrbfocJqLQYaGW6mLPV42Vi6
2mXct5Xte6TQRadylPeOMR8djnLTjG9flie+f/CYuaeKtZt7Sfku0ktn2Zil
V7bJDcf5MbB2mOfm5Fxgx2s+ph9cKBPxV/X38+3BqOdOXAtsbF2uAtF3GbPV
8TVX0qFjJ7T9zjZ2xT22WOd/ubLUzvpS+TkRW+y7kWH6vDc5hJaPqNdzs/aw
iJXmXLfP83HXpMm4aY3SZl+l4l+ybqOzZir711dtVV7bSu5Jg1eVpJOfXz7M
EVXv4TFjq7ManY1GdJ88UCtjfZ7aNM3J/cyhDohY4Pe0/ErVB9Xjs8X9DPe3
hQ9VqD70Crl5HZM+ylRdrbycpg2edkAZB+0YhWda8dFryvbHb4xRqCVddyxx
jH3a+yJnNcbxJ+ysRcrY+q5ofi3i8d5yzecrvTJ/oF79DlBSZItJTnjOKXHm
c0p7+rGI82EYi+3vyJim/7p+fNxDTeM9y/Ydz1fginYNHFaugVsNh7U2C1m9
6j7fLjmXHPPqALifYM7KfeJUTR3VNdZRLS81tVTXyZ3RTzn8cz6jkkZCjSIe
e0h4ygy5cqUzFDW7qaWmXPpWlYc5q3JvOaOEGtrdzEvUe8rM59TXOz3UUCV9
y8X+eEXfh/3/XiV9NaemkVqZr+xRPKxpnPVBbJdPLrebal1yu7PW+/KRNjoi
HOYCa7eNXIXSk/aXcWeJ1qdRam26JHImDhVXsvd6qaVY8b/mNtaPS6If6TVd
lsEM0nnFjdIr66nVXau0XU4DFK2/PZa22kV8cr9LOlzdOVnfWRG7HRLvHWHt
+mrk/qfYuDQ1ugzH1MWcl7tZORvLZva9Qh0v5rtlyrEzv21pr5fbFTZGvTRa
ynI1Zx1pLhH1iO82oXrlfMl4+miz/C5za7xRxlLHJ0zHdPXmj8lVWSLPY2Ut
tQ5PRT132rXAPZaNoel2pnJPgPe/1eumsnO5sl2KcWwxz//yZamd9fh1eb+e
ZlpNTmZ2gD5DnFWpr/wVKrzeGbVlf9sVyq9Kp8MlxninxVmN8a2QGpd8mmoD
ev8yb+hxtZtVSuy34kpsZ9PmIKWRR/0qODNFQ319NBRQ6gv5qLbuHGVe/J4p
HpqYs+qxvQN1urOHbqTrTmq4H14bkO9rsVRHl9TjgmnvVFNtlXHc0qi2rVxx
MO709jjzXJw188awrW1+vEPqcYhchs2UxoqeF/09fUwNTPhuUklNBr120ZhD
bXXWp6le+0Oix+75Nsbxnkv71vOlxaGV+wZObQIA5kGUfNb9ahyyt1bxRFZy
KmWequIOWU26H3qYN52tUZ01VziS2L9T/t4wzvMbL1GTiH3N0ED7Jekwmqc4
7SPjlkavkq7GHGxY9uEN1uZkOMhKr/RFyz1fGfc9QXXah9QEFWWpcbbofeLb
cZ/NUe7zD7TXMr+Ssd/RYbdwoj3FVt9T+numTnsl4pd11g3E6q+5LZ5vufuY
iyI810CJKR5yMccISyesHVbbqaVRVtdoeIKa+D7M828rzufyD9EkG7/JYXl+
+TEZHVRrJ0aOqmn7sFvUc9Y7Q5Puci2GyyMJTYW8L/VazF7GRs3HxHNd+XtN
Ef36cRoL1VnLvA4fEJFeclXVMv/nP09Qi/g+I9uLdmy3Y57/5ctSO+tp9bPb
Ekd0zC+skzmqRnfd7TDnpd5wX/6loq3CYxyd1ThHaLJVi8Xld/ab46YKHi0u
VkRDMZ1V9ZXDZMyADAWGpbOa7uvzvMpX6EA0Z61xdlbd+fUWjK4Ysoyn9X0n
Z9X7rcZBDzMPlHkWmrOVlzvUNTdnNY6t+n2AH7+//hWtDzy3Q+TQlvNc3u+x
nw/LuLIB3TGllx5m46mOr9lZNxvWDRijnCJnZ51t+07nS4/lG68Bew4JAGCO
KJ7RFCPP0JUlvSmneSjuPtY5WEYf9bkv2fxYxtai7aPmhwa1+icVn+XOuv81
u2tzr5609cdlmhPWWqbnM0brk5qbqs6nmuzlOQQWr7fF6mTcNqupV39JiT3m
XK+P0V9zW9JzmZf38n0KqJbnZGRU0i13uRazPp/hUNdr+XT9Pec5VEcq26jJ
ksdp9Twr5vdnyJUj479NxXmsvjrh0+c7PdJNed9Nzmo+JtN74ejnbkCcr5Io
Hj1hyodQvZlfW9GOrTfO+V+uLLWz5iTirKFWMZ/owMVs5fN/jErUfEPb3HTm
BYqLvNag2ELU3AAl95OM3mN2wpcuVir19mn33nmfYjnbtLdIcx7VyfV77WnU
1pph85louQE8pmsfnykqKVccTbuvbMjB5GMyB2elmU7NncWxVzTShK+cvm14
TR3ThXBWbWxn9Hv5PH952qPm1hpimn03Keedw5RTZ5/Xr/ruS0qeKBnyGKy5
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
PPMwLrYP/pPtrPw34n/4Iej6HfujrOn63fjfRU3aDs3QP/zwbzSlfrfqH/5p
gf7w9q+qjD/SD359/AxFn/2n2P6n5QUauRdl58h9/VM/0uN41KrbyOJjFQf+
K/1h+b74nXtd9uPUB/rz2n3H78nP02bmBSvrPm2L3/j8QD9HF+zfmue/ba9+
+3Pvj8s0Yv2GfZDm4viNLfD1A2cFAADwxcGctZ+5Y0Q43wLtqc1/Xpunf/BH
KRqZUeP8BzTHvc7/b/SHZIL+sCIdMZp6T3/a/HeRXzASWmb7/kLb/Bzuhour
tP1sg37Pz1uMszJeyPc//Eh/ePZH+tdZ6a2bh2SdMxL5mbY3o5aT/uumaV1r
7tkBHT37UbyfWotTIrlBP3DfDK7SL8k4/ffFGeGr/53t+/UgLo7juQF/XpO+
+sPKBv3p2WOVC/HvdCLaLuv5p5cmRe4FRR/8+TPeDgAuAjgrAACALw7lrJuZ
/6DfCS/k4/sHYqzft/aC/hTVzspzVv+dNkW89K/067N/l+5o8jjpB+GzU89U
PmuEu9+PVn6sKIN9/v+eRZXn/icdHTL/fCtzaXkZ4hz/Msmh/A/0r8xF+638
AlkffhzPWY2smeK4k+xfKCq890d6xz8nfxTvj6x2BZmzMtfmXntvw2ry0cuf
6V+YGx+dsPNXHtOvfOPJB9peWRCxVuTAgq8dOCsAAIAvDuV2m0wC/3CPud3s
BvPCx8It+bY/OeZT7ZkynvoPjteccFbbKTmbOXOwpMNG6S/KWXNfv1v+D5UD
q8+Rntnv/KzLP0lR5N6Muwx/VPjx+2c/2q7scFZet395dlCg8R9oc/l+Tn1k
3BeAr5mqddZMip7ENujJ0033azdF2fO+rpnK23yQStJ6bDO/PuK1QdupzHnW
6ozIUiK2RqHwMiW+hOqeM3vmJuuHc3ia2DO0/jQpn1Px/pyfWQC+RbTbsX9c
Jy+jwtl+CAbF2DnHWgNAjaP/fuWP9F4EOeW8/H8xuQtqZ5VeWNRZzR9F+X86
5DHSD3RyckDbmz+z///4a845+c6qnVjU578t0OZfVB6syCko76yDzIs1Ry9X
6ff3VplDyzyDiPlCxG2PklERZ4Wzgq+danXWrDlFl767XORl0JNzcq6s6Wfl
19GTHMnYnqgrUZ/LVDOxeT4VclUuSd7aJgrtfpwBJaZbrPr6nn5j0prXdxny
8b4YOvv7Jp+hy+IZyj4dFu/XIa0AnC2W2/EPf6EpFW+c+mNOzPRQ5ofO/TEl
x+RDM+q4v5CVS8B89tfDD0Wd9f2hnO81uPgzvTv5K/1qLssyk7nnFHfWzUUZ
V91jzvtrUuWm/tOPYnz/vXBi5rOpv9CRo11/WAzK+V4v/5NODhM0xXMFplbp
nflvYvsf/sLzFP6D/uUHGWf9+Rv7v3Xw7VG1zro7K90qlmYfsuy/8pWISZet
Py9HFNdtUnM2nRXSdSDafyrrMBBL2dvPpzY5JKmeXXfyo5w1S/PNzNG6Imde
qy+D/L7jcdbziI9nnc8Qj7PGTCo0ugcA+ARczsrn788L70uoNaLstVYPKOoc
k/9hQeS/ylzSv9Jjta8/8se89VnF/Kp/krHQX/9oz6/Saw+cUO6aroVzA3hM
9/3LVdf5vtkZy7FPUo/VOgM8P9fRrpMXNDflGP/X6xhk/0PO4dJrE8yqtQXE
fDEAvl4uylnXf46R4fGKF39fDu2sk2aePNJkLXOvnjVrS2J1lhprVbyz2UvR
XdtDDnaXyWhrUvHFOmrs8rvGxbfDfqpX59Z3TVE0zONiLfnOWrRuWVoZaqHG
nmXLW/eWhqmmwaB1fR0e42uoo4GllDp/jYxmVafaFvItJR2lZ2hlupdqVDy0
kdVJ1DezQZ0NMtZb09BEjZ6IuB6vv9X2hhaaXHWWZZc571Ex1tomqm/wUiKb
Il9zO4XMJIV6+L520Wbel63qOqJuYT2XIEshVoaxsEbRQLtVlm/JpO0lv/BB
2b9TtFeg7w7MRdbPjj4p0C8lr83qWK/arLetsG1GmLe3cFvs5hfquyxFe9rZ
d6KUqkcLBVc3aLJNH2ew5yhJ0QlD1aeOOgNrjusXuU/kdtZsKkKtbVNiTnN2
N0KNDb3MYZep9Tv7eV1JOVpV8tkAAHwsJ1nmjVm1juvJB/v9qfgrvedzsD46
SKHOV5/4fK5KlmEVdT/8kLf9yFEXfswR1nQFXzkX4azcUXPH0st5q/bCYI6z
7uk463RSfN5f7ZV/+9uGaX5hihqVO62kSbiKcCnmH/PhCM0r/6gPSBdKhA3r
3NBShLzNun6VOquUlCcTTcKTEuIc5lddshzvaloeb8rjQ1zN0mvSc2rbaXJh
1rrmQEweu9Ijnal1aIrmA73KXYbpVWqNvF3t4tyaZoMGmD/txeS4c2PPFIXC
i8zLZFl5uQPMT4M9yjOZ23knIrSfNVVfKedq89NPP6rrsf4KsroZqm6dwguz
FNT9U8v7k12v1j5/YIH171C7ujcF1uRW7W5dSFqb9mPyevxe7S2VuTZvW8Os
I17JtrHr1/B7WaAtCUcXZAv0XVaVWTPhPr+GfacJLQxbLsrva5A9OwPKZfV3
qGL3aZ9ynHV3SrwXeQLquZHnLbJ7plyftSvr6KNizwYAAADwLXMRzvq3HZ15
zsq3lcL59z3vVetXa/GlyPtdznh3NkmdyktlGS2O2J6M0UpnTZEhfGHK4UEZ
8jWc3lmzu4vSr4UrqnK5//TINUq2A9xppc9EPXyf11pLUDhum/KW1LLytJTj
WosOV0oKtwoqJ90OtAg/D1lxuiRzK8MVt3My32C7Pve0VldusO4Pv6in7g/p
qQYldG4Bf5/VRegcCSug7OjfvF6T7WT37sD5uXmRvavw2trt1PncOeuVs7rb
Ugh33+We36ieI71X9m2TI1a+KXML+D0vc5/czpr7nvmqw+n3wu3W952Sz0ax
ZgEAAADfCBfhrL/5m9Y87+TbSqH/vjd6hmlywk8+8epVY9AGbXOXsOJjTdTa
1kKNzS3sf9XYso7JZVO0vhShgR5DncvKdHiK0zs4CeEQp3NW7XuN3Aczy+L8
+QWv8NQDKx7I82/tWGVjW7uqr54X1UI/bypPb2hR7WHHqNipdqt6x3X5uLPV
pw3tNBCIUCJdrOIORyO773I/G0vu/jh46ldxwnxvlP1Q5/pO4LpGDrIsFW9W
bRGx6I+4tsjPzXHOYtfV7at33bN8Z23UPk96vtqw7dDqGH6+jpsXu0/lnDXo
iIPr/byNpZ6N3DmBAAAAwLfGRTjrg/+xnOesfFspCv19l9tlPMsbs12HjycP
DA1br8mAn4LhpMgf1Nfr7PFTaGnRdht1rnfV7Ul7Ye9HOCvR+lCdiBlu8zHu
2kU6yGzIHIXdDXGd+V2Z+yq9pIm8E6q+PcPkC0zR5PQy7aty67t6He3xi/ZE
+bXyvIukk4dnHTm7l2lgNX+trmLOaq0foD/H3IFKp1MVdlbnfLXSzmq5/UKS
+ajMGxYx2wquHcxz1jQN5NzLkmshVOCsznonpll/1jqu5zg/W+Y+lXNW5/2z
95d+NjCHCwAAwLfORc3B4o7KY6v8Vc5XOYX+vssdTr+QeQA1QxuuQ9YDvRSM
pdSYvOHIbVRj1zyepnIILrVFXOOuMhf19M6qx8lrrLqlZd5Cg3O8V+W6WuPj
kv3YFHmnN+hAxU0HXO6WoklPL63z8X7lTdrj95b81DnhaDufSySuX2hNhXxn
dTkcO7c1N8+CdN5mi3CqT3dWPebeTp28LJU7Ucm1Rb81LNr3KiNzPxsLxJ8L
ktN3n+SsZe7TxzprqWcDYVYAAADfOtW+1lW+h2TIV2uvhyod6LKY072XStHK
tFd8Nla1s14m39Im22dS0KPyBprl3PYn1rnLlEglKRowrLHY0zqr5cCO7etq
no7TqQ+023bN0jar7/bqrJx341kTbRNzjb6ro8lV01XnKJ+Go7yp3jNFK0+T
1nqrxvQaq3+KnixNOZw5r9alndXRl41DEdreNSk00e6ovz0P6lOc1ZpnZMWe
K7m2HqtvosmlDUqYG+Stded5VOqsuu8K5gZU6Kzl7lNRZzWLOysf+y/9bGiH
by/5bAIAAABfK9XrrJEizpqleT4v5bteFbvMUEjNV7fyAPSaRBmTDMfc9kvN
veTzSI8deCrdQ66NpI9pIm9P5fms8zl5CzouqHMP99W8/smcMetEeNhV3xq+
TpIuKpOkgWbn7xfUOdavkutqyXlofO5YOqf+cr2uRMG6yzhebm6Au38z9tpO
3+n57RFrzpSYI5TnrC2nc1Z2jckGe459Zdfmuzdd6xTUe4bF51a+rkDBtuS3
3913zrqqnAWXs7a4cxFyr1HiPjn7xfU+lf9My/3t1j0r/mzo3AE4KwAAgG+T
anXWU5PN0kEmI9b8L7zbMe8l9/c6xbkX9bsA1kVZPTKuermrdJo62b93cDZV
O+PyXMh4dKNjzavTXJtvL9Znn4PT3aeKSy35bAAAAADfIl+Ns4IqJ0sr037y
dtWRaw0pAAAAAIAKgLOCi4HnJtSJ33bi8+MAAAAAAE4DnBUAAAAAAFQ7cFYA
AAAAAFDtwFkBAAAAAEC1A2cFAAAAAADVDpwVAAAAAABUO3BWAAAAAABQ7cBZ
AQAAAABAtQNnBQAAAAAA1U51O2uW9p5uUGhhlnwTUzQfXqO9Kvj9pD1zg7ZT
VVCRjyGbpvWlCIWWNuig7MEZ2o5t0n429/2Xy0HKLHnv9nfZ8xaO0Ppu+fvL
y3qym857D84e/m8ukf7CHz4AAACfRPU6a5ommy/Tpe/kq6bWfj9fgU+cH1ma
5HWpnTrj35i/CLI0b/VpEz0p14DsJtWwY31PM+73XzDbE/y3Ywvfu+zurP28
TWxWWJZfuL/zPThr2L85fl8quCcAAAC+XqrVWfdWe4U7DCwlrW3Z1AZ1fid9
8fO5gfK+hsUv0FmT1Mj6rzNc4W+nZk1x/KSZcb//gklMN7HnZ7bgvUtMt7Bn
zqC9jyirVLngU8lSsOEy1QfMz10RAAAAn5GLdNb1n2P0c2yjomO3A00iFrie
o0h74V5q7JqlffU5u7tGRnOTjI/VtpBvKek6PrE6S40qRlvT7KVowRhtigZY
GQNL2uWyFO1poXrXdSJUz8qPpg5UrLKdfBNeFZerIyOw4fCVDK0Eetnx8rr1
7Lqhgq6XofmuJmoNuPskwdpY0zxMe7zATJKCnnYR4+TXaezy07YuKpskb0Md
ecPONrO2NDRRaDfHnjKb0vdFfZqo0ROR9S1Zvkn1Dmetdzlr8TburQ5TTYOq
Py8mtczuQRMFY1bBFGL92zi0XNbxEktT1NpQp+5vHXVOLMvvK6LtLTTPnqfJ
tjrr/k/GnD6eptCQodrGXD0QYZ/Zs9KQ65asPp4WFctnfcDK1f3Hnx/7+uz5
CtveVMpZD/hz2dZkxbQNXe9TPWs5vVNJm7PyfurnUveXvAfOMnk92P5pO3bp
eu5yr8vq3Dk0TJ2qL2oa2lk9nH3NnofpXquvG7umKOF45Iv3RyXl5zpr6WsB
AAD4OrkIZz3IZKi+Qf+9uize820lzzGnrL9vA9MRerKbooPcv6XpNfl3q7ad
Jhdm2d89Wf5ATOYV7qtYbU3bMM0vTIk4If87vpKXdpihSfY38VKz8jhKKr+z
j922YnDO8XX2dzUcIZ9Hti2oPCfqkX9365n/zS/41XUv53skY72nTpSTsHal
aYAf71kj7hVe7VsTsxS0HNmQx6vYpyv+lOeWanNqjbzKTeu7vDQQWGMtKV9+
MWct1caDp1Mqh0M2ai9syPvQs2bVsZJ470HMb10jtMT6uUv2szPuK+rL7m9o
aZEMfg+/a6FtcVnmoV1yf+vQIoXCU/bxzfnx0MSSX7W9hQzPMK0wt9tbks/P
pQaDguz5MtR971TfEYo6K/ND/ez6phfZ89EiP3fx5+s0z1oOZducks8OK2uA
XXeyR163Zoh9J8psiPvXupBUz0NE1XFYubL0Ql7HPBzXrfdMsb6cpc7ay657
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
hdoxv5uhJ0PchxbluLNwujpXjJhjeZrOi3A6aWZDjDc7ndVXdM6/6h/Pmnuz
qk9hZ22yY7LaWRsMu3/YazLgpyD7HiD7b9iVqyu7N+to3+mctd7pzFTIWZvI
O6Hq0jNMvgC7X9M6BzlL27EIDVj5yc6YbZF9Dp9t7FJj+M06H0E/X+7+y3fW
j60TAAAAAE7DRTjrXipF/9v//n9Yf7f5e76tFOsiPtmS5zyJhXY1pn9A8825
Y7OOfFHmI2Ls3BUny8hcVOZx0j1ynDG9QV7PrDjX1+aldYfuJsIyT4HHz4ru
K+hnGRUP9kqHXpUn6nhnZ9jZD2o8XsT51Dg8zyNQHKj82FzfLIwap86Jhcp2
F3dWu79z8xpU/wZ6KRhLWWP7ztwKXT8RRy6bG1DMWTOOY2xnFbHtnHUj9mNT
5J3eoIPUMnV2Oee6ZeW4fS3bVmqfins78423+XOnnDW//7I033bZctaPrRPW
vgAAAABOz0XNwTrIZOjB/1gWL/6+JCpvMi9GyFFzW+qZS2lH4vPPE8yBn4TV
54lNcej6kIzLGgsbzJGTFBqSsVW9Nmmjml+zYiZpz1wjo9b2XbnPK/ftbtKk
mH8jnbXoviIxxX01l4nPFbPnSSmX5ePh4Q1K7G4wF9ZzeHj/qDgfv84uc8TY
ojW3vTJnZX3+VDpZTdsUPWFlbC9NWd8byjsrz+1UsejAmviOsTIt4+UGz8lU
MV9ev3Vev6cR1S/SyXQehBGIsGvn1/F0zkpWfmhN1yxts7psr87K67NnROc1
1LPvG9u8LnrtAV6XUvtUma0TEfb8JK32iRzpVNbVf+vmpvX86Hp/bJ14e1ZE
rmzhtR4AAAAAkE81rnWlcz2DBX0s64qvPlnotTxM++ue5QFpmve0uPZzf9W7
D3Yjrrn3wl/V2kr7T3P2MZ+bVPNnSu0r3CA9bytnXFjEcx25D3wOviP/9uCp
7ami7kO94vO8Y12BUs7KSSiP16/OHllGKOUuQzpWblw7wzyt3X2+Y70mXr96
Zz808Pizzofla3HJttWo7xBO9sJeKpTP6nbWFnvdgAJtqemy1xjLfQ4uOdbJ
Kr6Ptc/T5NjXTj61DkTNkKzzHl+3y3o+2H7RH/b3k4+rk84rgLMCAAAAlVKN
znp6ZI5qttjf/2zp/Vm1/yz3ubByWkuXU7T6VKJtFZEVse2PLiNb+vws23fw
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
e46Pj+jwwxEd0wnFA/2s3T0UTbHPH/j2yuOmPF4bfyH91gz2sX66x8rUPKMO
1nc+E3HY03FCAY+XOgJwVgAAAOBzclHOGv9/d+jGmF+8+PuyxweYc/22j9Zy
xmQTIT9dvXmPXqvPh88fU193n4xJGv00uvTMdby5co+uqhjtle5xCheK0WZ2
qM/TR75Y2rHxiIIjfXR17JHwvnf8OtfVdVi9+m4/In00j2le8fhpyxZESizd
oY6bYRHnfDg+SDdCO7S2cEec7ysRN90Kcmftp/gH/ukV3WJtu7X0Su09ofBY
PyvXbv/x8wfUwdodZq4aHhuk0Z9e01pwjK6IevZQh6efgvGf6ZqnR/YBa+dV
K/76nqJBvzrWy/p1hrZUf79cucva/oC2tsJ0le/Lc7YjmmN1uTpyh27d7Ff9
z+o6t+Pw5LcUDvhZ/XSsnN+fpLU3vnDXvjesnr6VcvtOKDreb90T3c9XPGO0
9kZ3SJJusLbqPuP331BtF89HyG5HwTb+smO3h93n0dAjGoWzAgAAAJ+di3BW
7qi5493lvPXd1ozlDbeCDyhuvqJ3xzkH/fJY+pYxSL65e3RD5RLc+kna5GsV
q71y/Q4F5maEl4gY5i+5V0vTLb6v+749lv7msTj3xgorK/XIdpjgfRodUU7D
nJRXye2Zqs3cuY0ZVt4R+Z05Dsyvwi+Kj8+7y3pLPg+vV1g5WlLGmR1tiIvj
xyjBr8OOvXL7KUWZJxoeedw15pQ//j8rdOPmoOirK91jdCvwWLQzOiZdzhif
oUDAr7zujvBhWa7XctFRy5s1jnZ5xikYekC3rqvy5uT3hrXb0vGv3b5P4dB9
5s2yD3nbXv8k/f3q2AzNWfu8FHx+UnJfXJQ5qL4fnNDcTa99nxiHW/fE57kU
c9Il1SbW5372fPSp+l5bSDr6ztHGBz9b/Xtr7gEFg35rf76zAwAAAOAiuQhn
7R/7fZ6z8m3lcMZI9avj5l1aS0nnC4/wbeNkt+CEgte5o9xjTvaKbgivfGAX
ePxMOEmhmFliYUy4ysM3zs/9wo3kdfroocN144FBy6MKOeuWGpvnzhpQrhTY
elu2zbllmQuDtqOlHlj9IB1Neur3YzHrvW6bOdefkxuQFM7u17kBysOvhWwX
PX5+X8WBj1g9ZPuuzRVzNdUu5rgvHdukx46RqfZ33I7b5YvvIdJZdQ7E3Aud
q5BkzjtG0dRJyX26jrIdr6hPfxcQfaDj89y71T7PXSsmzb8D2PWjvDYmQuN5
cfB07C6cFQAAAKgCLsJZR/3/nD+viG2rlHdvXlP8pwd2fFP4ox3nu3p9kK52
95NxXe9nzvdmR8VV+8R2uV+NETOnzcuHzcRFvue1EDecfBf8fuRx3vFXlN8U
dtZ+t7MKjy5PXlnKLf08/rjEPLr7LgV4fHSEueDxjsxRFY7ldlbbmRWuY+14
5PeeftU/rA9VPJOXIevR52qTG/f1NOnYHdd5L804BQJ36ZqVVyHbdvzC9u/v
PYN0KxCmrV+ko5baR8xAuYteDSaJ3jwS5QXmxoWnpnmd2HecK7xOH+T971t6
7arfu627Vv1y26hj1qbrjCQZRb7nAAAAAODiuAhnNZ8n85yVbyvFWmCM+grE
+F6ruJdvK62ctY9u3L5Dt8bZa+wOjQZmyBd8RGnlLHxcWOxTLx/zJ3/oWYEr
EoX5OLPnPr1jPipjeTyeq8fc4+6DHQ5YyFkfjvcoT9XnV+Y8+WW9FXkLV+fi
FB5j7hR8xvqAj1nfpXhsxjFOfkpnNe+puLXf0T93Rf+Et96q80vNdVPXC7r7
8tCKpb6noBq3/757jEb5WPvtnLZ9eE0PF+458oS9dGvlddl9a7xvu+9TnI/9
G/cp/SYm8yXMmLjnAb42grr/ozF3bFu2Wzuru42y7/2OuDFHxmvhrAAAAMDn
5aLmYHFH9Qfnxaucr1qxTR7zyslhPX4eVs76VuYyGnddXvX6pxm6EYzRscr9
vDLuds2HAT/5f3LH3jTSt3qob0SPL3NUvkFO/E3nynKvTYRUHoG1V+XHOpy1
UucpnBsrx8plu09Erq3ITeV5Ezcfufos11mt7lPOqnMDjl/IfrwVc84He02+
ET89TJ3kO28eKs7d7T7mociRlXHuDkduq7im6F+275jPnbpL127H7BM/JEUu
B69/qX2cQ5XrfMXalpZ5IB5HrsjxMxEfdeWGkM7hlXXIbaMp8kFkvoeF6ifk
BgAAAACfl2pd60rnEfL5VcGVHeG58ZX7rnlUep7WlZv3KP7iFdt/T87JUuP4
0vW8dC3wmBKpVxQNynzFvpXCzsqd7YaK6Tldy5oP1n2HHm49o7WQrttdsXbA
sYpZ9gUfUdzcocCIykHo5jkIn+6s2tPt7cqJuXP+pOOI7uvodRd8ocdk8hzd
D9IhO0ZmKLqVJL5mgF/N0/Kx/n35Yof8qt7hXwrEafOw83Q7xh+Qyfp3bUHN
WeL9r673/fW7FH/uuDc89sm+M2yp+U99QVY/fu+WZiwHLbVPdoiei2bHjR+q
+WRXxm3X1ff/6nhY3Je524PqmLjq65w2ZlSd2feTMOsjc+uRdR3trNJ5B0vk
TAAAAADgPKhWZ+WYKzPKIRwvPu/+uR0b3Ardce2/cnOGTMsn3tPc+KBr/zU1
Z74Y1vqob9zbzaW7lnPJdbPuUNxah+stBW72OOo4Trf45+t8vv9pndUx58qC
ubShHVjycLwvx23d1zl+8Vj5vf5NArlOlHRtNR6eeUa3uh31Fv6aVPXoL5OD
q521zzVPjq/DpcfW4wvjrr6/Ebij7iePjacpONbv2t9h3btS+yRWvFRt02sN
uNcRe0/h22Oucgzm13qNskJtfGc+sPpN504YhnZWnUMNZwUAAAAummp2Vs1h
5i29fvO2xPr6J+yY98X3Hx/RO74/d62sAuWIPADnmle51ym1zv8x/32AL2/N
fv7bBe8yR1S2e1zofNak+HT4oUT/sj6xcxTYtVy+J/v0uOC5pfadAnb9Q/67
Dacop+TzBAAAAIBz5/8H1ONbLQ==
    "], {{0, 400}, {685, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1: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
rvi8hKSEh8RuiVaJj5JcktaSKZJnJF9KEaUMpWKkqqWeSGOltaTDpCul+2Vg
GXWZEJkKmUeysKyGLFW2UvaxHEZOWy5SrlrumTyDvLF8gvwZ+bcKHAp2CtkK
rQrfFMUUvRUPKd5VXFFSVwpXqlF6oUxStlHOVm5XnlGRUQlQqVB5okpUtVDN
UL2iOq0mq0ZRq1IbVmdVt1ffrd6lvqyhqUHTOKfxSVNM00/zqOYzLTYtR619
Wj3aGG0T7QztDu0FHQ2dOJ2LOn/pyuuG6TboftST1KPo1eiN6Yvok/VP6I8a
CBn4GRw3GDUUNiQbVhu+MxI1CjSqNZowljYONW40/maiZEIzaTaZN9UxTTO9
aYYyszTba9ZnTjJ3My83f20hYhFsccZiylLdMtXyphXGytbqkNUza37rAOt6
6ykbTZs0m25bBlsX23Lbd3YydjS7dnvY3sa+yP6lg7hDpEPrFrDFekvRlleO
ko4xjledsE6OThVOH5yVnXc433VhdfF1aXCZczVxPeD6wk3KLd6ty53JfZt7
vfu8h5lHoceop6JnmucDLx4vqtcVb5y3u3et9+xW861Hto5vU9+Wu23IR9In
yefedp7t4duv+TL5kn0v+WH8PPwa/JbIW8jV5Fl/a/+j/lMBpgElAV8CjQIP
B36i6FMKKRNB+kGFQR+D9YOLgj+FGIYUh0xSTanl1OlQq9BjofNhW8JOh62G
e4Q3ReAj/CLaIkmRYZHdUQJRSVGPo2Wjc6NHY3RijsRM0WxptbFQrE/slTg2
5JjTGy8Vvyv+bYJBQkXCz0T3xEtJLEmRSb3JMsl5yRMpFimnUtGpAaldO4R3
ZO14m2acdiIdSvdP78oQzcjJGM+0zKzLos8Ky3qYrZRdmP1jp8fO9hz+nMyc
sV2Wu87kMubScp/t1t19bA96D3VPX55qXlneyt7AvffzlfKL85f2Bey7v195
f+n+1YKggr4DGgeqDmIPRh4cOmR4qK6QpTClcKzIvqjlsNDhvYd/HPE9cq9Y
rfhYCX1JfMloqV3plTKxsoNlS+Uh5U8rTCqajvIdzTs6XxlYOVBlVHXuGP+x
/GO/jlOPD5+wPNFSLVFdfBJ7MuHkhxr3mruntE7V1/LU5tcun448PVrnXNdd
r1lf38DXcOAMfCb+zKfGbY39Z83OXjknf+5EE0dT/nlwPv785wt+F4Yu2l7s
uqR16dxl8ctHm1mb97ZALcktU60hraNXvK48brNp62rXbW++qnD1dIdwR8U1
9msHrtNfz7m+eiPlxuzN6JuTncGdY12+XS9ued560u3U3Xfb9nbPHYs7t+4a
373Ro9/TcU/nXtt9rfutDzQetPSq9zY/VH/Y3KfR1/JI89GVfu3+9sd6j68P
GA50DpoN3nli/eTBU4enj4fchoafbXs2Ohw4/HEkfGT6ecLzxReZLzEv975i
flX8mu919RvpN02jGqPX3pq97X3n8u7FWMDYl/ex75fGcz4QPxRPCE7Uf1T5
2PHJ4lP/562fx79Ef1mczP3K8vXoN6lvl/8y+qt3ynNqfJo2vTqz7zv399M/
1H50zTrOvp6LmFuc3/uT+2fdgtbC3V8evyYWE5dwS6XL0svtK7YrL1cjVlej
yTTy+lEAhVxwUBAAM6cBIHoBwNoPAD3jRu61WVDQWsqxpktEzjB6yEmrCPRB
JMgTqoNhOAIeQ1FQM+h8jBJmFFuJC8Wb0UnQMxJgBhSRhVGWyZqZxnKC9IpN
gN2f4yIXmtuP5yafIH+ewLSQj/ADUR2xUxJskplSEzIOsk3yjAoBipeUFlV0
VWPVjql3a7zVXNBm0OHRldHT0jczcDD0NgoxTjDJNS02qzNvt7hv+dzqo/W8
LdqO2Z7PQXKLsqOOk4mztYuDq7Obm7uHh6enl5e3t/dW723ePt7bPX3d/ZzJ
9v4WAQaB6hSZIMFg1hBcyCL1W+jbsCfhd5FVeSaqMnp/TDKNHGscxx33Lb4z
oSQxKskmWTR5OeVZatOOPWl+6ZoZjMjauppVmB2yUz+HNefjruu5RbtD9ujl
ceQt56P3Gew/e0Dr4MVDy0WCh2WPKBQrlSiXqpaplatXqB/VqNSpsjhGOV56
Yvgke43xKZ/ayNMpdbn1hxoqzpxqbDrbdu5W08D5rxeFL0Vf7m+Rbg2/UtrW
0v7o6kTHynWOG8o33TsLuz52W92uuPPw7tueqfvYB+K9lg8D+2Ifhfe7PdYc
EBikH1x4Mvb04dCNZ+3DHSM3nne+uP6y6dWh1+FvTEa5R2fe9r9rG6t7XzF+
8MOuieSPEZ/8Ptt/UZ0kTX75eudbzV+5U6HTDjNq30V+SM/6zF3/qbRw+Neb
Je5lz5Wa1dW1eQIIgBc5JTojeU4j+ABJQlHQTZgXzoZnUNGon+g9GGHMbWwc
TgH3Hd9FV0mfRghk8CS6MHoy+TPHs+ST6lj72X5ySHL6cBVxP+Il8tnx7xPo
EyIKO4kcEu0XJ0iYSyZI1Uo/lvkhxywvpaCmqK2krayqIq0qoMasDqn/0BhH
dqse7Tadet1yvXz9VINQw61GDsYmJpqmCmZi5jwWzJZYy0WrKetxm2HbXrvr
9ucdqrcUOeY4xTqTXRxdDdxk3bk8MB7Tni+9erwvbT22Lc8ndruPr7mfHJmV
/NP/VUBnYA1lT1BYsH2IIpWF+j30aVhLeGlEcqRnlEY0KfpTzA1aUWxgnHo8
Jn4o4VRifJJ5MlvyWMrF1MwdDml8aZ/T2zP2Z4ZmOWebITNDZ5dGrtJu2T3i
eYJ7ufNJ+wj70fuXC+YOTB+cObRQhDvMdUSqWLPErNSxbGt5cAXtaFrl7qrC
Y0ePnz5xpXrg5MIp6dptp/PrmuufN6w0Cp81PxfStP9864Vvl9Qv72p+3Eq8
ot9GbS+7+qBj9br6jfCbNZ0vb7F0G92m3sm/29DTc+/TA2Kv6kPvvuxHjf3P
BrCDak98n+YM1TzrHv7wnP6F4kvXV8mvq97cHZ1/pzxGe39pfGZC7mPwp5Of
30zyfvX8dvSvqemE7/KzpHn6BfjXl6WrK9RN/9MDTiAHrJBspwTch7CQJXQI
GoP14RMoImoXGocuxEhgbmIDcSTcPfweOgd6QfoFwhOGK8RTjGVMhcwHWApJ
5ayn2FrYezhecy5wk3jkeS34yPw7BEoEzwl1CT8RGRf9KjYjPoWcmoaluqRP
yeyU9ZZTlIfkBxRqFBOVbJSFlOdV+lRr1dLV3TTkNGHNYa2z2tk67royust6
/fonDRINbYwEjWaNe01OmaabuZsrWGAsXlpettpr7WejYUuwHbVrts9z8EEi
BcZxxKnROdPFxVXcdc6tx73cI8xT14vg9cL7zNaUbVY+HD7vt1/wzfCzJXOS
x/zPBaQEWlBYKC+CaoNjQnSpaGpfaEmYX7h0+HTElcjMKItouujemH00m1h8
7O247HiD+MWE1sTYJIWkT8k1Kb6pPKlPdhSkWaXD6dcz0jOtsvizFrNHd/bk
XNhVkZuzO2KPe57BXol8Yv7svpf7bxU0HDh8MOtQYiGtKPowciwojimJKY0u
iyynVvgddam0qbI75nM8+URl9e2T306x12qetqtzrndq2HomtfHy2cUmy/NF
F95ckr2c0NzZSrji0lba/qJD+Fr49Ws3WTtDu251896Ou9PXI3Ev7f6TXpmH
2X1j/e6PhwYDnswO7RnmGTn7wujl0OvMUft3Lu8Pfpj/dHjy9rTr/Mia/zf+
g1srWA0ATlkA4H4YABdtBBcAIF6H7B96ADgSAXDVBjB3GYCuRQNom9Sf/UMA
GCN7x05QA24j0QOLxA9rKAzaDzUhud4PmBPWhX3hnXAd3Ad/R/GgjFEhqINI
9v0OTUBroMno/eg29ASGHWOOiUeyrmEsA9YYm4g9h/2IE8H54qpwr/Ei+BD8
efwynR3dcbo5ekf6swQiIZIwwKDFcIJIICYQxxidGDuZVJhqmLmZD7LQsewi
waRsVgxrHhszWxm7OPslDjOOYc4oLjxXDbcp93ue3bzyvE/5Mvjl+F8KFAia
CS4LtQuniBiIYkQfiR0VD5PQlyRJfpbqlq6WyZalyNnJaysoKCoqGSi7qYSr
7kRCfrPGoOacNr+OpW6CXr3+G0NuIw/jMpM3ZlLm8RZ3rHisg22O2JbYJdgb
2a86dG7Z5xjqRHXOcTnv+t6dx8PFs8Crdytxm5NP8fZhPyayqr9lgFtgICUj
6EzwR6pyaFbYYIQUMvOex2jSimN/xnskNCZ+TeZMUUo12eGVlpHelkmXFZL9
MEdjV/Vupj3peRP5xvty9jcXjB5kPORQeP6w2pHbJQ6lD8utKu5UOlX9PN5T
fb3mYm1JXUoDtXHrOePz7BfeXjrbnNG6vc376o5rrTcWurS7I+7s7Sm7X9Pb
1He9//HAxFP8M/2R/S9+vPYebR4jjJMn2j/jJyW/gb8qpwVmSn/wzbbMRyyo
/1paalnxXY8fYsAWxIBi0AHeQXhIAXKFUqBqJNOfhrlhEzgMPgLfhL8gObsp
sptUonpRi2hZ9DZ0AboTPYuRwZAxpZjHWALWErsL243D4mxwB3DDeDF8LP42
HR9dIt0QvTb9cQI9IZEwweDJ8JBoSuxg1GJsYdJgamM2ZL6D5KgjJApphjWb
jY2tjt2QfYQjnpONs4XLmxvmbuTx4qXj7eCLRXz9UeC0IFVIQWhOuFPkgKiv
mKo4vfh7iS7JGqk86VgZP1knOXN5PQVNRXUlDWUdFRNVe7Wt6pEauZq1Wo+0
V3TV9KL0zxnMGGkb55gMmkmaZ1i8sNK1rrRZtnO0L3K4v2XJScE50KXK9Tni
422eJ7w+b1XfttNn0FfcL5bc4b8SqE9JC+oMoaO6h54Km4+wizwZtRTjRbsS
xx2/I+F5klJyasq11F9pOulZGX1ZItnJOwd3KeUW7P6W57C3IX9xv1HBjgPN
B2cLzYqqj9AV00qGywzKTx7FV0ZVDR3XP1F7kq0mrxZ7uqBeoOFyo/3Zsaak
C4SLxy6rNd9v9bsy276ng+9a8w2PTriruZt6h+9u373MB2q9n/tO9m8dYBm8
8TTgGRiueK794tWr3W9URt+82/ded3xyouqTw+fZyT1fF/6ynto1fWGm7/vH
H6tzXPOqP10XdvxqWPy8rLVyZN3/0sAVZIB6MAhWIGnE+5lQIzQMY2E12B8+
BHcipwhRlDsqD3UN9R0tjfZDl6EHMUwYO0w+5gGWiHXGlmHf4eRxabhHeAl8
Fv4tnSXdRXox+goCB+EIAwdDOVGQWMuoxNjBZMf0BjlvMLE0kuxJ06xlbGZs
M+wnOdw5CZydXCncGtxzPG28GXzW/JyIr68JHhGiIScQNVEeMTSy94xJjEgO
SD1CMvOnsq/lvsgvKZKU5JRtkBVdpHZd/aumkJaHdqHOgB67vo9Bg+GisaNJ
gxmdeYTFMysb6zu2dnbDDlRH4FThouf6zr3A09BrdusFH5qvht+Mf0WgLOVs
sExIbahEWH2EYmRbtGXMcGxEPDahOsk4+U1qUho2vSCTLatsp0jO2Vzd3Q/z
AvKhfWcKth3EHqooEjh8pBhXklg6Ue5dMVjpWfXjeH01pQZ3am/tXJ1nffMZ
tsa4s0NN2uerLmIuRV4eabFsbWtTam/oELtWcYPxZlrn51se3d13VO6euEe6
n/Ng/mF43/t+n8cjgx5Png25Prs3ovK88MWXVwavC968eiv/Ln2sf1z0Q9LE
w0+inxO+3Jxc+ab8l82U17TXjMN3vR+is7jZd3Pt85k/9X9OLWT9Iv06vki3
GLM4smSyVLb0cVlzedfykxXRFerK2ZWpVbXVpNWra/6PDVJVWd8+IAYTADCv
V1e/SwCAKwRg+dDq6mL16urySSTJeAnAzfCN7zrrew0zAEdvraE7KWOZ//6+
8l8EM9HV
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{352.35572916666604`, Automatic},
  ImageSizeRaw->{685, 400},
  PlotRange->{{0, 685}, {0, 400}}]], "ItemParagraph",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.713026602457404*^9, 3.716511464097762*^9, 3.716511511349188*^9, 
   3.716511851908594*^9, 3.725732002632709*^9, {3.725732104943719*^9, 
   3.725732116186409*^9}},
 CellTags->"twitter2",ExpressionUUID->"987be938-9fc0-41c1-9646-6238594e5309"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download Data from Twitter", "Subsection",
 CellChangeTimes->{{3.7480026932693872`*^9, 
  3.7480027009077063`*^9}},ExpressionUUID->"efa3a9d7-4a22-43ec-b5ab-\
65d8521b6d1a"],

Cell[CellGroupData[{

Cell["Get a list of tweets by a particular user:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716511620168982*^9, 3.7165116371027613`*^9}, 
   3.716511789987033*^9, 3.717180921963222*^9, 3.7257320026328363`*^9, 
   3.7481914127899446`*^9},ExpressionUUID->"31721a4d-25dd-4db6-8581-\
4e4cc9489cdb"],

Cell[BoxData[
 RowBox[{"tw", "[", 
  RowBox[{"\"\<TweetList\>\"", ",", 
   RowBox[{"\"\<Username\>\"", "\[Rule]", "\"\<WolframResearch\>\""}], ",", 
   RowBox[{"MaxItems", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714750894111608*^9, 3.714750909460009*^9}, {
   3.714751238629508*^9, 3.7147512398737087`*^9}, 3.716511789987257*^9, 
   3.7171809219650908`*^9, {3.725731873526854*^9, 3.725731875472231*^9}, 
   3.725732002633003*^9},ExpressionUUID->"9c8136b2-a5e9-437d-8b17-\
a0f3f01fca4a"],

Cell["Get a list of tweets with a particular hashtag:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716511656254408*^9, 3.716511674906999*^9}, 
   3.716511789987647*^9, 3.717181010904038*^9, 3.725732002633111*^9, 
   3.7481914148593063`*^9},ExpressionUUID->"319235c1-95d0-430c-a69b-\
cd4e2408de24"],

Cell[BoxData[
 RowBox[{"tweets", " ", "=", 
  RowBox[{"tw", "[", 
   RowBox[{"\"\<TweetSearch\>\"", ",", 
    RowBox[{"\"\<Query\>\"", "\[Rule]", " ", "\"\<#mathematics\>\""}], ",", 
    RowBox[{"MaxItems", "\[Rule]", "10"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.713026855270719*^9, 3.7130268625171833`*^9}, {
   3.714750915029249*^9, 3.714750923627639*^9}, {3.714751268981851*^9, 
   3.714751289978957*^9}, {3.714751509410568*^9, 3.714751517888171*^9}, {
   3.714751652917624*^9, 3.7147516663162317`*^9}, 3.7165117899878283`*^9, {
   3.7171809674884377`*^9, 3.71718101090587*^9}, {3.725731928072173*^9, 
   3.72573195944563*^9}, 3.725732002633271*^9, {3.725732646160604*^9, 
   3.72573264865326*^9}, 3.7257326826449013`*^9, {3.725732722677725*^9, 
   3.725732723227562*^9}},ExpressionUUID->"66ed8396-2f02-4f69-be8f-\
5036f4072cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extract just the text of the tweets:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.725732168255612*^9, 3.725732181650482*^9}, {
   3.7257326712060223`*^9, 3.725732672364258*^9}, 
   3.725732771427491*^9},ExpressionUUID->"83c284b6-2cce-4b80-af50-\
41bcfee70e7a"],

Cell[BoxData[
 RowBox[{"tweets", "[", 
  RowBox[{"All", ",", "\"\<Text\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7257326946222563`*^9, 3.725732695772015*^9}, 
   3.725732771427825*^9},ExpressionUUID->"98ce0fbe-a365-46bb-be88-\
cbb76868c532"],

Cell["Determine if the tweet is a positive or negative comment:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7165117544816113`*^9, 3.716511770585429*^9}, 
   3.7481914193217916`*^9},ExpressionUUID->"33e608c5-f60a-4149-adb6-\
c7e57879abf8"],

Cell[BoxData[
 RowBox[{"Classify", "[", 
  RowBox[{"\"\<Sentiment\>\"", ",", 
   RowBox[{"tweets", "[", 
    RowBox[{"All", ",", "\"\<Text\>\""}], "]"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.714751275853531*^9, 3.7147513110263977`*^9}, 
   3.716511741705312*^9, 
   3.725732709332005*^9},ExpressionUUID->"303d2691-74ee-4608-8892-\
3f137dd2e512"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Housekeeping", "Subsection",
 CellChangeTimes->{{3.7480026775275507`*^9, 
  3.748002680499135*^9}},ExpressionUUID->"5439cdd6-75c6-45ad-b446-\
d4a86293a2e6"],

Cell["Disconnect the service for housekeeping:", "Text",
 CellChangeTimes->{{3.725732751694295*^9, 3.725732758340004*^9}, {
  3.7480019066385098`*^9, 
  3.74800191036432*^9}},ExpressionUUID->"cd3a2c6b-2107-40ad-8d54-\
ed01c3b0f278"],

Cell[BoxData[
 RowBox[{"ServiceDisconnect", "[", "tw", "]"}]], "Input",
 CellChangeTimes->{{3.716511956108569*^9, 
  3.716511956546609*^9}},ExpressionUUID->"65381b1a-1b45-4420-9ed0-\
25c1a1c81372"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"75117cf0-8772-49dc-8036-a23524c712f1"],

Cell[CellGroupData[{

Cell["Getting Data from the Web", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.716335495264226*^9, 3.7163355052795763`*^9}, {
   3.716511988772097*^9, 3.716511993152584*^9}, {3.748191424737571*^9, 
   3.7481914250335712`*^9}},ExpressionUUID->"8ed93de6-48c9-494f-b8db-\
53918ff65762"],

Cell[CellGroupData[{

Cell["Searching the Web with Search Engines: Google or Bing", "Subsection",
 CellChangeTimes->{{3.714760781167101*^9, 3.714760797292935*^9}, {
  3.7165120131923323`*^9, 
  3.7165120282121363`*^9}},ExpressionUUID->"d4fcf6cf-e7da-44c0-afee-\
098eb587fc0a"],

Cell["Generic web search:", "Text",
 CellChangeTimes->{{3.716512036693787*^9, 3.716512054140883*^9}, 
   3.725732828695962*^9},ExpressionUUID->"293dac24-641f-47b2-9cd8-\
4a474c8084fd"],

Cell[BoxData[
 RowBox[{"WebSearch", "[", 
  RowBox[{"\"\<Christopher Robin\>\"", ",", "\"\<Snippets\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7131820081979103`*^9, 3.7131820114113083`*^9}, {
  3.714760677654703*^9, 3.714760684172387*^9}, {3.714760715983626*^9, 
  3.71476072343723*^9}, {3.714761980443993*^9, 3.714761980850161*^9}, {
  3.747505246264621*^9, 3.7475052526682177`*^9}, {3.747574313175118*^9, 
  3.747574321586137*^9}, {3.747574514102953*^9, 3.747574514548753*^9}, {
  3.7475750731841297`*^9, 
  3.74757507677496*^9}},ExpressionUUID->"7c853e05-deaa-4da4-90fa-\
6b799cdcd5a0"],

Cell[BoxData[
 RowBox[{"WebSearch", "[", 
  RowBox[{"\"\<Christopher Robin\>\"", ",", "\"\<Hyperlinks\>\"", ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Google\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714760768268159*^9, 3.714760769313128*^9}, {
   3.714761990803606*^9, 3.714761991154138*^9}, {3.714762057256143*^9, 
   3.7147620598244123`*^9}, {3.7475053127987127`*^9, 3.7475053362975283`*^9}, 
   3.747574355757485*^9, {3.747574517021673*^9, 3.74757451724579*^9}, 
   3.747575080986471*^9},ExpressionUUID->"f20985bb-086b-4766-b7b6-\
fb6c455ccb53"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Searching for Images on the Web", "Subsection",
 CellChangeTimes->{{3.709902984333956*^9, 3.709902997303783*^9}, 
   3.7130265915727997`*^9, 3.7130273713306427`*^9, {3.713181854590394*^9, 
   3.713181863710986*^9}, {3.71651206271737*^9, 
   3.716512063082831*^9}},ExpressionUUID->"68bf8e5d-7aee-4ce6-80e0-\
b44d421f55df"],

Cell["Restricting search to images:", "Text",
 CellChangeTimes->{{3.716512074110627*^9, 3.716512086022153*^9}, {
   3.7253714297148943`*^9, 3.7253714301519623`*^9}, 
   3.725732842105113*^9},ExpressionUUID->"dbece212-0f81-4ef5-9915-\
0b7e92545c42"],

Cell[BoxData[
 RowBox[{"WebImageSearch", "[", "\"\<Christopher Robin\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.713027610326803*^9, 3.713027614501493*^9}, {
   3.713027686721558*^9, 3.713027688866787*^9}, 3.7147619327794952`*^9, {
   3.714761972157233*^9, 3.714761972754578*^9}, {3.7475057476122427`*^9, 
   3.74750575154609*^9}, 3.747574381531918*^9, 3.747574531875039*^9, 
   3.747575084802209*^9},
 CellLabel->
  "In[223]:=",ExpressionUUID->"ffe21ffd-ce71-4f58-94b5-31e6dd3fdc9c"],

Cell[BoxData[
 RowBox[{"WebImageSearch", "[", 
  RowBox[{"\"\<Christopher Robin\>\"", ",", "\"\<Images\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.713027651397666*^9, 3.7130276838829517`*^9}, {
   3.747505757306732*^9, 3.747505761386629*^9}, 3.7475743929424467`*^9, 
   3.7475745427284317`*^9, 3.747575100458424*^9},
 CellLabel->
  "In[224]:=",ExpressionUUID->"74779ee8-e15e-4346-86ad-cc2feac04adf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Searching for Data on Wikipedia", "Subsection",
 CellChangeTimes->{{3.716512103419262*^9, 3.7165121175370817`*^9}, {
  3.748191443960806*^9, 
  3.748191444408759*^9}},ExpressionUUID->"1ec496be-f0b2-490f-bc25-\
639b106a1fcc"],

Cell["Restricting search to Wikipedia articles:", "Text",
 CellChangeTimes->{{3.7165121511940613`*^9, 3.716512172475881*^9}, {
   3.725371436074616*^9, 3.7253714367598257`*^9}, 
   3.725732849544765*^9},ExpressionUUID->"be0ee013-f6b1-4f37-b6fa-\
553396836f0b"],

Cell[BoxData[
 RowBox[{"WikipediaSearch", "[", 
  RowBox[{
   RowBox[{"\"\<Content\>\"", "\[Rule]", "\"\<Christopher Robin\>\""}], ",", 
   RowBox[{"MaxItems", "\[Rule]", "25"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714762422928031*^9, 3.7147624485465183`*^9}, 
   3.717181146769188*^9, {3.747505830709961*^9, 3.747505835004591*^9}, 
   3.747574418660412*^9, 3.747574557383439*^9, 3.7475751188425617`*^9},
 CellLabel->
  "In[225]:=",ExpressionUUID->"d351d64d-896c-49a3-8bdb-099443a1877b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing Data from Wikipedia", "Subsection",
 CellChangeTimes->{{3.7131816217542048`*^9, 3.713181644672268*^9}, {
  3.7163355350323544`*^9, 3.716335544021818*^9}, {3.725732859133686*^9, 
  3.725732859653718*^9}, {3.748191447608481*^9, 
  3.74819144820868*^9}},ExpressionUUID->"c7fd8069-6b38-42fc-97c4-\
9e1657797d44"],

Cell[CellGroupData[{

Cell["\<\
Get the text from the Wikipedia article on Christopher Robin:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7257328839930067`*^9, 3.725732901326474*^9}, 
   3.7257330083731422`*^9, 3.7475744386807404`*^9, {3.747575134373418*^9, 
   3.747575137684326*^9}, {3.748191453882825*^9, 
   3.748191455912266*^9}},ExpressionUUID->"b0a19cfd-3124-4f5c-81fa-\
c1ba7d097a12"],

Cell[BoxData[
 RowBox[{"WikipediaData", "[", 
  RowBox[{"\"\<Christopher Robin\>\"", ",", "\"\<SummaryPlaintext\>\""}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.71318165430579*^9, 3.7131816881945667`*^9}, {
   3.7147624751331997`*^9, 3.7147624974706173`*^9}, 3.717181230560631*^9, {
   3.747505869537035*^9, 3.747505875015572*^9}, 3.7475744302922697`*^9, 
   3.7475745631811047`*^9, 3.747575125745078*^9},
 CellLabel->
  "In[226]:=",ExpressionUUID->"628ef278-0615-4279-971c-65a3f536dd3c"],

Cell["\<\
Get a list of rules representing links from other articles into the article \
on Christopher Robin: \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.725732905405878*^9, 3.725733008373371*^9}, 
   3.747575143492876*^9, {3.748191460999998*^9, 
   3.74819146315213*^9}},ExpressionUUID->"ca8032bb-4133-4572-a97e-\
652eae219eaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"links", "=", 
   RowBox[{"WikipediaData", "[", 
    RowBox[{"\"\<Christopher Robin\>\"", ",", "\"\<BacklinksRules\>\"", ",", 
     RowBox[{"\"\<MaxLevelItems\>\"", "\[Rule]", "20"}], ",", 
     RowBox[{"\"\<MaxLevel\>\"", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.717181230564892*^9, 3.725732978844722*^9, 3.747505883434308*^9, 
   3.747574445643766*^9, 3.7475745736854773`*^9, {3.747574850984769*^9, 
   3.7475748705851297`*^9}, {3.747574925232719*^9, 3.7475749935076847`*^9}, 
   3.747575145928577*^9},
 CellLabel->
  "In[227]:=",ExpressionUUID->"0e3e2184-b698-4f34-8852-930455d72302"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualise the collection of articles as a graph:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733019127339*^9, 3.725733042804071*^9}, {
  3.832938865130291*^9, 
  3.832938865425394*^9}},ExpressionUUID->"54c0b281-cba6-44f3-8379-\
ec1244f199fc"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"links", ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Christopher Robin\>\"", "\[Rule]", "Red"}], "}"}]}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7147625070467157`*^9, 3.714762511083857*^9}, {
   3.714763338073764*^9, 3.714763338330391*^9}, {3.716512246790927*^9, 
   3.716512258126443*^9}, 3.717181261513351*^9, {3.747505933370041*^9, 
   3.747505940349784*^9}, 3.7475744692265263`*^9, {3.747574591974078*^9, 
   3.7475746165926113`*^9}, {3.747574684796504*^9, 3.747574716101156*^9}, {
   3.7475748967546597`*^9, 3.747574999088086*^9}, {3.747575043105831*^9, 
   3.747575067001761*^9}, 3.7475751514404097`*^9},
 CellLabel->"In[230]:=",
 CellID->1202505669,ExpressionUUID->"2dfd9e0b-02d6-4e66-8a68-d2dba44c96c6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a5721cef-af97-426f-b03f-80ed9952ddc4"],

Cell[CellGroupData[{

Cell["Scraping Data off Webpages", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.716335197361185*^9, 3.716335205203434*^9}, 
   3.748190630777673*^9, {3.74819148415593*^9, 
   3.748191484623698*^9}},ExpressionUUID->"1cc9660b-904a-4a70-a4c0-\
503ac19b46b1"],

Cell[CellGroupData[{

Cell["Import the Webpage", "Subsection",
 CellChangeTimes->{{3.716555320630533*^9, 3.716555355166*^9}, {
  3.725733245360077*^9, 
  3.7257332525253563`*^9}},ExpressionUUID->"4019a1c0-057e-4735-9736-\
18c3d59fa1f8"],

Cell[TextData[{
 "Get the entire webpage as a ",
 StyleBox[ButtonBox["String",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/String"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7257331739211197`*^9, 3.725733184805519*^9}, {
   3.725733266365573*^9, 3.7257332792208633`*^9}, 
   3.748191497087886*^9},ExpressionUUID->"8780e30d-286a-489e-bc99-\
44d14075dafd"],

Cell[BoxData[
 RowBox[{"wolframWebpage", " ", "=", 
  RowBox[{
  "Import", "[", "\"\<https://www.wolfram.com/language\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.716512326890952*^9, 3.716512435003025*^9}, 
   3.717181289436275*^9, 
   3.725733303567196*^9},ExpressionUUID->"99af8e12-91d7-4b6f-a763-\
206edde0f8e3"],

Cell["\<\
Check the types of elements that can be imported from the webpage:\
\>", "Text",
 CellChangeTimes->{{3.7165123031587343`*^9, 3.716512320283462*^9}, {
  3.7165124743384123`*^9, 3.716512474849004*^9}, {3.716512521297228*^9, 
  3.716512530872678*^9}, {3.725733204703093*^9, 
  3.7257332208284407`*^9}},ExpressionUUID->"95f28d40-12cb-4589-abe2-\
9da932078456"],

Cell[BoxData[
 RowBox[{"wolframWebpageHTML", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www.wolfram.com/language\>\"", ",", "\"\<Elements\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.716512451092001*^9, 3.71651245720185*^9}, {
  3.716512502442153*^9, 
  3.716512506593697*^9}},ExpressionUUID->"92bc4301-9931-41c5-a7bc-\
205ac7f96d79"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Images", "Subsection",
 CellChangeTimes->{{3.714748967190711*^9, 
  3.7147489705592546`*^9}},ExpressionUUID->"0a11181d-1e31-4f87-b590-\
54d34c933374"],

Cell["Import only the images from the webpage:", "Text",
 CellChangeTimes->{{3.725733323184145*^9, 
  3.725733358576148*^9}},ExpressionUUID->"3d3d9672-cef1-4885-a4ab-\
28c37b2130a9"],

Cell[BoxData[
 RowBox[{"wolframImages", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www.wolfram.com/language\>\"", ",", "\"\<Images\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713180516713407*^9, 3.713180518609174*^9}, {
  3.713180596484733*^9, 3.713180620464868*^9}, {3.713180658570879*^9, 
  3.713180681648671*^9}, {3.714750213735689*^9, 
  3.7147502163727207`*^9}},ExpressionUUID->"91213e24-ce12-42a5-9e94-\
cb0ab69b849d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import Hyperlinks", "Subsection",
 CellChangeTimes->{{3.714748972613529*^9, 
  3.714748977207158*^9}},ExpressionUUID->"1c22a651-897c-4084-b44b-\
03f00e5ea6ee"],

Cell["Import only the hyperlinks on the webpage:", "Text",
 CellChangeTimes->{{3.725733366132916*^9, 
  3.725733374330538*^9}},ExpressionUUID->"0d7520a4-3b62-4d54-bf15-\
34f823e8feef"],

Cell[BoxData[
 RowBox[{"wolframLinkOuts", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://reference.wolfram.com/language\>\"", ",", 
    "\"\<Hyperlinks\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7131807289908447`*^9, 3.713180755863406*^9}, {
  3.714074995546384*^9, 3.714074996895678*^9}, {3.714750219428576*^9, 
  3.7147502258201237`*^9}},ExpressionUUID->"70c37a07-8d1f-41f6-8fec-\
13aac8053edd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise", "Subsection",
 CellChangeTimes->{{3.717181393385498*^9, 3.717181439537806*^9}, {
  3.747571855189513*^9, 3.747571857339641*^9}, {3.747761598226964*^9, 
  3.747761598936561*^9}},ExpressionUUID->"d07b0378-8ad8-4666-aa03-\
6187a8fae430"],

Cell["\<\
Import the hyperlinks from the page \
\[OpenCurlyDoubleQuote]https://www.wolfram.com/language\
\[CloseCurlyDoubleQuote].\
\>", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761833777802*^9}, 
   3.748191515086391*^9},ExpressionUUID->"4ff51112-8f26-4a2f-a2e8-\
34e012107065"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"wolframPageLinks", " ", "=", 
        RowBox[{"Import", "[", 
          
          RowBox[{"\"https://www.wolfram.com/language\"", ",", 
            "\"Hyperlinks\""}], "]"}]}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10001.}, 
     CellChangeTimes -> {{3.7131807289908447`*^9, 3.7131807667025642`*^9}, {
       3.714750244460911*^9, 3.714750249674609*^9}, {3.7147503314628773`*^9, 
       3.7147503323788137`*^9}, {3.716335244679373*^9, 3.716335247044374*^9}, 
       3.716549284934429*^9, {3.747568179842082*^9, 3.74756819006465*^9}}, 
     CellLabel -> "In[162]:="], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"a0ca8d67-e9dd-4a20-a289-07e10b8a57a4"],

Cell["Check the size of the imported data.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.7477618382223377`*^9}, 
   3.748191516758531*^9},ExpressionUUID->"c578b310-873c-4436-9d51-\
0cc8b48f7540"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"wolframPageLinks", " ", "//", "Length"}]], "Input", 
     CellChangeTimes -> {{3.7475717892944183`*^9, 3.747571794076508*^9}}, 
     CellLabel -> "In[179]:="], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"15f56cf4-180e-4fcb-8d6d-3fe291efbe67"],

Cell["Remove duplicates and check the size of the dataset again.", \
"ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761852973413*^9}, 
   3.748191517838406*^9},ExpressionUUID->"c5aa8bae-eb27-434e-9f78-\
cddaf4f24961"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{
        RowBox[{"wolframPageLinks", "//", "DeleteDuplicates"}], "//", 
        "Length"}]], "Input", 
     CellChangeTimes -> {{3.7475717963941717`*^9, 3.747571805730489*^9}}, 
     CellLabel -> "In[180]:="], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"25255707-1b33-4946-98e8-67d472d50458"],

Cell["Check a random sample from the dataset.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761868661034*^9}, 
   3.748191518839315*^9},ExpressionUUID->"d7d40266-b2cc-49ea-8d7c-\
48a5df083725"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"RandomSample", "[", 
        RowBox[{"wolframPageLinks", ",", "1"}], "]"}]], "Input", 
     CellChangeTimes -> {{3.747571015842635*^9, 3.747571022048709*^9}, {
      3.747761915575007*^9, 3.747761925427609*^9}}], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"ed5444f9-30b2-4eb6-8c53-b57e32931776"],

Cell["\<\
Use string pattern matching to get the domain and path from the URL of the \
random sample.\
\>", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761907179682*^9}, {
   3.747761960874691*^9, 3.7477619608755302`*^9}, 3.747762028552876*^9, 
   3.7481906333091097`*^9, 
   3.748191522142473*^9},ExpressionUUID->"5de506e6-ae6f-4489-963d-\
0955f09e0740"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"StringSplit", "[", 
        RowBox[{
          RowBox[{"RandomSample", "[", 
            RowBox[{"wolframPageLinks", ",", "1"}], "]"}], ",", 
          RowBox[{"Repeated", "[", "\"/\"", "]"}]}], "]"}]], "Input", 
     CellChangeTimes -> {
      3.747571673741337*^9, {3.747571719192953*^9, 3.747571721342272*^9}, 
       3.7477619331980753`*^9}], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"76215a9c-d158-4f40-9f2a-28a4dd00ee5c"],

Cell["Group the data by domain name.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761907179682*^9}, {
   3.7477619611609898`*^9, 3.747761977472787*^9}, 
   3.748191523230124*^9},ExpressionUUID->"8f7c2717-bb10-4d82-a698-\
b93869ff19ce"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"domains", " ", "=", 
        RowBox[{"GroupBy", "[", 
          RowBox[{
            RowBox[{
              RowBox[{
                RowBox[{"Rest", "[", 
                  RowBox[{"StringSplit", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Repeated", "[", "\"/\"", "]"}]}], "]"}], "]"}], 
                "&"}], "/@", " ", 
              RowBox[{"DeleteDuplicates", "[", "wolframPageLinks", "]"}]}], 
            ",", "First"}], "]"}]}]], "Input", 
     CellChangeTimes -> {{3.7475684050583572`*^9, 3.7475684938747168`*^9}, {
       3.747568572954678*^9, 3.747568620291654*^9}, 3.74756869043015*^9, {
       3.747571083336096*^9, 3.7475710862463303`*^9}, {3.7475715186941977`*^9,
        3.7475715208276453`*^9}, {3.747571596970118*^9, 
       3.747571649901279*^9}, {3.74757171076175*^9, 3.7475717119584713`*^9}, {
       3.747572279367299*^9, 3.747572289941085*^9}, {3.74757238908248*^9, 
       3.74757239147252*^9}}, CellLabel -> "In[187]:="], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"c571eca9-14ca-4688-b9d4-caade196d3f3"],

Cell["Identify the two domains that have the most links.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.725733415216324*^9, 3.7257334316678877`*^9}, {
   3.747568741647656*^9, 3.747568745453974*^9}, {3.747761613187809*^9, 
   3.747761625461022*^9}, {3.74776181109727*^9, 3.747761907179682*^9}, {
   3.7477619611609898`*^9, 3.747762007944264*^9}, 
   3.748191524566388*^9},ExpressionUUID->"2454e4b9-13b2-487b-a67b-\
0bd28ed28e17"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"ReverseSort", "[", 
        RowBox[{"Length", " ", "/@", " ", "domains"}], "]"}]], "Input", 
     CellChangeTimes -> {{3.747572528571739*^9, 3.747572551732728*^9}}, 
     CellLabel -> "In[191]:="], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"4047e6a0-9057-4661-acb9-1cd9eb7a6d35"],

Cell[CellGroupData[{

Cell["Complete solution", "Subsubsection",
 CellChangeTimes->{{3.747571969140904*^9, 3.747571989834553*^9}, {
  3.747761819453726*^9, 3.74776183649435*^9}, {3.747762072400317*^9, 
  3.747762075758588*^9}, {3.7480090345983458`*^9, 3.748009035961934*^9}, {
  3.8321604990985527`*^9, 
  3.832160499305738*^9}},ExpressionUUID->"fae4c669-c39e-4aed-b975-\
2e6cea0ba37a"],

Cell[BoxData[
 RowBox[{"wolframPageLinks", " ", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www.wolfram.com/language\>\"", ",", "\"\<Hyperlinks\>\""}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7131807289908447`*^9, 3.7131807667025642`*^9}, {
   3.714750244460911*^9, 3.714750249674609*^9}, {3.7147503314628773`*^9, 
   3.7147503323788137`*^9}, {3.716335244679373*^9, 3.716335247044374*^9}, 
   3.716549284934429*^9, {3.747568179842082*^9, 3.74756819006465*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"de022e4b-7301-4fbd-addc-fac5e5422099"],

Cell[BoxData[
 RowBox[{"wolframPageLinks", " ", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7475717892944183`*^9, 3.747571794076508*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"b48342c4-7594-4cf3-8efe-a4a6585ae479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wolframPageLinks", "//", "DeleteDuplicates"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.7475717963941717`*^9, 3.747571805730489*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"959055fc-4277-4f58-8b3e-be7603d275f9"],

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"wolframPageLinks", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.747571015842635*^9, 3.747571022048709*^9}, {
  3.747761915575007*^9, 
  3.747761925427609*^9}},ExpressionUUID->"dc5ec1c0-8620-42c7-a639-\
efc813d4743e"],

Cell[BoxData[
 RowBox[{"StringSplit", "[", 
  RowBox[{
   RowBox[{"RandomSample", "[", 
    RowBox[{"wolframPageLinks", ",", "1"}], "]"}], ",", 
   RowBox[{"Repeated", "[", "\"\</\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.747571673741337*^9, {3.747571719192953*^9, 3.747571721342272*^9}, 
   3.7477619331980753`*^9},ExpressionUUID->"62845ba8-c621-4db5-99c7-\
a3478891f7ad"],

Cell[BoxData[
 RowBox[{"domains", " ", "=", 
  RowBox[{"GroupBy", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rest", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Repeated", "[", "\"\</\>\"", "]"}]}], "]"}], "]"}], "&"}], "/@",
      " ", 
     RowBox[{"DeleteDuplicates", "[", "wolframPageLinks", "]"}]}], ",", 
    "First"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7475684050583572`*^9, 3.7475684938747168`*^9}, {
   3.747568572954678*^9, 3.747568620291654*^9}, 3.74756869043015*^9, {
   3.747571083336096*^9, 3.7475710862463303`*^9}, {3.7475715186941977`*^9, 
   3.7475715208276453`*^9}, {3.747571596970118*^9, 3.747571649901279*^9}, {
   3.74757171076175*^9, 3.7475717119584713`*^9}, {3.747572279367299*^9, 
   3.747572289941085*^9}, {3.74757238908248*^9, 3.74757239147252*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"e076608b-7890-440a-905d-183ff53c8d78"],

Cell[BoxData[
 RowBox[{"ReverseSort", "[", 
  RowBox[{"Length", " ", "/@", " ", "domains"}], "]"}]], "Input",
 CellChangeTimes->{{3.747572528571739*^9, 3.747572551732728*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"eef6506b-32d6-4384-9737-703634f8afee"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3cadbac1-db4c-4535-9f6a-ab7a994b6aad"],

Cell[CellGroupData[{

Cell["Useful Data Sources for Data Science Projects", "Section",
 CellChangeTimes->{{3.709319215223402*^9, 3.709319225401836*^9}, {
   3.713183108975733*^9, 3.713183109395059*^9}, {3.7147472842368917`*^9, 
   3.7147473183963823`*^9}, {3.714748884630917*^9, 3.714748894707773*^9}, 
   3.714748991071229*^9, {3.7147645420709057`*^9, 3.714764547549049*^9}, {
   3.7165126069566603`*^9, 3.716512618449506*^9}, {3.725371465057889*^9, 
   3.725371468286695*^9}, {3.7257335061915417`*^9, 
   3.725733507468288*^9}},ExpressionUUID->"71e7d5e6-a172-4d58-a905-\
e63f13eb8038"],

Cell["Some sites for publicly available datasets:", "Text",
 CellChangeTimes->{{3.7165126210815287`*^9, 3.716512628536936*^9}, {
  3.717152006537224*^9, 3.7171520349426613`*^9}, {3.725733514862623*^9, 
  3.725733525798468*^9}},ExpressionUUID->"efc50c27-8792-4b08-aba3-\
8e87f01a180e"],

Cell[TextData[{
 "US Government\[CloseCurlyQuote]s open data: ",
 ButtonBox["https://www.data.gov",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.data.gov/"], None},
  ButtonNote->"https://www.data.gov/"]
}], "Item",
 CellChangeTimes->{{3.714764596493402*^9, 3.7147646268095417`*^9}, {
  3.717181467384321*^9, 3.717181467394671*^9}, {3.748191556623665*^9, 
  3.748191586292529*^9}},ExpressionUUID->"8cd91f4e-ce4f-4c06-9a5a-\
034b58a65922"],

Cell[TextData[{
 "UCI Machine Learning Repository: ",
 ButtonBox["https://archive.ics.uci.edu/ml/datasets.php",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://archive.ics.uci.edu/ml/datasets.php"], None},
  ButtonNote->"https://archive.ics.uci.edu/ml/datasets.php"]
}], "Item",
 CellChangeTimes->{{3.714764596493402*^9, 3.714764623450365*^9}, {
   3.714764697608531*^9, 3.714764703791583*^9}, {3.717181473086904*^9, 
   3.71718147309737*^9}, 3.7481915649411287`*^9, {3.832155825049816*^9, 
   3.83215582705061*^9}, {3.832155864180937*^9, 
   3.832155864185347*^9}},ExpressionUUID->"92d6fd0a-715a-4ce2-ae66-\
22bf0274fb40"],

Cell[TextData[{
 "Kaggle Data Science Contests: ",
 ButtonBox["https://www.kaggle.com/datasets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.kaggle.com/datasets"], None},
  ButtonNote->"https://www.kaggle.com/datasets"]
}], "Item",
 CellChangeTimes->{{3.714764596493402*^9, 3.714764623450365*^9}, {
   3.714764697608531*^9, 3.7147647344483013`*^9}, {3.717181478920989*^9, 
   3.717181478933237*^9}, 
   3.7481915684611473`*^9},ExpressionUUID->"5024e1a9-fb54-46ca-af74-\
22b18baf8ee6"],

Cell[TextData[{
 StyleBox["FiveThirtyEight",
  FontSlant->"Italic"],
 " blog: ",
 ButtonBox["https://github.com/fivethirtyeight/data",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/fivethirtyeight/data"], None},
  ButtonNote->"https://github.com/fivethirtyeight/data"]
}], "Item",
 CellChangeTimes->{{3.714764596493402*^9, 3.714764623450365*^9}, {
   3.714764697608531*^9, 3.714764733681332*^9}, {3.714764784933712*^9, 
   3.7147647940228653`*^9}, {3.71718148712085*^9, 3.717181487131122*^9}, 
   3.748191571940959*^9, {3.74819161735739*^9, 
   3.748191621843272*^9}},ExpressionUUID->"119f2e97-9c68-43c2-839d-\
b3cf24f8745d"],

Cell["\<\
Note: This list has only been compiled as a suggestion for resources. Wolfram \
Research, Inc. is unable to comment on the quality of the content there.\
\>", "Text",
 CellChangeTimes->{{3.714762144791739*^9, 3.714762151657959*^9}, 
   3.714764539344611*^9, {3.7171520562162867`*^9, 3.717152155524276*^9}, {
   3.717181496994421*^9, 3.71718150087912*^9}, {3.748190649913365*^9, 
   3.748190653263422*^9}, {3.748191578460408*^9, 3.748191578900731*^9}},
 FontSize->12,ExpressionUUID->"5fd6dc7a-4aa3-4bde-815a-ee31804bc968"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"30dd3bf3-5f46-40aa-81c0-5b3dba127153"],

Cell[CellGroupData[{

Cell["Data Wrangling: From Raw Data into Lists", "Section",
 CellChangeTimes->{{3.709901499977928*^9, 3.7099015066239653`*^9}, {
   3.713182303663734*^9, 3.713182323080019*^9}, {3.713183151549719*^9, 
   3.7131831703478403`*^9}, 3.714749699410534*^9, {3.716512669601232*^9, 
   3.716512681647208*^9}, {3.748191666835545*^9, 
   3.748191667217197*^9}},ExpressionUUID->"4db9fb54-5931-49e4-ad42-\
8dcc7a80cee3"],

Cell["\<\
Lists are the most basic data structures in the Wolfram Language for easy \
manipulation of data.\
\>", "Text",
 CellChangeTimes->{{3.709990423803499*^9, 3.7099904373446712`*^9}, {
   3.716512743167952*^9, 3.716512767715868*^9}, {3.725371482118367*^9, 
   3.725371485363735*^9}, 
   3.748191672857256*^9},ExpressionUUID->"12a8aa11-ef9b-4838-8802-\
3b246fbd4c10"],

Cell[CellGroupData[{

Cell["Getting the Data", "Subsection",
 CellChangeTimes->{{3.7261022423052893`*^9, 
  3.7261022477545557`*^9}},ExpressionUUID->"88d4c369-dd22-4db6-96eb-\
349502da2f5a"],

Cell[CellGroupData[{

Cell["Import the \[OpenCurlyDoubleQuote]RetailSales.tsv\
\[CloseCurlyDoubleQuote] data file:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7257335499267263`*^9, 
  3.725733576084993*^9}},ExpressionUUID->"a490756c-768d-4658-80e9-\
398d1fab8ce2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rawData", " ", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<ExampleData/RetailSales.tsv\>\"", ",", "\"\<TSV\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.713183212944642*^9, 3.7131832530609827`*^9}, {
   3.714822487123502*^9, 3.714822516416505*^9}, {3.714823039507061*^9, 
   3.714823047073111*^9}, 3.716555395646541*^9, 3.717181556650783*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"8ef7040f-1077-45a1-8366-9b6948576c14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with the Data", "Subsection",
 CellChangeTimes->{{3.7261022580112553`*^9, 
  3.726102263127994*^9}},ExpressionUUID->"e655677a-6c29-4896-a187-\
ef99609c76a5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Basic list manipulations", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.716512795006569*^9, 3.7165128025734158`*^9}, {
   3.716555423526527*^9, 3.716555467633428*^9}, 3.725379853440672*^9, 
   3.726102276069091*^9, {3.748191687400775*^9, 
   3.748191689856675*^9}},ExpressionUUID->"92521a12-02be-4e17-92d7-\
df13f4f457fe"],

Cell["\<\
Take a peek at the data\[LongDash]first few rows at the beginning of the list:\
\>", "Text",
 CellChangeTimes->{{3.716512844814125*^9, 3.71651286786051*^9}, {
   3.7165481791070843`*^9, 3.716548193935816*^9}, {3.716555423526814*^9, 
   3.716555467633696*^9}, {3.7171815686719933`*^9, 3.717181570104134*^9}, 
   3.725379853441732*^9, 3.726102276069272*^9, {3.748191692944612*^9, 
   3.7481916984963617`*^9}},ExpressionUUID->"757d60bd-c122-4f74-a6ed-\
7de9631d17be"],

Cell[BoxData[
 RowBox[{"rawData", " ", "//", "Shallow"}]], "Input",
 CellChangeTimes->{{3.714825976821967*^9, 3.7148259817626038`*^9}, {
   3.716555423527184*^9, 3.716555467634075*^9}, 3.725379853443619*^9, 
   3.726102276069675*^9},ExpressionUUID->"dfd01da3-9188-46e0-b64e-\
eddfc81ac9a3"],

Cell["Check how many rows and columns:", "Text",
 CellChangeTimes->{{3.716512873821849*^9, 3.716512879383009*^9}, {
   3.7165481978983717`*^9, 3.716548201695369*^9}, {3.7165554235273333`*^9, 
   3.716555467634272*^9}, 3.72537985344528*^9, 3.726102276069829*^9, 
   3.748191700888234*^9},ExpressionUUID->"93341187-47a0-40d9-bf0d-\
18b16f1c61cf"],

Cell[BoxData[
 RowBox[{"rawData", " ", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.714825987654039*^9, 3.714825992049851*^9}, {
   3.716555423527813*^9, 3.7165554676345463`*^9}, 3.7253798534476147`*^9, 
   3.726102276070305*^9},ExpressionUUID->"442c4e82-e246-4dcb-905b-\
931e0d8dbe3b"],

Cell["\<\
If there is a header row, extract it for labelling purposes later:\
\>", "Text",
 CellChangeTimes->{{3.7165128869249973`*^9, 3.71651289866707*^9}, {
   3.716548212635559*^9, 3.716548241325313*^9}, 3.71654901177536*^9, {
   3.716555423528305*^9, 3.7165554676350393`*^9}, 3.725379853448873*^9, 
   3.7257602569790707`*^9, 3.726102276070513*^9, 
   3.832938932771804*^9},ExpressionUUID->"f51954a3-c63d-438a-a425-\
27f615158f2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"columnHeaders", " ", "=", " ", 
  RowBox[{"First", "@", "rawData"}]}]], "Input",
 CellChangeTimes->{{3.7148230125094957`*^9, 3.7148230513289022`*^9}, {
   3.716555423528575*^9, 3.716555467635282*^9}, 3.725379853450732*^9, 
   3.726102276071024*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"792aa008-7e92-4aad-80ca-15f8d9d15b47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Date\"\>", ",", "\<\"City\"\>", ",", "\<\"Sales\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.747764509911744*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"df5d3bbe-7a2a-4088-a045-c6966140a5fe"]
}, Open  ]],

Cell["Extract the data without the header rows:", "Text",
 CellChangeTimes->{{3.716512905485745*^9, 3.716512910873382*^9}, {
   3.7165482441979637`*^9, 3.716548248093446*^9}, {3.716555423529063*^9, 
   3.716555467635777*^9}, 3.7253798534518633`*^9, 3.7257602627867327`*^9, 
   3.726102276071226*^9},ExpressionUUID->"b7456c9b-7934-42af-88bb-\
0cb9a915b9a0"],

Cell[BoxData[
 RowBox[{"salesData", " ", "=", " ", 
  RowBox[{"Rest", "@", "rawData"}]}]], "Input",
 CellChangeTimes->{{3.714823034924561*^9, 3.714823061034189*^9}, {
   3.7165554235293503`*^9, 3.716555467636046*^9}, 3.717152277768529*^9, 
   3.725379853453212*^9, 3.72610227607174*^9, 3.7477645156619587`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"10ff041a-6ac1-4ed1-946d-510bc949c8df"],

Cell["Extract specific columns of data:", "Text",
 CellChangeTimes->{{3.716513041664543*^9, 3.7165130550450363`*^9}, {
   3.716513088609428*^9, 3.7165131052564907`*^9}, {3.716549064439039*^9, 
   3.716549090474872*^9}, {3.716555423529491*^9, 3.7165554676362343`*^9}, 
   3.7253798534542513`*^9, 3.726102276071887*^9, 
   3.7481917061600657`*^9},ExpressionUUID->"0f2b7bd2-4cd4-48dc-b9db-\
654c218ed384"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"salesByDate", " ", "=", 
   RowBox[{"salesData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"salesByCity", " ", "=", 
   RowBox[{"salesData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.714826713818122*^9, 3.714826721468878*^9}, {
   3.714826897735046*^9, 3.71482689898053*^9}, {3.7165130205417833`*^9, 
   3.716513028708406*^9}, {3.7165490340868177`*^9, 3.7165490665748377`*^9}, {
   3.716549122335388*^9, 3.716549122702402*^9}, {3.716555423529726*^9, 
   3.7165554676365*^9}, {3.7171522858886747`*^9, 3.717152289244014*^9}, {
   3.7253717088383512`*^9, 3.725371734867166*^9}, 3.7253798534556026`*^9, {
   3.725760145503026*^9, 3.725760170956505*^9}, {3.7257602691799927`*^9, 
   3.7257603377092323`*^9}, 3.726102276072159*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"a24f66a9-2114-41e3-a194-ce3e0322f177"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Visualisations using lists", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.716550086370203*^9, 3.716550099259251*^9}, 
   3.716555423530004*^9, 3.726102276072287*^9, {3.7481917108717947`*^9, 
   3.748191711272059*^9}, {3.8329389422749767`*^9, 
   3.8329389423557043`*^9}},ExpressionUUID->"8324f763-b794-4615-ab8d-\
6ca4cc694776"],

Cell["Gather sales data for each date, across cities:", "Text",
 CellChangeTimes->{{3.725760378479063*^9, 3.725760404910904*^9}, {
   3.725760447903757*^9, 3.7257604500394583`*^9}, 3.726101373276313*^9, 
   3.7261022760723763`*^9},ExpressionUUID->"e3697647-e8a4-4aad-ae17-\
71331177981e"],

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{"salesByDate", ",", "First"}], "]"}]], "Input",
 CellChangeTimes->{3.725760517639258*^9, 3.72610137327697*^9, 
  3.7261022760726423`*^9},ExpressionUUID->"8d218b30-94b9-4ca8-a2bd-\
5f7de2d0710c"],

Cell["Total sales for each date:", "Text",
 CellChangeTimes->{{3.725760412780158*^9, 3.72576041911861*^9}, 
   3.726101373277129*^9, 3.72610227607276*^9, 
   3.748191715623918*^9},ExpressionUUID->"f1b4f74d-44a2-45d9-9487-\
d496bca1d163"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "@", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
  RowBox[{"GatherBy", "[", 
   RowBox[{"salesByDate", ",", "First"}], "]"}]}]], "Input",
 CellChangeTimes->{3.725760519095188*^9, 3.72610137327754*^9, 
  3.726102276073023*^9},ExpressionUUID->"00a10d58-3dac-4d56-bb17-\
bded07f4ccfe"],

Cell["Visualise daily total sales for the available months:", "Text",
 CellChangeTimes->{{3.716549068148776*^9, 3.7165490738609858`*^9}, 
   3.716555423530184*^9, {3.7257604439936533`*^9, 3.7257604896257153`*^9}, 
   3.726102276073142*^9, {3.748190733046376*^9, 3.748190733412475*^9}, {
   3.8329389487712107`*^9, 
   3.832938949835086*^9}},ExpressionUUID->"cc7fa93f-2117-491b-afed-\
33c866b8e2cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dailySalesData", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"GatherBy", "[", 
     RowBox[{"salesByDate", ",", "First"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", "dailySalesData", "]"}]}], "Input",
 CellChangeTimes->{{3.714826713818122*^9, 3.714826721468878*^9}, {
   3.714826897735046*^9, 3.71482689898053*^9}, {3.7165130205417833`*^9, 
   3.716513028708406*^9}, {3.7165490340868177`*^9, 3.7165490665748377`*^9}, 
   3.7165554235304623`*^9, 3.7171816651142817`*^9, {3.7257605013672943`*^9, 
   3.725760551115611*^9}, 
   3.726102276073402*^9},ExpressionUUID->"319deb88-8dcd-4ea2-9665-\
5f409eacef7f"],

Cell["Gather sales data for each city:", "Text",
 CellChangeTimes->{{3.72576058925158*^9, 3.7257605986901617`*^9}, 
   3.7261013834120617`*^9, 
   3.72610227607351*^9},ExpressionUUID->"b1abd00a-82a8-4f37-8a03-\
ac9f6e6f1882"],

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{"salesByCity", ",", "First"}], "]"}]], "Input",
 CellChangeTimes->{{3.725760614475822*^9, 3.725760615633684*^9}, 
   3.726101383412409*^9, 
   3.726102276073769*^9},ExpressionUUID->"b9468d62-bb4f-4e6b-be65-\
a041c8d0f712"],

Cell["Total sales for each city:", "Text",
 CellChangeTimes->{{3.725760635782371*^9, 3.725760644704967*^9}, 
   3.726101383412538*^9, 3.72610227607388*^9, 
   3.748191721127611*^9},ExpressionUUID->"1aa8d68f-9c42-4ff8-92ac-\
7a5461d0a39a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Total", "@", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
  RowBox[{"GatherBy", "[", 
   RowBox[{"salesByCity", ",", "First"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.725760655022427*^9, 3.725760655974942*^9}, 
   3.726101383412801*^9, 
   3.726102276074139*^9},ExpressionUUID->"35a7de3b-59db-4c3c-85f1-\
44b237083c59"],

Cell["\<\
Visualise total sales for each city for the available months:\
\>", "Text",
 CellChangeTimes->{{3.716513041664543*^9, 3.7165130550450363`*^9}, {
   3.716513088609428*^9, 3.71651313166298*^9}, 3.7165491346616993`*^9, 
   3.716555423530603*^9, 3.725760564301181*^9, {3.72576066058998*^9, 
   3.7257606746268377`*^9}, 3.726102276074561*^9, {3.748190740909965*^9, 
   3.748190743499942*^9}, 3.7481917271374397`*^9, {3.832938958579351*^9, 
   3.8329389588514147`*^9}},ExpressionUUID->"143d3977-7262-4c3c-8a8c-\
c89864e2c1d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"citySalesData", " ", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "@", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
    RowBox[{"GatherBy", "[", 
     RowBox[{"salesByCity", ",", "First"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"citySalesData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"citySalesData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.714826906734165*^9, 3.714826910636467*^9}, {
   3.714827077085723*^9, 3.714827101977482*^9}, {3.7165131503793507`*^9, 
   3.7165131569094677`*^9}, {3.716549119267762*^9, 3.716549128927916*^9}, 
   3.716555423530792*^9, 3.71715229770782*^9, 3.725371599578487*^9, 
   3.725371680232541*^9, 3.725379670884478*^9, {3.725379719149212*^9, 
   3.725379738386571*^9}, {3.725760687381879*^9, 3.725760723413281*^9}, 
   3.725801045221487*^9, 3.726102276074823*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"6c74247e-447c-4a58-be75-cb8650a673a0"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
            19140.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{37.907757220535274`, 
           85.47995117563894}, {-60.62377653592819, 93.80044139962376}}],
         StatusArea[#, 19140]& ,
         TagBoxNote->"19140"],
        StyleBox["19140", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19140, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
            23192.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{90.07089063486727, 
           137.64308458997093`}, {-93.2100320779792, 93.80044139962376}}],
         StatusArea[#, 23192]& ,
         TagBoxNote->"23192"],
        StyleBox["23192", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23192, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
            21408.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{142.23402404919923`, 
           189.80621800430293`}, {-78.86307257970205, 93.80044139962376}}],
         StatusArea[#, 21408]& ,
         TagBoxNote->"21408"],
        StyleBox["21408", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21408, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
            23016.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{194.39715746353124`, 
           241.96935141863491`}, {-91.79463697052586, 93.80044139962376}}],
         StatusArea[#, 23016]& ,
         TagBoxNote->"23016"],
        StyleBox["23016", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23016, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 23848.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{246.56029087786322`, 
           294.1324848329669}, {-98.48559566030534, 93.80044139962376}}],
         StatusArea[#, 23848]& ,
         TagBoxNote->"23848"],
        StyleBox["23848", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23848, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 22805.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{298.7234242921952, 
           346.29561824729893`}, {-90.09777124511302, 93.80044139962376}}],
         StatusArea[#, 22805]& ,
         TagBoxNote->"22805"],
        StyleBox["22805", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[22805, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5487982520029133, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}], 
        LineBox[{{6.451201747997087, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {
          LineBox[{{1.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
             0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
             0.}]}], 
          LineBox[{{2.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
             0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
             0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
             0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
             0.}]}], LineBox[{{4.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 0.}]}],
           LineBox[{{4.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 0.}]}],
           LineBox[{{5.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 0.}]}],
           LineBox[{{5.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Boston\"\>", Offset[{0, -2}, {1., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"New York\"\>", Offset[{0, -2}, {2., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Paris\"\>", Offset[{0, -2}, {3., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"London\"\>", Offset[{0, -2}, {4., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Shanghai\"\>", Offset[{0, -2}, {5., 0.}], {0, 1}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Tokio\"\>", Offset[{0, -2}, {6., 0.}], {0, 1}, 
          Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.747763872575314*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"40a134e5-63e9-440f-95a9-03fac3f38bda"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4f77c04c-1461-438e-ae1b-70766f8f6438"],

Cell[CellGroupData[{

Cell["Data Wrangling: From Raw Data to Key-Value Pairs", "Section",
 CellChangeTimes->{{3.709901499977928*^9, 3.7099015066239653`*^9}, {
   3.713182303663734*^9, 3.713182323080019*^9}, {3.713183151549719*^9, 
   3.7131831703478403`*^9}, 3.714749699410534*^9, {3.716512669601232*^9, 
   3.716512681647208*^9}, {3.7165132385552263`*^9, 3.716513242977414*^9}, 
   3.7165481506675997`*^9, {3.748191732023266*^9, 
   3.748191738366918*^9}},ExpressionUUID->"f44cb2aa-f9d9-4573-aee6-\
0993145e737b"],

Cell[TextData[{
 "An ",
 StyleBox[ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
  FontWeight->"Bold"],
 " represents data as key-value pairs. "
}], "Text",
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, 3.619440244896798*^9, {
   3.619440280492786*^9, 3.6194403498246326`*^9}, {3.6197822193542747`*^9, 
   3.619782239744755*^9}, {3.621258771798959*^9, 3.621258771864337*^9}, 
   3.680608745957323*^9, 
   3.7165498749927998`*^9},ExpressionUUID->"55905d08-1b62-49ae-a213-\
d3d3c998af40"],

Cell["\<\
Associations provide the dictionary data structure, where each value is \
labelled with and accessed by its key. This removes the need to remember \
separately the meaning of each entry in a list and strictly adhere to the \
sequence:\
\>", "Text",
 CellChangeTimes->{{3.717152377717637*^9, 3.717152504903263*^9}, {
   3.717181742303638*^9, 3.717181751860368*^9}, {3.748191750545362*^9, 
   3.7481917561675177`*^9}, 
   3.832938970979147*^9},ExpressionUUID->"c73cbaa7-93cf-4996-bfc6-\
b3fbdd38579c"],

Cell[BoxData[
 RowBox[{"assoc", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "4"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}], ",", 
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"d", "\[Rule]", "5"}]}], "|>"}]}]], "Input",
 CellChangeTimes->{{3.619437928034724*^9, 3.6194379363783903`*^9}, {
  3.619437986627963*^9, 
  3.619437989194017*^9}},ExpressionUUID->"bd442499-73e8-428f-a64c-\
3ed9e4128381"],

Cell[CellGroupData[{

Cell["Basic Operations", "Subsection",
 CellChangeTimes->{{3.71655120154659*^9, 
  3.71655120765844*^9}},ExpressionUUID->"ee89974e-f9e7-48cf-9475-\
025a6240b6c3"],

Cell["Look up a value by key:", "Text",
 CellChangeTimes->{{3.619438072396846*^9, 3.619438079796438*^9}, 
   3.680608748294738*^9, {3.725800789503187*^9, 
   3.725800789867407*^9}},ExpressionUUID->"9fb6a12a-52b6-4a44-8da0-\
d3653dc851cf"],

Cell[BoxData[
 RowBox[{"assoc", "[", "b", "]"}]], "Input",
 CellChangeTimes->{{3.619437940017036*^9, 3.619437942962775*^9}, 
   3.6857245300199413`*^9},ExpressionUUID->"6b256912-8391-41f5-8b66-\
b0caae400378"],

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.619438245032156*^9, 
  3.6194382582935553`*^9}},ExpressionUUID->"c32ffb83-928a-4efc-9a6f-\
0ba7232f28c5"],

Cell[BoxData[
 RowBox[{"assoc", "[", 
  RowBox[{"[", 
   RowBox[{"Key", "[", "b", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.685751015106077*^9, 
  3.6857510225785418`*^9}},ExpressionUUID->"c591c056-f4b9-4d8b-9b99-\
7e5ab209d2cd"],

Cell["\<\
Many common list operations work transparently on associations:\
\>", "Text",
 CellChangeTimes->{{3.619438083923483*^9, 3.6194381258881083`*^9}, 
   3.6806087515461516`*^9, {3.725800795910369*^9, 
   3.725800796851512*^9}},ExpressionUUID->"f30da0a1-8b19-46ce-bcc2-\
88704220fee9"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", "assoc"}], "]"}]], "Input",
 CellChangeTimes->{{3.685751669786703*^9, 
  3.685751675691868*^9}},ExpressionUUID->"8bee3a14-506b-4065-9451-\
9be8f2f826e9"],

Cell[BoxData[
 RowBox[{"Sort", "@", "assoc"}]], "Input",
 CellChangeTimes->{{3.619437999196361*^9, 
  3.619438003934044*^9}},ExpressionUUID->"d491d9b5-637f-42f0-8775-\
c73f8a1d32e9"],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"assoc", ",", 
   RowBox[{
    RowBox[{"#", ">", "3"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.619438008807323*^9, 
  3.6194380216107492`*^9}},ExpressionUUID->"877833b7-6fa8-47b6-b2ac-\
72d75e134c2a"],

Cell[BoxData[
 RowBox[{"Total", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.6194381418325453`*^9, 
  3.619438145583832*^9}},ExpressionUUID->"1388a400-57bb-46b8-b0c1-\
cef80ba6d0d0"],

Cell["Some functions apply to keys:", "Text",
 CellChangeTimes->{{3.685752025490437*^9, 3.685752041093617*^9}, {
  3.6857521044915667`*^9, 3.685752105371441*^9}, {3.725800801166581*^9, 
  3.725800803915608*^9}},ExpressionUUID->"eb49e742-6a8a-4d15-a7ca-\
4b2aa657a202"],

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"f", ",", "assoc"}], "]"}]], "Input",
 CellChangeTimes->{{3.6857520442081623`*^9, 
  3.685752054614959*^9}},ExpressionUUID->"445cfdae-c403-405b-93c6-\
b0cf9841fa49"],

Cell[BoxData[
 RowBox[{"KeySort", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.685752066272255*^9, 
  3.685752074627562*^9}},ExpressionUUID->"1bc9289b-6674-49fc-8c42-\
7e4d1a012d7e"],

Cell["Extract keys or values from an association:", "Text",
 CellChangeTimes->{{3.619438180044606*^9, 3.619438194929821*^9}, 
   3.6806087552363577`*^9, {3.7258008062757597`*^9, 
   3.725800807059561*^9}},ExpressionUUID->"ac4b6805-610c-4cb6-bc02-\
7784592d3586"],

Cell[BoxData[
 RowBox[{"Keys", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.619438198219534*^9, 
  3.6194382015550127`*^9}},ExpressionUUID->"66d5888c-81fb-4667-8d68-\
03ded4c6d4cb"],

Cell[BoxData[
 RowBox[{"Values", "[", "assoc", "]"}]], "Input",
 CellChangeTimes->{{3.6194382035811663`*^9, 
  3.619438208473506*^9}},ExpressionUUID->"4114ed28-2281-4cd4-9fee-\
1fbc7e2b4706"],

Cell[TextData[{
 "Functions such as ",
 StyleBox[ButtonBox["AssociationMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/AssociationMap"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["AssociationThread",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/AssociationThread"],
  FontWeight->"Bold"],
 " can construct associations from lists:"
}], "Text",
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.621258787649001*^9, 3.62125879784138*^9}, 3.6806087593866653`*^9, {
   3.725800815196176*^9, 
   3.7258008166275663`*^9}},ExpressionUUID->"8a14b440-bdce-4e4b-bb06-\
75070a9e9215"],

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",Expr\
essionUUID->"25e7bc13-7a81-4189-af32-5a9b1574b18e"],

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6194390105243263`*^9, 
  3.619439027439542*^9}},ExpressionUUID->"19207f3f-3086-43fb-a995-\
62b5c68fe12d"],

Cell[TextData[{
 "Associations are also returned by using functions like ",
 StyleBox[ButtonBox["GroupBy",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GroupBy"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["Counts",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Counts"],
  FontWeight->"Bold"],
 ", ",
 StyleBox[ButtonBox["CountsBy",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/CountsBy"],
  FontWeight->"Bold"],
 ", etc. to process data."
}], "Text",
 CellChangeTimes->{{3.7165499842459803`*^9, 3.7165500468329973`*^9}, {
  3.717152582479829*^9, 3.717152587156151*^9}, {3.717152876209139*^9, 
  3.717152876975586*^9}, {3.7258008272201567`*^9, 3.72580084050917*^9}, {
  3.748191774225441*^9, 
  3.7481918151891203`*^9}},ExpressionUUID->"b0bab425-356c-46f3-8caf-\
2580a04aadb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Associations", "Subsection",
 CellChangeTimes->{{3.717181876271595*^9, 
  3.71718188588632*^9}},ExpressionUUID->"46b19136-6b74-4787-9f72-\
9ce842fc6c59"],

Cell[TextData[{
 "Total sales for each city (using GroupBy instead of ",
 StyleBox[ButtonBox["GatherBy",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/GatherBy"],
  FontWeight->"Bold"],
 "):"
}], "Text",
 CellChangeTimes->{{3.725806378948794*^9, 3.7258063977927*^9}, 
   3.7481918230480413`*^9},ExpressionUUID->"72313926-474c-44ce-97e0-\
1b3e929577d4"],

Cell[BoxData[
 RowBox[{"citySalesData", " ", "=", 
  RowBox[{"GroupBy", "[", 
   RowBox[{"salesByCity", ",", 
    RowBox[{"First", "\[Rule]", "Last"}], ",", "Total"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7258009478617783`*^9, 3.725800956060145*^9}, {
  3.725801069389879*^9, 3.725801069898553*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2c1d4f2b-bd87-4d8d-983a-49c0092bfd7e"],

Cell["Number of sales for each city:", "Text",
 CellChangeTimes->{{3.725806401668777*^9, 
  3.7258064154740868`*^9}},ExpressionUUID->"4fad644a-13c4-4742-b2a6-\
db277b3b14ee"],

Cell[BoxData[
 RowBox[{"Counts", "[", 
  RowBox[{"salesByCity", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7258011525545197`*^9, 
  3.725801176613681*^9}},ExpressionUUID->"34cf0b30-bfcc-4763-a53f-\
9c2dbb9f3ddd"],

Cell["Organize sales data by city:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.716550406736319*^9, 3.716550432767234*^9}, {
   3.716550515247924*^9, 3.716550569137467*^9}, 3.716555504270471*^9, 
   3.725806440588732*^9, {3.7258065163077297`*^9, 
   3.72580654576939*^9}},ExpressionUUID->"2f466ef3-9159-47d1-82a2-\
c578dbe104e6"],

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{"salesData", ",", 
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.725804772393112*^9, 3.725804776439171*^9}, {
  3.7258048820335712`*^9, 3.725804888248805*^9}, {3.725805776422124*^9, 
  3.725805788380577*^9}},ExpressionUUID->"ce598b9a-f6e9-42d1-8436-\
b0c7aeee7b7a"],

Cell["\<\
Restructure the data so that for each city, a list of date-value pairs is \
stored:\
\>", "Text",
 CellChangeTimes->{{3.725806550425612*^9, 3.725806585507708*^9}, {
  3.72580720739989*^9, 3.725807226869624*^9}, {3.748191834054842*^9, 
  3.7481918380841837`*^9}},ExpressionUUID->"2e8f376d-62d2-43a9-a434-\
3dc687d7ea55"],

Cell[BoxData[
 RowBox[{"citySalesDataByDates", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], "&"}], " ", "/@", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"salesData", ",", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.714823092375979*^9, 3.714823098972683*^9}, {
   3.714823131877945*^9, 3.714823155878256*^9}, {3.714823276379232*^9, 
   3.714823321356423*^9}, 3.7148233609082117`*^9, {3.714823395040511*^9, 
   3.714823397302843*^9}, {3.714823618871821*^9, 3.7148236216222878`*^9}, {
   3.714826035731798*^9, 3.714826067333221*^9}, {3.7148271737633753`*^9, 
   3.7148271781057873`*^9}, 3.7165503518535137`*^9, 3.717152314058272*^9, 
   3.717181936344687*^9, 3.725801007537994*^9, {3.725801081854045*^9, 
   3.7258010832216587`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"d7fd5242-1e92-4aea-a673-a1fbdf8be8ef"],

Cell[CellGroupData[{

Cell["Plot sales data across all available dates, only for Boston:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716550579848997*^9, 3.716550584959218*^9}, 
   3.716550722674745*^9, {3.725807249915472*^9, 3.7258072581695957`*^9}, 
   3.748191842531599*^9},ExpressionUUID->"c8593cff-d89a-4b7d-a9ae-\
d70dfe1fe193"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"citySalesDataByDates", "[", "\"\<Boston\>\"", "]"}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714827406021968*^9, 3.714827414628994*^9}, 
   3.716550722675187*^9, 
   3.725807313971717*^9},ExpressionUUID->"c59f6268-ed9d-4c78-bd8a-\
301267487287"],

Cell["\<\
Create a stacked plot comparing sales across three cities for a few days:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.716550600000869*^9, 3.7165506231505203`*^9}, {
   3.71655065781843*^9, 3.716550658811245*^9}, 3.716550722675672*^9, 
   3.725807265748547*^9},ExpressionUUID->"618d3de8-4eb1-4a65-b43a-\
859e7cc1e710"],

Cell[BoxData[
 RowBox[{"StackedDateListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"citySalesDataByDates", "[", "#", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", "30"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Boston\>\"", ",", "\"\<Shanghai\>\"", ",", "\"\<London\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Boston\>\"", ",", "\"\<Shanghai\>\"", ",", "\"\<London\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714827277785965*^9, 3.7148273360053253`*^9}, {
   3.714827481868905*^9, 3.714827688894186*^9}, 3.716550722676059*^9, {
   3.7258073016992073`*^9, 
   3.725807344859107*^9}},ExpressionUUID->"0f06e7c2-efa2-4f80-b600-\
2f41f7528853"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"335a9caa-bafd-4521-956d-c595168c10b8"],

Cell[CellGroupData[{

Cell["\<\
Data Wrangling: From Raw Data to Hierarchical Structured Datasets\
\>", "Section",
 CellChangeTimes->{{3.709901499977928*^9, 3.7099015066239653`*^9}, {
   3.713182303663734*^9, 3.713182323080019*^9}, {3.713183151549719*^9, 
   3.7131831703478403`*^9}, 3.714749699410534*^9, {3.716512669601232*^9, 
   3.716512681647208*^9}, {3.7165132385552263`*^9, 3.716513242977414*^9}, 
   3.7165481506675997`*^9, {3.716550780674778*^9, 3.7165508182105494`*^9}, {
   3.7165508566634817`*^9, 3.716550857084881*^9}, {3.72580749591325*^9, 
   3.725807496350698*^9}},ExpressionUUID->"0fc524ec-8ee5-4ce2-a776-\
9a7be321518a"],

Cell[TextData[{
 "A ",
 StyleBox[ButtonBox["Dataset",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dataset"],
  FontWeight->"Bold"],
 " is a general way of representing a hierarchy of lists and associations, \
constructed from tabular data."
}], "Text",
 CellChangeTimes->{
  3.716550888382307*^9, {3.716550965459799*^9, 
   3.7165509726171427`*^9}},ExpressionUUID->"60bb7b8c-4c57-4d1b-9507-\
7711f10a11b9"],

Cell["\<\
It provides a flexible framework for sophisticated data queries and \
manipulations on data, given a defined regular structure at arbitrary \
complexity:\
\>", "Text",
 CellChangeTimes->{
  3.717152926749411*^9, {3.717152960134717*^9, 3.717152970951189*^9}, {
   3.74819186146122*^9, 
   3.748191864474801*^9}},ExpressionUUID->"781fa7cc-4b2d-4787-90f4-\
ecfcac58102b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", 
         RowBox[{"{", "1", "}"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<y\>\""}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}]}], "|>"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "3"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", 
         RowBox[{"{", "3", "}"}]}]}], "|>"}], ",", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<a\>\"", "\[Rule]", "4"}], ",", 
        RowBox[{"\"\<b\>\"", "\[Rule]", "\"\<x\>\""}], ",", 
        RowBox[{"\"\<c\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5"}], "}"}]}]}], "|>"}]}], "\[IndentingNewLine]",
      "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.619440503962021*^9, 3.619440518471898*^9}, 
   3.620648363926331*^9},ExpressionUUID->"6991f5ab-8241-4419-90f6-\
6c9477e95405"],

Cell[CellGroupData[{

Cell["Basic Operations", "Subsection",
 CellChangeTimes->{{3.7165512239540443`*^9, 
  3.716551229362282*^9}},ExpressionUUID->"320df3b4-79bb-4ea4-9016-\
7c503cddaa45"],

Cell["Extract rows:", "Text",
 CellChangeTimes->{{3.61944055207487*^9, 3.619440566835297*^9}, 
   3.6806088039789457`*^9, {3.748191872306499*^9, 
   3.748191872810655*^9}},ExpressionUUID->"c9fe9162-885f-4ec3-a01a-\
15dcad26e1f4"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"2", ";;", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.619440567887905*^9, 
  3.619440602869378*^9}},ExpressionUUID->"811f2583-936c-4cc6-b147-\
e14141615647"],

Cell["Extract a row:", "Text",
 CellChangeTimes->{{3.619440586449301*^9, 3.619440589280864*^9}, 
   3.680608805398264*^9, {3.74819187472252*^9, 
   3.748191875242333*^9}},ExpressionUUID->"33ed6a8e-5123-4e86-b632-\
2d0597b4ece3"],

Cell[BoxData[
 RowBox[{"d", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.619440591195836*^9, 3.619440596905901*^9}, {
  3.619440663243024*^9, 
  3.6194406634674473`*^9}},ExpressionUUID->"8162f751-a95d-4bca-9d5a-\
71d2a3e4e88f"],

Cell["Extract the raw contents of a row:", "Text",
 CellChangeTimes->{{3.619440624845681*^9, 3.619440650091948*^9}, 
   3.6806088071691127`*^9, {3.748191877170422*^9, 
   3.748191877602219*^9}},ExpressionUUID->"d5977280-28c0-4664-9f53-\
63f9467c892f"],

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"d", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.619440651744733*^9, 
  3.61944066631544*^9}},ExpressionUUID->"dfdadbe1-711c-4a36-a07e-\
3bb07a5f6850"],

Cell["\<\
Extract an element from a particular column of a particular row:\
\>", "Text",
 CellChangeTimes->{{3.6194406833141813`*^9, 3.619440700007153*^9}, 
   3.68060881052026*^9, {3.748191879610136*^9, 3.7481918800102882`*^9}, {
   3.748544404657364*^9, 
   3.7485444194366617`*^9}},ExpressionUUID->"f74ec6b3-5817-4ef6-beaa-\
bd2ee1de0c00"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"2", ",", "\"\<b\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6194407011009703`*^9, 
  3.6194407054713583`*^9}},ExpressionUUID->"17e034c3-e5f7-4888-bebd-\
d2ca4c14ab39"],

Cell["Extract all rows of a particular column:", "Text",
 CellChangeTimes->{{3.619440746956205*^9, 3.6194407520345383`*^9}, 
   3.6806088118206334`*^9, {3.7481918819781837`*^9, 3.748191882314345*^9}, {
   3.7485444582571783`*^9, 
   3.7485444642371607`*^9}},ExpressionUUID->"b4367a55-ead6-4d73-8bda-\
c8f9c87c2f3e"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"All", ",", "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6194407531272173`*^9, 
  3.6194407717930737`*^9}},ExpressionUUID->"af0da290-e9f1-4c1a-b649-\
225cf7c4b089"],

Cell[CellGroupData[{

Cell["Filtering, sorting, ... ", "Subsubsection",
 CellChangeTimes->{{3.5901592262925777`*^9, 3.59015922784245*^9}, {
   3.619437701518567*^9, 3.619437704472063*^9}, {3.619440362678165*^9, 
   3.6194403982263803`*^9}, {3.620648854705855*^9, 3.620648867568755*^9}, 
   3.680608818663732*^9, {3.7165514386377687`*^9, 3.716551439562879*^9}, {
   3.725380033539344*^9, 3.725380054176856*^9}, {3.748191887417931*^9, 
   3.748191887513947*^9}},ExpressionUUID->"b29cc295-0e6e-44d5-8d1c-\
f4d51c1089f5"],

Cell["\<\
A Dataset can be queried using a function or composition of functions.\
\>", "Text",
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
  3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
  3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
  3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
  3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
  3.6206484391908493`*^9, 3.620648439742717*^9}, {3.621258829908265*^9, 
  3.621258829987089*^9}, {3.7481918928502007`*^9, 
  3.7481918946661263`*^9}},ExpressionUUID->"7d6d6d31-ed1e-46af-b010-\
a4ec1fb45967"],

Cell["Perform operations on a single column:", "Text",
 CellChangeTimes->{{3.620648426031261*^9, 3.620648437014976*^9}, {
   3.620648583348699*^9, 3.620648585060882*^9}, 3.621266074693981*^9, 
   3.680608821783296*^9, 3.716551306890012*^9, {3.74819189796157*^9, 
   3.748191898650338*^9}},ExpressionUUID->"ed0e3476-48c5-462c-b310-\
cb8e4f7f6271"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"Total", ",", "\"\<a\>\""}], "]"}]], "Input",ExpressionUUID->\
"08e33881-b465-4db5-befa-44835acba8a5"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"Catenate", ",", "\"\<c\>\""}], "]"}]], "Input",ExpressionUUID->\
"a118a42d-be84-4a62-a2dc-f1f9bd7c4149"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"Tally", ",", "\"\<b\>\""}], "]"}]], "Input",ExpressionUUID->\
"7438116b-5813-44b7-9382-0d2334dab905"],

Cell["Sort by some criterion:", "Text",
 CellChangeTimes->{{3.619441540211155*^9, 3.619441547762433*^9}, 
   3.61944802197968*^9, 3.621266082315689*^9, 3.680608827555947*^9, 
   3.716551493921954*^9, {3.748191900993451*^9, 
   3.748191901329653*^9}},ExpressionUUID->"8e1d197c-e05a-4eff-aea4-\
99b20bcc44fc"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Length", "[", "#c", "]"}], "&"}], "]"}], "]"}]], "Input",Expressi\
onUUID->"2f861699-8b93-4ded-b4c5-3c65cf70b357"],

Cell["Filter rows based on one of the columns:", "Text",
 CellChangeTimes->{{3.619441475401732*^9, 3.619441478840807*^9}, {
   3.6206486596394873`*^9, 3.620648667486884*^9}, 3.621266079387865*^9, 
   3.6806088240661836`*^9, 3.7165514769470243`*^9, {3.748191903777429*^9, 
   3.74819190413722*^9}},ExpressionUUID->"1f532948-e9fe-4633-9508-\
176475b860c7"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#a", ">", "2"}], "&"}], "]"}], "]"}]], "Input",ExpressionUUID->\
"85302269-7867-48ce-a27c-3b6bed696859"],

Cell["Filter rows and extract a column:", "Text",
 CellChangeTimes->{{3.6194415013998833`*^9, 3.619441509797925*^9}, {
   3.620648844315534*^9, 3.620648844410529*^9}, 3.621266081275674*^9, 
   3.680608826226584*^9, 3.716551484802979*^9, {3.748191906281458*^9, 
   3.748191906649609*^9}},ExpressionUUID->"db1e9a01-00d1-458b-8c6c-\
9a361ee7ac5b"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#a", ">", "2"}], "&"}], "]"}], ",", "\"\<b\>\""}], 
  "]"}]], "Input",ExpressionUUID->"8a95dbbf-af55-4213-aaaa-5004c2f4bc87"],

Cell["Delete duplicates:", "Text",
 CellChangeTimes->{{3.619441598517819*^9, 3.619441602981554*^9}, 
   3.621266083899568*^9, 3.6806088301643887`*^9, 3.716551635938236*^9, {
   3.748191908977212*^9, 
   3.748191909345373*^9}},ExpressionUUID->"9a4f976e-5b74-4aab-945a-\
17a096ca6dc4"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"DeleteDuplicatesBy", "[", 
   RowBox[{"Key", "[", "\"\<b\>\"", "]"}], "]"}], "]"}]], "Input",ExpressionUU\
ID->"f779b772-4f39-4276-bebd-3c50c85d9c7c"],

Cell[CellGroupData[{

Cell["Optional", "Subsubsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.716552938071248*^9, 3.716552943124865*^9}, 
   3.716552992471776*^9},
 FontSize->18,
 FontColor->GrayLevel[
  0.5],ExpressionUUID->"837a117b-5707-43d0-af46-99609f6eb310"],

Cell[TextData[{
 "Filter rows, then aggregate a column (",
 StyleBox["/*", "Input"],
 " is an abbreviation for ",
 StyleBox[ButtonBox["RightComposition",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/RightComposition"],
  FontWeight->"Bold"],
 "):"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.61944198942776*^9, 3.61944200004147*^9}, {
   3.619442044557304*^9, 3.619442076738563*^9}, {3.620648762281476*^9, 
   3.620648780751011*^9}, {3.621258845759149*^9, 3.621258845838171*^9}, 
   3.621266085075629*^9, 3.680608832278884*^9, {3.716551654730945*^9, 
   3.716551664901005*^9}, 3.716552992472272*^9, {3.748191922385508*^9, 
   3.748191944784996*^9}},ExpressionUUID->"c8dbbee3-20fd-45ef-9b78-\
31723f0285f2"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#b", "\[Equal]", "\"\<x\>\""}], "&"}], "]"}], "/*", "Total"}], 
   ",", "\"\<a\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.716552992472578*^9},ExpressionUUID->"775283eb-e010-4cdf-ae0e-\
a3f4115853e9"],

Cell[BoxData["5"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.717182091637858*^9, 
  3.717182121756124*^9},ExpressionUUID->"648fcfb3-aa2c-42d9-ae13-\
edca8e7bccd2"],

Cell["This is equivalent:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.61944213118156*^9, 3.619442135685216*^9}, 
   3.6212660874674997`*^9, 3.6806088519114437`*^9, 3.7165517037274933`*^9, 
   3.716552992472745*^9, {3.748191947199795*^9, 
   3.748191947664095*^9}},ExpressionUUID->"e5937526-e9a8-4eac-95a4-\
d50fcdf18f1a"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#b", "\[Equal]", "\"\<x\>\""}], "&"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.71655299247295*^9},ExpressionUUID->"1a42f958-abf1-4de6-afcd-7c45f7d310fc"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 2, "Length" -> 2, 
        "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"a", "b", "c"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "a"} -> 1, {All, "b"} -> 1, {All, "c"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "a" -> TypeSystem`PackageScope`AtomShape[34], "b" -> 
              TypeSystem`PackageScope`AtomShape[28.800000000000004`], "c" -> 
              TypeSystem`PackageScope`UnknownShape]]], 2, {}]], 
        "DataColumnCount" -> 0, "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[1427361239], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Struct[{"a", "b", "c"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 2], "HandleQ" -> 
        True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1427361239]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1249871618][{All, "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[All, "a"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1249871618][{All, "b"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[All, "b"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"c\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"c\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1249871618][{All, "c"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[All, "c"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[1, 
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["x", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[1, 
                   Key["b"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{1}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1249871618][{1, 
                    Key["c"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[1, 
                   Key["c"]]], "Mouse"]]}, {
               Pane[
                Annotation[
                 RawBoxes["4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[2, 
                   Key["a"]]], "Mouse"], ImageSize -> {{34, Full}, Automatic},
                 Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["x", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[2, 
                   Key["b"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{4, 5}, ShowStringCharacters -> False], 
                    Style[
                    Style[{4, 5}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1249871618][{2, 
                    Key["c"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
                  GeneralUtilities`Slice[2, 
                   Key["c"]]], "Mouse"]]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1249871618][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1249871618]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1249871618][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {123., {42.634033203125, 48.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.717182094138299*^9, 
  3.717182121758251*^9}},ExpressionUUID->"fef0e85f-bda2-45f8-aff5-\
2a05790acf1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#b", "\[Equal]", "\"\<x\>\""}], "&"}], "]"}], "]"}], "[", 
  RowBox[{"Total", ",", "\"\<a\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7165529924731407`*^9},ExpressionUUID->"4f1073f5-eaac-4037-af8c-\
4056e36c89e4"],

Cell[BoxData["5"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.717182097474402*^9, 
  3.717182121760186*^9}},ExpressionUUID->"c4a4de95-85d4-4b39-8e6f-\
79ff8dd1cc49"],

Cell["\<\
Group rows by one column and then operate on a second column based on that \
grouping:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.619441062070108*^9, 3.6194410867321863`*^9}, {
   3.620648495675044*^9, 3.6206485060496073`*^9}, {3.620648571557498*^9, 
   3.620648614402367*^9}, 3.621266088651493*^9, 3.680608857618763*^9, 
   3.716551714056471*^9, 3.71655299247326*^9, {3.748191952887802*^9, 
   3.748191953264011*^9}, 
   3.748280534544841*^9},ExpressionUUID->"1ca69f21-883a-4834-b8ac-\
5cbf7464564f"],

Cell[BoxData[
 RowBox[{"d", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", 
    RowBox[{"Key", "[", "\"\<b\>\"", "]"}], "]"}], ",", "Catenate", ",", 
   "\"\<c\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.7165529924734077`*^9},ExpressionUUID->"24e95ef6-3c25-466e-ba7e-\
9d99afc32382"],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 3, "Length" -> 3, 
        "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["x", "y", "z"]], 
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 3], 
        "DisplayedColumnCount" -> 20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[27.], 
            TypeSystem`PackageScope`UnknownShape]], 3, {}], "DataColumnCount" -> 
        0, "InitialData" -> TypeSystem`PackageScope`CacheHandle[2121631924], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["x", "y", "z"]], 
          TypeSystem`Vector[
           TypeSystem`Atom[Integer], TypeSystem`AnyLength], 3], "HandleQ" -> 
        True, "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2121631924]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["x", 
                    Style[
                    "x", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["x"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                   GeneralUtilities`Slice[
                    Key["x"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{1, 4, 5}, ShowStringCharacters -> False], 
                    Style[
                    Style[{1, 4, 5}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["x"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                  GeneralUtilities`Slice[
                   Key["x"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["y", 
                    Style[
                    "y", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["y"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                   GeneralUtilities`Slice[
                    Key["y"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 3}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["y"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                  GeneralUtilities`Slice[
                   Key["y"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["z", 
                    Style[
                    "z", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["z"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                   GeneralUtilities`Slice[
                    Key["z"]]], "Mouse"], 
                 ImageSize -> {{27., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{3}, ShowStringCharacters -> False], 
                    Style[
                    Style[{3}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][{
                    Key["z"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
                  GeneralUtilities`Slice[
                   Key["z"]]], "Mouse"]]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 466532988]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[466532988][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {93., {43.134033203125, 48.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7171821011413593`*^9, 
  3.717182121762067*^9}},ExpressionUUID->"a3c02970-caf6-4142-8768-\
1a798d78f905"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.72580757353983*^9, 
  3.725807577025573*^9}},ExpressionUUID->"347cba06-5af1-458f-99a2-\
bfe07509312e"],

Cell["Revisiting the sales data as a Dataset:", "Text",
 CellChangeTimes->{{3.7477630598248463`*^9, 
  3.7477630786636057`*^9}},ExpressionUUID->"cb31e1d9-5278-499e-b483-\
c0e9814c430a"],

Cell[BoxData[
 RowBox[{"citySalesDS", " ", "=", 
  RowBox[{"Dataset", "[", "citySalesDataByDates", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714827711153767*^9, 3.71482774961764*^9}, 
   3.7165532117274313`*^9, 
   3.725807420443325*^9},ExpressionUUID->"fba8b35c-5bea-4f9a-9051-\
172fdfbb9d54"],

Cell["Look at total sales for Boston:", "Text",
 CellChangeTimes->{{3.7477630926487513`*^9, 
  3.7477630994394703`*^9}},ExpressionUUID->"7d943a21-a52d-4814-8991-\
7a506e5ec70a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citySalesDS", "[", "\"\<Boston\>\"", "]"}], "[", 
  RowBox[{"Total", ",", "2"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.714827754981553*^9, 3.714827836274033*^9}, 
   3.716553218346587*^9},ExpressionUUID->"bd17ccfc-e959-4ace-bb22-\
9e67a9cace6e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Try ",
 StyleBox[ButtonBox["SemanticImport",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SemanticImport"],
  FontWeight->"Bold"],
 ", which uses machine learning and does a decent job of automatically \
converting many kinds of data:"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{
  3.713182972106948*^9, 3.7165532262943907`*^9, {3.7477631191299467`*^9, 
   3.747763143063265*^9}, {3.74819196170796*^9, 
   3.74819196976752*^9}},ExpressionUUID->"b0443b2b-05b6-4643-9cd5-\
82b1d0d7ce74"],

Cell[BoxData[
 RowBox[{"semanticSalesData", " ", "=", 
  RowBox[{
  "SemanticImport", "[", "\"\<ExampleData/RetailSales.tsv\>\"", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.713182976906519*^9, 3.713183006778706*^9}, {
   3.7148278659679832`*^9, 3.714827868566943*^9}, 3.716553226294804*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"15a432f4-2233-4f0a-8420-43f7bef5720c"]
}, Open  ]],

Cell["Look at total sales for each city:", "Text",
 CellChangeTimes->{{3.7477632332545*^9, 3.747763238269413*^9}, 
   3.748191972615027*^9},ExpressionUUID->"e03cd66f-8485-4380-ba67-\
0fb3edda3454"],

Cell[BoxData[
 RowBox[{"semanticSalesData", "[", 
  RowBox[{
   RowBox[{"GroupBy", "[", "\"\<City\>\"", "]"}], ",", "Total", ",", 
   "\"\<Sales\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.},
 CellChangeTimes->{{3.714831273688843*^9, 3.714831298923892*^9}, 
   3.716553245798235*^9, {3.7477632041208076`*^9, 3.747763211303535*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a15bc1bd-77d0-4065-8903-67332210ddfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise", "Subsection",
 CellChangeTimes->{{3.747763246895824*^9, 
  3.747763249875876*^9}},ExpressionUUID->"a3facd78-3443-40da-b00f-\
0c31fcbc0846"],

Cell[CellGroupData[{

Cell["\<\
Get the \[OpenCurlyDoubleQuote]Planets\[CloseCurlyDoubleQuote] dataset from \
ExampleData. This is a hierarchical dataset consisting of properties of solar \
system bodies:\
\>", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763331674078*^9, 3.74776333167452*^9}, 
   3.748191984661941*^9, {3.7482805671335773`*^9, 
   3.74828057617155*^9}},ExpressionUUID->"3337126b-567d-4e3e-9d3c-\
d50ce3fb83a0"],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Planets\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.61944452702776*^9, 3.619444527658947*^9}, 
   3.7165533807217617`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"53acb141-9f50-4046-a13b-670d7a4ce668"],

Cell["Look at the underlying structure of the data.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.747763355202647*^9}, 
   3.7481919917209053`*^9},ExpressionUUID->"08ae635a-709b-4705-af42-\
6ae3c31c7eda"]
}, Open  ]],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"Normal", "[", "p", "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10005.}, 
     CellChangeTimes -> {{3.6194445324068737`*^9, 3.619444534613549*^9}, 
       3.716553380722006*^9}, CellLabel -> "In[18]:="], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"6d8fd74d-1ce9-4587-89a2-9cc4568ddedf"],

Cell["Extract the names of the planets from the dataset.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.747763370747713*^9}, {
   3.748191993958578*^9, 
   3.7481919960386133`*^9}},ExpressionUUID->"9de4b8cc-ad71-44b8-a423-\
1d3efffde632"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"Keys", "[", "p", "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10005.}, 
     CellChangeTimes -> {{3.619444707449898*^9, 3.61944474029111*^9}, 
       3.71655339186688*^9}, CellLabel -> "In[19]:="], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"7dae9953-ec10-4574-8e44-0a10ac993090"],

Cell["Get the mass of Earth.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.7477633932119207`*^9}, 
   3.748191998454401*^9},ExpressionUUID->"000385c3-17c9-4bee-bee5-\
f5ddb29fec33"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"p", "[", 
        RowBox[{"\"Earth\"", ",", "\"Mass\""}], "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10006.}, 
     CellChangeTimes -> {{3.619444841692181*^9, 3.619444850408601*^9}, 
       3.716553403330925*^9}], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"77a7b43d-c60c-48f8-985a-0e951f9a2891"],

Cell["Get the radius of each planet.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.7477634075075893`*^9}, 
   3.74819199949404*^9},ExpressionUUID->"67029b48-e22e-4167-9357-\
9424d38fc3ec"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"p", "[", 
        RowBox[{"All", ",", "\"Radius\""}], "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10006.}, 
     CellChangeTimes -> {{3.619444885986312*^9, 3.619444894507996*^9}, 
       3.7165534033313026`*^9, {3.7171822067336807`*^9, 
       3.717182207724167*^9}}], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"af596593-0068-410d-9706-5ce1322f5ef3"],

Cell["List the satellites for each planet.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.7477634069561167`*^9}, {
   3.747763448012766*^9, 3.747763456930828*^9}, 
   3.748192000398304*^9},ExpressionUUID->"eb66100b-66b4-4c5a-af7a-\
10f7c2f26642"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     CellGroupData[{
       Cell[
        BoxData[
         RowBox[{"p", "[", 
           RowBox[{"All", ",", "\"Moons\""}], "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10006.}, 
        CellChangeTimes -> {{3.685755259473311*^9, 3.685755281348693*^9}, 
          3.716553403331684*^9}, CellLabel -> "In[20]:="], 
       Cell[
        BoxData[
         RowBox[{"p", "[", 
           RowBox[{"All", ",", "\"Moons\"", ",", "Keys"}], "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10006.}, 
        CellChangeTimes -> {{3.6857552922922688`*^9, 3.6857553095559587`*^9}, 
          3.716553403331918*^9}, CellLabel -> "In[21]:="]}, Open]], 
    WindowTitle -> "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"d168b542-0f92-4751-9796-e9edef36bfac"],

Cell["Provide the total number of satellites for each planet.", "ItemNumbered",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619437710765749*^9, 3.619437776952045*^9}, {
   3.619437809844825*^9, 3.6194378457377243`*^9}, {3.619438450306679*^9, 
   3.61943848100808*^9}, {3.6194385282356787`*^9, 3.619438529043589*^9}, {
   3.619440399802086*^9, 3.619440427906111*^9}, {3.619440484820055*^9, 
   3.619440529982852*^9}, {3.619440833186825*^9, 3.619440876543222*^9}, {
   3.619442312550613*^9, 3.619442354705345*^9}, {3.619442566534233*^9, 
   3.6194425891962147`*^9}, {3.619444609813534*^9, 3.6194446474981537`*^9}, 
   3.680608904857258*^9, 3.716553380721488*^9, {3.7477632722298927`*^9, 
   3.747763292643828*^9}, {3.747763332562595*^9, 3.7477634069561167`*^9}, {
   3.747763448012766*^9, 3.7477634751625357`*^9}, 
   3.748192001982004*^9},ExpressionUUID->"1ea553dd-67ab-4b64-b14c-\
70e8b5e1d4a4"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"p", "[", 
        RowBox[{"All", ",", "\"Moons\"", ",", "Length"}], "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10006.}, 
     CellChangeTimes -> {{3.619444977893536*^9, 3.619444988566597*^9}, 
       3.7165534033321533`*^9}], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"f0e3f1c2-7532-4350-9863-2e181dd1f1f0"],

Cell[CellGroupData[{

Cell["Complete solution", "Subsubsection",
 CellChangeTimes->{{3.747763480493*^9, 3.7477634823155823`*^9}, {
  3.748009131371256*^9, 3.7480091329192877`*^9}, {3.832160520938138*^9, 
  3.832160521170116*^9}},ExpressionUUID->"eef80172-e4d5-4e15-be25-\
033afe6ce55f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Dataset\>\"", ",", "\"\<Planets\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.61944452702776*^9, 3.619444527658947*^9}, 
   3.7165533807217617`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"6dd7e0ca-fef9-4d0d-9e57-0c3798059459"],

Cell[BoxData[
 RowBox[{"Normal", "[", "p", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.6194445324068737`*^9, 3.619444534613549*^9}, 
   3.716553380722006*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"812dd69a-7af4-4808-bc94-c5b6d1f12724"],

Cell[BoxData[
 RowBox[{"Keys", "[", "p", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.},
 CellChangeTimes->{{3.619444707449898*^9, 3.61944474029111*^9}, 
   3.71655339186688*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"bc89c16f-ffdb-436c-9342-ead2f03e8388"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"\"\<Earth\>\"", ",", "\"\<Mass\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.619444841692181*^9, 3.619444850408601*^9}, 
   3.716553403330925*^9},ExpressionUUID->"3574ea50-9dbe-45e4-a06f-\
06129c278b36"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"All", ",", "\"\<Radius\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.619444885986312*^9, 3.619444894507996*^9}, 
   3.7165534033313026`*^9, {3.7171822067336807`*^9, 
   3.717182207724167*^9}},ExpressionUUID->"22a7198c-78c1-407f-b41a-\
fa3d84464a08"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\""}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.685755259473311*^9, 3.685755281348693*^9}, 
   3.716553403331684*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"b79a5b9a-ecb4-42ae-a191-cff530d5c0e3"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Keys"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.6857552922922688`*^9, 3.6857553095559587`*^9}, 
   3.716553403331918*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"3b50856d-eec6-4b8f-93b0-cff407323dae"],

Cell[BoxData[
 RowBox[{"p", "[", 
  RowBox[{"All", ",", "\"\<Moons\>\"", ",", "Length"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.},
 CellChangeTimes->{{3.619444977893536*^9, 3.619444988566597*^9}, 
   3.7165534033321533`*^9},ExpressionUUID->"bbfa8a72-5778-4ddc-8641-\
48d402ea0ef4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"f2e1ab79-1ab3-40c3-bfa8-f3a2a8633254"],

Cell[CellGroupData[{

Cell["Data Wrangling: From Raw Data to Rich Computable Entities", "Section",
 CellChangeTimes->{{3.709901499977928*^9, 3.7099015066239653`*^9}, {
   3.713182303663734*^9, 3.713182323080019*^9}, {3.713183151549719*^9, 
   3.7131831703478403`*^9}, 3.714749699410534*^9, {3.716512669601232*^9, 
   3.716512681647208*^9}, {3.7165132385552263`*^9, 3.716513242977414*^9}, 
   3.7165481506675997`*^9, {3.716550780674778*^9, 3.7165508182105494`*^9}, {
   3.7165508566634817`*^9, 3.716550857084881*^9}, {3.7165534374350357`*^9, 
   3.71655344910539*^9}, {3.748192440995967*^9, 
   3.7481924442554207`*^9}},ExpressionUUID->"c856a652-f2cf-47dc-ba2a-\
2652b43d27ea"],

Cell["\<\
It can be very useful to make data computable as you are collecting it. The \
Wolfram Data Framework can be leveraged to add more information to raw data.\
\>", "Text",
 CellChangeTimes->{{3.716124220563601*^9, 3.71612422459282*^9}, {
  3.716553460619154*^9, 3.7165534703363113`*^9}, {3.716553512806592*^9, 
  3.71655354430936*^9}, {3.717182311183522*^9, 3.717182320418412*^9}, {
  3.748192449647505*^9, 
  3.7481924497194023`*^9}},ExpressionUUID->"36a05972-545b-47c8-a563-\
dee279510e8f"],

Cell[CellGroupData[{

Cell["Turning Strings into Entities", "Subsection",
 CellChangeTimes->{{3.713195622795744*^9, 3.713195628702136*^9}, {
  3.716553551148985*^9, 3.716553552732978*^9}, {3.716553987763671*^9, 
  3.716554010905205*^9}},ExpressionUUID->"bf1a7161-fb0e-4775-96e6-\
b2b11753cd15"],

Cell["\<\
Strings can be converted into entities to link the data item to additional \
information available about it in the Wolfram Knowledgebase.\
\>", "Text",
 CellChangeTimes->{{3.716553709202361*^9, 3.716553731115563*^9}, 
   3.716553828864428*^9, {3.717152995020969*^9, 3.717152998307424*^9}, {
   3.7171530512883377`*^9, 3.7171530518966007`*^9}, {3.748192467950798*^9, 
   3.748192468799065*^9}, {3.748280640857074*^9, 
   3.748280640977035*^9}},ExpressionUUID->"a4642607-4ce8-4a5e-975b-\
e9f38411a2cc"],

Cell[TextData[{
 "Convert the string representing a city name into a city entity using ",
 StyleBox[ButtonBox["SemanticInterpretation",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SemanticInterpretation"],
  FontWeight->"Bold"],
 " or ",
 StyleBox[ButtonBox["Interpreter",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Interpreter"],
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.716553831592807*^9, 3.716553852422407*^9}, {
   3.747763551608591*^9, 3.747763556188354*^9}, 3.7481924740786448`*^9, {
   3.748546070597088*^9, 3.748546088166526*^9}, {3.7485461328959618`*^9, 
   3.748546156909636*^9}},ExpressionUUID->"e9d0286c-ac97-4b6e-a3be-\
0134f3f85820"],

Cell[BoxData[
 RowBox[{"SemanticInterpretation", "[", "\"\<Tokyo\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.716553735648603*^9, 
  3.7165537438867188`*^9}},ExpressionUUID->"2e589367-5f9f-4a88-b76e-\
48870141a6ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", "\"\<Tokyo\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7485431398319187`*^9, 3.748543151043016*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"da05c46f-c772-4f2c-ae45-b256d18db118"],

Cell["Get its geographical coordinates:", "Text",
 CellChangeTimes->{{3.71655384614564*^9, 3.71655386160713*^9}, 
   3.74819247828622*^9},ExpressionUUID->"53369def-825e-4e1f-a7b1-\
ffffa991d449"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<City\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Tokyo\>\"", ",", " ", "\"\<Tokyo\>\"", ",", " ", "\"\<Japan\>\""}], 
     "}"}]}], "]"}], "[", "\"\<Coordinates\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.716553780838393*^9, 
  3.7165538106922903`*^9}},ExpressionUUID->"3a254b02-f6e9-4e32-9680-\
d994ed7bf0c9"],

Cell[TextData[{
 "Revisit the association ",
 Cell[BoxData[
 "citySalesData"], "Input",ExpressionUUID->
  "5ae4d9c8-fbd8-4816-bf16-d274605b68fc"],
 ":"
}], "Text",
 CellChangeTimes->{{3.74776356550989*^9, 3.747763586340293*^9}, {
  3.74819248182277*^9, 
  3.748192485976824*^9}},ExpressionUUID->"1a83a50e-1976-4e13-b6f7-\
99883bbbb2dc"],

Cell[BoxData["citySalesData"], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"d673645b-5f56-4efd-bee6-f3c2a63ac6b2"],

Cell["Create entities out of each city name:", "Text",
 CellChangeTimes->{{3.747763597353447*^9, 3.747763604472272*^9}, 
   3.748192490824155*^9},ExpressionUUID->"98c5cbd8-ef5e-484d-a2c3-\
44dace376d91"],

Cell[BoxData[
 RowBox[{"citySalesData2", " ", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"SemanticInterpretation", ",", "citySalesData"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7148304010079823`*^9, 3.714830452366084*^9}, {
   3.7148305366484747`*^9, 3.714830552990205*^9}, {3.714830586577654*^9, 
   3.714830614324424*^9}, {3.714830717606838*^9, 3.7148307199230433`*^9}, 
   3.716553896574329*^9, {3.7258076140593348`*^9, 3.725807636488603*^9}, {
   3.725807709155102*^9, 
   3.72580771769044*^9}},ExpressionUUID->"c5b18aba-a4f8-41b2-ab27-\
c77881c113a7"],

Cell["Present the sales data for each city on a map of the world:", "Text",
 CellChangeTimes->{{3.747763625184609*^9, 3.7477636418912363`*^9}, 
   3.748192495581908*^9},ExpressionUUID->"30ac876e-11ba-4657-b606-\
c3fa59bcf4fb"],

Cell[BoxData[
 RowBox[{"GeoRegionValuePlot", "[", 
  RowBox[{"citySalesData2", ",", 
   RowBox[{"GeoLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Tooltip", "[", 
       RowBox[{"#1", ",", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"#2", ",", "\"\<:\>\"", ",", "#4"}], "}"}], "]"}]}], "]"}], 
      "&"}], ")"}]}], ",", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "GeoMarker"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714830033332652*^9, 3.714830037034893*^9}, {
   3.714830081592268*^9, 3.714830087349391*^9}, {3.7148302045187902`*^9, 
   3.714830206182233*^9}, 3.714830238287016*^9, 3.714830344341477*^9, {
   3.714830398790337*^9, 3.714830410172893*^9}, {3.71483062620772*^9, 
   3.714830628967284*^9}, {3.714830704589941*^9, 3.7148307302858543`*^9}, 
   3.714830776222562*^9, {3.714830846880506*^9, 3.7148308725025167`*^9}, {
   3.714830906439649*^9, 3.714830906653699*^9}, 3.7171823690060387`*^9, 
   3.725807735428306*^9},ExpressionUUID->"5a6cfa4e-f47a-4e66-9e89-\
1907492a1f32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing Raw Data as Entities into a Dataset", "Subsection",
 CellChangeTimes->{{3.716554016466527*^9, 3.716554033104929*^9}, {
  3.7165541739656057`*^9, 
  3.7165541828373413`*^9}},ExpressionUUID->"0c2df36a-f932-4dcc-bf4e-\
ddb5661a7a66"],

Cell["Sample data file:", "Text",
 CellChangeTimes->{{3.7485448098896847`*^9, 
  3.7485448144241333`*^9}},ExpressionUUID->"f6676f1b-761b-4e8d-9aaa-\
eef01c03b58d"],

Cell[BoxData[
 RowBox[{"Import", "[", "\"\<ExampleData/buildings.dat\>\"", "]"}]], "Input",
 CellChangeTimes->{3.748544796577896*^9},
 CellLabel->
  "In[409]:=",ExpressionUUID->"a14c8be0-a171-48cf-a927-bbdc7bbea10a"],

Cell[BoxData[
 RowBox[{"First", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.748545099417725*^9, 3.748545102021078*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"f48588cd-010c-4d4f-8d1e-9ebcc555fd5e"],

Cell[TextData[{
 "Use ",
 StyleBox[ButtonBox["SemanticImport",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/SemanticImport"],
  FontWeight->"Bold"],
 " to get entities directly:"
}], "Text",
 CellChangeTimes->{{3.716554093957574*^9, 3.71655410150346*^9}, {
   3.7165541455127163`*^9, 3.7165541882615423`*^9}, 3.748192502951832*^9, {
   3.748544687810568*^9, 3.7485446909538517`*^9}, {3.748544819195759*^9, 
   3.748544838646179*^9}},ExpressionUUID->"2216e608-bed4-4569-9131-\
6767de444362"],

Cell[BoxData[
 RowBox[{"buildingData", " ", "=", 
  RowBox[{"SemanticImport", "[", 
   RowBox[{"\"\<ExampleData/buildings.dat\>\"", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Rank\>\"", "->", "\"\<Integer\>\""}], ",", 
      RowBox[{"\"\<Name\>\"", "->", "\"\<Building\>\""}], ",", 
      RowBox[{"\"\<City\>\"", "->", "\"\<City\>\""}], ",", 
      RowBox[{"\"\<Country\>\"", "->", "\"\<Country\>\""}], ",", 
      RowBox[{"\"\<Year\>\"", "->", "\"\<ComputedDate\>\""}], ",", 
      RowBox[{"\"\<Stories\>\"", "->", "\"\<Integer\>\""}], ",", 
      RowBox[{"\"\<Height\>\"", "->", 
       RowBox[{"Restricted", "[", 
        RowBox[{"\"\<Quantity\>\"", ",", " ", "\"\<Meters\>\""}], "]"}]}]}], 
     "|>"}], ",", 
    RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7148476258918552`*^9, 3.71484764173498*^9}, {
   3.71484771335003*^9, 3.714847713779585*^9}, {3.714847930539298*^9, 
   3.7148479318009768`*^9}, {3.7485447285732317`*^9, 3.748544759823639*^9}, {
   3.748545133851173*^9, 3.7485452122730227`*^9}, {3.748545282610187*^9, 
   3.748545286658792*^9}, 3.748545529418211*^9, {3.748545559489707*^9, 
   3.7485455794700108`*^9}, {3.7485456098846703`*^9, 3.748545610179263*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"a7dcc803-edf1-41a8-a8d3-e4a13d50c548"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9f0262b5-392a-4878-8e9e-082c2bb96115"],

Cell[CellGroupData[{

Cell["\<\
Data Wrangling: From Time-Ordered Raw Data to Time Series Objects\
\>", "Section",
 CellChangeTimes->{{3.709901499977928*^9, 3.7099015066239653`*^9}, {
   3.713182303663734*^9, 3.713182323080019*^9}, {3.713183151549719*^9, 
   3.7131831703478403`*^9}, 3.714749699410534*^9, {3.716512669601232*^9, 
   3.716512681647208*^9}, {3.7165132385552263`*^9, 3.716513242977414*^9}, 
   3.7165481506675997`*^9, {3.716550780674778*^9, 3.7165508182105494`*^9}, {
   3.7165508566634817`*^9, 3.716550857084881*^9}, {3.7165534374350357`*^9, 
   3.71655344910539*^9}, {3.716554239773346*^9, 3.7165542600186443`*^9}, {
   3.71655458246236*^9, 3.7165545937662573`*^9}, {3.748192535540477*^9, 
   3.7481925533798933`*^9}},ExpressionUUID->"9c913ee3-8486-4b3a-ad93-\
4f0873e1781c"],

Cell["\<\
For data indexed in time order, it is helpful to preserve the essence of this \
special ordering property.\
\>", "Text",
 CellChangeTimes->{{3.717182489666898*^9, 3.7171825706095448`*^9}, 
   3.748192557347872*^9},ExpressionUUID->"8d7aa7d3-1294-47ed-bb39-\
5663aad6f700"],

Cell[CellGroupData[{

Cell["TimeSeries: Series of Time-Value Pairs", "Subsection",
 CellChangeTimes->{{3.71655459806279*^9, 3.7165546310667973`*^9}, {
  3.7481925665493803`*^9, 
  3.748192574675021*^9}},ExpressionUUID->"ce1cdcf1-d4c0-45fe-bf4b-\
51d79429c35f"],

Cell[TextData[{
 "Create a ",
 StyleBox[ButtonBox["TimeSeries",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TimeSeries"],
  FontWeight->"Bold"],
 " out of the ",
 Cell[BoxData[
 "citySalesDataByDates"], "Input",ExpressionUUID->
  "5c4fd411-8a8a-4c9e-888c-669f9a0e18e5"],
 ":"
}], "Text",
 CellChangeTimes->{{3.747763746136115*^9, 3.747763757461275*^9}, 
   3.747764653477892*^9, {3.748192576899149*^9, 3.748192583077043*^9}, {
   3.748280701007036*^9, 
   3.748280713100277*^9}},ExpressionUUID->"37b194a0-e7b1-4080-9741-\
4592d388c9ec"],

Cell[BoxData[
 RowBox[{"tsSalesData", " ", "=", 
  RowBox[{"TimeSeries", " ", "/@", " ", "citySalesDataByDates"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.71482809377689*^9, 3.714828110113055*^9}, 
   3.716554462731361*^9, 3.747764035316065*^9, 3.747764665548959*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"d74ab304-d611-4900-a4c2-8546411ca7bb"],

Cell["\<\
Visualise the sales data for each city for the first two weeks of February:\
\>", "Text",
 CellChangeTimes->{{3.7477637652881804`*^9, 3.747763778116373*^9}, {
  3.747764841842456*^9, 3.7477648527865887`*^9}, {3.7481907486059933`*^9, 
  3.748190748875781*^9}, {3.8329391260012608`*^9, 
  3.832939126304038*^9}},ExpressionUUID->"bdec79b6-9629-48dc-8d68-\
ca7ab47633cf"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"TimeSeriesWindow", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2014", ",", "2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2014", ",", "2", ",", "14"}], "}"}]}], "}"}]}], "]"}], 
    "&"}], "/@", "tsSalesData"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714828146685565*^9, 3.714828192291811*^9}, {
   3.7148282415172787`*^9, 3.714828257522625*^9}, {3.7148283198532953`*^9, 
   3.714828322483156*^9}, 3.716554529436679*^9, {3.7477648020030193`*^9, 
   3.747764837275178*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"c6ea1283-bb63-4e60-a14b-10fc9fe7b72f"],

Cell["\<\
Visualise the sales data for Boston for the first quarter of 2014:\
\>", "Text",
 CellChangeTimes->{{3.747764869088249*^9, 3.747764886798654*^9}, {
   3.7481907514435043`*^9, 3.748190751751914*^9}, 3.748280726701552*^9, {
   3.8329391302311363`*^9, 
   3.8329391305121593`*^9}},ExpressionUUID->"c0822ce7-8129-45f3-9c6f-\
78b9bf1197d0"],

Cell[BoxData[
 RowBox[{"DateListPlot", "@", 
  RowBox[{"TimeSeriesWindow", "[", 
   RowBox[{
    RowBox[{"tsSalesData", "[", "\"\<Boston\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2014", ",", "3", ",", "31"}], "}"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714829073238803*^9, 3.714829078325844*^9}, 
   3.71655452943708*^9},ExpressionUUID->"55bafc5d-8f66-4508-af9f-\
96251452d00c"],

Cell["\<\
Fit a model to the time series data for the first three months of 2014:\
\>", "Text",
 CellChangeTimes->{{3.7486021811349087`*^9, 
  3.748602264176115*^9}},ExpressionUUID->"3cecf85d-46b2-4570-813a-\
1b20f8eba5b2"],

Cell[BoxData[
 RowBox[{"tsm", " ", "=", " ", 
  RowBox[{"TimeSeriesModelFit", "[", 
   RowBox[{
    RowBox[{"TimeSeriesWindow", "[", 
     RowBox[{
      RowBox[{"tsSalesData", "[", "\"\<Boston\>\"", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2014", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2014", ",", "3", ",", "31"}], "}"}]}], "}"}]}], "]"}], ",", 
    "\"\<SARIMA\>\""}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714828547891335*^9, 3.714828562970785*^9}, {
   3.714828676848987*^9, 3.714828694308807*^9}, {3.7148291307250023`*^9, 
   3.7148291364923477`*^9}, 
   3.71655452943745*^9},ExpressionUUID->"5245e69c-d0ca-43ee-b631-\
1240c692e28d"],

Cell["\<\
Use the model to predict the sales for April 2014 and compare with the actual \
sales data from April 2014:\
\>", "Text",
 CellChangeTimes->{{3.7486022146320333`*^9, 3.748602219543935*^9}, {
  3.748602252728386*^9, 
  3.748602284580755*^9}},ExpressionUUID->"b97aee2d-bcd7-49cc-a706-\
765c7783299f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tsf", "=", 
  RowBox[{"TimeSeriesForecast", "[", 
   RowBox[{"tsm", ",", 
    RowBox[{"{", "10", "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.716554529437809*^9},ExpressionUUID->"a14064eb-5d2a-4f4f-86ca-\
2d053e413290"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"TimeSeriesWindow", "[", 
      RowBox[{
       RowBox[{"tsSalesData", "[", "\"\<Boston\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2014", ",", "4", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2014", ",", "4", ",", "10"}], "}"}]}], "}"}]}], "]"}], ",",
      "tsf"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<forecast\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.714828750031762*^9, 3.714828760764368*^9}, {
   3.714829330279212*^9, 3.714829333713385*^9}, 
   3.716554529438159*^9},ExpressionUUID->"39562e43-3712-451d-a3bf-\
383f754265b6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TemporalData: Collection of Time Series", "Subsection",
 CellChangeTimes->{{3.714849647101919*^9, 3.714849652025282*^9}, {
  3.7165546432361526`*^9, 3.716554655754612*^9}, {3.7481925984262733`*^9, 
  3.748192604146306*^9}},ExpressionUUID->"1f13c25e-746d-41ee-8342-\
fed55e9358af"],

Cell[TextData[{
 "Import the \[OpenCurlyDoubleQuote]stockhighlowclose.tsv\
\[CloseCurlyDoubleQuote] file (",
 StyleBox[ButtonBox["ToExpression",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ToExpression"],
  FontWeight->"Bold"],
 " is needed to convert from strings to Wolfram Language expressions):"
}], "Text",
 CellChangeTimes->{{3.748602294976388*^9, 
  3.7486023502737207`*^9}},ExpressionUUID->"3480f46a-694f-4c54-acb7-\
55ce9f595241"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stockhighlowclose", " ", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<stockhighlowclose.tsv\>\"", ",", "\"\<TSV\>\""}], "]"}]}]}],
   ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7148496654579773`*^9, 3.714849669413602*^9}, {
   3.714849765238269*^9, 3.714849768707643*^9}, {3.714849885313322*^9, 
   3.7148498975271807`*^9}, {3.714850116048615*^9, 3.714850118984324*^9}, 
   3.716554811244999*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"9a2b566b-1590-442b-8d69-e89a8c1619f9"],

Cell[TextData[{
 "Check ",
 StyleBox[ButtonBox["Dimensions",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Dimensions"],
  FontWeight->"Bold"],
 " to see how many time series are actually present in the data:"
}], "Text",
 CellChangeTimes->{{3.7486023589826717`*^9, 
  3.748602396598621*^9}},ExpressionUUID->"59b605bf-0034-477f-bc8d-\
69d1637b0217"],

Cell[BoxData[
 RowBox[{"stockhighlowclose", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.747765172674292*^9, 3.747765174909486*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"fb8d1de8-d80c-4ef9-bbea-e15617fdf950"],

Cell[BoxData[
 RowBox[{"td1", "=", 
  RowBox[{"TemporalData", "[", "stockhighlowclose", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.716554767867815*^9, 3.7165548112456636`*^9},
 CellLabel->"In[96]:=",ExpressionUUID->"629874f4-a059-4b92-82c5-36d4989326e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise", "Subsection",
 CellChangeTimes->{{3.7477653459384003`*^9, 
  3.747765348359083*^9}},ExpressionUUID->"2ff2c1a6-c6d4-4535-90de-\
3dc4c59fcb0f"],

Cell[TextData[{
 "Examine the ",
 Cell[BoxData[
 "\"\<Properties\>\""], "Input",ExpressionUUID->
  "7756c614-ed8d-4208-be4f-fc0f8e2281c6"],
 " and ",
 Cell[BoxData[
 "\"\<PathLengths\>\""], "Input",ExpressionUUID->
  "4ffb1b76-f329-4968-a9ad-ac017a9b3c90"],
 " of the ",
 StyleBox[ButtonBox["TemporalData",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TemporalData"],
  FontWeight->"Bold"],
 " object ",
 StyleBox["stockhighlowclose", "Input"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.747765374212834*^9, 3.7477654206338243`*^9}, {
   3.748009261563829*^9, 3.74800926180268*^9}, 3.7481926192020273`*^9, {
   3.748192652196102*^9, 3.748192656283041*^9}, 
   3.748280755172086*^9},ExpressionUUID->"6102dfba-2339-430d-844a-\
21bff07d1600"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     CellGroupData[{
       Cell[
        BoxData[
         RowBox[{"td1", "[", "\"Properties\"", "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10002.}, 
        CellChangeTimes -> {{3.714850148640766*^9, 3.7148501510806923`*^9}, 
          3.716554819886157*^9}], 
       Cell[
        BoxData[
         RowBox[{"td1", "[", "\"PathLengths\"", "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10002.}, 
        CellChangeTimes -> {3.716554819886664*^9}]}, Open]], WindowTitle -> 
    "Solution", WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"84b6a25a-e8c2-4b7d-af34-06e8b3e68115"],

Cell["Find the \[OpenCurlyDoubleQuote]high,\[CloseCurlyDoubleQuote] \
\[OpenCurlyDoubleQuote]low\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]close\[CloseCurlyDoubleQuote] prices for \
\[OpenCurlyDoubleQuote]Jul 14 2006\[CloseCurlyDoubleQuote].", "ItemNumbered",
 CellChangeTimes->{{3.747765374212834*^9, 3.747765454044876*^9}, {
   3.747765509910379*^9, 3.7477655099116488`*^9}, 3.748192621953459*^9, {
   3.74828076420675*^9, 
   3.748280764804563*^9}},ExpressionUUID->"11d7c7bc-ec72-47c6-96aa-\
affa922b166d"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     BoxData[
      RowBox[{"td1", "[", 
        RowBox[{"\"SliceData\"", ",", 
          RowBox[{"{", "\"Jul 14 2006\"", "}"}]}], "]"}]], "Input", 
     CellGroupingRules -> {"GroupTogetherGrouping", 10002.}, 
     CellChangeTimes -> {{3.714850148640766*^9, 3.7148501510806923`*^9}, 
       3.716554819887055*^9}], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"7c37ff18-98fa-4516-8714-0621da8bbf80"],

Cell[TextData[{
 "Create a ",
 StyleBox[ButtonBox["DateListPlot",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/DateListPlot"],
  FontWeight->"Bold"],
 " of the data."
}], "ItemNumbered",
 CellChangeTimes->{{3.747765374212834*^9, 3.747765454044876*^9}, {
  3.747765510869124*^9, 3.747765597687089*^9}, {3.748192626546235*^9, 
  3.7481926292487803`*^9}},ExpressionUUID->"8bb010c5-92d7-45a9-9d30-\
ae3b57a623fe"],

Cell[BoxData[
 ButtonBox["Solution",
  BaseStyle->{
   FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> GrayLevel[1],
     ButtonBoxOptions -> {
     Background -> 
      RGBColor[0.09019607843137255, 0.1607843137254902, 
        0.25882352941176473`]}},
  ButtonFunction:>CreateDocument[
    Cell[
     CellGroupData[{
       Cell[
        BoxData[
         RowBox[{"DateListPlot", "[", "stockhighlowclose", "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10002.}, 
        CellChangeTimes -> {{3.5735488537478867`*^9, 3.5735489169689693`*^9}, 
          3.716554819889154*^9, 3.7171827166169443`*^9, 3.747765604474684*^9},
         CellLabel -> "In[99]:="], 
       Cell[
        BoxData[
         RowBox[{"DateListPlot", "[", 
           RowBox[{"stockhighlowclose", ",", 
             RowBox[{"Joined", "\[Rule]", " ", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
             RowBox[{"Filling", "\[Rule]", " ", 
               RowBox[{"{", 
                 RowBox[{"1", "\[Rule]", " ", 
                   RowBox[{"{", "2", "}"}]}], "}"}]}]}], "]"}]], "Input", 
        CellGroupingRules -> {"GroupTogetherGrouping", 10002.}, 
        CellChangeTimes -> {{3.5735488537478867`*^9, 3.5735489169689693`*^9}, 
          3.716554819889154*^9, 3.7171827166169443`*^9, 
          3.747765601501213*^9}]}, Open]], WindowTitle -> "Solution", 
    WindowSize -> {800, 600}],
  Evaluator->Automatic,
  ImageSize->{65, 25},
  Method->"Preemptive"]], "Text",
 TextAlignment->Right,ExpressionUUID->"3d139386-97c0-4de5-af04-e32b7accce4a"],

Cell[CellGroupData[{

Cell["Complete solution", "Subsubsection",
 CellChangeTimes->{{3.747765586258522*^9, 3.747765588007428*^9}, {
  3.748009339012061*^9, 3.748009340394671*^9}, {3.832160529530121*^9, 
  3.83216052970621*^9}},ExpressionUUID->"16bee601-be74-49b4-8cf0-\
f28692f2f98b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"td1", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.714850148640766*^9, 3.7148501510806923`*^9}, 
   3.716554819886157*^9},ExpressionUUID->"f7c39270-bb47-4e77-a77c-\
19372eaeff61"],

Cell[BoxData[
 RowBox[{"td1", "[", "\"\<PathLengths\>\"", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{
  3.716554819886664*^9},ExpressionUUID->"b4ee2a15-8ff0-4537-94a6-\
9aa605957b15"],

Cell[BoxData[
 RowBox[{"td1", "[", 
  RowBox[{"\"\<SliceData\>\"", ",", 
   RowBox[{"{", "\"\<Jul 14 2006\>\"", "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.714850148640766*^9, 3.7148501510806923`*^9}, 
   3.716554819887055*^9},ExpressionUUID->"6d16a006-09bb-48bf-8d8e-\
717f2e5fc4e7"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "stockhighlowclose", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.5735488537478867`*^9, 3.5735489169689693`*^9}, 
   3.716554819889154*^9, 3.7171827166169443`*^9, 3.747765604474684*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"53403a54-16a0-4ed5-bd59-b3534bc51c66"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"stockhighlowclose", ",", 
   RowBox[{"Joined", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", " ", 
      RowBox[{"{", "2", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.5735488537478867`*^9, 3.5735489169689693`*^9}, 
   3.716554819889154*^9, 3.7171827166169443`*^9, 
   3.747765601501213*^9},ExpressionUUID->"a801b844-aade-415a-a4da-\
7a4d32988824"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"0072e763-bf88-41e0-bf1d-5fc70e151805"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.714822972967857*^9, 3.7148229774354258`*^9}, {
  3.7163356248367863`*^9, 3.716335627753585*^9}, {3.716555691432086*^9, 
  3.71655569384694*^9}},ExpressionUUID->"b2fb57d3-819b-4b15-b45d-\
cd2108209396"],

Cell["\<\
This section presented functionality to load data into the Wolfram Language \
and prepare it for further analysis. \
\>", "Text",
 CellChangeTimes->{{3.716555702008273*^9, 3.716555732126897*^9}, {
  3.716555789972951*^9, 3.716555840822053*^9}, {3.7165560147938423`*^9, 
  3.716556026152014*^9}, {3.7258078232290583`*^9, 
  3.725807825489493*^9}},ExpressionUUID->"d494d21f-045a-4a6d-8cc8-\
637694168ee8"],

Cell[CellGroupData[{

Cell["Data can be imported ", "Item",
 CellChangeTimes->{{3.716555702008273*^9, 3.716555732126897*^9}, {
  3.716555789972951*^9, 3.716555840822053*^9}, {3.7165560147938423`*^9, 
  3.71655602358552*^9}},ExpressionUUID->"1dcb077b-2691-4808-9906-\
f68f2edbea98"],

Cell["from local files, from the web and from databases", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
   3.714747301281357*^9}, {3.716311691889625*^9, 3.716311709384921*^9}, {
   3.7165558599590054`*^9, 3.7165559741754837`*^9}, 3.716556031185467*^9, {
   3.7481926672499313`*^9, 
   3.748192667312242*^9}},ExpressionUUID->"fbb611a4-a288-4033-a470-\
383e63ea1041"],

Cell["from the built-in knowledgebase and Wolfram Data Repository", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 3.716311709384921*^9}, {
  3.7165558599590054`*^9, 3.7165558880514393`*^9}, {3.7165559279834967`*^9, 
  3.716555939943499*^9}, {3.716555981051243*^9, 3.716555997131016*^9}, {
  3.716556034313231*^9, 3.716556036640809*^9}, {3.748192669457859*^9, 
  3.748192672008243*^9}},ExpressionUUID->"70d7a76f-f54c-49fe-9856-\
fe59a6c99f8e"],

Cell["by scraping content off webpages", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746438263748*^9}, {3.714747297769356*^9, 
  3.714747301281357*^9}, {3.716311691889625*^9, 3.716311709384921*^9}, {
  3.7165558599590054`*^9, 3.7165558880514393`*^9}, {3.7165559279834967`*^9, 
  3.716555939943499*^9}, {3.716555981051243*^9, 3.716555997131016*^9}, {
  3.716556034313231*^9, 3.716556059816781*^9}, {3.748192676239702*^9, 
  3.7481926791616793`*^9}},ExpressionUUID->"c4aada7f-d5a5-4f32-b6c7-\
29bafe056c05"]
}, Open  ]],

Cell["\<\
Raw data needs to be converted into a structural and computable format useful \
for analysis.\
\>", "Item",
 CellChangeTimes->{{3.716556069338311*^9, 3.7165560723946*^9}, {
   3.7165561380825367`*^9, 3.716556196109453*^9}, {3.717182791361013*^9, 
   3.717182792176943*^9}, {3.74800165248864*^9, 3.748001685863172*^9}, 
   3.748192682215506*^9},ExpressionUUID->"ff30944f-7ff0-4a33-9a7f-\
647f90b9771a"],

Cell[CellGroupData[{

Cell["\<\
Constructs available in the Wolfram Language for data storage and \
manipulation:\
\>", "Item",
 CellChangeTimes->{{3.716556069338311*^9, 3.7165560723946*^9}, {
   3.7165561380825367`*^9, 3.716556193024687*^9}, 
   3.748192684679645*^9},ExpressionUUID->"efd61ce5-1c2d-464c-85d3-\
1fb61c1c756d"],

Cell["Lists", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332994862082*^9}, {3.716556225879212*^9, 3.716556234785268*^9}, {
  3.717182829415468*^9, 
  3.717182830044339*^9}},ExpressionUUID->"da6c8da9-d395-43a2-8efc-\
ce96b621e36c"],

Cell["Associations", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332994862082*^9}, {3.716556225879212*^9, 3.716556234785268*^9}, {
  3.717182829415468*^9, 
  3.7171828327282953`*^9}},ExpressionUUID->"31ff22f8-0ead-4b86-8d3f-\
5d0933e2c60a"],

Cell["Datasets", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332994862082*^9}, {3.716556225879212*^9, 3.716556234785268*^9}, {
  3.717182829415468*^9, 3.7171828352010107`*^9}, {3.748192687503113*^9, 
  3.7481926884635477`*^9}},ExpressionUUID->"ea9681d2-47f0-4a91-82c5-\
9d3be5e27648"],

Cell["Time series", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
  3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
  3.716332994862082*^9}, {3.716556225879212*^9, 3.716556234785268*^9}, {
  3.717182829415468*^9, 3.717182832359157*^9}, {3.7481926909834833`*^9, 
  3.7481926921673803`*^9}},ExpressionUUID->"38f3ba83-ca6c-4dce-9dff-\
2440ea9357f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Raw data can be enriched semantically by leveraging the Wolfram Data \
Framework to get additional information with the help of:\
\>", "Item",
 CellChangeTimes->{{3.71655624246266*^9, 3.7165562958649178`*^9}, {
  3.717182858537834*^9, 3.7171828604108973`*^9}, {3.74819269603951*^9, 
  3.748192700031026*^9}},ExpressionUUID->"6bb1edff-9920-44e3-8430-\
08d9a0f58d49"],

Cell["SemanticImport", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
   3.716333000655501*^9}, {3.7165549351034107`*^9, 3.716554935103931*^9}, 
   3.716556228718288*^9, {3.7165563889998503`*^9, 3.7165564006232357`*^9}, {
   3.7171828622176657`*^9, 3.7171828628588047`*^9}, 3.748192707740225*^9, {
   3.748280838260584*^9, 3.748280851874176*^9}, {3.748546034490489*^9, 
   3.748546034495535*^9}},ExpressionUUID->"9bd29fec-6658-41fe-9b93-\
8097d11bb75c"],

Cell["SemanticInterpretation", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
   3.716333000655501*^9}, {3.7165549351034107`*^9, 3.716554935103931*^9}, 
   3.716556228718288*^9, {3.7165563889998503`*^9, 3.7165564006232357`*^9}, {
   3.7171828622176657`*^9, 3.7171828628588047`*^9}, 3.748192707740225*^9, {
   3.748280838260584*^9, 3.748280851874176*^9}, {3.748546035379024*^9, 
   3.748546040842319*^9}},ExpressionUUID->"9db42efe-1b58-4805-9471-\
6c59737b6e19"],

Cell["Entities", "Subitem",
 CellChangeTimes->{{3.714746290262197*^9, 3.7147463469880943`*^9}, {
   3.7147463772893972`*^9, 3.714746436803697*^9}, {3.716332986632413*^9, 
   3.716333000655501*^9}, {3.7165549351034107`*^9, 3.716554935103931*^9}, 
   3.716556228718288*^9, {3.7165563889998503`*^9, 3.7165564006232357`*^9}, {
   3.7171828622176657`*^9, 
   3.717182862529829*^9}},ExpressionUUID->"c598751d-4b4d-48a1-b2bd-\
77b52307891b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b8736c16-9296-4434-8e54-a46b52949f95"],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{
  3.720192656070273*^9},ExpressionUUID->"67a93026-a4ca-4288-ba27-\
1ad09e4d9f77"],

Cell[TextData[StyleBox[ButtonBox["Importing and Exporting",
 BaseStyle->"Link",
 ButtonData->"paclet:tutorial/ImportingAndExportingOverview"],
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, {
  3.74775890295576*^9, 3.747758941843094*^9}, {3.7477590351847467`*^9, 
  3.747759035185689*^9}, {3.747759080367783*^9, 3.7477591091467237`*^9}, {
  3.748192716545622*^9, 3.7481927166935863`*^9}, {3.8321562047881727`*^9, 
  3.832156217281876*^9}, {3.8321562494833727`*^9, 
  3.832156259123228*^9}},ExpressionUUID->"e8c6e2f3-045e-4934-b6c5-\
8832c8f28cea"],

Cell[TextData[{
 "For more details on working with numerical and textual data, refer to ",
 StyleBox[ButtonBox["Loading Numerical Data Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/LoadingNumericalDataOverview"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Reading Textual Data",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ReadingTextualData"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, {
   3.74775890295576*^9, 3.747758941843094*^9}, {3.7477590351847467`*^9, 
   3.747759035185689*^9}, 3.748280866123789*^9, {3.8321561224572887`*^9, 
   3.832156138545575*^9}},ExpressionUUID->"0447f36d-a230-4f36-bca3-\
3dfb14e3c18c"],

Cell[TextData[Cell[BoxData[
 FormBox[
  ButtonBox[
   RowBox[{"Developing", " ", "an", " ", "Import", " ", "Converter"}],
   BaseStyle->"Link",
   ButtonData->"paclet:tutorial/DevelopingAnImportConverter"], 
  TraditionalForm]],
 FontWeight->
  "Bold",ExpressionUUID->"14e0a5cc-76b3-4d09-86de-f15bbe487a62"]], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, {
  3.74775890295576*^9, 3.747758941843094*^9}, {3.747759035670354*^9, 
  3.747759059284895*^9}, {3.747760775099608*^9, 
  3.747760775100253*^9}},ExpressionUUID->"55c2b302-2345-47e9-8ba5-\
cc269749c2ed"],

Cell[TextData[{
 "Detailed instructions for working with SQL databases in the Wolfram \
Language and many different examples of connecting to databases and fetching \
data with both Wolfram Language-style queries and SQL queries can be found in \
the ",
 StyleBox[ButtonBox["DatabaseLink User Guide",
  BaseStyle->"Link",
  ButtonData->"paclet:DatabaseLink/tutorial/Overview"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, {
  3.74775890295576*^9, 3.747758941843094*^9}, {3.747759035670354*^9, 
  3.747759059284895*^9}, {3.747760776002398*^9, 3.747760812448381*^9}, {
  3.747760940167082*^9, 3.7477609401682997`*^9}, {3.748192738624852*^9, 
  3.7481927678296623`*^9}},ExpressionUUID->"64329888-c2a0-4898-9ccc-\
34db6bb91477"],

Cell[TextData[{
 "More functions for accessing the continuously updated Wolfram Knowledgebase \
can be found in this tutorial on ",
 StyleBox[ButtonBox["Knowledge Representation and Access",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/KnowledgeRepresentationAndAccess"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.722962969444437*^9, 3.7229629920644903`*^9}, {
  3.74775890295576*^9, 3.747758941843094*^9}, {3.747759035670354*^9, 
  3.747759059284895*^9}, {3.747760776002398*^9, 3.747760812448381*^9}, {
  3.747760940644165*^9, 3.7477609972691727`*^9}, {3.7477613439812*^9, 
  3.747761343982164*^9}, {3.7482808875235453`*^9, 
  3.748280897024845*^9}},ExpressionUUID->"cdf8f9d0-eb36-445f-9000-\
32d8f0a24991"],

Cell[TextData[{
 "The Wolfram Language offers functionality to get data from Flickr, \
SurveyMonkey, Fitbit, Runkeeper, PubMed, ArXiv, PubChem, etc. Here is a \
complete ",
 StyleBox[ButtonBox["Listing of Supported External Services",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ListingOfSupportedExternalServices"],
  FontWeight->"Bold"],
 " in the Wolfram Language."
}], "Item",
 CellChangeTimes->{{3.716549598870278*^9, 3.716549626794417*^9}, {
  3.747762140186098*^9, 3.7477621401869383`*^9}, {3.748192801733906*^9, 
  3.748192818541791*^9}, {3.748280913210355*^9, 
  3.748280914952824*^9}},ExpressionUUID->"3a09fe57-5ab5-4363-be47-\
66d484d1f588"],

Cell[TextData[{
 "The Wolfram Language contains numerous functions to transform and work with \
lists. For further details, please see these tutorials on ",
 StyleBox[ButtonBox["Lists",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/ListsOverview"],
  FontWeight->"Bold"],
 " and ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    StyleBox[
     RowBox[{"Manipulating", " ", "Lists"}],
     FontWeight->"Bold"],
    BaseStyle->"Link",
    ButtonData->"paclet:tutorial/ManipulatingListsOverview"], 
   TraditionalForm]],ExpressionUUID->"e1f8f744-bba1-40e2-b3c8-f83a1ef49b85"],
 ". A number of functions to restructure and reorganize lists can be found at",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox[ButtonBox["Rearranging & Restructuring Lists",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/RearrangingAndRestructuringLists"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.716549598870278*^9, 3.716549626794417*^9}, 
   3.747762140583634*^9, {3.7477621924955177`*^9, 3.747762192496468*^9}, {
   3.748192821667734*^9, 3.74819285693112*^9}, {3.748280920746056*^9, 
   3.748280923017108*^9}},ExpressionUUID->"e269a1c8-3d90-4307-afd7-\
56abe368504c"],

Cell[TextData[{
 "For more details on working with associations and datasets in the Wolfram \
Language, refer to these guides on ",
 StyleBox[ButtonBox["Associations",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/Associations"],
  FontWeight->"Bold"],
 " and ",
 StyleBox[ButtonBox["Computation with Structured Datasets",
  BaseStyle->"Link",
  ButtonData->"paclet:guide/ComputationWithStructuredDatasets"],
  FontWeight->"Bold"],
 "."
}], "Item",
 CellChangeTimes->{{3.716549598870278*^9, 3.716549626794417*^9}, 
   3.747762140583634*^9, {3.747762192974276*^9, 3.747762211306528*^9}, {
   3.7477623251980267`*^9, 3.747762325198626*^9}, {3.748192873908292*^9, 
   3.748192883745021*^9}, {3.748545731421129*^9, 3.7485457909677687`*^9}, 
   3.832155034578923*^9},ExpressionUUID->"b20728a7-7c05-4349-824f-\
cf9dfc2cb6cd"],

Cell[TextData[{
 StyleBox[ButtonBox["A Primer on Association and Datasets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://community.wolfram.com/groups/-/m/t/1167544"], None},
  ButtonNote->"http://community.wolfram.com/groups/-/m/t/1167544"],
  FontSlant->"Italic"],
 " by Seth Chandler."
}], "Item",
 CellChangeTimes->{
  3.7477625078765574`*^9, {3.747762538407378*^9, 3.747762546622962*^9}, {
   3.748192886601445*^9, 3.748192898984514*^9}, {3.748545749313477*^9, 
   3.748545749640955*^9}, {3.748545816184363*^9, 
   3.748545852397346*^9}},ExpressionUUID->"c25bdae2-13b6-49ed-a494-\
47472339d9de"],

Cell[TextData[{
 "For more details on working with time series in the Wolfram Language, refer \
to ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Time", " ", "Series"}],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/TimeSeries"], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"63339cf5-2fd1-40c6-b2ed-d8f6da5cec38"],
 "."
}], "Item",
 CellChangeTimes->{{3.747764919423942*^9, 3.7477649384857483`*^9}, {
  3.7481929017283707`*^9, 
  3.7481929165152407`*^9}},ExpressionUUID->"80c8b18d-d0d1-4c42-9f30-\
f753b7055cfd"],

Cell[TextData[ButtonBox["Use Data from the Wolfram Data Repository",
 BaseStyle->"Link",
 ButtonData->"paclet:workflow/UseDataFromTheWolframDataRepository"]], "Item",
 CellChangeTimes->{{3.747761369060296*^9, 3.747761409971122*^9}, {
  3.74819278665263*^9, 
  3.748192791507865*^9}},ExpressionUUID->"3212c95d-b99d-43ad-b260-\
2d2c1d15632f"],

Cell[TextData[{
 ButtonBox["Curating Data and Integrating the Wolfram Data Framework",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/wolfram-u/curating-data-integrating-data-\
framework/"], None},
  ButtonNote->
   "http://www.wolfram.com/wolfram-u/curating-data-integrating-data-framework/\
"],
 "\[LongDash]video course on Wolfram U"
}], "Item",
 CellChangeTimes->{{3.748545970238394*^9, 3.7485460019386997`*^9}, {
  3.83215617917805*^9, 
  3.83215618224925*^9}},ExpressionUUID->"3f32a445-2fda-4d9b-9be8-\
bd71ba022cba"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1343, 908},
WindowMargins->{{21, Automatic}, {Automatic, 50}},
WindowTitle->"Data Wrangling",
WindowStatusArea->None,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (May 11, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WolframULogo"], CellGroupingRules -> "GraphicsGrouping", 
          PageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
          True, ShowCellLabel -> False, DefaultFormatType -> 
          DefaultOutputFormatType, LanguageCategory -> "NaturalLanguage", 
          FormatType -> StandardForm, ShowStringCharacters -> False, 
          FrontFaceColor -> GrayLevel[0], BackFaceColor -> GrayLevel[0], 
          FrontFaceOpacity -> 1, GraphicsColor -> GrayLevel[0], PointSize -> 
          Absolute[3], Thickness -> Medium, Opacity -> 1, DrawEdges -> False, 
          StyleMenuListing -> None, FontFamily -> "Arial", FontSize -> 10, 
          FontWeight -> "Plain", FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["WolframULogo", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
            0.5, 0.12 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Working", StyleDefinitions -> 
           StyleData["WolframULogo", "SlideShow"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "WolframULogo", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["WolframULogo", "Slideshow Working"]], 
          CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], FontFamily -> "Source Sans Pro", FontSize -> 
             81, FontWeight -> "Regular", FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[
              0.09019607843137255, 0.1607843137254902, 0.25882352941176473`]], 
            Cell[
             StyleData["Title", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.11 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 81], 
            Cell[
             StyleData[
             "Title", "Slideshow Working", StyleDefinitions -> 
              StyleData["Title", "SlideShow"]]], 
            Cell[
             StyleData[
             "Title", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Title", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Title", "Slideshow Working"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], FontFamily -> "Source Sans Pro", FontSize -> 
             40, FontWeight -> "Regular", FontSlant -> "Plain", 
             FontVariations -> {"CapsType" -> "AllCaps"}, 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subtitle", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {50, 12}}, 
             LineSpacing -> {1, 2}, FontSize -> 48], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subtitle", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subtitle", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subtitle", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subtitle", "Slideshow Working"]]]}, Closed]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, FontFamily -> 
             "Source Sans Pro", FontSize -> 70, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Section", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               26, 0.06 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 40], 
            Cell[
             StyleData[
             "Section", "Slideshow Working", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]]], 
            Cell[
             StyleData[
             "Section", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Section", "SlideShow"]], 
             CellFrameLabels -> {{None, None}, {None, None}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 40, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> 
             RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
            Cell[
             StyleData["Subsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}, FontSize -> 32], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsection", "Slideshow Working"]]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], ShowGroupOpener -> True, FontFamily -> 
             "Source Sans Pro", FontSize -> 20, FontWeight -> "Regular", 
             FontSlant -> "Plain", 
             PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
             FontColor -> RGBColor[1., 0.42745098039215684`, 0.]], 
            Cell[
             StyleData["Subsubsection", "SlideShow"], 
             CellMargins -> {{
               0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
                FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
               12, 0.04 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}, 
             LineSpacing -> {1, 2}], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Working", StyleDefinitions -> 
              StyleData["Subsubsection", "SlideShow"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Slideshow Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]], 
            Cell[
             StyleData[
             "Subsubsection", "Scrolling Presentation", StyleDefinitions -> 
              StyleData["Subsubsection", "Slideshow Working"]]]}, Closed]]}, 
        Open]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Body Content", "Section", 
       CellChangeTimes -> {{3.727532504641029*^9, 3.727532505736285*^9}}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], LineSpacing -> {1, 3}, TabSpacings -> {2.5}, 
          CounterIncrements -> "Text", MenuSortingValue -> 1400, 
          MenuCommandKey :> "7", FontFamily -> "Source Sans Pro", FontSize -> 
          15, FontWeight -> "Regular", FontSlant -> "Plain", 
          PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}], 
         Cell[
          StyleData["Text", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "Text", "Slideshow Working", StyleDefinitions -> 
           StyleData["Text", "SlideShow"]]], 
         Cell[
          StyleData[
          "Text", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Text", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Text", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Note"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> True, LineSpacing -> {1, 3}, CounterIncrements -> 
          "Note", MenuSortingValue -> 8, FontFamily -> "Source Sans Pro", 
          FontSize -> 12, FontSlant -> "Italic", Background -> 
          GrayLevel[0.85]], 
         Cell[
          StyleData["Note", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellOpen -> False, 
          HyphenationOptions -> {"HyphenationCharacter" -> "-"}, 
          ParagraphSpacing -> {0, 6}, ParagraphIndent -> -10, 
          StyleMenuListing -> None, FontSize -> 18], 
         Cell[
          StyleData[
          "Note", "Slideshow Working", StyleDefinitions -> 
           StyleData["Note"]]], 
         Cell[
          StyleData[
          "Note", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Note", "SlideShow"]]], 
         Cell[
          StyleData[
          "Note", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Note", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Item"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.42745098039215684`, 0.]]], 
         Cell[
          StyleData["Item", "SlideShow"], 
          CellMargins -> {{
            0.165 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Item", "Slideshow Working", StyleDefinitions -> 
           StyleData["Item", "SlideShow"]]], 
         Cell[
          StyleData[
          "Item", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Item", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Item", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemParagraph"], CellMargins -> {{81, 10}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          DefaultNewCellStyle -> "Item", MenuSortingValue -> 1600, FontFamily -> 
          Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 14, 
          FontColor -> Dynamic[
            FrontEnd`CurrentValue[{StyleHints, "ColorSet", "Text1"}], None]], 
         Cell[
          StyleData["ItemParagraph", "SlideShow"], ShowGroupOpener -> False, 
          CellMargins -> {{
            0.18 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["ItemParagraph", "Printout"], 
          CellMargins -> {{65, Inherited}, {Inherited, 0.5 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subitem"], CellDingbat -> 
          StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
            RGBColor[1., 0.592156862745098, 0.10196078431372549`]]], 
         Cell[
          StyleData["Subitem", "SlideShow"], 
          CellMargins -> {{
            0.185 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 8, FontSize -> 22], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Working", StyleDefinitions -> 
           StyleData["Subitem", "SlideShow"]]], 
         Cell[
          StyleData[
          "Subitem", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Subitem", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Subitem", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemParagraph"], CellMargins -> {{105, 12}, {4, 1}}, 
          ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemParagraph", "Backspace" -> 
            "ItemParagraph", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemParagraph"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Subitem", 
          MenuSortingValue -> 1610, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 13.5,
           FontColor -> Dynamic[
            CurrentValue[{StyleHints, "ColorSet", "Text1"}]]], 
         Cell[
          StyleData["SubitemParagraph", "SlideShow"], 
          CellMargins -> {{
            0.2 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 2}}, 
          FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemParagraph", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemParagraph", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemParagraph", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemParagraph", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, 0.1 Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ItemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{81, 10}, {4, 8}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {"Tab" -> "SubitemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
          CellFrameLabelMargins -> 4, CounterIncrements -> "ItemNumbered", 
          CounterAssignments -> {{"SubitemNumbered", 0}, {
            "SubsubitemNumbered", 0}}, MenuSortingValue -> 1630, FontFamily -> 
          "Source Sans Pro", FontSize -> 15], 
         Cell[
          StyleData["ItemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.17 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["ItemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ItemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["ItemNumbered", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SubitemNumbered"], CellDingbat -> Cell[
            TextData[{
              CounterBox["ItemNumbered"], ".", 
              CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
          CellMargins -> {{105, 12}, {4, 4}}, ReturnCreatesNewCell -> True, 
          StyleKeyMapping -> {
           "Tab" -> "SubsubitemNumbered", "Backspace" -> 
            "ItemNumbered", $CellContext`KeyEvent[
             "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> 
            "ItemNumbered"}, 
          CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
          CellFrameLabelMargins -> 4, DefaultNewCellStyle -> "Item", 
          CounterIncrements -> "SubitemNumbered", 
          CounterAssignments -> {{"SubsubitemNumbered", 0}}, MenuSortingValue -> 
          1640, FontFamily -> Dynamic[
            CurrentValue[{StyleHints, "FontSet", "Text1"}]], FontSize -> 
          13.5], 
         Cell[
          StyleData["SubitemNumbered", "SlideShow"], 
          CellMargins -> {{
            0.195 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
          CellFrameLabelMargins -> 6, FontSize -> 22], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Working", StyleDefinitions -> 
           StyleData["SubitemNumbered", "SlideShow"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "SubitemNumbered", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["SubitemNumbered", "Slideshow Working"]]], 
         Cell[
          StyleData["SubitemNumbered", "Printout"], 
          CellMargins -> {{92, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Graphics"], CellMargins -> {{27, Inherited}, {15, 15}}, 
          CellGroupingRules -> "GraphicsGrouping", PageBreakWithin -> False, 
          GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
          False, DefaultFormatType -> DefaultOutputFormatType, ContextMenu -> 
          FEPrivate`FrontEndResource["ContextMenus", "Graphics"], 
          AutoStyleOptions -> {"HighlightMisspelledWords" -> False}, 
          LanguageCategory -> "NaturalLanguage", FormatType -> StandardForm, 
          ShowStringCharacters -> False, NumberMarks -> False, 
          CounterIncrements -> "Graphics", 
          ImageMargins -> {{43, Inherited}, {Inherited, 0}}, Arrowheads -> 
          0.04, Dashing -> None, CapForm -> "Square", 
          JoinForm -> {"Miter", 3.25}, LineColor -> GrayLevel[0], LineOpacity -> 
          1, EdgeColor -> GrayLevel[0], EdgeOpacity -> 1, EdgeThickness -> 
          Medium, EdgeDashing -> None, EdgeCapForm -> "Square", 
          EdgeJoinForm -> {"Miter", 3.25}, FrontFaceColor -> GrayLevel[0], 
          BackFaceColor -> GrayLevel[0], FrontFaceOpacity -> 1, GraphicsColor -> 
          GrayLevel[0], PointSize -> Absolute[3], Thickness -> Medium, 
          Opacity -> 1, DrawEdges -> False, StyleMenuListing -> None, 
          FontFamily -> "Arial", FontSize -> 10, FontWeight -> "Plain", 
          FontColor -> GrayLevel[0], FontOpacity -> 
          1, $CellContext`StripStyleOnPaste -> 
          False, $CellContext`BackFaceOpacity -> 1], 
         Cell[
          StyleData["Graphics", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {12, 12}}], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Working", StyleDefinitions -> 
           StyleData["Graphics", "SlideShow"]]], 
         Cell[
          StyleData[
          "Graphics", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Graphics", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Graphics", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["Hyperlink"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["KeyEvent"], CellFrame -> {{1, 1}, {1, 1}}, 
          CellFrameMargins -> {{2, 2}, {2, 2}}, CellFrameColor -> 
          GrayLevel[0.8], FontFamily -> "Source Sans Pro", FontColor -> 
          GrayLevel[0.360784], Background -> GrayLevel[0.964706]], 
         Cell[
          StyleData["KeyEvent", "SlideShow"]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Working", StyleDefinitions -> 
           StyleData["KeyEvent", "SlideShow"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "KeyEvent", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["KeyEvent", "Slideshow Working"]]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Input"], CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          FontSize -> 13], 
         Cell[
          StyleData["Input", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Input", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "Input", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Input", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExperimentalInput", StyleDefinitions -> StyleData["Input"]], 
          CellFrame -> True, CellMargins -> {{66, 10}, {5, 8}}, 
          StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
          CellFrameColor -> 
          RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
          CellFrameLabels -> {{
             Cell[
              BoxData[
               InterpretationBox[
                Cell[
                 BoxData[
                  RotationBox[
                  "Experimental", BoxRotation -> 1.5707963267948966`]], 
                 "Text", LineColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FrontFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 BackFaceColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 GraphicsColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`], 
                 FontSize -> 10, FontColor -> 
                 RGBColor[1., 0.592156862745098, 0.10196078431372549`]], 
                TextCell[
                 Rotate["Experimental", 90 Degree], "Text", 10, 
                 $CellContext`RGBColorRGBColor[
                 1., 0.592156862745098, 0.10196078431372549`]]]]], None}, {
            None, None}}, FontSize -> 13], 
         Cell[
          StyleData["ExperimentalInput", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Working", StyleDefinitions -> 
           StyleData["Input", "SlideShow"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "ExperimentalInput", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Input", "Slideshow Working"]]]}, Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{66, 10}, {7, 8}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Working", StyleDefinitions -> 
           StyleData["InputOnly", "SlideShow"]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Code", "Slideshow Working", StyleDefinitions -> 
           StyleData["Code", "SlideShow"]]], 
         Cell[
          StyleData[
          "Code", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Code", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Code", "Slideshow Working"]]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{66, 10}, {12, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.15 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData[
          "Output", "Slideshow Working", StyleDefinitions -> 
           StyleData["Output", "SlideShow"]]], 
         Cell[
          StyleData[
          "Output", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "Output", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["Output", "Slideshow Working"]]]}, Closed]], 
      Cell[
       StyleData["CodeText"], TabSpacings -> {2.5}, MenuSortingValue -> 
       10000]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "12.3 for Mac OS X x86 (64-bit) (May 11, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"50d2786b-d1f9-4cd6-96b7-ab79aa30d322"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[608, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c8311887-3777-40c4-92e3-ace772fe7322",
   CellTags->"SlideShowHeader"],
  Cell[16550, 300, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e62b1bf0-51f7-472b-a090-9a45160f0ba2",
   CellTags->"SlideShowHeader"],
  Cell[21363, 413, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9c04473b-7dca-4b27-8ff0-4055a3ec6b09",
   CellTags->"SlideShowHeader"],
  Cell[23293, 464, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7741b3a0-fdc4-4efc-b94a-68f75deac27e",
   CellTags->"SlideShowHeader"],
  Cell[31461, 725, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c7b13fd-7306-41f9-9812-4332bb917311",
   CellTags->"SlideShowHeader"],
  Cell[41954, 1012, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c4af0b17-dc1a-49cb-a1c6-e1c9068fa1d2",
   CellTags->"SlideShowHeader"],
  Cell[54334, 1343, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1e6c0a49-ec8b-4f72-8eb5-f0b19f33c296",
   CellTags->"SlideShowHeader"],
  Cell[61282, 1511, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"445edb74-73f5-4de6-9a1f-fe1a6a82a74a",
   CellTags->"SlideShowHeader"],
  Cell[98490, 2369, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"442e8b62-721a-4a5a-a1f6-8bb20ca56f86",
   CellTags->"SlideShowHeader"],
  Cell[379344, 7543, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"dfa986de-5d45-4cf6-acc1-5d125e1e5035",
   CellTags->"SlideShowHeader"],
  Cell[553227, 10529, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"75117cf0-8772-49dc-8036-a23524c712f1",
   CellTags->"SlideShowHeader"],
  Cell[561856, 10740, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a5721cef-af97-426f-b03f-80ed9952ddc4",
   CellTags->"SlideShowHeader"],
  Cell[579447, 11196, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3cadbac1-db4c-4535-9f6a-ab7a994b6aad",
   CellTags->"SlideShowHeader"],
  Cell[583283, 11291, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30dd3bf3-5f46-40aa-81c0-5b3dba127153",
   CellTags->"SlideShowHeader"],
  Cell[606010, 11876, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4f77c04c-1461-438e-ae1b-70766f8f6438",
   CellTags->"SlideShowHeader"],
  Cell[619569, 12259, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"335a9caa-bafd-4521-956d-c595168c10b8",
   CellTags->"SlideShowHeader"],
  Cell[684477, 13690, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f2e1ab79-1ab3-40c3-bfa8-f3a2a8633254",
   CellTags->"SlideShowHeader"],
  Cell[693711, 13920, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9f0262b5-392a-4878-8e9e-082c2bb96115",
   CellTags->"SlideShowHeader"],
  Cell[710613, 14380, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0072e763-bf88-41e0-bf1d-5fc70e151805",
   CellTags->"SlideShowHeader"],
  Cell[717678, 14539, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b8736c16-9296-4434-8e54-a46b52949f95",
   CellTags->"SlideShowHeader"]},
 "databaseExamples"->{
  Cell[43016, 1042, 342, 7, 52, "Input",ExpressionUUID->"46b7dd98-add6-4f8b-bfef-42057229b656",
   CellTags->"databaseExamples"]},
 "b:3.1"->{
  Cell[45386, 1104, 216, 4, 30, "Input",ExpressionUUID->"ef5ea58b-6253-42f5-ad4d-73dcf154c3cb",
   CellTags->{"b:3.1", "Ex--21943492438155078303,64"},
   CellID->27124]},
 "Ex--21943492438155078303,64"->{
  Cell[45386, 1104, 216, 4, 30, "Input",ExpressionUUID->"ef5ea58b-6253-42f5-ad4d-73dcf154c3cb",
   CellTags->{"b:3.1", "Ex--21943492438155078303,64"},
   CellID->27124]},
 "twitter1"->{
  Cell[388261, 7731, 91073, 1529, 443, "ItemParagraph",ExpressionUUID->"54d5ecfb-042a-40ea-b0f1-59094cf53ef2",
   CellGroupingRules->{"GroupTogetherGrouping", 10001.},
   CellTags->"twitter1"]},
 "twitter2"->{
  Cell[479892, 9272, 510, 12, 30, "Input",ExpressionUUID->"0dd7e07e-39ed-48a8-b3a7-21943d35a09b",
   CellGroupingRules->{"GroupTogetherGrouping", 10001.},
   CellTags->"twitter2"],
  Cell[480405, 9286, 68396, 1127, 211, "ItemParagraph",ExpressionUUID->"987be938-9fc0-41c1-9646-6238594e5309",
   CellGroupingRules->{"GroupTogetherGrouping", 10001.},
   CellTags->"twitter2"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 756175, 15429},
 {"databaseExamples", 759132, 15470},
 {"b:3.1", 759275, 15473},
 {"Ex--21943492438155078303,64", 759480, 15477},
 {"twitter1", 759666, 15481},
 {"twitter2", 759876, 15485}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[608, 23, 136, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c8311887-3777-40c4-92e3-ace772fe7322",
 CellTags->"SlideShowHeader"],
Cell[747, 27, 14970, 250, 68, "WolframULogo",ExpressionUUID->"0b65b87d-f176-4318-a73b-e5dca538125a"],
Cell[CellGroupData[{
Cell[15742, 281, 276, 4, 250, "Title",ExpressionUUID->"a3fac058-6446-4a1e-afb8-fb0aba3c885a"],
Cell[16021, 287, 480, 7, 73, "Subtitle",ExpressionUUID->"db45a0ed-c9a7-4ee8-9168-0f7d2f97983e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16550, 300, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"e62b1bf0-51f7-472b-a090-9a45160f0ba2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[16697, 306, 384, 6, 115, "Section",ExpressionUUID->"8746985c-2ea9-4400-9945-78a1eaa0ee28"],
Cell[CellGroupData[{
Cell[17106, 316, 412, 6, 32, "Item",ExpressionUUID->"14368d9e-57e8-4d85-94bf-bf22dde9d0c8"],
Cell[17521, 324, 303, 5, 27, "Subitem",ExpressionUUID->"a658f483-0ff3-4588-b2f3-04694d6c08c8"],
Cell[17827, 331, 353, 6, 27, "Subitem",ExpressionUUID->"009300c8-4bee-482c-bb13-c47254d10ca2"],
Cell[18183, 339, 356, 6, 27, "Subitem",ExpressionUUID->"a23f8955-76f2-4cc1-ad42-615206103e4a"],
Cell[18542, 347, 403, 6, 27, "Subitem",ExpressionUUID->"92414e6c-8d7a-49db-8e43-9f6bde5cb126"],
Cell[18948, 355, 482, 7, 27, "Subitem",ExpressionUUID->"242c9a45-e3f2-48c4-a418-46c8e49fbb44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19467, 367, 352, 5, 32, "Item",ExpressionUUID->"565e1340-e9ef-4ff5-873c-717bf690d049"],
Cell[19822, 374, 249, 4, 27, "Subitem",ExpressionUUID->"c1f7757d-dcb3-416f-bfd5-1dfc27ecbbb5"],
Cell[20074, 380, 256, 4, 27, "Subitem",ExpressionUUID->"c4f975c6-d178-4d63-a8dc-3f9141cec702"],
Cell[20333, 386, 303, 5, 27, "Subitem",ExpressionUUID->"6069711c-c8ba-4297-89bd-aae4d0b2156a"],
Cell[20639, 393, 305, 5, 27, "Subitem",ExpressionUUID->"2b7d3b15-4494-4d37-aaec-2ab46e179153"],
Cell[20947, 400, 355, 6, 27, "Subitem",ExpressionUUID->"10019a6d-1460-4d8d-ac1f-5058ba07632d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21363, 413, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9c04473b-7dca-4b27-8ff0-4055a3ec6b09",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[21510, 419, 159, 3, 115, "Section",ExpressionUUID->"6f0dfda0-0fb9-43a3-b332-798d26c0539a"],
Cell[21672, 424, 445, 9, 32, "Item",ExpressionUUID->"726b1e21-8fb1-42cb-ab3f-337b6497b7d9"],
Cell[22120, 435, 601, 11, 32, "Item",ExpressionUUID->"f30af88f-a0dc-469a-af83-c1bd42fc018c"],
Cell[22724, 448, 520, 10, 32, "Item",ExpressionUUID->"c6485def-1e03-4a96-8dd9-0b37e91b1b1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23293, 464, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"7741b3a0-fdc4-4efc-b94a-68f75deac27e",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[23440, 470, 369, 6, 115, "Section",ExpressionUUID->"335fbe46-061b-476e-bfc3-19c65ed92bce"],
Cell[23812, 478, 299, 6, 35, "Text",ExpressionUUID->"9c9d89da-cd1b-41f4-9fec-da594074a8c4"],
Cell[CellGroupData[{
Cell[24136, 488, 239, 4, 79, "Subsection",ExpressionUUID->"d75b6b69-8704-418a-91fc-08cd1ab3b1ee"],
Cell[24378, 494, 1074, 33, 32, "Item",ExpressionUUID->"ddaca001-3a45-4485-84f7-635c7c168b90"],
Cell[25455, 529, 997, 32, 32, "Item",ExpressionUUID->"f36c38e7-6c1f-4714-978f-565e6f45755e"],
Cell[26455, 563, 843, 25, 32, "Item",ExpressionUUID->"1a524723-fb17-4da7-85bd-9bdecd79fce5"],
Cell[27301, 590, 667, 21, 32, "Item",ExpressionUUID->"f70bfdae-7fef-49c6-bfe5-b94cd22d6075"],
Cell[CellGroupData[{
Cell[27993, 615, 356, 6, 32, "Item",ExpressionUUID->"afdf9c28-c44d-49dc-bec6-58a7ae49b822"],
Cell[28352, 623, 1301, 39, 27, "Subitem",ExpressionUUID->"4a1eb9f1-6fa1-4a1c-8ce6-26e13574c26a"],
Cell[29656, 664, 928, 32, 27, "Subitem",ExpressionUUID->"77c79e1e-4c94-4b1c-9d6f-9206581ac35f"],
Cell[30587, 698, 233, 4, 27, "Subitem",ExpressionUUID->"5dcff817-2235-4ff9-a07a-6fcea6d2c8f2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30869, 708, 212, 3, 79, "Subsection",ExpressionUUID->"f05fb453-9f19-42c6-a845-21579b7301a5"],
Cell[31084, 713, 316, 5, 30, "Input",ExpressionUUID->"74a85c7a-ef27-4b8c-8d62-42f1baa2685b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31461, 725, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0c7b13fd-7306-41f9-9812-4332bb917311",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[31608, 731, 368, 6, 115, "Section",ExpressionUUID->"00f50b97-ee01-4a31-a6df-abb3a0b5eed8"],
Cell[CellGroupData[{
Cell[32001, 741, 154, 3, 79, "Subsection",ExpressionUUID->"7ce934f8-bfe0-405c-992b-477599288645"],
Cell[32158, 746, 156, 3, 30, "Input",ExpressionUUID->"ff04ef96-d15a-4451-878a-62ff034b020f"],
Cell[32317, 751, 267, 5, 35, "Text",ExpressionUUID->"6dcce662-4c06-426f-bfee-1c6f442ac724"],
Cell[32587, 758, 375, 9, 30, "Input",ExpressionUUID->"e2a643b6-f2a2-401a-b12f-d405702e22ea"],
Cell[32965, 769, 332, 9, 35, "Text",ExpressionUUID->"8d72cc6a-0e2f-4401-a7a4-9311a31551f1"],
Cell[33300, 780, 302, 6, 30, "Input",ExpressionUUID->"bc7c271f-edb5-414f-b5c5-923726940e5c"],
Cell[33605, 788, 271, 5, 30, "Input",ExpressionUUID->"a8bd46c6-6704-4b23-9ce1-ec33d471e281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33913, 798, 407, 6, 79, "Subsection",ExpressionUUID->"aea4b45d-2baf-4e77-ba8f-e005445c64d2"],
Cell[34323, 806, 392, 6, 35, "Text",ExpressionUUID->"3b574df1-da4e-4ae0-9dbc-43bf8dc2d249"],
Cell[34718, 814, 181, 3, 35, "Text",ExpressionUUID->"4cbf65e1-6bec-48ab-ad79-317e39ff77d3"],
Cell[34902, 819, 481, 9, 30, "Input",ExpressionUUID->"174e95f7-7a2a-4e82-bebc-ca97518fa64d"],
Cell[35386, 830, 313, 7, 30, "Input",ExpressionUUID->"c02720ec-1fad-45e5-a155-6ea04fd5a135"],
Cell[35702, 839, 166, 3, 35, "Text",ExpressionUUID->"d0d5803d-ef3f-4702-9b8a-d76ae10e1369"],
Cell[35871, 844, 190, 4, 30, "Input",ExpressionUUID->"d9ee1cd2-3317-4d38-aa9b-bd9e33383fa7"],
Cell[36064, 850, 194, 4, 30, "Input",ExpressionUUID->"67d87aa5-284a-4fb6-b9fa-422233315e27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36295, 859, 301, 5, 79, "Subsection",ExpressionUUID->"4c12ca88-a4e3-41f5-af21-25efbd743745"],
Cell[36599, 866, 190, 3, 35, "Text",ExpressionUUID->"57f89277-6f16-46af-8e9b-4a8dbf536a7a"],
Cell[36792, 871, 257, 6, 30, "Input",ExpressionUUID->"00acc484-25e4-41f0-b0da-c2073660f622"],
Cell[37052, 879, 148, 2, 30, "Input",ExpressionUUID->"e7b88e36-7195-48e3-ac1a-752b650ec7bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37237, 886, 391, 6, 79, "Subsection",ExpressionUUID->"05c65baa-e5dd-431b-9339-24ca0d9ca2fb"],
Cell[37631, 894, 290, 4, 35, "Text",ExpressionUUID->"c3317a7f-b5f1-4659-91e3-9199f093924f"],
Cell[37924, 900, 236, 5, 30, "Input",ExpressionUUID->"31a6b9aa-eb15-4e8e-927f-9370609cab57"],
Cell[38163, 907, 175, 3, 35, "Text",ExpressionUUID->"75891c3e-1970-427d-a471-f67017ef87e0"],
Cell[38341, 912, 339, 7, 30, "Input",ExpressionUUID->"3e2e3e9a-6afb-4bad-b1e6-bd49bb6e0b3f"],
Cell[38683, 921, 148, 2, 30, "Input",ExpressionUUID->"41bbd847-62b1-4fbc-8f51-2720f17a9009"],
Cell[38834, 925, 191, 3, 35, "Text",ExpressionUUID->"4bc77f71-b381-4736-ac95-ebc0bbd228d7"],
Cell[39028, 930, 359, 6, 30, "Input",ExpressionUUID->"cef129c4-3d06-47f1-98c9-ad32f03d4461"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39424, 941, 272, 6, 79, "Subsection",ExpressionUUID->"ec2f7295-b179-40fe-b131-d3740cc148dd"],
Cell[39699, 949, 1125, 27, 58, "Text",ExpressionUUID->"fc3c90af-7f17-42b9-9813-20b68f2e4bc2"],
Cell[40827, 978, 184, 4, 30, "Input",ExpressionUUID->"f6522dd3-0bee-4d7b-ada9-e096c6f33a85"],
Cell[41014, 984, 276, 6, 30, "Input",ExpressionUUID->"68e3d048-7992-4b33-afe0-4c4a4ebcdff2"],
Cell[41293, 992, 187, 3, 30, "Input",ExpressionUUID->"24510101-16a4-4454-812b-dec09f42c604"],
Cell[41483, 997, 130, 1, 30, "Input",ExpressionUUID->"a6804ea9-f6a9-4452-9289-993f6c1bfd43"],
Cell[41616, 1000, 146, 2, 30, "Input",ExpressionUUID->"dcec907f-7d42-47cd-90cf-04f72f5c9593"],
Cell[41765, 1004, 128, 1, 30, "Input",ExpressionUUID->"e1ea2574-1ea2-4887-97d6-b403b0502311"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41954, 1012, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"c4af0b17-dc1a-49cb-a1c6-e1c9068fa1d2",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[42101, 1018, 450, 7, 115, "Section",ExpressionUUID->"5fa5b826-9b17-449e-8eb2-10992ab756de"],
Cell[CellGroupData[{
Cell[42576, 1029, 156, 3, 79, "Subsection",ExpressionUUID->"fd3cb6b0-0005-4a2e-a9d1-599c84f66f01"],
Cell[42735, 1034, 278, 6, 35, "Text",ExpressionUUID->"b92a7ef0-72eb-46cd-98e0-2dceb0725e75"],
Cell[43016, 1042, 342, 7, 52, "Input",ExpressionUUID->"46b7dd98-add6-4f8b-bfef-42057229b656",
 CellTags->"databaseExamples"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43395, 1054, 301, 5, 79, "Subsection",ExpressionUUID->"e55a9ed0-fd31-4978-af6f-e7ce7f4551bf"],
Cell[43699, 1061, 195, 3, 35, "Text",ExpressionUUID->"be236ee4-875b-4cd0-b78c-a0af2123be9e"],
Cell[43897, 1066, 216, 4, 30, "Input",ExpressionUUID->"8f4c0ac8-4cfc-4006-9447-e04d0ae4abc7"],
Cell[44116, 1072, 467, 9, 35, "Text",ExpressionUUID->"08d1657a-38d8-4d29-8eac-fceca4374ca1"],
Cell[44586, 1083, 254, 4, 30, "Input",ExpressionUUID->"19c25da8-6bd7-4793-a549-31af1d0aaa36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44877, 1092, 238, 4, 79, "Subsection",ExpressionUUID->"8458ed31-2ebf-4624-98da-4a5c390d7b86"],
Cell[45118, 1098, 265, 4, 35, "Text",ExpressionUUID->"9791a66c-8995-4302-b5a5-9b343476cc01"],
Cell[45386, 1104, 216, 4, 30, "Input",ExpressionUUID->"ef5ea58b-6253-42f5-ad4d-73dcf154c3cb",
 CellTags->{"b:3.1", "Ex--21943492438155078303,64"},
 CellID->27124],
Cell[CellGroupData[{
Cell[45627, 1112, 280, 6, 46, "Subsubsection",ExpressionUUID->"431f9c73-5f93-4f0e-a626-874ccc66f1e7"],
Cell[CellGroupData[{
Cell[45932, 1122, 377, 8, 35, "Text",ExpressionUUID->"6fd7e021-af7d-4f09-98db-73a3a8e12f5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[46312, 1132, 541, 9, 30, "Input",ExpressionUUID->"648f8c4d-dbcc-4c6e-8a5c-277f31980df0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[46856, 1143, 543, 10, 35, "Text",ExpressionUUID->"186970fa-aae8-4048-9e3e-3f141d419893",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[47402, 1155, 563, 12, 30, "Input",ExpressionUUID->"e1cf16c5-97ae-413b-8a46-a81b31660be9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[48002, 1172, 549, 10, 35, "Text",ExpressionUUID->"0bae2f6d-aad9-48df-8a4b-c56593287c27",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[48554, 1184, 744, 19, 30, "Input",ExpressionUUID->"1741b17f-7058-4377-b6d0-e8290edcb6ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[49301, 1205, 391, 6, 35, "Text",ExpressionUUID->"042885af-e226-47a9-8380-cc1bf0ecd653",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[49695, 1213, 1161, 26, 30, "Input",ExpressionUUID->"d4b175a4-5fd0-4bd2-bad7-2a464d465b03",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50905, 1245, 245, 4, 46, "Subsubsection",ExpressionUUID->"d1fda108-8e5b-4de7-a724-ad92368fb8bc"],
Cell[CellGroupData[{
Cell[51175, 1253, 390, 8, 35, "Text",ExpressionUUID->"25b70bef-a0bd-4f0d-90b1-c1cf585a14bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[51568, 1263, 480, 10, 30, "Input",ExpressionUUID->"0d3f051e-5251-4d33-8e2a-a9854146c652",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[52085, 1278, 422, 6, 35, "Text",ExpressionUUID->"a0b50518-6a0f-4d12-a6c4-e027ae8caaec",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[52510, 1286, 739, 17, 30, "Input",ExpressionUUID->"916a3a4f-56a9-49ec-b6ee-53662bcbe5ed",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53310, 1310, 162, 3, 79, "Subsection",ExpressionUUID->"ad7c78a6-d29d-43d8-94d2-0437084e5b79"],
Cell[53475, 1315, 220, 4, 35, "Text",ExpressionUUID->"f3493ad6-f9e9-496f-a21e-64042e5b8c9b"],
Cell[53698, 1321, 188, 4, 30, "Input",ExpressionUUID->"435c90b0-0d80-48f6-ac17-961c5e244d49"],
Cell[53889, 1327, 181, 3, 35, "Text",ExpressionUUID->"1935569b-3d80-4b35-982a-ecd34bb6fa7b"],
Cell[54073, 1332, 200, 4, 30, "Input",ExpressionUUID->"06fa0944-467c-4259-a08f-573c9a336084"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54334, 1343, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"1e6c0a49-ec8b-4f72-8eb5-f0b19f33c296",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[54481, 1349, 613, 9, 206, "Section",ExpressionUUID->"236f646c-ad53-4e8c-9dc0-b726d9617c16"],
Cell[CellGroupData[{
Cell[55119, 1362, 517, 8, 79, "Subsection",ExpressionUUID->"5995f06b-0594-49f8-b1ee-22792e6dfe9e"],
Cell[55639, 1372, 362, 7, 35, "Text",ExpressionUUID->"9d8b00bb-aedc-448e-9760-dd392686f8cd"],
Cell[56004, 1381, 479, 8, 27, "Subitem",ExpressionUUID->"49b40fb0-53e0-485a-9383-b6300bd9b5dd"],
Cell[56486, 1391, 546, 9, 27, "Subitem",ExpressionUUID->"909a6a81-e3cb-4e18-87e3-e8bfe30a4908"],
Cell[57035, 1402, 612, 14, 27, "Subitem",ExpressionUUID->"a16e6b80-6432-48fa-8182-e6dca4d105f5"],
Cell[57650, 1418, 576, 9, 27, "Subitem",ExpressionUUID->"c2a02042-2642-45cc-9495-3736fab50a61"],
Cell[58229, 1429, 913, 18, 28, "Subitem",ExpressionUUID->"eb9e54ef-78bb-4797-b6df-a285ab014832"],
Cell[59145, 1449, 233, 4, 35, "Text",ExpressionUUID->"bdf52e38-2f1f-447b-b3a1-e53d1af366a9"],
Cell[59381, 1455, 185, 4, 30, "Input",ExpressionUUID->"11af2283-554c-4c64-8975-490dafff7b89"],
Cell[59569, 1461, 224, 5, 35, "Text",ExpressionUUID->"abe03d0a-f553-4b14-954d-38307e436e9c"],
Cell[59796, 1468, 315, 8, 30, "Input",ExpressionUUID->"a7065028-ac60-431c-9e0d-0cb330743ef9"],
Cell[60114, 1478, 248, 4, 35, "Text",ExpressionUUID->"62f2e1ec-5529-4706-934d-da4f4ca4b584"],
Cell[60365, 1484, 385, 8, 30, "Input",ExpressionUUID->"a1d809da-9375-4434-ba34-e7f06e62a796"],
Cell[60753, 1494, 170, 3, 35, "Text",ExpressionUUID->"3a2d01b7-e56d-404d-85e6-265fc21ee241"],
Cell[60926, 1499, 295, 5, 30, "Input",ExpressionUUID->"4f21a175-870e-42ab-a645-5dd3b03c2d41"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61282, 1511, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"445edb74-73f5-4de6-9a1f-fe1a6a82a74a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[61429, 1517, 566, 8, 206, "Section",ExpressionUUID->"de82646e-5934-4750-9d77-52f624518ca1"],
Cell[61998, 1527, 446, 8, 35, "Text",ExpressionUUID->"605a7bf7-e95b-416c-9c16-38757009172a"],
Cell[CellGroupData[{
Cell[62469, 1539, 154, 3, 79, "Subsection",ExpressionUUID->"01832b52-408c-447c-b803-a6081c301f49"],
Cell[62626, 1544, 653, 12, 32, "Item",ExpressionUUID->"179bc179-a61c-4374-b93d-83f2dc0ff393"],
Cell[63282, 1558, 732, 13, 32, "Item",ExpressionUUID->"2c996f83-8937-428c-a83c-386212fa52e8"],
Cell[64017, 1573, 357, 11, 35, "Text",ExpressionUUID->"d0c4b236-312e-44ab-8996-a953b74e6eb3"],
Cell[64377, 1586, 1725, 37, 38, "Input",ExpressionUUID->"900cfefe-ea9e-4577-91c9-8cc691de0d3f"],
Cell[66105, 1625, 1270, 28, 38, "Input",ExpressionUUID->"36a5225d-d7dc-4b10-92bc-325d448dd72d"],
Cell[67378, 1655, 366, 5, 35, "Text",ExpressionUUID->"3a688261-2aee-4206-87c8-bd3185fe0167"],
Cell[67747, 1662, 336, 6, 30, "Input",ExpressionUUID->"7d802758-9a1d-470e-8a39-7511120d09d4"],
Cell[68086, 1670, 270, 5, 30, "Input",ExpressionUUID->"2b755cb5-7308-49c4-8313-cfe0205073fc"],
Cell[68359, 1677, 264, 6, 35, "Text",ExpressionUUID->"2ebb5957-26b1-48dd-86c2-a56dc8f0712e"],
Cell[68626, 1685, 268, 4, 30, "Input",ExpressionUUID->"d0798a88-08fb-47f2-9f14-fdc085df7451"],
Cell[68897, 1691, 272, 4, 35, "Text",ExpressionUUID->"f093cdfc-dc21-48b9-859c-4a3ef3cd6a1e"],
Cell[69172, 1697, 386, 7, 30, "Input",ExpressionUUID->"8fed1ea6-771d-41ad-a808-0459e6fc4120"],
Cell[69561, 1706, 494, 10, 40, "Input",ExpressionUUID->"3470134b-f7cb-45f4-a8cf-fcc4bf44336c"],
Cell[70058, 1718, 262, 6, 35, "Text",ExpressionUUID->"5f4ecabe-2a85-4924-822c-323ae0c63de7"],
Cell[CellGroupData[{
Cell[70345, 1728, 2470, 53, 38, "Input",ExpressionUUID->"9f783157-d55d-4fc7-b612-d1aeae94f00f"],
Cell[72818, 1783, 21215, 461, 63, "Output",ExpressionUUID->"993a02a7-cd88-4398-b771-b348ab48fbb1"]
}, Open  ]],
Cell[94048, 2247, 230, 6, 35, "Text",ExpressionUUID->"aa2c1271-8cf3-4d3b-aae4-4691127e26d2"],
Cell[94281, 2255, 1960, 41, 38, "Input",ExpressionUUID->"b31694c9-7e2b-483d-a229-3552225c1653"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96278, 2301, 163, 3, 79, "Subsection",ExpressionUUID->"53dcd57c-e013-449a-a417-593062ccec6f"],
Cell[96444, 2306, 497, 12, 35, "Text",ExpressionUUID->"017de25b-5c75-4307-91e3-e375c4905f3c"],
Cell[96944, 2320, 169, 3, 30, "Input",ExpressionUUID->"7b82ad18-e379-4d65-86a7-008cc4b2a668"],
Cell[97116, 2325, 242, 6, 35, "Text",ExpressionUUID->"5b457d3d-f4d9-4dbb-9dcc-b29e5a0aa2b0"],
Cell[97361, 2333, 271, 6, 30, "Input",ExpressionUUID->"5f650195-6721-4b4f-8657-1e5c7fcf60de"],
Cell[97635, 2341, 214, 5, 35, "Text",ExpressionUUID->"bf1aafc7-74bf-4bce-a4e5-7a1fed1c394f"],
Cell[97852, 2348, 577, 14, 39, "Input",ExpressionUUID->"202358fd-de72-4ff6-a76a-ceccd51646f2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98490, 2369, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"442e8b62-721a-4a5a-a1f6-8bb20ca56f86",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[98637, 2375, 514, 7, 206, "Section",ExpressionUUID->"4008c3c4-2970-4b37-b041-43d3808a16bf"],
Cell[99154, 2384, 702, 14, 35, "Text",ExpressionUUID->"5af22225-8ba8-4b7a-94b0-ba4578831938"],
Cell[CellGroupData[{
Cell[99881, 2402, 168, 3, 79, "Subsection",ExpressionUUID->"6d9e189d-a212-4f88-97f6-1fd3c16c7f7e"],
Cell[CellGroupData[{
Cell[100074, 2409, 395, 8, 35, "Text",ExpressionUUID->"9a733dfe-adca-4444-bbf8-97c7d3c34a89",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[100472, 2419, 334, 7, 30, "Input",ExpressionUUID->"fd5022b8-32d8-4fe5-8013-c6514ea645e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[100809, 2428, 285, 5, 35, "Text",ExpressionUUID->"e068189f-d0b6-42c4-b7f5-8c316e5f7145",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[101097, 2435, 157902, 2595, 501, "Input",ExpressionUUID->"c2a6e38a-7758-49c3-b3bd-b63643021e72",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[259048, 5036, 164, 3, 79, "Subsection",ExpressionUUID->"f11a4a86-588e-4ace-930c-895945ecd969"],
Cell[CellGroupData[{
Cell[259237, 5043, 793, 17, 35, "Text",ExpressionUUID->"7a01b81a-a514-439f-afdd-66a760defd15",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[260033, 5062, 460, 8, 30, "Input",ExpressionUUID->"05cfb9ab-49ce-44cb-8807-4b2aa9295a5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[260508, 5073, 116219, 2394, 585, "Output",ExpressionUUID->"b5de15f9-b379-46e1-833b-ebedac764d45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376764, 7472, 169, 3, 79, "Subsection",ExpressionUUID->"406df91d-c888-4723-a296-33f52d13596a"],
Cell[376936, 7477, 365, 6, 35, "Text",ExpressionUUID->"0542868e-53a3-40f4-9a61-061d1948ed5a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[377304, 7485, 315, 7, 30, "Input",ExpressionUUID->"0b602458-80ff-42fe-aaea-5b85ec1b3b55"],
Cell[CellGroupData[{
Cell[377644, 7496, 247, 4, 35, "Text",ExpressionUUID->"fb7742c1-7d79-4215-8172-9026097f9b2a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[377894, 7502, 491, 9, 30, "Input",ExpressionUUID->"729e5b10-b7bc-4c7f-9d39-d6de918ee525",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[378400, 7514, 353, 7, 35, "Text",ExpressionUUID->"c33ade7f-8cb5-47b4-8df7-279ec9b06f82"],
Cell[378756, 7523, 527, 13, 30, "Input",ExpressionUUID->"2fe8bf3c-0c83-4221-89f2-7757ca677365"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379344, 7543, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"dfa986de-5d45-4cf6-acc1-5d125e1e5035",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[379491, 7549, 492, 7, 115, "Section",ExpressionUUID->"9676990d-09f0-407b-8164-2b360fbf143e"],
Cell[379986, 7558, 518, 9, 35, "Text",ExpressionUUID->"9c823b49-caf0-43e2-9034-af7ef8bc8e12"],
Cell[380507, 7569, 244, 4, 79, "Subsection",ExpressionUUID->"a95c452c-89ef-4cf4-9420-04fdb8fee5a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[CellGroupData[{
Cell[380776, 7577, 181, 2, 30, "Input",ExpressionUUID->"518fa4d1-82ba-4f00-8164-578c47534c52"],
Cell[380960, 7581, 1249, 19, 77, "Output",ExpressionUUID->"5a2d3d03-6360-4e7e-b584-f0785bbea6fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[382246, 7605, 391, 8, 30, "Input",ExpressionUUID->"ad0788af-c2dc-4ef2-b1e9-c1e5769fbe87",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[382640, 7615, 5188, 105, 62, "Output",ExpressionUUID->"0ace70bf-b63e-42ad-9832-c467f5337da9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[387831, 7722, 427, 7, 32, "Item",ExpressionUUID->"37395ce3-513e-4c29-8e0e-b389e20523eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[388261, 7731, 91073, 1529, 443, "ItemParagraph",ExpressionUUID->"54d5ecfb-042a-40ea-b0f1-59094cf53ef2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellTags->"twitter1"],
Cell[479337, 9262, 552, 8, 32, "Item",ExpressionUUID->"3d6f5091-edef-4f4c-a5e9-bd468357c948",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[479892, 9272, 510, 12, 30, "Input",ExpressionUUID->"0dd7e07e-39ed-48a8-b3a7-21943d35a09b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellTags->"twitter2"],
Cell[480405, 9286, 68396, 1127, 211, "ItemParagraph",ExpressionUUID->"987be938-9fc0-41c1-9646-6238594e5309",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellTags->"twitter2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548838, 10418, 178, 3, 79, "Subsection",ExpressionUUID->"efa3a9d7-4a22-43ec-b5ab-65d8521b6d1a"],
Cell[CellGroupData[{
Cell[549041, 10425, 338, 5, 35, "Text",ExpressionUUID->"31721a4d-25dd-4db6-8581-4e4cc9489cdb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[549382, 10432, 560, 10, 30, "Input",ExpressionUUID->"9c8136b2-a5e9-437d-8b17-a0f3f01fca4a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[549945, 10444, 339, 5, 35, "Text",ExpressionUUID->"319235c1-95d0-430c-a69b-cd4e2408de24",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[550287, 10451, 893, 15, 30, "Input",ExpressionUUID->"66ed8396-2f02-4f69-be8f-5036f4072cfc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[551217, 10471, 308, 5, 35, "Text",ExpressionUUID->"83c284b6-2cce-4b80-af50-41bcfee70e7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[551528, 10478, 301, 6, 30, "Input",ExpressionUUID->"98ce0fbe-a365-46bb-be88-cbb76868c532",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[551832, 10486, 281, 4, 35, "Text",ExpressionUUID->"33e608c5-f60a-4149-adb6-c7e57879abf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[552116, 10492, 404, 9, 30, "Input",ExpressionUUID->"303d2691-74ee-4608-8892-3f137dd2e512",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[552569, 10507, 162, 3, 79, "Subsection",ExpressionUUID->"5439cdd6-75c6-45ad-b446-d4a86293a2e6"],
Cell[552734, 10512, 232, 4, 35, "Text",ExpressionUUID->"cd3a2c6b-2107-40ad-8d54-ed01c3b0f278"],
Cell[552969, 10518, 197, 4, 30, "Input",ExpressionUUID->"65381b1a-1b45-4420-9ed0-25c1a1c81372"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553227, 10529, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"75117cf0-8772-49dc-8036-a23524c712f1",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[553374, 10535, 493, 7, 115, "Section",ExpressionUUID->"8ed93de6-48c9-494f-b8db-53918ff65762"],
Cell[CellGroupData[{
Cell[553892, 10546, 254, 4, 79, "Subsection",ExpressionUUID->"d4fcf6cf-e7da-44c0-afee-098eb587fc0a"],
Cell[554149, 10552, 184, 3, 35, "Text",ExpressionUUID->"293dac24-641f-47b2-9cd8-4a474c8084fd"],
Cell[554336, 10557, 596, 11, 30, "Input",ExpressionUUID->"7c853e05-deaa-4da4-90fa-6b799cdcd5a0"],
Cell[554935, 10570, 556, 9, 30, "Input",ExpressionUUID->"f20985bb-086b-4766-b7b6-fb6c455ccb53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555528, 10584, 327, 5, 79, "Subsection",ExpressionUUID->"68bf8e5d-7aee-4ce6-80e0-b44d421f55df"],
Cell[555858, 10591, 248, 4, 35, "Text",ExpressionUUID->"dbece212-0f81-4ef5-9915-0b7e92545c42"],
Cell[556109, 10597, 485, 8, 30, "Input",ExpressionUUID->"ffe21ffd-ce71-4f58-94b5-31e6dd3fdc9c"],
Cell[556597, 10607, 405, 8, 30, "Input",ExpressionUUID->"74779ee8-e15e-4346-86ad-cc2feac04adf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557039, 10620, 230, 4, 79, "Subsection",ExpressionUUID->"1ec496be-f0b2-490f-bc25-639b106a1fcc"],
Cell[557272, 10626, 260, 4, 35, "Text",ExpressionUUID->"be0ee013-f6b1-4f37-b6fa-553396836f0b"],
Cell[557535, 10632, 492, 9, 30, "Input",ExpressionUUID->"d351d64d-896c-49a3-8bdb-099443a1877b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558064, 10646, 324, 5, 79, "Subsection",ExpressionUUID->"c7fd8069-6b38-42fc-97c4-9e1657797d44"],
Cell[CellGroupData[{
Cell[558413, 10655, 417, 8, 35, "Text",ExpressionUUID->"b0a19cfd-3124-4f5c-81fa-c1ba7d097a12",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[558833, 10665, 544, 10, 30, "Input",ExpressionUUID->"628ef278-0615-4279-971c-65a3f536dd3c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[559380, 10677, 377, 8, 35, "Text",ExpressionUUID->"ca8032bb-4133-4572-a97e-652eae219eaf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[559760, 10687, 705, 14, 30, "Input",ExpressionUUID->"0e3e2184-b698-4f34-8852-930455d72302",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[560502, 10706, 294, 5, 35, "Text",ExpressionUUID->"54c0b281-cba6-44f3-8379-ec1244f199fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[560799, 10713, 984, 19, 30, "Input",ExpressionUUID->"2dfd9e0b-02d6-4e66-8a68-d2dba44c96c6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellID->1202505669]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561856, 10740, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"a5721cef-af97-426f-b03f-80ed9952ddc4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[562003, 10746, 465, 7, 115, "Section",ExpressionUUID->"1cc9660b-904a-4a70-a4c0-503ac19b46b1"],
Cell[CellGroupData[{
Cell[562493, 10757, 214, 4, 79, "Subsection",ExpressionUUID->"4019a1c0-057e-4735-9736-18c3d59fa1f8"],
Cell[562710, 10763, 378, 11, 35, "Text",ExpressionUUID->"8780e30d-286a-489e-bc99-44d14075dafd"],
Cell[563091, 10776, 317, 7, 30, "Input",ExpressionUUID->"99af8e12-91d7-4b6f-a763-206edde0f8e3"],
Cell[563411, 10785, 366, 7, 35, "Text",ExpressionUUID->"95f28d40-12cb-4589-abe2-9da932078456"],
Cell[563780, 10794, 364, 9, 30, "Input",ExpressionUUID->"92bc4301-9931-41c5-a7bc-205ac7f96d79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564181, 10808, 163, 3, 79, "Subsection",ExpressionUUID->"0a11181d-1e31-4f87-b590-54d34c933374"],
Cell[564347, 10813, 182, 3, 35, "Text",ExpressionUUID->"3d3d9672-cef1-4885-a4ab-28c37b2130a9"],
Cell[564532, 10818, 455, 10, 30, "Input",ExpressionUUID->"91213e24-ce12-42a5-9e94-cb0ab69b849d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565024, 10833, 165, 3, 79, "Subsection",ExpressionUUID->"1c22a651-897c-4084-b44b-03f00e5ea6ee"],
Cell[565192, 10838, 184, 3, 35, "Text",ExpressionUUID->"0d7520a4-3b62-4d54-bf15-34f823e8feef"],
Cell[565379, 10843, 421, 9, 30, "Input",ExpressionUUID->"70c37a07-8d1f-41f6-8fec-13aac8053edd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565837, 10857, 251, 4, 79, "Subsection",ExpressionUUID->"d07b0378-8ad8-4666-aa03-6187a8fae430"],
Cell[566091, 10863, 503, 10, 32, "ItemNumbered",ExpressionUUID->"4ff51112-8f26-4a2f-a2e8-34e012107065",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[566597, 10875, 1151, 26, 42, "Text",ExpressionUUID->"a0ca8d67-e9dd-4a20-a289-07e10b8a57a4"],
Cell[567751, 10903, 413, 6, 32, "ItemNumbered",ExpressionUUID->"c578b310-873c-4436-9d51-0cc8b48f7540",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[568167, 10911, 718, 18, 42, "Text",ExpressionUUID->"15f56cf4-180e-4fcb-8d6d-3fe291efbe67"],
Cell[568888, 10931, 435, 7, 32, "ItemNumbered",ExpressionUUID->"c5aa8bae-eb27-434e-9f78-cddaf4f24961",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[569326, 10940, 767, 20, 42, "Text",ExpressionUUID->"25255707-1b33-4946-98e8-67d472d50458"],
Cell[570096, 10962, 414, 6, 32, "ItemNumbered",ExpressionUUID->"d7d40266-b2cc-49ea-8d7c-48a5df083725",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[570513, 10970, 771, 19, 42, "Text",ExpressionUUID->"ed5444f9-30b2-4eb6-8c53-b57e32931776"],
Cell[571287, 10991, 576, 11, 32, "ItemNumbered",ExpressionUUID->"5de506e6-ae6f-4489-963d-0955f09e0740",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[571866, 11004, 905, 23, 42, "Text",ExpressionUUID->"76215a9c-d158-4f40-9f2a-28a4dd00ee5c"],
Cell[572774, 11029, 457, 7, 32, "ItemNumbered",ExpressionUUID->"8f7c2717-bb10-4d82-a698-b93869ff19ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[573234, 11038, 1536, 34, 42, "Text",ExpressionUUID->"c571eca9-14ca-4688-b9d4-caade196d3f3"],
Cell[574773, 11074, 477, 7, 32, "ItemNumbered",ExpressionUUID->"2454e4b9-13b2-487b-a67b-0bd28ed28e17",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[575253, 11083, 756, 19, 42, "Text",ExpressionUUID->"4047e6a0-9057-4661-acb9-1cd9eb7a6d35"],
Cell[CellGroupData[{
Cell[576034, 11106, 364, 6, 46, "Subsubsection",ExpressionUUID->"fae4c669-c39e-4aed-b975-2e6cea0ba37a"],
Cell[576401, 11114, 619, 12, 30, "Input",ExpressionUUID->"de022e4b-7301-4fbd-addc-fac5e5422099",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[577023, 11128, 226, 4, 30, "Input",ExpressionUUID->"b48342c4-7594-4cf3-8efe-a4a6585ae479"],
Cell[577252, 11134, 263, 6, 30, "Input",ExpressionUUID->"959055fc-4277-4f58-8b3e-be7603d275f9"],
Cell[577518, 11142, 278, 6, 30, "Input",ExpressionUUID->"dc5ec1c0-8620-42c7-a639-efc813d4743e"],
Cell[577799, 11150, 387, 9, 30, "Input",ExpressionUUID->"62845ba8-c621-4db5-99c7-a3478891f7ad"],
Cell[578189, 11161, 924, 20, 30, "Input",ExpressionUUID->"e076608b-7890-440a-905d-183ff53c8d78"],
Cell[579116, 11183, 258, 5, 30, "Input",ExpressionUUID->"eef6506b-32d6-4384-9737-703634f8afee"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[579447, 11196, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"3cadbac1-db4c-4535-9f6a-ab7a994b6aad",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[579594, 11202, 565, 8, 206, "Section",ExpressionUUID->"71e7d5e6-a172-4d58-a905-e63f13eb8038"],
Cell[580162, 11212, 284, 4, 35, "Text",ExpressionUUID->"efc50c27-8792-4b08-aba3-8e87f01a180e"],
Cell[580449, 11218, 456, 11, 32, "Item",ExpressionUUID->"8cd91f4e-ce4f-4c06-9a5a-034b58a65922"],
Cell[580908, 11231, 634, 13, 32, "Item",ExpressionUUID->"92d6fd0a-715a-4ce2-ae66-22bf0274fb40"],
Cell[581545, 11246, 503, 12, 32, "Item",ExpressionUUID->"5024e1a9-fb54-46ca-af74-22b18baf8ee6"],
Cell[582051, 11260, 649, 15, 32, "Item",ExpressionUUID->"119f2e97-9c68-43c2-839d-b3cf24f8745d"],
Cell[582703, 11277, 531, 8, 31, "Text",ExpressionUUID->"5fd6dc7a-4aa3-4bde-815a-ee31804bc968"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[583283, 11291, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"30dd3bf3-5f46-40aa-81c0-5b3dba127153",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[583430, 11297, 408, 6, 115, "Section",ExpressionUUID->"4db9fb54-5931-49e4-ad42-8dcc7a80cee3"],
Cell[583841, 11305, 372, 8, 35, "Text",ExpressionUUID->"12a8aa11-ef9b-4838-8802-3b246fbd4c10"],
Cell[CellGroupData[{
Cell[584238, 11317, 168, 3, 79, "Subsection",ExpressionUUID->"88d4c369-dd22-4db6-96eb-349502da2f5a"],
Cell[CellGroupData[{
Cell[584431, 11324, 285, 5, 35, "Text",ExpressionUUID->"a490756c-768d-4658-80e9-398d1fab8ce2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[584719, 11331, 532, 10, 30, "Input",ExpressionUUID->"8ef7040f-1077-45a1-8366-9b6948576c14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[585300, 11347, 171, 3, 79, "Subsection",ExpressionUUID->"e655677a-6c29-4896-a187-ef99609c76a5"],
Cell[CellGroupData[{
Cell[585496, 11354, 361, 6, 46, "Subsubsection",ExpressionUUID->"92521a12-02be-4e17-92d7-df13f4f457fe"],
Cell[585860, 11362, 474, 8, 35, "Text",ExpressionUUID->"757d60bd-c122-4f74-a6ed-7de9631d17be"],
Cell[586337, 11372, 290, 5, 30, "Input",ExpressionUUID->"dfd01da3-9188-46e0-b64e-eddfc81ac9a3"],
Cell[586630, 11379, 344, 5, 35, "Text",ExpressionUUID->"93341187-47a0-40d9-bf0d-18b16f1c61cf"],
Cell[586977, 11386, 295, 5, 30, "Input",ExpressionUUID->"442c4e82-e246-4dcb-905b-931e0d8dbe3b"],
Cell[587275, 11393, 435, 8, 35, "Text",ExpressionUUID->"f51954a3-c63d-438a-a425-27f615158f2a"],
Cell[CellGroupData[{
Cell[587735, 11405, 351, 6, 30, "Input",ExpressionUUID->"792aa008-7e92-4aad-80ca-15f8d9d15b47"],
Cell[588089, 11413, 241, 5, 34, "Output",ExpressionUUID->"df5d3bbe-7a2a-4088-a045-c6966140a5fe"]
}, Open  ]],
Cell[588345, 11421, 356, 5, 35, "Text",ExpressionUUID->"b7456c9b-7934-42af-88bb-0cb9a915b9a0"],
Cell[588704, 11428, 389, 6, 30, "Input",ExpressionUUID->"10ff041a-6ac1-4ed1-946d-510bc949c8df"],
Cell[589096, 11436, 402, 6, 35, "Text",ExpressionUUID->"0f2b7bd2-4cd4-48dc-b9db-654c218ed384"],
Cell[589501, 11444, 1104, 24, 52, "Input",ExpressionUUID->"a24f66a9-2114-41e3-a194-ce3e0322f177"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590642, 11473, 367, 6, 46, "Subsubsection",ExpressionUUID->"8324f763-b794-4615-ab8d-6ca4cc694776"],
Cell[591012, 11481, 288, 4, 35, "Text",ExpressionUUID->"e3697647-e8a4-4aad-ae17-71331177981e"],
Cell[591303, 11487, 245, 5, 30, "Input",ExpressionUUID->"8d218b30-94b9-4ca8-a2bd-5f7de2d0710c"],
Cell[591551, 11494, 237, 4, 35, "Text",ExpressionUUID->"f1b4f74d-44a2-45d9-9487-d496bca1d163"],
Cell[591791, 11500, 567, 17, 30, "Input",ExpressionUUID->"00a10d58-3dac-4d56-bb17-bded07f4ccfe"],
Cell[592361, 11519, 398, 6, 35, "Text",ExpressionUUID->"cc7fa93f-2117-491b-afed-33c866b8e2cc"],
Cell[592762, 11527, 996, 25, 52, "Input",ExpressionUUID->"319deb88-8dcd-4ea2-9665-5f409eacef7f"],
Cell[593761, 11554, 225, 4, 35, "Text",ExpressionUUID->"b1abd00a-82a8-4f37-8a03-ac9f6e6f1882"],
Cell[593989, 11560, 273, 6, 30, "Input",ExpressionUUID->"b9468d62-bb4f-4e6b-be65-a041c8d0f712"],
Cell[594265, 11568, 238, 4, 35, "Text",ExpressionUUID->"1aa8d68f-9c42-4ff8-92ac-7a5461d0a39a"],
Cell[594506, 11574, 597, 18, 30, "Input",ExpressionUUID->"35a7de3b-59db-4c3c-85f1-44b237083c59"],
Cell[595106, 11594, 530, 9, 35, "Text",ExpressionUUID->"143d3977-7262-4c3c-8a8c-c89864e2c1d6"],
Cell[CellGroupData[{
Cell[595661, 11607, 1429, 35, 73, "Input",ExpressionUUID->"6c74247e-447c-4a58-be75-cb8650a673a0"],
Cell[597093, 11644, 8832, 223, 241, "Output",ExpressionUUID->"40a134e5-63e9-440f-95a9-03fac3f38bda"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[606010, 11876, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"4f77c04c-1461-438e-ae1b-70766f8f6438",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[606157, 11882, 492, 7, 206, "Section",ExpressionUUID->"f44cb2aa-f9d9-4573-aee6-0993145e737b"],
Cell[606652, 11891, 597, 14, 35, "Text",ExpressionUUID->"55905d08-1b62-49ae-a213-d3d3c998af40"],
Cell[607252, 11907, 509, 10, 58, "Text",ExpressionUUID->"c73cbaa7-93cf-4996-bfc6-b3fbdd38579c"],
Cell[607764, 11919, 423, 11, 30, "Input",ExpressionUUID->"bd442499-73e8-428f-a64c-3ed9e4128381"],
Cell[CellGroupData[{
Cell[608212, 11934, 162, 3, 79, "Subsection",ExpressionUUID->"ee89974e-f9e7-48cf-9475-025a6240b6c3"],
Cell[608377, 11939, 238, 4, 35, "Text",ExpressionUUID->"9fb6a12a-52b6-4a44-8da0-d3653dc851cf"],
Cell[608618, 11945, 209, 4, 30, "Input",ExpressionUUID->"6b256912-8391-41f5-8b66-b0caae400378"],
Cell[608830, 11951, 209, 5, 30, "Input",ExpressionUUID->"c32ffb83-928a-4efc-9a6f-0ba7232f28c5"],
Cell[609042, 11958, 240, 6, 30, "Input",ExpressionUUID->"c591c056-f4b9-4d8b-9b99-7e5ab209d2cd"],
Cell[609285, 11966, 290, 6, 35, "Text",ExpressionUUID->"f30da0a1-8b19-46ce-bcc2-88704220fee9"],
Cell[609578, 11974, 209, 5, 30, "Input",ExpressionUUID->"8bee3a14-506b-4065-9451-9be8f2f826e9"],
Cell[609790, 11981, 182, 4, 30, "Input",ExpressionUUID->"d491d9b5-637f-42f0-8775-c73f8a1d32e9"],
Cell[609975, 11987, 258, 7, 30, "Input",ExpressionUUID->"877833b7-6fa8-47b6-b2ac-72d75e134c2a"],
Cell[610236, 11996, 190, 4, 30, "Input",ExpressionUUID->"1388a400-57bb-46b8-b0c1-cef80ba6d0d0"],
Cell[610429, 12002, 268, 4, 35, "Text",ExpressionUUID->"eb49e742-6a8a-4d15-a7ca-4b2aa657a202"],
Cell[610700, 12008, 214, 5, 30, "Input",ExpressionUUID->"445cfdae-c403-405b-93c6-b0cf9841fa49"],
Cell[610917, 12015, 190, 4, 30, "Input",ExpressionUUID->"1bc9289b-6674-49fc-8c42-7e4d1a012d7e"],
Cell[611110, 12021, 262, 4, 35, "Text",ExpressionUUID->"ac4b6805-610c-4cb6-bc02-7784592d3586"],
Cell[611375, 12027, 189, 4, 30, "Input",ExpressionUUID->"66d5888c-81fb-4667-8d68-03ded4c6d4cb"],
Cell[611567, 12033, 191, 4, 30, "Input",ExpressionUUID->"4114ed28-2281-4cd4-9fee-1fbc7e2b4706"],
Cell[611761, 12039, 762, 19, 35, "Text",ExpressionUUID->"8a14b440-bdce-4e4b-bb06-75070a9e9215"],
Cell[612526, 12060, 216, 5, 30, "Input",ExpressionUUID->"25e7bc13-7a81-4189-af32-5a9b1574b18e"],
Cell[612745, 12067, 359, 9, 30, "Input",ExpressionUUID->"19207f3f-3086-43fb-a995-62b5c68fe12d"],
Cell[613107, 12078, 790, 23, 35, "Text",ExpressionUUID->"b0bab425-356c-46f3-8caf-2580a04aadb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[613934, 12106, 172, 3, 79, "Subsection",ExpressionUUID->"46b19136-6b74-4787-9f72-9ce842fc6c59"],
Cell[614109, 12111, 353, 10, 35, "Text",ExpressionUUID->"72313926-474c-44ce-97e0-1b3e929577d4"],
Cell[614465, 12123, 382, 7, 30, "Input",ExpressionUUID->"2c1d4f2b-bd87-4d8d-983a-49c0092bfd7e"],
Cell[614850, 12132, 174, 3, 35, "Text",ExpressionUUID->"4fad644a-13c4-4742-b2a6-db277b3b14ee"],
Cell[615027, 12137, 276, 7, 30, "Input",ExpressionUUID->"34cf0b30-bfcc-4763-a53f-9c2dbb9f3ddd"],
Cell[615306, 12146, 371, 6, 35, "Text",ExpressionUUID->"2f466ef3-9159-47d1-82a2-c578dbe104e6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[615680, 12154, 389, 9, 30, "Input",ExpressionUUID->"ce598b9a-f6e9-42d1-8436-b0c7aeee7b7a"],
Cell[616072, 12165, 329, 7, 35, "Text",ExpressionUUID->"2e8f376d-62d2-43a9-a434-3dc687d7ea55"],
Cell[616404, 12174, 1122, 24, 30, "Input",ExpressionUUID->"d7fd5242-1e92-4aea-a673-a1fbdf8be8ef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[617551, 12202, 354, 5, 35, "Text",ExpressionUUID->"c8593cff-d89a-4b7d-a9ae-d70dfe1fe193",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[617908, 12209, 358, 8, 30, "Input",ExpressionUUID->"c59f6268-ed9d-4c78-bd8a-301267487287",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[618269, 12219, 374, 7, 35, "Text",ExpressionUUID->"618d3de8-4eb1-4a65-b43a-859e7cc1e710",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[618646, 12228, 850, 23, 30, "Input",ExpressionUUID->"0f06e7c2-efa2-4f80-b600-2f41f7528853",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[619569, 12259, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"335a9caa-bafd-4521-956d-c595168c10b8",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[619716, 12265, 616, 10, 206, "Section",ExpressionUUID->"0fc524ec-8ee5-4ce2-a776-9a7be321518a"],
Cell[620335, 12277, 409, 12, 35, "Text",ExpressionUUID->"60bb7b8c-4c57-4d1b-9507-7711f10a11b9"],
Cell[620747, 12291, 378, 9, 35, "Text",ExpressionUUID->"781fa7cc-4b2d-4787-90f4-ecfcac58102b"],
Cell[621128, 12302, 1448, 36, 136, "Input",ExpressionUUID->"6991f5ab-8241-4419-90f6-6c9477e95405"],
Cell[CellGroupData[{
Cell[622601, 12342, 166, 3, 79, "Subsection",ExpressionUUID->"320df3b4-79bb-4ea4-9016-7c503cddaa45"],
Cell[622770, 12347, 229, 4, 35, "Text",ExpressionUUID->"c9fe9162-885f-4ec3-a01a-15dcad26e1f4"],
Cell[623002, 12353, 204, 5, 30, "Input",ExpressionUUID->"811f2583-936c-4cc6-b147-e14141615647"],
Cell[623209, 12360, 228, 4, 35, "Text",ExpressionUUID->"33ed6a8e-5123-4e86-b632-2d0597b4ece3"],
Cell[623440, 12366, 231, 5, 30, "Input",ExpressionUUID->"8162f751-a95d-4bca-9d5a-71d2a3e4e88f"],
Cell[623674, 12373, 251, 4, 35, "Text",ExpressionUUID->"d5977280-28c0-4664-9f53-63f9467c892f"],
Cell[623928, 12379, 212, 5, 30, "Input",ExpressionUUID->"dfdadbe1-711c-4a36-a07e-3bb07a5f6850"],
Cell[624143, 12386, 342, 7, 35, "Text",ExpressionUUID->"f74ec6b3-5817-4ef6-beaa-bd2ee1de0c00"],
Cell[624488, 12395, 215, 5, 30, "Input",ExpressionUUID->"17e034c3-e5f7-4888-bebd-d2ca4c14ab39"],
Cell[624706, 12402, 315, 5, 35, "Text",ExpressionUUID->"b4367a55-ead6-4d73-8bda-c8f9c87c2f3e"],
Cell[625024, 12409, 217, 5, 30, "Input",ExpressionUUID->"af0da290-e9f1-4c1a-b649-225cf7c4b089"],
Cell[CellGroupData[{
Cell[625266, 12418, 495, 7, 46, "Subsubsection",ExpressionUUID->"b29cc295-0e6e-44d5-8d1c-f4d51c1089f5"],
Cell[625764, 12427, 661, 11, 35, "Text",ExpressionUUID->"7d6d6d31-ed1e-46af-b010-a4ec1fb45967"],
Cell[626428, 12440, 346, 5, 35, "Text",ExpressionUUID->"ed0e3476-48c5-462c-b310-cb8e4f7f6271"],
Cell[626777, 12447, 146, 3, 30, "Input",ExpressionUUID->"08e33881-b465-4db5-befa-44835acba8a5"],
Cell[626926, 12452, 149, 3, 30, "Input",ExpressionUUID->"a118a42d-be84-4a62-a2dc-f1f9bd7c4149"],
Cell[627078, 12457, 146, 3, 30, "Input",ExpressionUUID->"7438116b-5813-44b7-9382-0d2334dab905"],
Cell[627227, 12462, 307, 5, 35, "Text",ExpressionUUID->"8e1d197c-e05a-4eff-aea4-99b20bcc44fc"],
Cell[627537, 12469, 199, 5, 30, "Input",ExpressionUUID->"2f861699-8b93-4ded-b4c5-3c65cf70b357"],
Cell[627739, 12476, 354, 5, 35, "Text",ExpressionUUID->"1f532948-e9fe-4633-9508-176475b860c7"],
Cell[628096, 12483, 189, 5, 30, "Input",ExpressionUUID->"85302269-7867-48ce-a27c-3b6bed696859"],
Cell[628288, 12490, 344, 5, 35, "Text",ExpressionUUID->"db1e9a01-00d1-458b-8c6c-9a361ee7ac5b"],
Cell[628635, 12497, 224, 6, 30, "Input",ExpressionUUID->"8a95dbbf-af55-4213-aaaa-5004c2f4bc87"],
Cell[628862, 12505, 283, 5, 35, "Text",ExpressionUUID->"9a4f976e-5b74-4aab-945a-17a096ca6dc4"],
Cell[629148, 12512, 195, 4, 30, "Input",ExpressionUUID->"f779b772-4f39-4276-bebd-3c50c85d9c7c"],
Cell[CellGroupData[{
Cell[629368, 12520, 281, 6, 43, "Subsubsection",ExpressionUUID->"837a117b-5707-43d0-af46-99609f6eb310",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[629652, 12528, 753, 17, 35, "Text",ExpressionUUID->"c8dbbee3-20fd-45ef-9b78-31723f0285f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[630408, 12547, 374, 11, 30, "Input",ExpressionUUID->"775283eb-e010-4cdf-ae0e-a3f4115853e9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[630785, 12560, 207, 4, 34, "Output",ExpressionUUID->"648fcfb3-aa2c-42d9-ae13-edca8e7bccd2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[630995, 12566, 364, 6, 35, "Text",ExpressionUUID->"e5937526-e9a8-4eac-95a4-d50fcdf18f1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[631362, 12574, 301, 7, 30, "Input",ExpressionUUID->"1a42f958-abf1-4de6-afcd-7c45f7d310fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[631666, 12583, 17368, 331, 111, "Output",ExpressionUUID->"fef0e85f-bda2-45f8-aff5-2a05790acf1d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[649037, 12916, 372, 10, 30, "Input",ExpressionUUID->"4f1073f5-eaac-4037-af8c-4056e36c89e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[649412, 12928, 209, 4, 34, "Output",ExpressionUUID->"c4a4de95-85d4-4b39-8e6f-79ff8dd1cc49",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[649624, 12934, 559, 11, 35, "Text",ExpressionUUID->"1ca69f21-883a-4834-b8ac-5cbf7464564f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[650186, 12947, 340, 9, 30, "Input",ExpressionUUID->"24e95ef6-3c25-466e-ba7e-9d99afc32382",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[650529, 12958, 15724, 294, 111, "Output",ExpressionUUID->"a3c02970-caf6-4142-8768-1a798d78f905",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666314, 13259, 155, 3, 79, "Subsection",ExpressionUUID->"347cba06-5af1-458f-99a2-bfe07509312e"],
Cell[666472, 13264, 185, 3, 35, "Text",ExpressionUUID->"cb31e1d9-5278-499e-b483-c0e9814c430a"],
Cell[666660, 13269, 348, 7, 30, "Input",ExpressionUUID->"fba8b35c-5bea-4f9a-9051-172fdfbb9d54",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[667011, 13278, 177, 3, 35, "Text",ExpressionUUID->"7d943a21-a52d-4814-8991-7a506e5ec70a"],
Cell[667191, 13283, 336, 7, 30, "Input",ExpressionUUID->"bd17ccfc-e959-4ace-bb22-9e67a9cace6e",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[CellGroupData[{
Cell[667552, 13294, 548, 14, 35, "Text",ExpressionUUID->"b0443b2b-05b6-4643-9cd5-82b1d0d7ce74",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[668103, 13310, 426, 8, 30, "Input",ExpressionUUID->"15a432f4-2233-4f0a-8420-43f7bef5720c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[668544, 13321, 197, 3, 35, "Text",ExpressionUUID->"e03cd66f-8485-4380-ba67-0fb3edda3454"],
Cell[668744, 13326, 443, 8, 30, "Input",ExpressionUUID->"a15bc1bd-77d0-4065-8903-67332210ddfb",
 CellGroupingRules->{"GroupTogetherGrouping", 10004.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[669224, 13339, 156, 3, 79, "Subsection",ExpressionUUID->"a3facd78-3443-40da-b00f-0c31fcbc0846"],
Cell[CellGroupData[{
Cell[669405, 13346, 1049, 17, 32, "ItemNumbered",ExpressionUUID->"3337126b-567d-4e3e-9d3c-d50ce3fb83a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[670457, 13365, 395, 9, 30, "Input",ExpressionUUID->"53acb141-9f50-4046-a13b-670d7a4ce668",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[670855, 13376, 866, 12, 32, "ItemNumbered",ExpressionUUID->"08ae635a-709b-4705-af42-6ae3c31c7eda",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Open  ]],
Cell[671736, 13391, 787, 19, 42, "Text",ExpressionUUID->"6d8fd74d-1ce9-4587-89a2-9cc4568ddedf"],
Cell[672526, 13412, 899, 13, 32, "ItemNumbered",ExpressionUUID->"9de4b8cc-ad71-44b8-a423-1d3efffde632",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[673428, 13427, 781, 19, 42, "Text",ExpressionUUID->"7dae9953-ec10-4574-8e44-0a10ac993090"],
Cell[674212, 13448, 843, 12, 32, "ItemNumbered",ExpressionUUID->"000385c3-17c9-4bee-bee5-f5ddb29fec33",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[675058, 13462, 799, 20, 42, "Text",ExpressionUUID->"77a7b43d-c60c-48f8-985a-0e951f9a2891"],
Cell[675860, 13484, 850, 12, 32, "ItemNumbered",ExpressionUUID->"67029b48-e22e-4167-9357-9424d38fc3ec",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[676713, 13498, 853, 21, 42, "Text",ExpressionUUID->"af596593-0068-410d-9706-5ce1322f5ef3"],
Cell[677569, 13521, 907, 13, 32, "ItemNumbered",ExpressionUUID->"eb66100b-66b4-4c5a-af7a-10f7c2f26642",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[678479, 13536, 1219, 29, 42, "Text",ExpressionUUID->"d168b542-0f92-4751-9796-e9edef36bfac"],
Cell[679701, 13567, 928, 13, 32, "ItemNumbered",ExpressionUUID->"1ea553dd-67ab-4b64-b14c-70e8b5e1d4a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[680632, 13582, 811, 20, 42, "Text",ExpressionUUID->"f0e3f1c2-7532-4350-9863-2e181dd1f1f0"],
Cell[CellGroupData[{
Cell[681468, 13606, 264, 4, 46, "Subsubsection",ExpressionUUID->"eef80172-e4d5-4e15-be25-033afe6ce55f"],
Cell[CellGroupData[{
Cell[681757, 13614, 395, 9, 30, "Input",ExpressionUUID->"6dd7e0ca-fef9-4d0d-9e57-0c3798059459",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[682155, 13625, 287, 5, 30, "Input",ExpressionUUID->"812dd69a-7af4-4808-bc94-c5b6d1f12724",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}],
Cell[682445, 13632, 281, 5, 30, "Input",ExpressionUUID->"bc89c16f-ffdb-436c-9342-ead2f03e8388",
 CellGroupingRules->{"GroupTogetherGrouping", 10005.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[682763, 13642, 304, 6, 30, "Input",ExpressionUUID->"3574ea50-9dbe-45e4-a06f-06129c278b36",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[683070, 13650, 350, 7, 30, "Input",ExpressionUUID->"22a7198c-78c1-407f-b41a-fa3d84464a08",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[683423, 13659, 317, 6, 30, "Input",ExpressionUUID->"b79a5b9a-ecb4-42ae-a191-cff530d5c0e3",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[683743, 13667, 334, 6, 30, "Input",ExpressionUUID->"3b50856d-eec6-4b8f-93b0-cff407323dae",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}],
Cell[684080, 13675, 312, 6, 30, "Input",ExpressionUUID->"bbfa8a72-5778-4ddc-8641-48d402ea0ef4",
 CellGroupingRules->{"GroupTogetherGrouping", 10006.}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684477, 13690, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"f2e1ab79-1ab3-40c3-bfa8-f3a2a8633254",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[684624, 13696, 654, 9, 206, "Section",ExpressionUUID->"c856a652-f2cf-47dc-ba2a-2652b43d27ea"],
Cell[685281, 13707, 499, 9, 35, "Text",ExpressionUUID->"36a05972-545b-47c8-a563-dee279510e8f"],
Cell[CellGroupData[{
Cell[685805, 13720, 272, 4, 79, "Subsection",ExpressionUUID->"bf1a7161-fb0e-4775-96e6-b2b11753cd15"],
Cell[686080, 13726, 510, 9, 35, "Text",ExpressionUUID->"a4642607-4ce8-4a5e-975b-e9f38411a2cc"],
Cell[686593, 13737, 676, 17, 35, "Text",ExpressionUUID->"e9d0286c-ac97-4b6e-a3be-0134f3f85820"],
Cell[687272, 13756, 215, 4, 30, "Input",ExpressionUUID->"2e589367-5f9f-4a88-b76e-48870141a6ed"],
Cell[687490, 13762, 269, 6, 30, "Input",ExpressionUUID->"da05c46f-c772-4f2c-ae45-b256d18db118"],
Cell[687762, 13770, 195, 3, 35, "Text",ExpressionUUID->"53369def-825e-4e1f-a7b1-ffffa991d449"],
Cell[687960, 13775, 392, 10, 30, "Input",ExpressionUUID->"3a254b02-f6e9-4e32-9680-d994ed7bf0c9"],
Cell[688355, 13787, 336, 10, 35, "Text",ExpressionUUID->"1a83a50e-1976-4e13-b6f7-99883bbbb2dc"],
Cell[688694, 13799, 118, 1, 30, "Input",ExpressionUUID->"d673645b-5f56-4efd-bee6-f3c2a63ac6b2"],
Cell[688815, 13802, 203, 3, 35, "Text",ExpressionUUID->"98c5cbd8-ef5e-484d-a2c3-44dace376d91"],
Cell[689021, 13807, 614, 11, 30, "Input",ExpressionUUID->"c5b18aba-a4f8-41b2-ab27-c77881c113a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[689638, 13820, 226, 3, 35, "Text",ExpressionUUID->"30ac876e-11ba-4657-b606-c3fa59bcf4fb"],
Cell[689867, 13825, 1090, 22, 30, "Input",ExpressionUUID->"5a6cfa4e-f47a-4e66-9e89-1907492a1f32",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[690994, 13852, 246, 4, 79, "Subsection",ExpressionUUID->"0c2df36a-f932-4dcc-bf4e-ddb5661a7a66"],
Cell[691243, 13858, 163, 3, 35, "Text",ExpressionUUID->"f6676f1b-761b-4e8d-9aaa-eef01c03b58d"],
Cell[691409, 13863, 216, 4, 30, "Input",ExpressionUUID->"a14c8be0-a171-48cf-a927-bbdc7bbea10a"],
Cell[691628, 13869, 207, 4, 30, "Input",ExpressionUUID->"f48588cd-010c-4d4f-8d1e-9ebcc555fd5e"],
Cell[691838, 13875, 492, 12, 35, "Text",ExpressionUUID->"2216e608-bed4-4569-9131-6767de444362"],
Cell[692333, 13889, 1317, 24, 52, "Input",ExpressionUUID->"a7dcc803-edf1-41a8-a8d3-e4a13d50c548"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[693711, 13920, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"9f0262b5-392a-4878-8e9e-082c2bb96115",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[693858, 13926, 769, 12, 206, "Section",ExpressionUUID->"9c913ee3-8486-4b3a-ad93-4f0873e1781c"],
Cell[694630, 13940, 281, 6, 35, "Text",ExpressionUUID->"8d7aa7d3-1294-47ed-bb39-5663aad6f700"],
Cell[CellGroupData[{
Cell[694936, 13950, 238, 4, 79, "Subsection",ExpressionUUID->"ce1cdcf1-d4c0-45fe-bf4b-51d79429c35f"],
Cell[695177, 13956, 539, 16, 35, "Text",ExpressionUUID->"37b194a0-e7b1-4080-9741-4592d388c9ec"],
Cell[695719, 13974, 395, 6, 30, "Input",ExpressionUUID->"d74ab304-d611-4900-a4c2-8546411ca7bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[696117, 13982, 377, 7, 35, "Text",ExpressionUUID->"bdec79b6-9629-48dc-8d68-ca7ab47633cf"],
Cell[696497, 13991, 772, 18, 30, "Input",ExpressionUUID->"c6ea1283-bb63-4e60-a14b-10fc9fe7b72f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[697272, 14011, 345, 7, 35, "Text",ExpressionUUID->"c0822ce7-8129-45f3-9c6f-78b9bf1197d0"],
Cell[697620, 14020, 575, 15, 30, "Input",ExpressionUUID->"55bafc5d-8f66-4508-af9f-96251452d00c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[698198, 14037, 223, 5, 35, "Text",ExpressionUUID->"3cecf85d-46b2-4570-813a-1b20f8eba5b2"],
Cell[698424, 14044, 781, 19, 30, "Input",ExpressionUUID->"5245e69c-d0ca-43ee-b631-1240c692e28d",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[699208, 14065, 308, 7, 35, "Text",ExpressionUUID->"b97aee2d-bcd7-49cc-a706-765c7783299f"],
Cell[CellGroupData[{
Cell[699541, 14076, 305, 8, 30, "Input",ExpressionUUID->"a14064eb-5d2a-4f4f-86ca-2d053e413290",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[699849, 14086, 854, 23, 30, "Input",ExpressionUUID->"39562e43-3712-451d-a3bf-383f754265b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[700752, 14115, 286, 4, 79, "Subsection",ExpressionUUID->"1f13c25e-746d-41ee-8342-fed55e9358af"],
Cell[701041, 14121, 442, 11, 35, "Text",ExpressionUUID->"3480f46a-694f-4c54-acb7-55ce9f595241"],
Cell[701486, 14134, 601, 12, 30, "Input",ExpressionUUID->"9a2b566b-1590-442b-8d69-e89a8c1619f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[702090, 14148, 350, 10, 35, "Text",ExpressionUUID->"59b605bf-0034-477f-bc8d-69d1637b0217"],
Cell[702443, 14160, 220, 3, 30, "Input",ExpressionUUID->"fb8d1de8-d80c-4ef9-bbea-e15617fdf950"],
Cell[702666, 14165, 306, 5, 30, "Input",ExpressionUUID->"629874f4-a059-4b92-82c5-36d4989326e2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[703009, 14175, 158, 3, 79, "Subsection",ExpressionUUID->"2ff2c1a6-c6d4-4535-90de-3dc4c59fcb0f"],
Cell[703170, 14180, 745, 22, 32, "ItemNumbered",ExpressionUUID->"6102dfba-2339-430d-844a-21bff07d1600"],
Cell[703918, 14204, 1044, 26, 42, "Text",ExpressionUUID->"84b6a25a-e8c2-4b7d-af34-06e8b3e68115"],
Cell[704965, 14232, 520, 8, 32, "ItemNumbered",ExpressionUUID->"11d7c7bc-ec72-47c6-96aa-affa922b166d"],
Cell[705488, 14242, 845, 21, 42, "Text",ExpressionUUID->"7c37ff18-98fa-4516-8714-0621da8bbf80"],
Cell[706336, 14265, 411, 11, 32, "ItemNumbered",ExpressionUUID->"8bb010c5-92d7-45a9-9d30-ae3b57a623fe"],
Cell[706750, 14278, 1630, 37, 42, "Text",ExpressionUUID->"3d139386-97c0-4de5-af04-e32b7accce4a"],
Cell[CellGroupData[{
Cell[708405, 14319, 262, 4, 46, "Subsubsection",ExpressionUUID->"16bee601-be74-49b4-8cf0-f28692f2f98b"],
Cell[CellGroupData[{
Cell[708692, 14327, 279, 5, 30, "Input",ExpressionUUID->"f7c39270-bb47-4e77-a77c-19372eaeff61",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[708974, 14334, 231, 5, 30, "Input",ExpressionUUID->"b4ee2a15-8ff0-4537-94a6-9aa605957b15",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[709208, 14341, 343, 7, 30, "Input",ExpressionUUID->"6d16a006-09bb-48bf-8d8e-717f2e5fc4e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[709554, 14350, 357, 5, 30, "Input",ExpressionUUID->"53403a54-16a0-4ed5-bd59-b3534bc51c66",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[709914, 14357, 614, 14, 30, "Input",ExpressionUUID->"a801b844-aade-415a-a4da-7a4d32988824",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710613, 14380, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"0072e763-bf88-41e0-bf1d-5fc70e151805",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[710760, 14386, 250, 4, 115, "Section",ExpressionUUID->"b2fb57d3-819b-4b15-b45d-cd2108209396"],
Cell[711013, 14392, 413, 8, 35, "Text",ExpressionUUID->"d494d21f-045a-4a6d-8cc8-637694168ee8"],
Cell[CellGroupData[{
Cell[711451, 14404, 259, 4, 32, "Item",ExpressionUUID->"1dcb077b-2691-4808-9906-f68f2edbea98"],
Cell[711713, 14410, 473, 7, 27, "Subitem",ExpressionUUID->"fbb611a4-a288-4033-a470-383e63ea1041"],
Cell[712189, 14419, 597, 8, 27, "Subitem",ExpressionUUID->"70d7a76f-f54c-49fe-9856-fe59a6c99f8e"],
Cell[712789, 14429, 572, 8, 27, "Subitem",ExpressionUUID->"c4aada7f-d5a5-4f32-b6c7-29bafe056c05"]
}, Open  ]],
Cell[713376, 14440, 411, 8, 32, "Item",ExpressionUUID->"ff30944f-7ff0-4a33-9a7f-647f90b9771a"],
Cell[CellGroupData[{
Cell[713812, 14452, 304, 7, 32, "Item",ExpressionUUID->"efd61ce5-1c2d-464c-85d3-1fb61c1c756d"],
Cell[714119, 14461, 347, 6, 27, "Subitem",ExpressionUUID->"da6c8da9-d395-43a2-8efc-ce96b621e36c"],
Cell[714469, 14469, 356, 6, 27, "Subitem",ExpressionUUID->"31ff22f8-0ead-4b86-8d3f-5d0933e2c60a"],
Cell[714828, 14477, 400, 6, 27, "Subitem",ExpressionUUID->"ea9681d2-47f0-4a91-82c5-9d3be5e27648"],
Cell[715231, 14485, 403, 6, 27, "Subitem",ExpressionUUID->"38f3ba83-ca6c-4dce-9dff-2440ea9357f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715671, 14496, 375, 7, 32, "Item",ExpressionUUID->"6bb1edff-9920-44e3-8430-08d9a0f58d49"],
Cell[716049, 14505, 560, 8, 27, "Subitem",ExpressionUUID->"9bd29fec-6658-41fe-9b93-8097d11bb75c"],
Cell[716612, 14515, 568, 8, 27, "Subitem",ExpressionUUID->"9db42efe-1b58-4805-9471-6c59737b6e19"],
Cell[717183, 14525, 434, 7, 27, "Subitem",ExpressionUUID->"c598751d-4b4d-48a1-b2bd-77b52307891b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[717678, 14539, 122, 2, 74, "SlideShowNavigationBar",ExpressionUUID->"b8736c16-9296-4434-8e54-a46b52949f95",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[717825, 14545, 131, 3, 115, "Section",ExpressionUUID->"67a93026-a4ca-4288-ba27-1ad09e4d9f77"],
Cell[717959, 14550, 598, 10, 32, "Item",ExpressionUUID->"e8c6e2f3-045e-4934-b6c5-8832c8f28cea"],
Cell[718560, 14562, 720, 17, 32, "Item",ExpressionUUID->"0447f36d-a230-4f36-bca3-3dfb14e3c18c"],
Cell[719283, 14581, 588, 13, 34, "Item",ExpressionUUID->"55c2b302-2345-47e9-8ba5-cc269749c2ed"],
Cell[719874, 14596, 787, 16, 53, "Item",ExpressionUUID->"64329888-c2a0-4898-9ccc-34db6bb91477"],
Cell[720664, 14614, 732, 15, 32, "Item",ExpressionUUID->"cdf8f9d0-eb36-445f-9000-32d8f0a24991"],
Cell[721399, 14631, 657, 14, 53, "Item",ExpressionUUID->"3a09fe57-5ab5-4363-be47-66d484d1f588"],
Cell[722059, 14647, 1172, 30, 55, "Item",ExpressionUUID->"e269a1c8-3d90-4307-afd7-56abe368504c"],
Cell[723234, 14679, 822, 19, 32, "Item",ExpressionUUID->"b20728a7-7c05-4349-824f-cf9dfc2cb6cd"],
Cell[724059, 14700, 612, 14, 32, "Item",ExpressionUUID->"c25bdae2-13b6-49ed-a494-47472339d9de"],
Cell[724674, 14716, 540, 15, 34, "Item",ExpressionUUID->"80c8b18d-d0d1-4c42-9f30-f753b7055cfd"],
Cell[725217, 14733, 340, 6, 32, "Item",ExpressionUUID->"3212c95d-b99d-43ad-b260-2d2c1d15632f"],
Cell[725560, 14741, 550, 14, 32, "Item",ExpressionUUID->"3f32a445-2fda-4d9b-9be8-bd71ba022cba"]
}, Open  ]]
}, Open  ]]
}
]
*)

